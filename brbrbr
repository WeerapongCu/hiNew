-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'XXDRAGON_WolfxX2007', 'SavannahLightC00ki3', 'AriaDriftKing2007', 'Br00klynW0lf66',
                     'Wolf_Blaz3202149', 'XxAubr3yPho3nixInf3r', 'XxTurboGigaMasterxX1', 'Chlo3AquaIc3',
                     'Z3roRock3tN3on', 'Ow3nH3roQu33n', 'XxJayden_HeroxX65', 'Luk3_Vort3x2015', 'FlamePixelatedFr0st',
                     'XxGabrielChaosPandax', 'XxAid3n_Cyb3rxX2011', 'XxZ3roOrbitxXYT', 'XxGam3rStarxX86',
                     'LiamOmegaBuilderYT', 'LegendSkyDancer', 'Moon_Pix3lat3d2008', 'StormRiftSilver76',
                     'XxRiftVen0mxX2023', 'JaydenZ00m2010', 'J3llyFlickTurbo2014', 'HyperStormBlaze_YT',
                     'Inf3rno_TURBO10', 'DancerFr0stS0nicYT', 'PlayzS0nicEch0', 'MasonFire22', 'ElijahFlashPh0enix',
                     'XxDancerPandaRocketx', 'Jayd3nIc349', 'FlameToxicBeast', 'Min3rIc3Haz356', 'XxPaisleyHeroViperxX',
                     'XxDrag0nLi0nNe0nxX', 'C0deHawk2004', 'Eagl3Prism92', 'Xx_StarrySonicWraith', 'AceBl0ck2019',
                     'Jax0nEpicCyber', 'NoahBlock200467', 'XxAuroraH3roxX2014', 'XxOwenAquaHyperxX201',
                     'AriaStormGam3r', 'CyberJelly202477', 'PandaRogu3Nova', 'Oliv3rV0idZ00m', 'StormRiftBlast',
                     'KnightAqua200330', 'HannahFlash71', 'Duck_Haze36', 'TurboCraze2003_YT', 'Chl03Craz3C0d3',
                     'DanielFoxBlade', 'F0xClawPanda', 'Jacks0nW0lfRift', 'XxIsabellaUltraQueen', 'GlitchGoldenSkater',
                     'ZapRift17', 'XxJaxonLionIc3xX', 'KNIGHT_Hero200384', 'BuilderKnight201273', 'Ril3y_Dragon43',
                     'B3arCrystalMystic200', 'StreamHazeZoom2010', 'XxJaydenStarryStarxX', 'Jackson_Pixel200979',
                     'XxNinja_Mast3rxX2011', 'Al3xand3rPuls3201097', 'XxIsaacSparkSlimexX', 'J3lly_OM3GA30',
                     'Blizzard_L3g3nd2002', 'Ac3Pix3lat3dAqua', 'S0nicGalaxy67', 'XxChloeSparkEaglexX2',
                     'ChaosVip3r16YT', 'XxEagleStarryxX58', 'RavenPlayzSpark_YT', 'MasterFury96', 'EAGL3_Hunt3r2006',
                     'Pro_Frost23', 'AlexanderPixelR0gue2', 'XxCrazeHazeCyberxX82', 'MaxSparkV3nom2009',
                     'GhostBlockFusion', 'StormHyperPlayz_YT', 'PixelBladeV0id', 'XxFirePixelatedRaven',
                     'ByteSparkCookie', 'EagleFlash72', 'CarterBlastChill62', 'Gamer_Moon200852',
                     'VoidMinerPrism202325', 'HazeCrazeZoom2011', 'FrostJellyQueen2024', 'Pho3nixUltraQu33n',
                     'GhostRid3r14YT', 'Rift_Thunder200598', 'XxAbigailFuryxX93', 'XxS3bastianChas3Crys',
                     'BUILDER_Fire10', 'PaisleyEpic15', 'SOPHIAH3RO2005_YT', 'RiderChaseNight', 'XxCircuitMaxxX2005',
                     'ArrowViper86', 'XxDani3lUltraxX2010', 'Luk3Frost2024', 'Spark_Rocket13', 'CircuitDuckH3ro',
                     'XxStarryAquaPrimalxX', 'XxSaberSparklyStealt', 'BlastStarryMystic', 'MichaelFireStream',
                     'Flam3_Gh0st2019', 'Shadow_Haze32', 'BlockNeonFury2009', 'XX_MichaelMysticDrif',
                     'Scarlett_Stream2008', 'HunterCrazeFlick', 'Hyp3r_THUND3R74', 'Brooklyn_Inf3rno2003',
                     'Mas0nLegend82', 'SamuelGigaTurbo', 'WraithBear202243', 'Rogu3ChaosSt3alth', 'ETHANFR0ST85_YT',
                     'Ash3rAlpha73', 'GigaToxicRiftYT', 'ChillMasterTiger', 'AddisonHunterCraft20', 'SavannahDrag0nSky',
                     'Br00klynnV0id202117', 'HazeBearBane15', 'XxMasonDarkxX2006', 'XxJayden_HeroxX2013',
                     'RogueSaberDark2012', 'Haz3lDuck84', 'XxBuild3rRav3nxX2018', 'Ph0enixMiner68',
                     'Isaac_Thund3r2018YT', 'FoxDuckVortex', 'OmegaAlpha201773', 'AsherInfernoByte90',
                     'HawkTigerMax2010', 'EzraCyberDrift79', 'MasonCraft39', 'WraithDuckIce', 'B3ar_Sky2019',
                     'Fox_Block202175', 'Rogu3Rav3nSab3r', 'Pow3rZoomEagl3', 'BlizzardRocket202146',
                     'VictoriaGalaxyNight2', 'DarkFlickFlash', 'XxB3astMagicxX2016', 'AidenHer0Craze',
                     'Addis0n_V3n0m2002', 'BlastS0nicBane', 'ThunderSlimeSonic200', 'XxKayleeIcexX2013',
                     'JulianMast3rGhost', 'EchoHawkInferno2021', 'HunterHeroFusion2014', 'OliviaMast3r2024',
                     'Magic_Golden63', 'AvaHunterByte36', 'JellyS0nic2010', 'LucasUltraMoon2003', 'MoonLegendHaze',
                     'XxChaseCraftDrag0nxX', 'IceDriftPixelated200', 'Neon_Block200418', 'GabrielStreamMoon',
                     'Br00klynn_STARRY23', 'GIGA_Omega54', 'SilverKnightInferno', 'FusionGlitchBlast202',
                     'EchoGoldenOrbit20116', 'Addis0n_V0id2013', 'BrooklynnFlam346', 'HyperSky201174',
                     'Flick_N0VA201197', 'Eli_Dark2017YT', 'GraysonVortexCookie7', 'Stormy_STORM47', 'FlickRaven201699',
                     'MAX_Night202451', 'L3viG0ld3n2021', 'SlimeHawkDrag0n2020', 'NovaAquaJelly2016', 'HawkBlaze200911',
                     'AuroraMystic200665', 'SlimeSparkRaven2008', 'IceChaosMaster', 'Tig3rFox2024', 'DarkZap200376',
                     'XxBlock_PixelxX2018', 'InfernoGalaxyFury', 'SparkL3g3ndUltra', 'XxBlockZoomWraithxX4',
                     'XxNoahZapLightxX', 'Blade_Drift201893', 'CircuitSilverHawk', 'HazeDrift200464',
                     'SamuelCyberNight2010', 'Slim3FusionFir32010', 'Hyp3rCrystalIc3', 'VoidHyperBlizzardYT',
                     'GlitchBlaz3J3lly', 'RiftHazeDragon2008', 'Blad3Light2014YT', 'Cooki3_Ultra201772',
                     'Rocket_Thunder27', 'HenryV0idPulse92', 'FoxGigaFury2017', 'XxPix3lat3dVort3xxX4',
                     'GraceAquaAlpha92', 'XxIsaacSparklyCrysta', 'Stealth_Max15', 'XxRil3yW0lfxX62',
                     'Sparkly_Pix3lat3d42', 'XxNeonAquaxX29YT', 'Jackson_J3lly87', 'ProVort3xGlitch2020',
                     'BrooklynnProCircuit2', 'Gh0stPixelPixelated', 'Flame_Chaos70', 'XxAria_MysticxX27',
                     'XxEthanPandaxX51', 'GalaxyFusi0nChill', 'BrooklynnProDragon', 'EzraMagic18', 'Scarl3ttCod32007',
                     'BrooklynnChaosVortex', 'PaisleyEcho202080', 'XxAidenEpicxX13', 'GlitchInfern0Ultra20',
                     'Builder_Dragon54', 'Chloe_Prism97', 'Sky_Legend200584', 'Flick_Cyber2004', 'XxOrbitPowerxX2023',
                     'Duck_MAST3R2022', 'Bane_St0rm32', 'XxKingStormyHunterxX', 'LegendVenom19', 'EliPix3l19',
                     'Gamer_Turb02003', 'BrooklynViperQueen', 'MagicBlazeMystic', 'KingTurboCyber2017', 'B3astV0id2010',
                     'VortexEchoEagle2012', 'EagleRift88', 'BladeStreamGiga2015', 'HenryLionStarry',
                     'Jacks0nStarryRider20', 'BearVortexEcho_YT', 'AceLuckyWolf', 'AubreyBlast201726',
                     'Hunt3rEpic201037', 'DuckFlickStarry2020', 'FireSkaterEpic', 'Harp3rBlizzard55',
                     'BLADE_Circuit201391', 'XxNoraFoxMysticxX200', 'OmegaSonic2009YT', 'CraftBladeCha0s',
                     'ProMystic2022', 'ZoeDark98', 'M00nFr0stStarry_YT', 'FlashSab3rThund3r', 'SkyMoonCrystal2008',
                     'MYSTIC_Skat3r2010', 'AlphaRiderSt0rmy2019', 'PixelatedFusion79_YT', 'CircuitBlazeSlime',
                     'NightSparklyCraze', 'SkaterKnightGhost', 'Elli3NightOm3ga', 'ChaseHero72', 'GraceShad0w90_YT',
                     'XxHannahGlitchxX2002', 'HazeEchoSpark53', 'ZaydenLegend96', 'VictoriaGhostBane200',
                     'Z00m_B3ast2013', 'ViperLi0n69', 'FireAquaPrism2005', 'SlimeEchoPrimal', 'Mast3r_Lion200725',
                     'AuroraSparkKing', 'TurboDawnCyberYT', 'GabrielRocket46', 'XxLoganVoidxX12', 'BlockBladeKing2019',
                     'IceZoom99', 'KnightSt3althBan3200', 'XxChloeGamerChaosxX', 'StormySpark201324', 'BaneNeonCraft',
                     'Ph0enixOmegaCircuit', 'AquaNeon201627', 'XxChill_BaconxX2005', 'GlitchDarkFlame98',
                     'Z3r0B3astEch02023', 'ZaydenStormRift43', 'XxAiden_LuckyxX62', 'RiderLionSkater',
                     'Aur0raWraith2008', 'XxChillTurboxX202012', 'BeastCode76', 'ViperBuilderBlock86', 'V0rtex_Panda41',
                     'L3g3ndH3r0Ac396', 'XxCarterRoguexX20041', 'Moon_Starry2006YT', 'OmegaWraithPower2024',
                     'N0vaGh0st77', 'XxStealthVenomStormx', 'Li0nHer0Fr0st', 'V0rt3xCraftSlim3', 'FlickDriftRid3r',
                     'XxAiden_FuryxX2010', 'Block_N3ON83', 'BeastKingSky2002', 'Bl0ckBlizzardPixel',
                     'XxEzraRocketxX2019', 'Ic3LuckyGalaxyYT', 'XxMoonFlickxX2007', 'Rav3nCrystalFlash202',
                     'ChillDrift24', 'XxTigerUltraV0idxX', 'Ow3nPix3lSt3alth', 'Neon_Ghost47', 'Glitch_Stormy19',
                     'RIL3YSKY_YT', 'Z0eRiftCircuit200676', 'XXLUKE_HawkxX2019', 'XxStormMinerxX62', 'ArrowCraft200630',
                     'DancerFusi0n200764', 'PowerCircuit89', 'ZaydenBuilderPrism67', 'AmeliaHawkPulse2024',
                     'JaxonRaven36', 'Mate0Craze35', 'XxGhostEchoFlickxX', 'Arrow_Rogu32002', 'Inf3rn0Circuit82',
                     'SkyZapIce_YT', 'XxKayl33Pix3lBan3xX2', 'DawnBuilderClaw2006', 'St0rm_Chase76', 'ETHAN_Blast15',
                     'Cyber_Drift65', 'HenryBeastStorm', 'PaisleyTigerKnight20', 'V0rtexHer0Magic', 'Fire_Toxic35',
                     'MYSTIC_Pix3lat3d2019', 'LucasPandaTurbo40', 'OrbitPixelFusion2004', 'XxHer0MagicxXYT',
                     'XxPixelLionxX2006', 'FusionAlphaBlast_YT', 'AquaStream44', 'XxRiftV0rtexxX84',
                     'ChillStarStorm2011', 'StarBan3Z3ro2006', 'LaylaOmegaPrimal', 'Grayson_TIG3R42',
                     'PixelatedBanePlayz', 'Beast_Turbo11', 'ToxicFuryRogue', 'CircuitPix3l11', 'Sky_MASTER2023',
                     'Bac0nKnight82', 'N0ahAquaFlash', 'Queen_MAX69', 'XxSt3althHyp3rLuckyx', 'XxJackCrazeBlizzardx',
                     'Byt3UltraPix3l', 'JaydenBeastSparkly20', 'VortexLightArrow', 'GIGAALPHA2006_YT',
                     'HannahMagic201950', 'Blad3_Om3ga53', 'SlimeBaconMoon', 'Z00mEch0F0x', 'LuckyPrimal2023YT',
                     'Brooklynn_Storm22', 'AuroraGalaxyDark', 'XxChillSlimeBaconxX', 'F0xG0ldenR0gue',
                     'GamerStreamCraze2010', 'Legend_Wraith47', 'CrystalToxicNight201', 'XxWillow_DuckxX2024',
                     'AidenAlphaPixelated2', 'MinerRiftLegend17', 'FlickMax48', 'B3astBacon89', 'Chlo3BlastZoom',
                     'KayleeZero24', 'XxGraceDawnSparkxX', 'ShadowChase57_YT', 'Gold3n_Duck2015', 'B3arHaz386',
                     'V0idBl0ck2024YT', 'PixelPr0Rift2008', 'Hawk_Cod32022', 'Mas0nPrism2018', 'EzraLavaFlame',
                     'Fusion_Venom2013', 'CharlotteLionIce13', 'AsherNinjaR0cket91', 'SkaterCrazeWraith', 'LeviZoom75',
                     'Mystic_Chaos2016', 'BuilderBladeZoom', 'Lava_Magic2018', 'XxLavaGalaxyStealthx',
                     'ArrowBlizzardPrism', 'Xx_ThunderRogueTurbo', 'Cooki3Turbo64', 'XxOliver_T0xicxX2008',
                     'DriftMast3r2010', 'HunterNeon39YT', 'LightVip3r71', 'Hyper_INFERN02016', 'Legend_Thunder2007',
                     'Bac0nFlashV0id19', 'Fr0stHawkZ00m', 'SebastianT0xicBlaze', 'Gabri3lDuckIc32004',
                     'OrbitTurb0Rift2016', 'XxGabrielEpicMoonxX', 'WilliamCode200742', 'Puls3Panda2009', 'VOID_Jelly23',
                     'BladeVenomWolfYT', 'Echo_Golden200641', 'StarFusionH3ro2013', 'XxSkyRiftBytexX2023',
                     'Br00klynBuilderClaw2', 'XxAlphaMagicxX77', 'Ech0V3n0m2013', 'XXRID3R_PandaxX2008',
                     'XX_BrooklynGamerQuee', 'Gabri3lHaz3Pix3l', 'AuroraKing23', 'HawkAquaDark51', 'LunaStealth200849',
                     'ProAqua82', 'ZoomShadowPrimal2016', 'SilverBane13', 'LucasRiftSilv3r', 'Her0CrazeLucky',
                     'XxScarlettFoxxXYT', 'StealthFire201719', 'W0lf_FIR32017', 'Will0wR0cketFlameYT',
                     'ScarlettNinjaLegend2', 'GamerInfernoJelly_YT', 'XxMate0ChillxX2005', 'EchoGamerNeon',
                     'P0werV0id2020', 'Chas3EchoRift2015', 'XxAidenArr0wxX11', 'B3arQu33n17', 'JaydenPhoenix88',
                     'Lava_STREAM201936', 'XxGabri3l_ToxicxX22', 'Arr0w_BLIZZARD2006', 'XXQUEEN_BlizzardxX79',
                     'GalaxyL3g3nd202161', 'NovaMasterIce2013', 'KingSparkly2018YT', 'Haz3F0x2007', 'StealthLegend87',
                     'ProMoon78', 'XxFurySaberxX2022', 'Moon_Alpha201743', 'Pulse_Prism21', 'Flam3Cooki3King',
                     'XxHeroStormArrowxX20', 'BlazeGhost2017_YT', 'W0lfG0ldenZ00m', 'CyberSpark98', 'JulianEagle17',
                     'VortexEchoDrift', 'XxJacksonBladePandax', 'Drift_BLAZE66', 'XxZoeFuryxX33', 'CraftDuckCircuit',
                     'Noah_Craft85', 'SparkBan3Turb0', 'Oliv3rGold3nPlayz201', 'DriftCyb3rH3ro', 'XxSophiaGigaxX201125',
                     'XxOwen_ZapxX2014', 'FrostDriftBlizzard56', 'RiftAceHunter2017', 'Min3r_Slim328', 'Her0ClawBl0ck',
                     'PandaDawnPlayz20', 'Lava_Legend201991', 'XxRogueStreamxX34', 'CircuitLightPh0enix8',
                     'GamerSkater202387', 'FlamePandaStormy39_Y', 'Z3roB3arEpic2013', 'Flame_Star31',
                     'StarMysticChaosYT', 'Puls3Tig3rDuck200526', 'XxRift_ACEXX54', 'XXELLIE_Her0xX202149',
                     'GLITCH_Turb0YT', 'Inf3rnoFlashArrow', 'GraysonDuckPanda_YT', 'King_Z00m2003', 'GraceEagle23',
                     'Byt3Cha0sCraft', 'EthanSpark2008YT', 'Z3roBlock68', 'Grac3Danc3r_YT', 'H3ro_Str3am52',
                     'XxChillRiftPrismxX20', 'ABIGAIL_Glitch73', 'Will0w_Pixel202191', 'XxPixelatedVortexZoo',
                     'ScarlettCraftTurb0', 'Thunder_FUSION202421', 'Byt3Lucky58', 'RiftCrystal13YT',
                     'MasterHunter2005YT', 'MasonPow3r47', 'Byt3KingCod3', 'XxMasonGigaAlphaxX', 'Isab3llaRav3nLight',
                     'Pho3nix_Byt375', 'LoganEchoDrift', 'XxThunder_P0werxX96', 'NinjaB3astQu33n', 'ZoeIceBuilder2009',
                     'AlexanderOrbitClaw86', 'XxHenryStreamxX18', 'SamuelFlameRocket', 'MinerBlaze75',
                     'SparklyDarkVoid2006Y', 'Xx_SkaterDragonStrea', 'EliBlazeFlame2007', 'XxAqua_StealthxX2021',
                     'Flam3Skat3rSilv3r_YT', 'Alpha_Wraith201345', 'AmeliaF0x2022', 'Storm_J3lly2007',
                     'SkaterNightCookie', 'LuckySparkly85', 'BlastCyber15', 'IsaacUltraQueen', 'LukeBlaze76',
                     'EllieNeonThunder2018', 'HAZE_Alpha55', 'NinjaPlayzBear', 'BLAST_Sparkly89', 'XxLucky_BearxX2004',
                     'JulianTurb0Fr0st49', 'WilliamQueenFrost201', 'SaberBeast67', 'Xx_CrystalStormyMast',
                     'CookieRiderLion', 'AubreyShadowPhoenix', 'AceStormy200638', 'Flam3UltraLava',
                     'XxGam3rTurboxX2014', 'Jax0nFlickBuilder200', 'ProChillPanda2005', 'Jacks0nG0lden10',
                     'Her0T0xicZer02017', 'Dani3l_Ghost23YT', 'XxRileyFireBlastxX', 'Haz3_QU33N54', 'Mate0Wraith44',
                     'FusionMaster200410', 'StarBladeOmega30', 'XxCharlotteClawxX21', 'BladeChaseDrag0n2016',
                     'MoonClawRaven80', 'JaydenZap68', 'EagleViperMaster2005', 'N0RA_F0x89', 'DuckLavaStarry',
                     'XxKnightLegendAquaxX', 'CarterUltraRaven', 'GoldenChillBlade', 'GraysonTigerSonic',
                     'CodeWraithEcho2012', 'OwenStream2009YT', 'HannahPanda201597', 'Magic_Str3am56', 'ChillFlame59',
                     'N30nDanc3rDrift', 'PowerDawn73', 'InfernoPrimalIce2024', 'GoldenSparklySonic',
                     'Xx_BuilderBeastPrism', 'WolfProLava55', 'OrbitOmega66', 'ChloeWolfChaosYT', 'TurboPix3l200340',
                     'XXGHOSTLAVACLAWXX_YT', 'Luk3Ac3Epic2012', 'MichaelC0de2004', 'HawkPanda10', 'OliviaFuryRocket85',
                     'HeroVortex91', 'StormPanda200794', 'Ne0nLegendBlaze', 'CircuitPrismSilver', 'L3viCircuit91',
                     'CraftHawkRogu384', 'N0vaThunder38', 'GlitchMin3rAlpha', 'Xx_WillowBlizzardDaw', 'BrooklynBane98',
                     'Zo3Mast3rDawn', 'XxMasonRiftxX2004', 'Magic_Hunter96', 'FlickBeast10', 'AlphaRiftShadow',
                     'XxEllaStarrySonicxX', 'Rid3rSlim347', 'XxStormy_Build3rxX75', 'SPARKLY_Epic61',
                     'ZoomEchoChaos2021', 'XxJayd3nZapxX200234Y', 'XxEliPix3lat3dxX17', 'AlphaChillWolf2019',
                     'ETHAN_R0cket2020', 'NeonBaneViper', 'F0xBac0nDancer_YT', 'PaisleyEagleWraith20', 'Drag0nFlashPr0',
                     'RiftGolden201931', 'XxFoxPowerPrismxX', 'EpicBlaze54_YT', 'ZoeRiftSpark91', 'XxMysticFrostDarkxX',
                     'Z00mR0gueBlaze45', 'ScarlettBane2005', 'CrystalPow3r86', 'FlameChillKnight2018',
                     'XxArrowHunterxX98', 'JackPrism2008YT', 'GraceBlastPlayz', 'CircuitDuck85', 'TigerSparkBlockYT',
                     'NovaArrow54', 'Code_Wraith95', 'Z0eLight50_YT', 'LucasQueenRiftYT', 'PowerMagicSaber',
                     'MysticUltraDancer', 'LeviPrism201733', 'XxFuryRiftHunterxX', 'Oliv3r_Blast2014', 'Turb0_C0de2007',
                     'VoidKnightEagle', 'AubreyVortexStormy', 'OrbitCode86', 'LightChase89', 'XxHenryHyperUltraxX',
                     'FrostFoxPulse', 'Zap_Panda67', 'Cod3Shadow200360', 'Oliv3rLion2002', 'SlimeCircuit39_YT',
                     'LuckyS0nicQueen', 'NoahTurboPlayz2013', 'FlickRift2003YT', 'XxSkyJ3llyxX2015',
                     'Z0ePh0enixHyper2011', 'Primal_Flam32017', 'Xx_SilverLi0nPh0enix', 'Skater_Sonic201947',
                     'Crystal_CLAW36', 'AsherChaosPrimal', 'BearBac0nOmega2009', 'Blaz3Flick201042',
                     'BanePixelatedSonic20', 'Bl0ckByteNe0n', 'Xx_CircuitBaconPower', 'GigaH3ro60', 'NovaEcho30',
                     'HenryArr0w75', 'Craze_PIXELATED62', 'XxCarterNightStormyx', 'AbigailStormyAqua200',
                     'Turb0Fusi0nShad0w202', 'Aur0ra_St0rmy61', 'FIR3_Lucky82', 'DuckTurboPrismYT', 'XxBearSkyTigerxX',
                     'DuckZ3roChaos', 'Mate0R0cketBeast2010', 'StealthNeonNight_YT', 'XxPix3lC0d3xX2016',
                     'PulseVenomBlast2013', 'XxHeroDarkxX2013', 'MasonHyp3r2024', 'Will0wBlizzard200968',
                     'Tig3r_Giga97', 'St0rmySt3althPrimal', 'Rav3nStormy2006', 'HyperF0x86', 'ChillMoonDrift',
                     'XxTurboGigaJellyxX', 'StealthBeastShadow20', 'Cyb3rStarryEcho', 'C0D3_Mystic45',
                     'Br00klynPixelNinja', 'OmegaBeast200997', 'ShadowZeroHaze2008', 'WolfLucky44',
                     'Dancer_P0wer201966', 'GlitchGam3rPho3nix', 'XxSavannahUltraxX69', 'VenomLionLava',
                     'XxCyb3rDuckProxX', 'XxWill0wFuryxX20', 'Cooki3Craz3Nova2024', 'Haz3V3nomPlayz', 'Skat3rGam3rRift',
                     'PandaTurb0Tiger', 'AidenHawkVoid30', 'StarAlphaRift60', 'FlashFrostTiger', 'AsherDrag0n95',
                     'Victoria_Ghost88', 'AvaBuilder10', 'S0phiaLucky47', 'XxFoxGigaxX2007', 'MaxFrostPlayz',
                     'XxChase_VortexxX2006', 'VoidGoldenRift2022', 'Xx_GlitchDancerSpark', 'S3bastianPrismEagl3',
                     'InfernoMaxArrow2022', 'HunterViper201050', 'ChaseStormySpark2004', 'Chlo3EpicLight',
                     'WolfGlitchRocket72', 'DuckS0nicCraft_YT', 'XxDarkRocketCyberxX', 'SparkJ3llyNinja',
                     'RiderPower88', 'XxAddisonStarxX2014', 'XxLavaMasterxX2010', 'LucasWraith39',
                     'MateoHunterCrystal20', 'XX_HarperBuilderClaw', 'JacksonDancerLegend9', 'EpicAquaFire200619',
                     'ScarlettMagicZ00m', 'Haz3lChas3Wolf', 'Xx_WraithGlitchEagle', 'BlazeDrag0n32', 'XxRiftProxX_YT',
                     'WyattCircuit53', 'SparkRaven200844', 'Zo3Rock3tPro2003', 'ZapC00kie46', 'XxStarBuilderxX2004',
                     'AddisonThunder40', 'BuilderKnight200374', 'JulianFlickRogu3', 'Addis0n_Thund3r2019',
                     'FireFr0stKing', 'AubreyFlick60', 'XxHer0DarkxX28', 'Ril3y_V0RT3X72', 'XxNoraVenomNeonxX',
                     'XxClawPrimalxX2011', 'XxJax0nR0cketxX63', 'KnightToxicEagl3', 'CHAOS_Blade2017', 'ProNovaVoid',
                     'HunterFox200428', 'AbigailR0ck3t46', 'XxUltra_LightxX2007', 'SparkCircuit33',
                     'AuroraThund3rTurbo', 'XxDrift_WraithxX55', 'BearVortexPlayz', 'LukeBlade49', 'J3llyGold3n69',
                     'Br00klynR0gue27', 'VenomBeastLucky20111', 'RiderVoidDawn74', 'DragonDawnArrow',
                     'XxFir3StarPlayzxX', 'Ash3r_V0id2002', 'Toxic_Orbit200721', 'N3on_J3lly2006', 'LunaMast3r56',
                     'AuroraMystic92', 'Pow3rSky66', 'Xx_BROOKLYNNLUCKYPUL', 'Haz3Rav3nAc326', 'Qu33nRock3tBuild3r20',
                     'ScarlettCraze67', 'Shad0wSaberAce', 'OrbitSlimeAqua', 'JellyArr0w90', 'CircuitHaz3Ban3',
                     'EthanSonicFlam32014', 'GhostNinja200942', 'Hero_Ghost86', 'XxAuroraClawxX201222',
                     'Al3xand3rAqua34', 'MysticUltraLi0n2014', 'MiaCha0sPrism', 'ScarlettEchoMax93', 'Tiger_Bear2002',
                     'Dragon_Cyber33', 'JulianCraftRogue', 'WilliamFury200688', 'FlashFusionVoid87',
                     'XxLiamGlitchxX2016', 'JulianMoonMin3r', 'Chase_Dragon2015', 'CircuitFlickPulse',
                     'Xx_SamuelRavenHunter', 'SebastianBlade201667', 'PaisleyMagic80', 'Henry_Shad0w77',
                     'Xx_PixelHunterVortex', 'XXJACKS0N_N0vaxX2008', 'JulianNeonEagle79', 'ScarlettCraze18',
                     'XxPlayzRavenxX2023', 'BlastFir3Fusion', 'EpicProNova63', 'ThunderShadowFox78', 'ClawGold3nByt3',
                     'AlphaLavaStarry11', 'BlazeWraithFrost46', 'PrismBl0ckEch012', 'Aur0raThunderGlitch2',
                     'StreamWraith88', 'Void_Spark202165', 'XxSaberCrazeMysticxX', 'AmeliaBlizzardVenom',
                     'XxLightEch0xX2004_YT', 'TigerFuryFox2003', 'EchoCode201054', 'JellyZapPlayz2022',
                     'Henry_R0CKET99', 'GlitchFoxBlock', 'Xx_LUCKYINFERNOBUILD', 'Paisl3yGiga47', 'SlimePulseFox77',
                     'GigaBacon2022', 'RocketGalaxyToxic', 'ThunderFlickTurbo', 'XxIsaacChillxX2002',
                     'XxGigaZeroxX2003', 'Xx_Skat3rMysticSilv3', 'XxL0ganChillClawxX', 'WraithLionSaber',
                     'Gam3rB3arCyb3r2020_Y', 'XxWolfHunterxX62', 'Craz3Panda_YT', 'FoxVoid76', 'XxMysticGoldenxX2020',
                     'BaconClawSkater2005', 'LionBuild3r2005YT', 'Chas3HawkFusion2019', 'Neon_Dark48'}
local RECEIVER_LIST = {'HawkFlameSlime2022', 'EpicBearStar2022', 'Eagle_Skater99', 'Jam3sDrag0n25YT',
                       'Grays0nT0xic2024', 'JAMES_Craze45', 'XxEchoChillxX201131', 'DawnShad0w2013',
                       'SonicViperNight2007', 'Rogu3B3ar16', 'XxWraith_RIDERXX2006', 'XxElli3FuryxX2014',
                       'XxEch0M00nxX49', 'IsaacSparkly2002', 'XxOliverLightLionxX2', 'XxScarlettPlayzSteal',
                       'PrimalZ3ro2012', 'XxSonic_BeastxX2017', 'QueenByteUltra2003', 'XxEllieStealthViperx',
                       'LiamStr3amOrbit', 'AsherPr0Tiger28', 'XxEllieC0deOrbitxX', 'WilliamBl0ckFusi0n20',
                       'Xx_BuilderBlockDrago', 'MasonCyb3rSkat3rYT', 'BlazeCrystalS0nic', 'MoonB3arFlam3',
                       'HawkAquaTig3r_YT', 'LightUltraBane', 'CarterPh0enix20', 'BeastArrowToxic43',
                       'XxSkater_CLAWXX2017', 'Ninja_FUSION15', 'XxHarper_St0rmyxX45', 'MysticPh0enixDawn',
                       'OliverStormyLion', 'OliverC0de56', 'EagleTurboCyber', 'AlphaCircuit47', 'XxQueenStormyStarryx',
                       'XxKayleeUltraxX64'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
