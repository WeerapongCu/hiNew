-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'Tiger_Legend18YT', 'XxHaz3J3llyxX2006', 'H3ro_Z3RO89', 'J3llyRift29', 'Rift_Wraith201892',
                     'Z03GalaxyZ3r0', 'XxMaster_BlastxX68', 'EliGhost2016_YT', 'XxZoomIc3xX2007', 'XxFireBlazeBeastxX',
                     'GigaFlickEcho', 'Xx_JACKSONARROWCRAFT', 'GigaStormyHaze2017', 'Charl0tte_VIPER2006',
                     'XxOliverOmegaxX2012', 'XxAidenInfernoxX21', 'DawnTurb0Dark', 'EthanDark200656', 'Hero_Dark88YT',
                     'Craz3Pow3r51', 'Zayd3nAlpha67', 'XxWilliamNinjaBuilde', 'SparkAlpha2023_YT', 'Slime_Raven44',
                     'JackChaseCraft2015', 'L3vi_ULTRA13', 'SaberV0id26', 'ZapSab3rCrystal', 'ZeroSonic202055',
                     'MiaChill19', 'Brooklynn_Sonic58', 'GLITCH_Crystal2018YT', 'L3g3ndPix3lKing2008',
                     'AidenSaberLucky2009', 'Silv3rDragonQu33n', 'Bac0nN0vaSt0rmy', 'FlickFrost27YT',
                     'ShadowBeastHawk40', 'SkySaber57YT', 'Z3r0_V3n0mYT', 'BuilderSonic82', 'AlexanderDriftDuck',
                     'AsherCircuitPrimal20', 'MoonBlockBuild3r', 'Dani3lLavaPho3nix', 'Fox_PRISM22', 'EliHyper31',
                     'AquaSt3alth2013', 'XxKnightRid3rSlim3xX', 'OrbitGam3r2020', 'XxEzraChaosxX77', 'SaberAceV0rtex',
                     'AvaPrimalBane', 'StormyPixel201837', 'Silv3rBlockPix3lat3d', 'Gold3nIc3Blast2020',
                     'VoidEpicMiner54', 'Chlo3Str3am58', 'ChaseZap59', 'BrooklynnDriftGhost2', 'CLAW_Night24',
                     'XxJamesEpicxX38', 'SebastianBanePro', 'Spark_Pixel31', 'ToxicRocketEcho44', 'CircuitGlitchCraft',
                     'XxFlame_LionxX27', 'Samuel_Playz74', 'AlphaC00kiePlayz', 'Xx_GamerBlockPhoenix',
                     'MysticEagleKnight202', 'ChaseRavenR0gue', 'Am3liaArr0wF0x', 'WillowPulseCode',
                     'EzraSkaterQueen63', 'Am3liaOrbit79', 'LoganWolfHunt3rYT', 'XxL3g3ndWolfxX_YT', 'Dragon_Fir32005',
                     'SkaterCrazePh0enix', 'XxH3roCrystalxX2020', 'Ech0Bac0nR0ck3t', 'XxSkyLuckyChillxX',
                     'GraysonByteBlizzard', 'KnightUltra59', 'ToxicNinja201015', 'MasterNeonLegend', 'Z00mSky56',
                     'TurboBuilder52YT', 'PandaLi0n55', 'MoonLightDrift2006', 'ZeroGoldenIce2009',
                     'FlickChaosPixelated3', 'T0xicThunderR0gue', 'LunaStarry27', 'XxKayleeBearxX2020',
                     'Xx_InfernoBaconPixel', 'XxNinjaShadowxX77', 'EzraByteDawn2004', 'DarkB3astMagic',
                     'Crystal_Lucky200881', 'BLAZE_Haze201350', 'VenomEagle2005YT', 'XxAqua_PlayzxX59',
                     'Xx_BlizzardKnightOme', 'Golden_Silver82', 'XxFusi0nZer0xX2014', 'XxN0va_Ph0enixxX2008',
                     'XxEllaByteBeastxX', 'Arr0wLegendDark', 'Spark_Drag0n70', 'HazelV0rtexLight',
                     'XxBlockPixelDriftxX', 'Rogu3_N3on2009', 'VEN0M_Starry2011', 'AbigailGiga92',
                     'FireBlastStarry20162', 'XxWilliamDriftxX92', 'OrbitLegend202168', 'Z00m_Claw2014',
                     'CART3R_Orbit2005', 'FlameEagleC00kie', 'XxZoomThunderFlickxX', 'N0ahCrystal200393',
                     'Toxic_Stream2021', 'T0xic_N30n2014', 'EmmaChillDancer', 'Shad0wStream202486', 'Zer0BearV0rtex',
                     'Chas3Blaz392', 'PaisleyFlash201441', 'HenryIceQueen2007', 'SebastianGamerFox200',
                     'XxEmmaClawLavaxX', 'Ril3yPlayzFusi0n2008', 'FireSt0rmSky57', 'Xx_PrimalGlitchTurb0',
                     'OrbitTigerR0gue', 'Bacon_SAB3R74', 'L3g3ndFusionDragon', 'Asher_Night2006', 'Night_MYSTIC200257',
                     'Drag0nB3astStr3am', 'Ban3FuryChas3', 'XxHyp3rPow3rOrbitxX', 'XxFlashChas3Min3rxX',
                     'XxJamesFuryxX2024', 'EmmaClawShad0w', 'ELI_Rock3t55', 'BlockFusionMoon2013Y', 'LeviLava36',
                     'PrismPixelatedTiger9', 'GraceCrazeMaster2008', 'DanielStreamPower36', 'VictoriaLightLegend',
                     'FireStormyFlash', 'Ghost_V3nom93', 'ZOE_Skater200625', 'BearSilver18YT', 'MichaelTurboStorm81',
                     'AuroraAlphaOrbit99', 'XxFlameSlimexX37', 'Luk3TurboTig3r200830', 'XxEchoShadowBytexX',
                     'Galaxy_B3AR23', 'VoidMoon201997', 'Code_Tiger200889', 'OmegaZoomVortex97', 'JacksonRogu3Sonic',
                     'XxSt0rmySkaterxX2007', 'XxTurb0MaxxX2023', 'Rogu3Rock3t2008_YT', 'Z00mGamerNinja34',
                     'Infern0HyperFlash', 'Xx_STORMYTHUNDERNIGH', 'FoxMagic202262', 'XxJaydenQueenxX16',
                     'Prism_Ultra66', 'Xx_AmeliaLightLegend', 'XxProFuryxX2020', 'PrismNeon97', 'BladeIceDancer',
                     'ZeroFlashRider', 'RileyNeon31', 'AsherDriftFrost2006', 'Xx_AddisonInfernoLio', 'LoganSaber12',
                     'S0phia_MAGIC43', 'Ne0nHunter81', 'Cod3L3g3nd2021', 'XxHyperCodexX2002', 'Xx_PowerStealthThund',
                     'Knight_Raven43', 'BrooklynNight85', 'Grayson_Light29', 'XxDriftH3roxX2013', 'HazeBlock59',
                     'RiftR0gueFusi0n', 'Chlo3_Toxic70', 'XxEmmaGoldenxX97', 'StealthNova201874',
                     'Xx_STARRYDANCERLEGEN', 'XxGamerSonicFlashxX2', 'ClawStormyKnight', 'SlimeMiner2005_YT',
                     'HazelGlitchNova2003', 'Build3r_Starry2003', 'Build3rH3roTig3r2007', 'EthanAquaBuild3r',
                     'St3alth_Pix3l2023', 'DawnSkyW0lf', 'ThunderBuilderBear20', 'LiamL3g3ndBacon24',
                     'ICECRAFTTIGER_YT', 'Blaz3Str3amCraz3', 'XxIsaacIceOrbitxX', 'NinjaRock3tSt3alth_Y',
                     'GlitchVenomSparkly20', 'BACONTURBOBYTE_YT', 'ViperUltra201721', 'Xx_JacksonToxicPrism',
                     'V0rtex_Hunter31', 'Xx_Eagl3Build3rGam3r', 'XxHyperStarxXYT', 'RileyS0nicDawn',
                     'XxDani3lQu33nxX2016', 'B3astHawkShadow', 'LionDawnClaw2010', 'StarArrowVoid2020',
                     'S3BASTIAN_Ninja2023', 'MoonQueenBlizzard201', 'PrismPow3rStar', 'LunaNe0n49', 'BlazeGh0st2022',
                     'ChillSt3althCooki320', 'OliviaCyberByte', 'WillowHunt3r17', 'AubreyMysticSpark78',
                     'XXEZRA_RiftxX2007', 'BladeAceRift201842', 'PixelatedOrbit202366', 'EagleT0xic60', 'STARRY_Ic358',
                     'BaconNightBlad3', 'Aur0raWraithBac0n', 'Ven0m_Drift72', 'NightEagl3Claw202257',
                     'BaconGhost202470', 'Stormy_Turbo88', 'SparklyFury201564', 'XxSkySparkSparklyxX',
                     'Xx_Br00klynnClawPixe', 'LegendMaxBear', 'SebastianHer0V0id', 'RavenDarkRocket', 'XxIceZapRiftxX',
                     'GamerPower201729', 'LightPix3lSilv3r2017', 'OrbitC0d3Flam3', 'VortexFrostCircuit29',
                     'LunaVenomZoom', 'TurboGhostEcho2005', 'XxHaz3BlockxX2023', 'XxBrooklynn_EchoxX14',
                     'HannahPower2023', 'Bac0nFlam3Primal', 'HenryBear201089', 'WyattDawn90', 'FlickH3ro88',
                     'AvaDawnRid3r', 'GabrielGalaxyCode57', 'ZoomBlizzard201919', 'GalaxyDancer201925',
                     'XxMiner_DARKXX201078', 'Henry_Vortex34', 'XxHawkEchoBeastxX201', 'DanielMagicDuck2006',
                     'ChillChas393', 'ChillToxic75', 'AsherBladeCode36', 'V3N0M_Rid3rYT', 'LunaOrbit91_YT',
                     'XxStormVortexxX20', 'Byt3HawkKnight', 'STEALTH_Rift11', 'XxPrimalDawnBladexX',
                     'XxIsabellaStealthBla', 'Ban3Build3r43', 'FuryZ00m61', 'Flame_Ultra2008', 'GoldenClawCircuit201',
                     'XxBladeDuckCircuitxX', 'XxHyper_St0rmxX18', 'L0gan_Pix3l61', 'NoahDriftSonic2024',
                     'XxIcePh0enixxX2006', 'Slim3Hunt3rMystic', 'Turbo_Blast201851', 'FlickAlphaFury',
                     'ProSaberCraft2017', 'PandaVortexDuck', 'Slime_Ace200552', 'Tig3rB3ar200768', 'Min3rLavaCooki3',
                     'TurboBlast200575', 'LeviLight41_YT', 'StealthFrostTurbo', 'ZoeSonicMagic2013',
                     'ElijahChillThund3r20', 'GabrielRaven61', 'Puls3Danc3rDuck31', 'H3r0R0gu399', 'EpicVoid61',
                     'AceRift2003YT', 'LoganZapRaven', 'Pix3lGigaShadow2017', 'XxWraithFuryPixelxX',
                     'XxToxicRiderMagicxX', 'King_Ultra202465', 'Spark_Lucky97', 'Grayson_Mast3r2007', 'C00ki3Li0n2015',
                     'XxOw3n_BLASTXX2018', 'HannahDrag0n2020', 'Aubr3yTig3r21', 'MAS0N_Omega2011',
                     'XxJaxonEpicxX200821', 'AubreyPixelFusi0n', 'Vort3xAlpha11', 'EchoStormJelly', 'Aid3n_DARK2015',
                     'XxTigerFirexX68', 'XxLayla_PowerxX2022', 'BlizzardCodeStarry', 'FireDuckBacon2003',
                     'Xx_Her0PrimalBuilder', 'AsherMaxZero47', 'XxMate0N0vaxX2006', 'FlickHawkPhoenix',
                     'XxGabriel_BearxX2008', 'OliverBear2021YT', 'F0xBan3201736', 'ArrowN3on2023', 'HeroMoon72',
                     'XXMAS0NHAWKXX_YT', 'XxBrooklynBlizzardBa', 'XxWraithGigaBlastxX6', 'XXFLASH_V3n0mxX69',
                     'XxHaz3_B3arxX20', 'MaxOrbit37', 'XxEpicDarkPlayzxX', 'HenryZeroDuck', 'XxMagicGold3nClawxX',
                     'Zap_RIDER51', 'Samu3lKing68YT', 'Brooklynn_Circuit80', 'HarperRiftS0nic', 'XxSaber_GamerxX99',
                     'VoidCooki3Chas3', 'FrostZap201547', 'Ella_Mystic12', 'Xx_Shad0wGh0stL3g3nd', 'XxStormyBlockxX72',
                     'Br00klynOmegaViper20', 'Mason_Cyber22', 'WilliamNeonAqua', 'ChaosBane202377',
                     'Z3roB3astNinja2018', 'XxEchoOrbitxX2019YT', 'WyattDuck45', 'MinerNinja202264',
                     'BROOKLYN_Build3r2006', 'LegendCraft202149', 'XxKaylee_StormxX2008', 'Dawn_Lion17',
                     'XxStarryLuckySkaterx', 'H3r0_Blast2013', 'ByteSlime15', 'XxEmma_StarxX2013', 'NinjaPh03nix2011',
                     'XxSophiaCrystalGlitc', 'LaylaVortexGamer', 'AubreyStarPixel2023', 'XxLegendGigaxX30',
                     'Rock3tChas3Puls321YT', 'XxJam3s_Ac3xX2007', 'WRAITH_Magic64', 'FoxBaconDawn2021',
                     'FireDrag0nBear', 'JaydenFlashHawk2009', 'HenryStar202186', 'ToxicStreamMystic', 'ArrowChase56',
                     'XxAquaStarBaconxX', 'XxMasonFirexX72', 'Hawk_BLAST20', 'XxEagleNovaFoxxX', 'GalaxyCyber2018_YT',
                     'XxZ0eStealthxX201879', 'Light_Drift94', 'Qu33nCooki345', 'FusionRogueDark20204',
                     'XxSaberUltraFrostxX2', 'Saber_Miner200799', 'HenryFrost16', 'XxIsabellaBeastSlime',
                     'XxMichael_Shad0wxX20', 'Mas0nQueenNight', 'Alpha_Echo36', 'EpicThunderStar2010',
                     'HeroPixelatedNeon', 'ChaseStreamPrism2008', 'PandaThund3rGam3r', 'XxHero_GlitchxX2003',
                     'Z3RO_Void96', 'XxZeroVoidxX51', 'Jayden_NEON2020', 'MinerVenom200540', 'XxGlitchGigaxX45',
                     'ToxicEcho52', 'Zer0Builder2019_YT', 'Byt3_Ph03nix2008', 'Grac3Inf3rnoSilv3r',
                     'XxElijahBearFlamexX', 'XxFoxSparklyVort3xxX', 'NightRiftNinja2020', 'Kayl33LuckyDanc3r200',
                     'XxMichael_VoidxX74', 'Xx_TurboMasterCircui', 'XxC0deZ00mNightxX', 'BaconBlizzardUltraYT',
                     'Primal_G0ld3nYT', 'Alpha_R0cket20', 'CyberStealthCrystal2', 'ChloeJellyHyper2012', 'Bane_Chill26',
                     'XxCharlotte_FrostxX6', 'Mason_Byt313', 'Skat3rHaz3Fury', 'P0werFusi0nSpark74',
                     'XxEagle_ShadowxXYT', 'ZapSt0rmHawk201249', 'SonicAce91', 'NightTurboGalaxy2002',
                     'LucasDrift200717', 'XxHarperM00nxX2013', 'XxVictoriaMaxMagicxX', 'Star_Ninja201143',
                     'SparkCrystalPrimal32', 'V0idByteT0xic2011', 'Zap_Cooki32019', 'ScarlettShadowGlitch',
                     'SavannahKnightDanc3r', 'BlazeBuilderN0va', 'OliviaPixelatedCode', 'XxJax0nMaxStarxX62',
                     'XxBlaz3_W0lfxX2005', 'WillowDuckSpark_YT', 'LoganLionCooki3', 'XxDragonBan3xX2002',
                     'OrbitArrow26', 'BaneDarkHyper', 'R0cketBearPixel', 'JackSaberMax', 'Zero_Builder70',
                     'CookieLight49', 'IsabellaPlayzFury200', 'W0lfStealth201167', 'OwenRocketZoom', 'F0xFlick21',
                     'Xx_PixelatedByteArro', 'Moon_Rogue2021', 'Fury_Venom97', 'XxG0ldenT0xicxX2011',
                     'XxEli_WOLFXX2005', 'AddisonStarDancer', 'StormFuryKing', 'LiamHyperStealth2020',
                     'AbigailWolf201041', 'AriaBeast42', 'DanielSlimeCode', 'Arr0wLegendP0werYT', 'Noah_QUEEN2023',
                     'XxLuna_DUCKXX36', 'Tig3rSkat3rDuck2005', 'XxBlast_PIXELXX2013', 'GlitchP0werTurb02018',
                     'JellyMiner200528', 'AbigailBl0ckSkater', 'Xx_AUBREYPH0ENIXTIGE', 'MiaDawnHaz3',
                     'HyperC0deThunder99', 'KnightStarryBlizzard', 'XxGhostRocketxX2006', 'Fusi0nClaw202353',
                     'KnightThund3rPix3l40', 'DriftSaberPlayz', 'Ultra_Li0n46', 'GoldenEpicSky2021',
                     'Xx_CharlotteEpicShad', 'Pix3lat3d_Lion53', 'ZaydenStarThunder', 'ZoeBlockGhost', 'N0raAlpha2004',
                     'XxGraysonMaxSkaterxX', 'AquaFoxClaw', 'Ic3Hunt3rPrimal', 'HER0_Tiger51', 'NoraUltraFlick',
                     'Sky_Spark59', 'CodeBane2020YT', 'XxAddisonFlickxX2003', 'ZapPrism33', 'SkaterFrostHyper',
                     'JacksonFlameSkater20', 'Fire_Primal2019', 'SparklyMysticPh0enix', 'SABER_Lion72',
                     'Jam3s_Wolf2017', 'XxLeviZeroxX201843', 'IsaacLavaGam3r', 'DawnSlim3Vort3x', 'King_V0rtex2004',
                     'DriftH3roMagic', 'BUILDER_Blast201423', 'L3viLightNova', 'XxSparkGalaxyOrbitxX',
                     'AidenMagicTiger2002', 'EllaAlphaRogue', 'ViperMasterZ00m2023', 'MAGIC_Dragon201010',
                     'EzraPandaFusion2008', 'AbigailPowerHunter', 'EliCrystalCha0s2013', 'XxClawThunderFlashxX',
                     'XxMinerFoxMoonxX', 'LuckyOmegaArrow', 'PulseFlick67', 'Mat3oFlashTig3r', 'LionShadowLucky21',
                     'Elijah_Thunder99', 'BlazeRiderEpic94', 'SkaterPixelEch0', 'SparklyR0ck3t2002',
                     'AddisonTurboVort3x', 'XxSparklyJ3llyxX2008', 'LegendStarryPower201', 'GlitchSaberPhoenix74',
                     'Sparkly_Frost42', 'Jayd3nMast3rPix3l82', 'AubreySt0rm60', 'Qu33nBacon2020', 'BearFusi0nMiner77',
                     'BeastSkaterBlade2012', 'FlameMasterZoom2012', 'CHARLOTTE_Light78', 'Primal_Storm200526',
                     'DawnMax2022_YT', 'JaxonGalaxyDrift2020', 'TigerViper200354', 'Br00klynnBeastMystic',
                     'AmeliaInfernoPixel_Y', 'William_BACON47', 'Hawk_Cyber89', 'XxHyper_AcexX2023',
                     'XxHunter_ZeroxX29', 'XxLeviLightGhostxX', 'MagicRiftBlizzard202', 'XxVoidGlitchxX2012',
                     'Prism_Omega72', 'OwenBaneInferno2024', 'SavannahPulseCircuit', 'EliSkat3rMystic', 'Hero_Bacon16',
                     'XxJacksonDancerNeonx', 'RiftThunderKnight38', 'XxElla_F0xxX2024', 'BuilderRocket65',
                     'BlastFoxMaster2024', 'KnightIc3Max', 'XxDark_BytexX2014', 'Pulse_Mystic60', 'ChaosTigerNeon',
                     'JellyBlastMiner', 'BlizzardStealthByte2', 'XxLionEpicZapxX88', 'SebastianFuryUltra',
                     'LunaMasterSonic', 'HyperFlickCookie2006', 'XxProVenomxX2003YT', 'XxCarterStreamC00kie',
                     'PandaRogueLion2024', 'J3llyEpic25', 'XxSparklyRoguexX2005', 'Chas3_Void48', 'Drift_ECHO200557',
                     'AceOrbit202171', 'XxFlash_Z00mxX71', 'ChillAqua41', 'ClawSlim374', 'PIXELATED_Ech030',
                     'Blast_Ace77', 'H3roFlashB3ar', 'Kayl33_FIR363', 'AquaMoonStar14', 'Chill_St3alth46',
                     'SamuelSonicGalaxy201', 'SamuelEpicDrift2005', 'BuilderRocket31', 'Br00klynnPlayzFlash2',
                     'WraithSab3r2003', 'Viper_ECHO19', 'XXJACK_BlastxX2013YT', 'ScarlettZeroByte',
                     'Harp3rSt3althChas394', 'J3llyDanc3rFox', 'ClawRider63', 'XxDriftFusionxX2008Y', 'WolfVenomGalaxy',
                     'T0xicLegendByte', 'Ac3Glitch40', 'Aurora_Ice83', 'QueenLavaKnight', 'Eli_CHAS3200525',
                     'XxOliverPixelatedBla', 'Ezra_Ac390', 'HawkStarInfern0', 'Rift_Pro95', 'XxQueenDriftCrystalx',
                     'Mat30_King2016', 'HarperByte22', 'Flick_N3on62', 'XxByteProClawxX', 'XX_FlashPandaBlizzar',
                     'DawnLucky56', 'GabrielRocket2014YT', 'Drag0nTurb0F0x', 'ChaseDancer50', 'OwenFusi0n97',
                     'XxJamesMaxxX32', 'Br00klynNinjaLegend', 'NoraChaseKing2005', 'Xx_Will0wV0rtexArr0w',
                     'DawnSkyBuilder2018_Y', 'Xx_HazeStealthSkater', 'OliviaCraftVoid', 'DarkHer058',
                     'SkyBlazeDragon_YT', 'ChaseEagleDrag0n_YT', 'St3althSparklyCod3', 'Chl0eT0xic39',
                     'PlayzAceShad0w2024', 'JAM3S_Craz32003', 'AriaOrbitBlaze2021', 'XxStr3amZapxX24', 'NoahVort3x39',
                     'XxMichaelFlickxX2016', 'BeastRift26_YT', 'SaberV0rtexAlpha2017', 'EllaFusionAlpha2019',
                     'XxHawk_ProxX18', 'HeroStarHaze2008', 'LunaZ3ro35', 'Cod3NovaHunt3r', 'SkyRiderRogue',
                     'GlitchFusionQu33n201', 'King_Glitch201332', 'IsaacViperPh0enix', 'OwenChaseKing',
                     'GalaxyBuild3r78', 'F0xN0va2007', 'HannahCha0s41', 'BeastTurbo29', 'KingPow3r2020',
                     'ZapEch02009YT', 'WilliamKingRogue2021', 'ZeroEcho10', 'JulianMoonGold3n', 'XxLukeOrbitRiderxX',
                     'SparkAqua200455', 'FlickGalaxyPixelated', 'ZeroDuck49', 'XxProNinjaStarxX33', 'NightCraze18',
                     'H3roPandaFlick', 'UltraStreamStorm', 'Skat3rNinjaDawn', 'CyberDriftNova13', 'RileyRogue200680',
                     'MagicClawPuls3', 'PowerBaconBuilder18', 'MagicDrift21', 'DanielThunderStarYT',
                     'XxWillowCookieBaconx', 'XxAsherEchoZapxX', 'Samuel_Tiger2013', 'EllaTurb076',
                     'Primal_Craz32020YT', 'XxToxicGhostxX2021', 'AbigailBuilder98_YT', 'LuckyPrismKnightYT',
                     'DanielStormy200895', 'Grac3Byt3Eagl3', 'Jack_Rocket32', 'Cha0sJ3lly202063', 'STORM_Builder2004YT',
                     'MagicGlitchTurbo30', 'XX_DancerMinerDrag0n', 'LaylaKnightFusion201', 'ThunderPrimal14',
                     'XxBuild3rBlastxX_YT', 'Xx_SparklyWraithUltr', 'Turbo_Blaze2002', 'L3g3nd_Eagl375YT',
                     'GraceCraze200962', 'RiftGh0st61', 'Xx_CarterCookieDrago', 'AlexanderBaneBlade', 'AidenSkyFrost69',
                     'P0wer_ECH012', 'ZoeGamerMagic2010', 'XxSky_BUILDERXX2024', 'Echo_Ace201417', 'HazeFlame201139',
                     'Wolf_Spark37', 'Bac0nR0gueYT', 'HawkEchoV3nom2024', 'Eli_Knight200899', 'ViperJellyTiger2022',
                     'W0lfN0va38', 'ArrowNinjaGamer2005', 'Xx_LionCrystalStream', 'XxBanePrimalxX2024',
                     'LaylaUltraVenom2004', 'HazelVenomDawn2018', 'LavaWolfPower', 'Al3xand3rDragonMysti',
                     'HannahBl0ckPrimal', 'XxKnightBladeClawxX2', 'OliviaMoonPulse', 'SKYSTAR2011_YT',
                     'FlashVenomBacon', 'NoahAquaViper', 'HunterBlizzard50', 'FusionGigaFury2003', 'LoganPrismLion2016',
                     'ChloeStormyEcho', 'Slime_Toxic2007', 'Om3ga_Zoom2016', 'ByteFlash201256', 'FlickBeastHero',
                     'LukeFlashLegend', 'Xx_BuilderMagicRider', 'Hunt3rProAqua', 'KnightChaseDuck', 'Panda_P0wer200898',
                     'DancerG0ldenViper_YT', 'OW3N_Bl0ck2008', 'EliBlock200360', 'JamesCyberZoom',
                     'XxBlock_SlimexX2004', 'XxChillUltraxX39', 'XxEthan_DarkxX2014', 'ChaseAlphaHazeYT',
                     'Viper_Dark31', 'LeviLava65', 'FlickRid3rStr3am', 'R0cketRiftChill', 'ShadowBlockSpark95',
                     'EllieDriftSkater', 'Samu3lFlick2004', 'XxElijahViperxX64', 'XxCod3_MOONXX2017', 'Noah_Dancer2017',
                     'XxViper_SonicxX2007', 'XxClawChaosSaberxX85', 'PrimalGoldenLegend', 'StarKnightFusion2019',
                     'Qu33nClaw76', 'LavaZoomVenom2007', 'XxWill0wLavaSt0rmyxX', 'Hunt3rZ3ro93', 'PrimalInfernoSkater',
                     'XxPr0Her0xX2019', 'NovaHero40', 'Chlo3KnightChaos2007', 'Z03CrystalSab3r', 'XxWraithShad0wxX2008',
                     'JacksonZoomMiner', 'DriftEcho201370', 'F0xEagleRaven2024', 'MasterZeroPixel', 'UltraBuild3rVoid',
                     'KnightMaster202440', 'Stormy_Bacon81', 'G0ldenCrystal2017_YT', 'XxZap_CraftxX200527',
                     'JulianPulsePixel73', 'Isab3llaLucky53', 'Craz3Rid3rSky2019', 'XxOliver_ThunderxX71',
                     'StarryPrismRid3r2008', 'Elli3Fusion13', 'PowerRogueBlock2010', 'Hunt3r_Haz334', 'Z03Knight2018',
                     'VictoriaByteWolf', 'XxBane_EpicxX2007', 'LegendMasterBacon', 'StealthClawVenom21',
                     'StarPhoenixMystic', 'HunterShadowBlock', 'Kayl33_CIRCUIT75', 'XxFrostByt3Ac3xX',
                     'Cod3PrismUltra2004', 'L3g3ndH3ro2021', 'Dawn_Slime34', 'BlizzardDrift2018YT', 'ElijahV0idNight70',
                     'Storm_Starry48', 'Thund3rB3astNinja200', 'PulseBaneStorm', 'WolfBlizzardMagic_YT',
                     'FlickCookie2012', 'WillowPrismPixel2022', 'FlashGh0stR0gue', 'Sab3rWraithPrimal200',
                     'Luk3BlizzardFlam3', 'StormySkyRift', 'AsherViperMystic', 'AubreyPowerSkater', 'KingBlaze2006YT',
                     'XxPowerSparklyBlockx', 'XxIsaacLavaEch0xX', 'FlickZoomCircuit66', 'PlayzLucky37',
                     'Pix3l_Craft2012', 'CrazeFlick97', 'Legend_ECHO200676', 'XxSparklyCyb3rxX2018',
                     'XxEchoShadowGlitchxX', 'HunterPlayzBacon2003', 'FireChillSilver2022', 'C00ki3Thund3r12',
                     'GhostLuckyPrism2016', 'CodeSlimeBane37', 'WilliamFire202068', 'BeastFrost33', 'RiftAc348',
                     'Gh0stGlitchPrimal', 'Dawn_C00kie41', 'Jam3sZ3r0Fir3', 'Xx_ScarlettEpicKnigh',
                     'Silv3rCrystalL3g3nd2', 'SPARKLY_Skater18', 'Ace_Cyber31', 'SparkPix3lDanc3r_YT',
                     'JamesNovaUltra35', 'ZaydenStormyStarry20', 'XxChillCircuitxX91', 'XxBaconHunterChaosxX',
                     'Fusi0n_Shad0w2011', 'Zer0Pr0Playz', 'FoxPixelSlime', 'FlickChill92', 'Xx_DanielG0ldenPlayz',
                     'XxJaydenCraftxX_YT', 'XxNight_LIGHTXX66', 'Xx_PulseBuilderPrism', 'GigaThund3r2014',
                     'TigerSlime2011_YT', 'Glitch_Dark47', 'BlastViper12', 'SparkSab3r71', 'ProHunterBane2013',
                     'Ban3Cod3Danc3r', 'ZoomAquaPix3l', 'DuckAlphaChas3', 'XxKayl33L3g3ndxX54', 'Xx_Str3amSonicFusion',
                     'JackBlizzardLi0n', 'XxUltraTigerxX45', 'SparkGlitchQu33n2022', 'Al3xand3rOm3gaBlad3',
                     'LightFlickJelly2024', 'AbigailOrbitStarry20', 'NeonVortexCookie49', 'XXRIDER_HeroxX201153',
                     'Sab3rB3ast2012_YT', 'MateoCookiePlayz2011', 'Mat3oL3g3nd77', 'LiamPhoenixRift2009',
                     'Blizzard_Giga12', 'BuilderPixel201837', 'RiftRock3tV3nom18', 'Grays0nCyber33', 'GigaOmega43',
                     'NovaGlitchEagle2007', 'NoahB3astV3nom_YT', 'CodeSonic200418', 'LeviZeroZoom86', 'Rav3n_Turb054',
                     'Pr0_EPIC2023', 'XxRiderUltraxX200628', 'V0rtexP0wer202270', 'Pow3r_BUILD3R65', 'Lion_Venom2020',
                     'JamesStream2021YT', 'MysticStarGamer', 'ClawCooki343'}
local RECEIVER_LIST = {'KayleeChaosBear', 'MoonCooki32004', 'Gam3rB3arChaos', 'Builder_Venom2021', 'Br00klyn_Ultra2008',
                       'XxVortexGamerStreamx', 'Bac0nHaze2022', 'ChasePulseBl0ck11YT', 'Rift_Ac32014',
                       'ClawProRider_YT', 'SparkInfern0Beast', 'XxFlashVenomxX19', 'RavenVortexPlayz',
                       'HazelPowerBacon', 'FlashCraz3Skat3r', 'XxGigaFlamexX2014', 'ZeroVortexSlime',
                       'StarryBeastDuck2016', 'XxCraftRocketxX66', 'SlimeViperSaber', 'HenrySparkHero2004',
                       'WraithIceMoon2002', 'XxZoeKnightxX2007', 'ScarlettZapSonic', 'XxAubr3yEagl3xX88',
                       'ZapNinja2011YT', 'XxBlastWraithJellyxX', 'Chill_Cookie2005', 'Will0wQu33nBuild3r20',
                       'OliverLightMystic', 'EmmaDarkLight2018', 'AidenPr02013', 'Blizzard_LUCKY200581',
                       'N3on_Cyb3r2004', 'OmegaCookieWolf20054', 'ChaseHunterSpark2002', 'Xx_Al3xand3rGam3rSha',
                       'BaneSlimeSpark', 'ZoeNinjaGalaxy2013', 'Xx_DawnStealthMaster'}



-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
