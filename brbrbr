-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'R0cketZ00m78', 'BaneFuryPhoenix', 'SlimeUltraPower', 'XxJack_FrostxX202219', 'Grac3ZoomAc3',
                     'XxIsaacSt0rmyxX2014', 'LukeFlameTiger2014', 'XX_HannahPix3lThund3', 'Xx_AuroraPixelatedSh',
                     'GalaxyJelly62', 'XxRogu3Byt3xX89', 'HyperSaberWraith', 'Savannah_LEGEND20049', 'J3LLY_Galaxy2015',
                     'BaneArrowDrift', 'XxGam3r_Ph03nixxX96', 'FusionSkyLegend', 'HazeShadow201569',
                     'XxArrowClawxX31YT', 'FLICK_Rock3t2002', 'PrismCookieLight22', 'PixelBladeM00n',
                     'EllieHunterGolden200', 'RoguePixelatedQueen4', 'HannahJellyDark76', 'BaconEchoEagle46',
                     'N3on_Fusion2011', 'Flame_Arrow201561', 'LightV0rtex200751', 'LaylaSkyP0wer2012',
                     'StarryZ3roCooki3', 'PhoenixSparkly201539', 'JellyVortexToxic', 'XxZapDancerCyberxX20',
                     'XxChillCyberxX2007', 'Xx_AuroraPho3nixUltr', 'XxFoxGalaxyxX2023', 'OwenLion46_YT',
                     'Luke_C00kie13', 'EpicWraithAlpha', 'Omega_Builder29', 'SparkFury200767', 'LightDriftLava2004',
                     'JellyPanda200492', 'XxCha0sEaglexX52', 'AriaNinjaToxic2021', 'IceHawkNight', 'LavaBlade93',
                     'Xx_Z00MBLIZZARDRAVEN', 'Eli_Min3r2014', 'SilverFoxVoid', 'ZaydenNight83', 'BladeHeroEpic2010',
                     'DuckShadow69', 'JackOrbitWraith2008', 'ScarlettDragon201265', 'Tig3rTurboIc3', 'T0xicChaseRift',
                     'Rid3rB3ar2021', 'Micha3l_Galaxy200846', 'AvaBlast26', 'MoonLavaThund3r', 'LionVenom97',
                     'ThunderVen0mRift72', 'XxZap_Rock3txX2008', 'XxFusionHaz3Byt3xX38', 'ChaosSkyUltra2004',
                     'FlashGhostFlame2009Y', 'ElijahLi0nHer02008', 'DragonBaconVenom96', 'XxIsaacUltraNeonxX',
                     'BrooklynOmega34', 'DuckEpicEagle16', 'LuckySparkAlpha2019', 'DawnPlayzHyper200217',
                     'Ash3rGam3rSilv3r', 'SonicDrift91', 'Zo3L3g3ndGlitchYT', 'XxFlam3SonicxX88', 'ElijahMaxSkater',
                     'Ril3yEpicKing', 'N3onRock3t90', 'LiamAc3_YT', 'AvaHyperSkaterYT', 'Rogue_Golden34',
                     'JacksonBlastVoid', 'BaneBlade201796', 'LaylaDrift61', 'V0idInfern0202046', 'AvaPow3r2002',
                     'Moon_Rift201397', 'OmegaEchoHyper2007', 'HeroUltraRift2023', 'XxLuk3DragonLightxX',
                     'EzraBlockV3nom', 'XxMichaelStormxX70', 'PowerBlazeRift2016', 'RiftBl0ckCircuit2013',
                     'Mat3oProGold3n', 'GraysonRock3t73', 'NovaRift98_YT', 'JULIAN_Infern02015', 'Jax0nPr058',
                     'XxMasonStormPrimalxX', 'CircuitMaxNova_YT', 'Cooki3Primal62', 'XxSaber_St0rmxX2016',
                     'EllieSkyGh0st66', 'MaxHazeMiner94', 'DawnDrag0nShad0w', 'Turb0RiftTiger2005', 'Om3gaDrag0nGam3r',
                     'EchoOm3gaFlick2004', 'PaisleyToxic28', 'Aiden_Ven0m2005', 'Xx_SparklyViperDance',
                     'XxGalaxyCooki3Build3', 'VortexGamerGlitch64', 'RileyS0nic29', 'Xx_ELLIEPRIMALSILVER',
                     'NoahClawRogu3', 'LucasHawkCod3', 'UltraBaneSt0rm2015', 'Epic_Code79', 'XxM00nStreamxX2013',
                     'ToxicFrostVortex', 'Her0PulseRaven2017', 'ChloeAlphaVortex', 'XxJamesInfernoxX2008',
                     'XxMagicHawkxX2019', 'OmegaNovaFlick', 'PrimalGiga201950', 'XxAubrey_CircuitxX37',
                     'XX_Inf3rn0G0ld3nPrim', 'XxLeviQueenOmegaxX', 'XxStarFlashxX88', 'Fox_Cyb3r200799',
                     'L3g3ndOrbit201253', 'Isaac_Fusi0n2009', 'Vort3xChill73', 'EllieTurb0Mystic',
                     'XxPrimal_EpicxX2014', 'RileyChaseDragon2019', 'INF3RN0_Vip3r200678', 'XxKnightAquaHunterxX',
                     'L3viPandaFury', 'WraithHeroRift2004', 'BlazeRiftLegend52', 'EchoRav3nL3g3nd', 'Pro_Blast2009',
                     'Aubr3yAlpha201122', 'XxRiderStormDancerxX', 'B3AST_Pix3l2017YT', 'BaconTigerToxic2016',
                     'BeastPixel201216', 'XxJellyRavenAquaxX', 'XxRock3tCod3DragonxX', 'GoldenSonicPixelated',
                     'FlickBeast2021', 'TurboBlastDuck2022', 'GraceFirePixel2002', 'XxChaseFlickViperxX',
                     'Gold3nEagl3DawnYT', 'Xx_WRAITHTHUND3RN3ON', 'L0gan_Orbit66', 'Knight_Blast201032',
                     'SebastianBear201770', 'ZapVoidToxic_YT', 'EzraBaconLight200651', 'Slime_Haze200773',
                     'XxCraftC0deFlickxX', 'Xx_AlexanderSkyBlizz', 'Gam3rAc3Vip3r', 'ShadowHeroRocket2013',
                     'Aur0raStealth81', 'Aur0raStarMinerYT', 'XxRiftViperxX59', 'Ph0enixBlastPulse201',
                     'XxBlastCrystalPlayzx', 'ZaydenMoonSlime', 'PhoenixLight200845', 'AriaGoldenSonic', 'LionDuck96',
                     'ToxicBacon201333', 'BUILDER_Light87', 'Mas0nArr0wLegend', 'XxChillPix3lat3dStor',
                     'BuilderGalaxy93', 'C00kie_P0WER2017', 'DriftTiger95', 'FoxRiftN3on', 'L3g3nd_Build3r90',
                     'ZeroByteEagle', 'NoraVort3xNova', 'DragonFuryFlick2019', 'RiftBytePixelatedYT', 'ClawUltraSkater',
                     'Shad0wN0vaLi0n2016', 'SkaterRocket19', 'AriaPr0Bac0n2023', 'Inf3rno_Block60', 'AlphaTurbo200948',
                     'XxBlaze_NinjaxX19', 'HyperOrbitFusion', 'XxMiaBlad3xX36', 'XxLuckyBan3xX2021',
                     'XX_ZaydenCrystalN0va', 'JamesDancerFusion', 'Orbit_Skater201156', 'Primal_Raven38',
                     'HazeWraithCraze_YT', 'PhoenixSilverTiger', 'HunterLegend202197', 'Sab3rN3on46',
                     'XxKayleeAcexX2007', 'XxOrbit_VortexxX2018', 'VictoriaJ3lly67', 'Xx_BrooklynnSlimeMas',
                     'LeviR0cketPanda', 'XxPrism_SilverxX29', 'HunterV0rtex38', 'XxEllaBlastDuckxXYT', 'RiftBlizzard68',
                     'XxLuckyGoldenxX20021', 'AlexanderPower62', 'PlayzViperFlame75', 'HunterBlazeR0gue25',
                     'SkyV0idBane', 'ProFlickH3ro2003', 'CraftBlastSky25', 'TigerFuryStormy', 'XxDancerPandaAlphaxX',
                     'ORBIT_Byt32014', 'XxWillowMagicxX62', 'V3nomL3g3ndQu33n', 'WolfHaze65', 'PrismUltraLight99_YT',
                     'XxBrooklynToxicPixel', 'Pho3nixHawkClaw', 'XxToxicBaconRavenxX', 'Haze_Night94',
                     'SparklyTigerCircuit', 'XxHarp3r_B3astxX2020', 'XxGhostCodeNinjaxXYT', 'Blad3FoxFlash',
                     'PhoenixFoxGamer20138', 'BrooklynFlickCyber', 'OliverHyper81', 'FuryWraith63', 'Magic_Fury15',
                     'Logan_Byt32024', 'Ne0nC00kie2009', 'LionGalaxy202453', 'LukeCyberShadow22', 'NoahOrbitSkater_YT',
                     'AubreyPrism66', 'ThunderDancerHyper', 'H3roSab3r99', 'HawkSlime202092YT', 'XxMin3rJ3llyZapxX202',
                     'Fr0stPix3lTurb02008', 'EagleShadowFlick2023', 'XxTig3r_OrbitxX2014', 'BlastBacon202385',
                     'LeviPlayzBlast31', 'NeonToxicVortex', 'JellyIceBlade51', 'JellyInfern0Ech02021',
                     'GigaFusionFlash', 'ArrowCooki357', 'Aubr3y_Vip3r2021', 'BaconTurboThund3r', 'ToxicPulseVenom66',
                     'Chas3FusionFlash2011', 'BladeMagicHunter', 'ChaosFuryKnight', 'EpicW0lfF0x44', 'XxLightEaglexX74',
                     'NoahNovaPower', 'Xx_MichaelVenomDance', 'Danc3rToxicWolf2023', 'Luna_Inf3rn02004',
                     'Byt3Pow3rLight', 'Vip3rFir3V3nom2005', 'ChaosMast3rJ3lly2003', 'C00KI3_Z00m2019', 'BLAZ3_Fox67',
                     'VortexToxicCookie', 'XxEmmaEchoxX65', 'XxRift_KNIGHTXX2023', 'Samu3lAqua2014',
                     'EagleEpicBacon201017', 'MasterArrowVortex201', 'AvaTiger86_YT', 'XxLionBaconxX43YT',
                     'BearMasterAqua57', 'Emma_Sonic2018', 'LegendBane200529', 'CircuitH3ro48', 'Turbo_LUCKY202230',
                     'SkyAlpha86', 'SamuelMasterNight', 'NightFuryGolden30', 'Ph0enixTigerBlizzard',
                     'Pix3lat3dLightH3ro', 'XxBlizzardSlimePanda', 'Pro_PIX3L2012', 'Rogu3DragonB3ast',
                     'LiamIceTiger60', 'RiftEagleGiga98', 'LegendPixel201861', 'GamerChillEpic', 'FlickCodeSky',
                     'MysticMagic43YT', 'FuryMinerBlade2014', 'StormGhostQueen', 'KnightFlashEch0',
                     'CookieTurboQueen89', 'LunaZapV0rt3x', 'Ella_Sky2003', 'XxKayleeKingRiderxX6',
                     'Ven0mDuckLight26_YT', 'LunaJelly50', 'W0lfFusi0nSkater', 'JackPixel36', 'JaxonCodeGlitch',
                     'XxOliverMinerxX2013', 'Claw_MAX200822', 'XxFlash_POWERXX69', 'Chas3_Rav3n36', 'N30nNinjaP0w3r77',
                     'DuckFusi0n93', 'PrismFoxInferno2014', 'DawnPixelGalaxy', 'Arr0w_Viper40', 'GraysonStr3am2019',
                     'Hunt3rV3nomHaz3', 'XxLunaN3onxX16', 'Xx_LucasPhoenixStrea', 'WolfUltra46', 'BlazeShad0wPixel',
                     'ViperDuck86', 'RogueTurboNova', 'WraithStealthFox', 'XxChloeSonicxX25', 'Blade_Circuit37',
                     'GalaxyIc333', 'XxFrostChillFoxxX200', 'Aubr3yOrbit2009', 'XxGraysonBanexX2022Y',
                     'WillowByteFlash', 'WyattArrow37', 'CrystalEagle69', 'XxLukePr0SparkxX', 'AriaChaseCookie',
                     'KayleeGh0stShad0w', 'XxWilliam_V0rtexxX15', 'HawkStarBlast2003', 'XxFlam3_PrismxX77',
                     'XxSpark_TigerxXYT', 'OrbitLavaBlizzard', 'PrimalStarryZap2019', 'Z03Z00m2008',
                     'RileyNeonViper2022', 'Moon_Flam368', 'ZoomHazeArrow', 'XxSaberGigaxX92', 'EthanCraft200283',
                     'XxCarterBlockZapxX', 'FrostPro31YT', 'GoldenPrimalKnight20', 'PrimalVort3xDuck2012',
                     'XxSt0rmyBladeLegendx', 'M00n_Knight2018', 'BlizzardBear66', 'KingSilv3rGam3r',
                     'ChaosSparkly200680', 'DuckHunt3rAc3', 'FlickStarryTurbo', 'XxHeroBuilderHunterx',
                     'SparklySlimeStealth2', 'LightWraithMast3r', 'XxStorm_VoidxX202410', 'XxSkat3rOrbitxX31',
                     'LegendHyperVenom', 'ChillHunter200626', 'EvelynViperCraze2024', 'LoganGamerGolden2008',
                     'MasterLava201073', 'XxEllieAcexX15', 'Zo3Glitch200449', 'LukeCha0sBlast200346', 'Grays0n_Orbit36',
                     'FlashV0id67', 'PrismSparklySky_YT', 'Moon_Spark53', 'CodeDark63', 'LeviSlimeZero',
                     'Li0nDancerBac0n2024', 'GalaxyHawkChillYT', 'ChloeHeroFire57', 'LeviAce2013_YT', 'Block_Chill96',
                     'KNIGHT_Gold3n2009', 'DuckBaconNova2005', 'XxAvaMasterSilverxX2', 'Blad3Pow3r2016YT',
                     'Haz3_Ban368', 'MysticPlayzByte2010', 'DriftDuckGamer2017', 'czxczxbbbbbfc', 'H3nryGigaStar2020',
                     'N0raLightCrystal2007', 'Al3xand3rBlastFox', 'CircuitUltraGalaxy20', 'Ril3yDanc3r47',
                     'Addis0nDriftBear', 'ZoomDawnTigerYT', 'St0rmFusi0n2015', 'HannahDanc3rPro40', 'MasterNinja200627',
                     'Infern0Ninja2004', 'WilliamStormy83', 'CircuitCodeMagic', 'UltraOmegaEpic', 'HeroGigaFox',
                     'SaberPower26', 'V0rtexPixelated20123', 'XxHunterEpicxX200335', 'Xx_GraysonOm3gaCryst',
                     'DancerVen0mF0x', 'Logan_St3alth2015', 'SparkBaneBl0ck', 'EliVoidChaos80', 'XxFrost_ChillxX67',
                     'StarryFuryShadow', 'LunaTurboSpark', 'Byt3_BACON2011', 'Ultra_FlickYT', 'BlizzardMax202226',
                     'Kayl33Vort3x2015', 'Elli3Cod3Spark', 'Xx_Micha3lFrostGold3', 'Xx_KnightVoidInferno',
                     'HawkLavaSky2003', 'RileyIce200494', 'Shad0w_Fusi0n2011', 'OrbitNightWraith2023', 'EmmaPrism35',
                     'STAR_Galaxy2024YT', 'Jaxon_Sparkly14', 'Chas3BlockZ3ro', 'Aiden_DANCER77', 'BLAST_Hyp3r83',
                     'UltraNinjaWraith', 'Xx_VortexMoonThunder', 'GraysonStream59', 'StealthAceKing', 'Phoenix_Turbo30',
                     'VoidHawkPixel2013', 'Xx_RavenStarryGolden', 'DriftLavaPro', 'Galaxy_Lava200213',
                     'XxNovaBaneThunderxX', 'HazeGigaSky47', 'KnightCrystalInferno', 'RogueBearFlash64',
                     'CyberSlime29_YT', 'GoldenOrbit37', 'DragonSonicSky2003', 'KingPh03nix12', 'C00ki3Cyb3rV0rt3x200',
                     'GlitchDarkThunder_YT', 'ChillPuls341', 'CraftGlitchH3r0', 'XxStormy_ProxX2024', 'Alpha_Byte46',
                     'WilliamKingBuilder21', 'SparklyAceBuilder38', 'Xx_JellyFusionInfern', 'Hyp3rBlastStarry',
                     'HeroAceJelly42YT', 'RiderChillVortex', 'Chase_Blizzard81', 'LucasDrag0nSparkly20',
                     'XxElijahH3r0xX64', 'AlphaFlameSky2015', 'Pix3lSt0rmySlim3', 'Craft_Blast200958',
                     'JaydenSaberRocket202', 'Sky_Dawn2016', 'LeviFlickPrimal43', 'Danc3rSkat3r28', 'Ech0_Starry92',
                     'GraysonCraz314', 'Cookie_Pixelated90', 'EpicHaz3Rogu3', 'Playz_Inf3rno56', 'CyberCookieChaos2022',
                     'LukeNightQueen2006', 'ViperEch0Ace', 'JellyEchoTurbo77', 'BrooklynDragonNova',
                     'CrystalBlaz3Shadow26', 'Star_Tiger2016', 'XxH3nryRock3txX20032', 'XxBrooklynMinerSaber',
                     'VoidChillDrift', 'XxKayleeHyperStormxX', 'AuroraSparkRid3r', 'PlayzAlphaChase',
                     'Grays0nStream2010', 'FlickCrystal65', 'ChillSaberBane2019', 'Wraith_Miner202251',
                     'Cooki3Thund3rChaos', 'LuckyCraze80', 'ZOOMEPICCYB3R2012_YT', 'Z3roHawkThund3r', 'FoxAceNinja2012',
                     'Gh0stHyperKnight_YT', 'SparkVenomHero', 'BaneRavenAlpha', 'XxOmegaLuckyPowerxX', 'Bacon_Slime28',
                     'Claw_Bacon82', 'MoonSonicKnight', 'XxDriftMinerxX53', 'Xx_AddisonChaosPlayz', 'T0xic_Galaxy2015',
                     'WolfPixelDrift', 'Dragon_Night202055', 'Beast_Turbo33', 'Frost_Chill91', 'XxCyberPixelatedEagl',
                     'StarryVoid86', 'XxHyper_SilverxX2002', 'DawnGam3rH3ro', 'XxByte_ViperxX21', 'LaylaNinjaOrbit76',
                     'MiaKnightFury2021', 'Grays0nLucky2006', 'Blaze_Bacon85', 'PlayzFlickNeon', 'CrazeNova23',
                     'XxSt0rmTigerxX2003', 'Xx_AuroraArrowInfern', 'XxGlitchMasterxX2022', 'RileyDuckGamer44',
                     'XxRileyArrowxX201618', 'CodeChaseTurbo', 'Aur0raRavenT0xic', 'NoahHunterKnightYT', 'Aid3nVoid19',
                     'XxEliNinjaNovaxX2005', 'Gamer_Flick69', 'Charl0tteStreamAlpha', 'FoxHawkBeast', 'EzraHazeInferno',
                     'RiftF0x55', 'AlexanderHyperFox35', 'Gold3nFlickJ3lly', 'SparkDuckUltra', 'AubreySlimeNight2002',
                     'ZaydenC00kie73', 'XxJulianRocketxX77', 'LightVoidVortex', 'KingSt0rmBlad3_YT',
                     'XxZ0eEpicFlickxX2023', 'LunaByteDancer', 'PrismDarkW0lf', 'RocketFire2020YT', 'L3g3ndStorm2003',
                     'Xx_GabrielEchoFusion', 'ProCraze33', 'Logan_Blizzard12', 'GhostProChase', 'M00nFlickBeast',
                     'CrazeBlaze65', 'Luk3AquaLion', 'XxStr3amPuls3RiftxX2', 'XXBROOKLYNN_ZapxX94', 'V0idS0nicWraithYT',
                     'GamerEchoHero2003', 'Prism_Orbit37', 'ZaydenGigaMaster2006', 'Cha0sArr0w76', 'XxBlazeClawxX41',
                     'ZoomSilv3rH3ro', 'XxStealth_FROSTXXYT', 'XxFuryAc3CircuitxX30', 'Cod3ZoomBuild3r51',
                     'ZapHazeDancer_YT', 'ROGUE_Chaos68', 'Fr0stBlade2006', 'WilliamCode92', 'GigaPix3lat3dPanda',
                     'Xx_HarperThunderPixe', 'RavenV0rtexPh0enix75', 'SLIME_Dark86', 'LavaW0lfDawn',
                     'Qu33nHyp3rRogu320062', 'Z00mSlime13', 'OwenMinerPrimal62', 'XxEch0_Bac0nxX2010', 'Z00m_Flick2017',
                     'LiamRogueDragon2002', 'CodeOrbitPulse201266', 'ChaseCodeEcho36', 'ByteVenomTiger_YT',
                     'T0xic_Knight2017YT', 'XxSparkGalaxyClawxX', 'Cyb3rRogu3Echo2015', 'Xx_FLASHOMEGABUILDER',
                     'XxMichaelMysticStorm', 'XxLunaV0rt3xxX2006', 'Wraith_Knight74', 'StarryToxicLight2016',
                     'BlizzardTigerFox2007', 'S3bastianPrism2020_Y', 'MagicLucky19YT', 'EzraBlastQueen2017',
                     'Om3gaHaz3200877', 'StarSaberSlime2021', 'CircuitHyperMagic201', 'CrazeNova20', 'Void_Rift53',
                     'KnightSonicSaber', 'XxStarryPho3nixFir3x', 'XxLegendOmegaxX22', 'GhostNightBear',
                     'SavannahPr0Ice2003', 'Xx_V0rtexGalaxyPrism', 'GalaxyDancerAqua29', 'FuryCraz3Ban3',
                     'DarkMax2014_YT', 'Rift_Bac0n201297', 'Xx_SamuelShadowCyber', 'L3viBlockB3ast', 'Turb0_L3g3nd2008',
                     'Will0w_Rift23', 'XxPulseViperxX2023', 'Gabri3lVort3xFlam3YT', 'ChillBladeOmega',
                     'XxPow3rH3roxX98', 'Wraith_ECH084', 'StarArrowBuilder', 'ChloeZeroPixel', 'Ghost_Builder53',
                     'OrbitPixelC00kie_YT', 'SparkZap35', 'DriftEpic88', 'XxJack_ArrowxX2014', 'ARR0W_Flame2012',
                     'Panda_Giga71', 'ViperUltraMaster2007', 'Ech0_Tiger24', 'XxBlazeGalaxyxX2016',
                     'Skat3rMin3rOrbit2015', 'EzraCyber93', 'FuryTigerMax2015', 'Xx_AlexanderVortexSl',
                     'Charl0tt3Hunt3r40', 'Mia_ROCK3T85', 'Hero_BLAST200979', 'GabrielBuilder200794',
                     'Kayl33Hunt3rShad0w', 'RavenGh0st2007', 'Eagle_Rogue32', 'Rid3r_N3on16', 'Xx_CrystalFlam3Tig3r',
                     'BLOCK_Dawn69', 'Eagle_Pr090', 'Al3xand3rCircuitJ3ll', 'WraithAquaLight2019', 'Br00klynnBuilder66',
                     'GlitchAceCraze2012', 'XxTurboOmegaHeroxX37', 'OliviaPh0enixHawk', 'LavaBlaz356_YT',
                     'OliviaFlam3Block2007', 'XxChaosDragonPlayzxX', 'EvelynRiftNe0n2016', 'Rider_Sonic51',
                     'StarryPixel201561', 'RiderFlash201387', 'Chlo3Galaxy2023YT', 'EthanStarry200994',
                     'TurboCode202375', 'V3n0mFusi0n2004', 'Ash3rToxic83', 'XxVenomTigerRiftxX', 'F0xEagle37',
                     'SparkCraftRift201277', 'Xx_JacksonEchoPhoeni', 'XXEAGL3_PrimalxX2006', 'ULTRAFROST2019_YT',
                     'QueenPrimalMax', 'Flam3AquaMast3r2016', 'QueenF0xR0cket63', 'XxSilverUltraPandaxX',
                     'GoldenBlockHawk', 'C00kieLi0nOmega', 'OliverF0x2021', 'LegendCircuitChill20',
                     'ScarlettVenomBlock20', 'B3AST_Fury2008', 'HeroStealthKing2009', 'RiderEcho201840',
                     'ProOrbitMast3r2014', 'MagicHaz357', 'SavannahGhostGolden', 'Chas3V3nomPow3r', 'AID3N_Sparkly34',
                     'ZapFireNinja202452', 'Fusi0n_Pixel32', 'AceBuilder80', 'CrystalBlazeZ00m', 'EagleGalaxySt0rm94',
                     'ZAPSKYGH0ST_YT', 'RavenZ00m2021', 'XxDuckVenomSaberxX', 'XxLuckyFuryInfernoxX',
                     'XxLucasSlimeBanexX', 'ClawMasterUltra', 'Blizzard_Mast3r65', 'XxCyber_VenomxX63',
                     'ShadowAquaSpark2011', 'XxAmeliaRiftBlizzard', 'OwenClawSonic', 'PandaSilverMagic',
                     'GalaxyBuilder202451', 'PulseKnightBuilder20', 'LegendKingFury', 'N3onCircuit95',
                     'Xx_Ash3rPrimalHunt3r', 'Zo3Hyp3r77_YT', 'SparklyBlock200419', 'KnightTigerPrimal201',
                     'ViperSparkPlayz2008', 'V3n0m_Byt32003', 'LionDuckSky', 'PANDA_Tiger2003YT',
                     'St3althCrystalPr0202', 'Willow_Fusion77', 'Xx_ScarlettShad0wFus', 'XxSebastianFoxxX2004',
                     'Xx_PrimalVortexSteal', 'CyberDancerGalaxy201', 'Eli_Bac0n95', 'CodeMaxStealth2008',
                     'PixelDark200460', 'PixelHyper34', 'BrooklynnToxicFrost2', 'SavannahInfernoBane',
                     'MichaelGolden22', 'XxWolfSilverUltraxX', 'TOXIC_Neon201682', 'Xx_FlickBlastCircuit',
                     'AuroraStarryGiga', 'XxHyperArr0wVen0mxX', 'FoxEagl32003', 'Ev3lynH3ro99', 'HarperWolf70',
                     'Slim3Gam3r78', 'St3althNinjaNova', 'XxPix3lat3dVort3xRif', 'LiamSilverHyper', 'Charlotte_EAGLE15',
                     'XxAlphaP0werS0nicxX', 'RiderMagicDancer2005', 'FuryByt3Rock3t', 'William_Star200286',
                     'ProTigerHunter32', 'XxLuna_NightxX2012', 'CrazeOmega64', 'XxPow3rSt3althxX2004',
                     'KayleeMysticWraith20', 'BuilderStormKnightYT', 'DawnW0lfShad0w2008', 'XxJackKnightGalaxyxX',
                     'OmegaZap56', 'Ultra_CRAFT39', 'XxAuroraFuryNovaxX', 'Jackson_Beast202370', 'PIX3LMAX2013_YT',
                     'P0werSlime96', 'MaxMoonBlaze2019', 'IceByteFlick', 'MagicGigaShadow', 'HazelSparklyVen0m201',
                     'OmegaPlayzNova2004', 'Str3amChillStorm', 'MinerDarkBlock2013', 'XxNovaUltraxX16', 'ProDanc3r93',
                     'Hunter_BUILDER23', 'HunterLuckySaber2021', 'Li0nStreamFusi0n2017', 'Knight_Starry201478',
                     'DanielRavenByte31', 'XxWyattFireChillxX', 'C0DEF0XCLAW_YT', 'JaxonMasterBacon', 'JamesChillEcho',
                     'MagicZapCraft2013', 'BladeHyperInferno', 'NeonMinerMoon', 'RileyMysticFrost', 'GalaxyMinerLava',
                     'Puls3LavaMax', 'Ph0enix_Byte30', 'ClawFuryBlade', 'Power_Hyper52', 'LegendMax15',
                     'StormTurbo83YT', 'Build3rBaconStar', 'OwenVenomNinja', 'ByteSaberShadow', 'PhoenixKnightLion201',
                     'AuroraFlickToxic', 'Vip3rFuryStarYT', 'IsaacBaneFrost', 'StarSaberLucky2012', 'JackFusionIce',
                     'EllaHero201970', 'Samu3lGold3nPho3nix2', 'MasonNinja26', 'Jax0nSt0rmBlad3', 'RileyDawnCrystal',
                     'MasterZeroMystic2008', 'XxHyper_GigaxX2010', 'Z0eLi0nRift2024', 'Zer0HunterV0id',
                     'Pix3lSt3althCrystal2', 'EchoAlphaFusion', 'HazelKingPanda2012', 'XxDanielTigerxX76',
                     'XxAceCircuitxX10', 'ZaydenSilverUltra201', 'XxAlexanderMoonWrait', 'Bane_ARROW202313',
                     'TurboDarkChaos2009', 'XxGhostMasterxX69', 'LucasBladeC00kie', 'TurboFuryHawk2007',
                     'LavaIce200562', 'BrooklynPix3lFusion', 'BrooklynEaglePower', 'Phoenix_MAX17', 'L3vi_Lucky2011',
                     'Byt3ProCircuit', 'ElijahWraithByte', 'EmmaLight79', 'Om3gaAlphaAqua', 'GamerBlazeKnight',
                     'InfernoWraith75', 'Br00klynn_Ice29', 'CrazeLight86', 'BlazePixelVenom2023',
                     'AbigailS0nicPulse201', 'GlitchAlphaBuilder16', 'HazelWolfLava200250'}
local RECEIVER_LIST = {'XxThunderCircuitNeon', 'DragonN3onHunt3r2019', 'LucasBuild3rNinja', 'Her0St0rm2013',
                       'Mia_Tig3rYT', 'DarkBladePixel2010_Y', 'HyperR0cketChill2022', 'FlickCircuitRift',
                       'XxChaos_TigerxX2002', 'CodeUltraGamer', 'Saber_Slime83', 'ArrowPrismAqua2009',
                       'XxIceSparklyxX44', 'R0guePixelatedP0wer', 'OrbitSky40', 'Ic3_Silv3r2010', 'R0gueBuilderLi0n74',
                       'BeastBuilderUltraYT', 'XxHarperBlastxX26', 'XxOliviaPixelxX2016', 'BlastBan3201677',
                       'R0gue_Builder93', 'HawkNova48', 'LEVI_Flick72', 'CrazeClaw62YT', 'CrystalHeroSonic2010',
                       'FROSTGLITCH2016_YT', 'NoahWolf2005_YT', 'XxJellySparkRiftxX', 'MateoOmega89',
                       'FoxBlastStealth20068', 'LuckyClawVen0m', 'Master_N0va2005', 'Xx_LegendBeastSilver',
                       'MysticRaven32', 'PhoenixInfernoEpic', 'Xx_BuilderMinerLucky', 'Am3liaGalaxyCooki3'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
