-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'Stream_Drift72', 'MATEO_Queen2015', 'FlameGhostAqua2003', 'XxDuckDancerZeroxX',
                     'Pix3l_Star202218', 'AquaViperHyper', 'AubreyHaze200836', 'ScarlettSparkly2017', 'WillowPho3nix16',
                     'BearFusionAlpha2018', 'Aid3nRock3tOrbit31', 'ZapChillR0gu3', 'Xx_MasonGlitchDancer',
                     'DRIFT_Rider97', 'LaylaDancer90', 'NoraGigaLion2008', 'G0ld3nSab3r2019', 'Slim3ChillStormyYT',
                     'Build3r_Lion73', 'XxMiaProGold3nxX', 'AceW0lf2014', 'AuroraBlaze2012', 'Sparkly_Alpha66',
                     'BaneBaconBlast_YT', 'GRACE_C00kie2003', 'XxVictoriaIcexX2014', 'XxHunterShadowCraftx',
                     'Eagl3Flam3201488', 'HeroEpic23', 'XxEchoHazeRiftxX', 'Rogu3Nova2003', 'AlphaChas3Primal',
                     'AuroraStealth2003', 'CrazeChillMoon', 'AuroraFlashMiner', 'JamesToxic201662', 'HeroPandaMax',
                     'Haz3l_Playz2022', 'LiamBuilderByte20042', 'XxAidenHunterEaglexX', 'XxGiga_Build3rxX2010',
                     'DawnFir3Magic2018', 'CodeVortex202047', 'N0vaSt3alth2003', 'ShadowBacon18', 'FoxVort3x2023',
                     'XxDawnBuild3rW0lfxX2', 'OwenTigerSlime202053', 'Z03Light21', 'HazelSlime22', 'WillowBacon2020',
                     'JulianLegendWolf', 'St0rmB3ast2007', 'Turb0Shad0wCha0s34', 'OrbitFr0st2024',
                     'SamuelThunder200656', 'AlphaFlashFury', 'CyberGalaxyLava2015', 'StarStreamFlash72',
                     'Xx_Br00klynnUltraAc3', 'XxViperThunderxX2014', 'FusionDuck60', 'FlickShadow202462',
                     'XxStarChaosxX200612', 'GraceVortexPrimal', 'L3g3ndDrift64', 'Build3rSkat3rTurbo', 'H3nry_Magic42',
                     'DarkHazeChill', 'SebastianChaosMystic', 'Tig3rPix3lMin3r', 'Ic3Cooki3200427',
                     'Alexander_BLADE20041', 'SparkMaster14', 'XX_ScarlettFlickRock', 'XxStarryHer0DriftxX2',
                     'CircuitMinerFury', 'KayleeHyper52', 'BladeZero2019', 'Am3liaPix3lat3dGlitc',
                     'AbigailHawkSkater60', 'MoonAqua87', 'XxBaconPixelxX2016', 'NoraStarNeon200616',
                     'DancerCookieCraze200', 'XxElijahBaneLionxX_Y', 'JamesByteEpic', 'WolfUltraFox14',
                     'Thund3r_Sonic20', 'BuilderPrimal37', 'NinjaHer02005', 'HeroNight200375', 'FuryCha0s2023',
                     'XxBearW0lfNe0nxX2024', 'UltraJelly34', 'C0d3Str3amInf3rn021', 'Xx_JACKSONDANCERFROS',
                     'Arr0wDuckGam3r2006', 'Blast_Storm2004', 'Xx_ScarlettHeroHunte', 'NinjaTurbo2013',
                     'Pho3nixPix3lLava', 'RogueBacon2005', 'XxFlashLightWraithxX', 'Haz3l_DARK200412',
                     'TurboDancerArrow', 'HeroPhoenixVortex200', 'StarryP0w3r2012', 'RiftTurboPulse2014',
                     'FlashCraft47_YT', 'PixelatedStormPrism', 'XxB3ast_Pr0xX', 'XxLuk3Vort3xKnightxX', 'Puls3Cod32015',
                     'Li0nStarryPixel2022', 'Xx_DarkBuilderDrag0n', 'BearEagleRift_YT', 'TurboDawn67',
                     'Cyb3rRid3r202490', 'LegendCraftEpic', 'Michael_Fire38', 'Vip3r_Chas3200985',
                     'WraithFusionArrow54', 'Logan_AlphaYT', 'XxDragonJ3llyxX76', 'NovaCod3_YT', 'Cart3rThund3rSlim3',
                     'BrooklynnGhost2010YT', 'LionTigerEpic', 'Hawk_Blade47', 'Xx_BlizzardDuckToxic', 'XxVoid_LionxX76',
                     'XxPixelatedPowerInfe', 'Layla_Cyber46', 'ChillChaosSlim3', 'AlphaAquaBacon2006',
                     'RileyPrism200489', 'BlazeSlimeFusion2005', 'Z0e_S0nic94', 'Zer0_Turb02011', 'PlayzPower77',
                     'CrystalCraft60', 'XxEliBaconMaxxX', 'Gabri3l_Dragon66', 'Rider_Ice2019', 'XxS0nicChas3GalaxyxX',
                     'ChloeBaneRogue22', 'EpicSt3althRav3n81', 'AbigailSparkly65', 'XxSonicCod3Blizzardx',
                     'XxIsaacEch0xX2023', 'Alpha_Tiger69', 'King_G0lden2006', 'Z0eChase74', 'HazelSonic59',
                     'Gabri3lZap53', 'CrystalZ3r02010', 'AlphaPr0Eagle', 'AsherCha0s2018', 'AddisonCodeRift',
                     'MateoDancerTurbo50', 'Hyp3rJ3llyPho3nix200', 'BrooklynFlam3Star', 'XxLava_BAN3XX2002',
                     'XxP0werStarryLegendx', 'H3r0Turb02009', 'FlashMystic88', 'EllaToxic201430', 'AvaTurboHunter',
                     'AvaBaconFlick', 'PrismHeroPixel2008', 'Panda_Hero28', 'Storm_Ninja201557', 'XxRil3yChillxX98',
                     'LukeStormyWraith46YT', 'TigerThunder201324', 'HeroFlickHawk', 'JulianG0ldenStarry',
                     'XxMiaC00kiexX201228', 'LionEagl32020', 'XxLukeStealthZer0xX', 'XxCyberArrowWolfxX20',
                     'Inf3rnoGlitchMin3r', 'OliverCode32', 'AubreySkyBlaze', 'PixelSilver200281', 'MICHAEL_Duck22',
                     'MiaPulseDancer2003', 'WilliamGigaNinja31', 'Grac3DuckGh0st', 'RiderLion2004YT',
                     'PixelatedChaseShadow', 'Fusi0nFlick2003', 'SkyNeon200616', 'XxAvaCraftLavaxX2018',
                     'ScarlettGalaxyRaven', 'Mast3rPrismVort3x', 'BlizzardViper59', 'BeastOmegaHero', 'Bane_Hero2023',
                     'NeonGlitchHero', 'Xx_BlizzardDragonPho', 'Mat3oH3roPrism', 'XxDanielRiftEpicxX',
                     'MasterEpicN0va10', 'Mas0nThunder47', 'HarperPhoenixRogue52', 'IceC00kie44', 'HeroFlame201449',
                     'EchoSkaterFuryYT', 'Sparkly_ECH0201494', 'Hawk_Pix3l2016', 'DanielW0lfHyper43', 'J3llyMin3rAc3',
                     'NovaRift_YT', 'ShadowCraz3Rogu3', 'Aur0raSkaterM00n', 'BeastBacon92', 'XxNinja_StarryxX2022',
                     'EzraIce202334', 'N0vaCha0sInfern0', 'LavaCraze12', 'Eagl3SparkN30n', 'Spark_Max63',
                     'BlazeBlizzard46', 'GhostOmega68', 'ZaydenLavaViper', 'KnightStarKing', 'Sky_ALPHA2022',
                     'UltraMin3rRift', 'XxVenomJellyUltraxX2', 'MagicShadow72', 'SebastianVenom96', 'XxBeastChillxX84',
                     'XXMOON_GalaxyxX2023', 'XxHyperGalaxyxX2003', 'DuckSky200995', 'XxAsherNightKnightxX',
                     'CrazeStormyNeon2005', 'RiderGamerHero57', 'OliverZ00mShad0w2022', 'SlimeHaze25',
                     'Pix3lat3dStarryCooki', 'V0rtexRaven2013', 'XxAriaSparkMoonxX201', 'Circuit_BACON2008',
                     'MasterByte91', 'Charlott3LionPix3l', 'Gold3nMystic31', 'TurboRiftCraze2021', 'Stealth_Primal22',
                     'DragonLionEcho', 'GabrielS0nicT0xic', 'CarterLightMystic', 'XX_BaconBlizzardMine',
                     'XxHunt3rFusionxX2015', 'GraceBuilderGamer45', 'XxBuild3rTurboSparkl', 'Pix3lR0gu32013',
                     'N0raGh0st202174', 'TigerChillPixel', 'H3ro_TURBO2012', 'PulseSonicFlick', 'SparkPow3r31',
                     'AddisonRock3tTig3r20', 'GalaxyStream2011', 'PaisleyFusionOrbit_Y', 'SparklyP0werPr0',
                     'Flash_Wraith2018', 'RAVEN_Blaze47', 'Xx_Cyb3rInf3rnoOrbit', 'NeonTurboMax25',
                     'WilliamChaosGlitch55', 'XxSonicPlayzLegendxX', 'Scarl3tt_Vort3x2015Y', 'XxBrooklynnTigerSkyx',
                     'XxFlameChaseStarryxX', 'FireHawkStealth', 'MysticSab3rPuls32022', 'XxRock3tCraftxX2014',
                     'DriftFlashKing2021', 'SophiaRider79', 'OwenDawnClaw', 'Hunt3rRogu3Rock3t', 'OrbitAlphaGamer',
                     'Rav3nShadowLion', 'SamuelPrimalGamer', 'XxThunder_ZapxX2020', 'FuryMast3rCyb3r',
                     'Ow3nInf3rnoShadow68', 'XxFurySilverxX2003', 'PRISM_Bac0n2018', 'AidenBac0n45YT',
                     'Panda_Pixel2010', 'Zoom_STORM200791', 'SKY_Hawk80YT', 'IceSlimeVoid', 'GlitchFlash86',
                     'LukeVoidShadow', 'Ninja_Blizzard71', 'WyattDragonFir3', 'AubreyHyperCraze2010',
                     'DancerStreamJellyYT', 'MichaelJelly201371', 'LightGhostMin3r', 'Skat3r_Toxic2007',
                     'Rider_Turb02008', 'XxTurb0Her0xX2019', 'HenryBytePixel2004', 'XxPaisl3y_BLASTXX54',
                     'Gold3nSky2008', 'BaconByteNinja55', 'Luna_Frost201633', 'RiftBac0nHyp3r', 'Hyp3r_Gam3r96',
                     'Kayl33ClawAc3', 'MoonSparkBlast', 'DriftOmega73', 'Blad3FlickPuls3', 'WILLOW_H3ro90',
                     'PixelPulseCrystal72', 'PaisleyGhost2017_YT', 'NovaChaosChill83', 'XxPix3lDrag0nxX20216',
                     'Qu33n_Max2020', 'CrystalSlim3Drift', 'ArrowKingTurbo', 'ZeroChaosRift', 'ThunderSilver78',
                     'IsaacUltraPh03nix14', 'Xx_SavannahGhostFire', 'Fr0stHer091', 'VictoriaSaber32', 'NoahStream30',
                     'AquaHazeSkater', 'Silver_N0va200914', 'MagicLightFrost', 'ChillCraft55', 'Li0nBac0nBlizzard',
                     'WyattBacon73', 'RocketNovaLucky', 'LucasStormy31', 'XxCharl0tt3R0ck3tCra', 'FUSION_Flick2012',
                     'SkyCraftAlpha2023', 'Min3rFlam312_YT', 'Shad0w_Fire56', 'LeviHaze2006', 'EllieAceDrift2008',
                     'Dark_Pho3nix75', 'V0idSaber60', 'XxBladeStormyxX74', 'ClawV0id2006', 'BeastDriftShadow',
                     'Chl03Thund3rSab3r', 'XxSophiaMysticFuryxX', 'LaylaFlick61', 'OliverSparklyMax2023',
                     'XxPr0StarryUltraxX', 'CrystalGigaFire', 'NovaRider200361', 'GhostZ3ro63', 'VictoriaCraze44',
                     'T0xicGalaxy2018', 'MoonCrazeMiner2023', 'LunaVip3r2004', 'ZoomGamerGiga', 'GigaBaconMax202051',
                     'XxLaylaCraftxX2020', 'LavaShad0w2010', 'Thund3rN3on2003', 'ZapV0rtexChase',
                     'F0xSilverBlizzard201', 'St3althLavaMagic', 'XxRiftIcexX48', 'LuckyPrimalHaze99', 'Fire_TURBO58',
                     'Danc3rLionDragon', 'XxQueen_RiderxX2018', 'Bac0nAqua69', 'ToxicHawkDancer', 'LukeC0de95',
                     'Chlo3Alpha51', 'Flam3MagicPh03nix', 'CyberCircuit200287', 'FusionTurbo200256',
                     'XxSebastianLightBlad', 'Pix3lat3dLuckyKnight', 'XxHunter_GigaxX67', 'LightEpicHaze_YT',
                     'XXECHO_Sab3rxX2007', 'AvaFlick46', 'HarperRocketGiga2021', 'XxDarkRogu3Pix3lxX20',
                     'XxEchoRiderBuilderxX', 'Pix3lN3onRogu3', 'IsabellaBladeBac0n', 'Wraith_Circuit200475',
                     'Primal_Rocket200762', 'Infern0_Blast2014', 'JackSilv3rMystic', 'SparklyPandaFire2013',
                     'ViperSaberGalaxy', 'Jacks0nArr0wF0x', 'Z00mRiftByte', 'WolfRogu323', 'Nova_Chas310',
                     'Ash3rPix3lDrift', 'CyberMagicStream', 'FoxCrazeBane', 'BrooklynnCodePrism', 'XxShadowBytexX38',
                     'EagleVortex59', 'MysticSt0rmFlick', 'XxRav3nNinjaxX2004', 'Aria_Om3ga2021', 'H3nryH3r031',
                     'Zero_Storm12', 'XxStr3amNovaBuild3rx', 'ScarlettVenomHyper', 'XxGabrielViperDarkxX',
                     'Playz_Master201263', 'GigaRift47', 'C00kie_Master2007YT', 'XxCookieRocketxX91', 'DarkCha0s202467',
                     'CharlotteEagleStarry', 'XxLava_NeonxX2010', 'XxMagicPixelatedRide', 'Starry_VEN0M43',
                     'NovaCyberPulse2017', 'AceGolden28', 'Ow3nCooki3201259', 'RIFT_Golden2015', 'SILVER_Echo95',
                     'SebastianSlimeFusion', 'Ban3Blast78_YT', 'FlickEpicBane', 'DawnEcho202229',
                     'XxTig3rDawnRock3txX2', 'Om3gaProPanda', 'Pr0BearZer0', 'QueenAlphaMoon', 'XxPanda_B3astxX2014',
                     'Xx_UltraPix3lCrystal', 'IsabellaSkaterThunde', 'EvelynChaseDancer', 'Glitch_Prism11',
                     'NovaDarkSonic2019', 'AsherRaven68', 'Zo3RiftSpark28', 'MysticBear57', 'UltraStarry28',
                     'BUILDER_Blaze61', 'XxCyberLavaProxX', 'XxEli_Fr0stxX2010', 'Blade_Fire201677',
                     'Builder_Blaze201368', 'Samuel_Chaos2007', 'Ph0enixFlashSilver87', 'OliverOmega87',
                     'FlickMaster2009', 'AuroraB3astBlaz3', 'Fusi0nG0ldenFury', 'FuryBearStormy63', 'ProNovaDanc3r34',
                     'XxRiftSt0rmMagicxX40', 'JacksonWolfPlayz2009', 'BladeMoonArrow', 'BeastRavenGhost41',
                     'XxDanielBeastFusi0nx', 'PaisleyDarkBacon2018', 'MiaIce201112', 'Samuel_M00n2019',
                     'BlazeMaxSkater25', 'Build3rM00nNight', 'FlickInfernoStealth', 'XxPowerStealthxX2010',
                     'BladeUltraOrbit', 'BearDrift53', 'XxLiamFlashxX62', 'Skat3rHunt3r58_YT', 'ToxicShadowMagic',
                     'Xx_Chas3Inf3rnoRid3r', 'XxSavannah_Hunt3rxX7', 'Duck_Circuit201748', 'Chaos_Claw85',
                     'Gh0stPrismAce2017', 'Turb0SparklyMaster20', 'MiaFury98', 'CookieZap30', 'Eagle_Star201597',
                     'Turb0FlickG0lden2022', 'XxCookieRiftUltraxXY', 'XxClawTurb0xX2004', 'XxMagicMysticCookiex',
                     'MOON_Pixel70', 'DanielPulse14', 'Turb0ViperMax', 'CraftByte25', 'XxAddisonEchoFoxxX',
                     'MaxFlickHyper', 'OrbitFrostZoom', 'Henry_Tiger2015', 'MagicZoomShadow2017Y', 'DuckHyperNight12',
                     'Ev3lynPow3rKnight89', 'P0w3rN30nBac0n2014', 'Olivia_PRISM24', 'Jaxon_TURBO201795',
                     'MoonBlastCodeYT', 'ArrowZeroEcho2014', 'ViperHawk78', 'XxBaneHunterxX2020', 'C00kieHyper28',
                     'ThunderEchoHero27', 'XxHarperVen0mxX', 'Xx_HunterStarryDrift', 'EzraSparkPrism2004',
                     'XxZoomCodexX93', 'SparkByteZ00m', 'Cookie_Stealth201010', 'RiftOrbitStealth2018',
                     'FrostNinjaOm3ga', 'Bear_Pixelated73', 'FlameHer02004', 'XxLucas_Bl0ckxX2024', 'Craft_Infern02004',
                     'Xx_MASTERBAC0NV0RTEX', 'Gam3r_Turbo2006', 'EchoZeroChill', 'ArrowPixelated79', 'AidenMasterBane',
                     'ZapHer0Flame', 'Build3rLionGhost2014', 'Aur0raLight2008', 'PlayzDark2002', 'BlazeChill2007',
                     'XxAc3Z3r0xX', 'OliviaLavaPrism2008', 'RiftInf3rno2014', 'William_Ninja201419',
                     'V0rtex_Knight2020', 'Ghost_Venom86', 'OliviaBlizzard91', 'GabrielBlast67', 'MysticFoxRogue2002',
                     'CyberEchoDark2002', 'Bear_Turbo2020', 'XxBlaz3Hyp3rMast3rxX', 'SonicNova200928',
                     'MysticSlimeLucky', 'EzraSaberFury2017', 'Wolf_Flash53', 'GraceHazeWraith73', 'C00kieJellyCraze',
                     'Fir3Vort3xLava', 'JellyZoomMaster', 'Neon_Cyber82', 'EliArrow38', 'PixelFr0stHawk',
                     'BuilderCyberRaven200', 'ByteWraith45', 'Byt3Pix3lEcho2010', 'EmmaMaster14', 'VoidOrbit16',
                     'XxSonic_ChillxX', 'XxSonicQueenEchoxX', 'Vict0riaCraftPixelat', 'FoxCookie201460',
                     'WilliamTurb0Light200', 'Xx_AubreyDancerSpark', 'SparklyBuilderMax201', 'St3althV3nomPix3lat3',
                     'AddisonRiderClaw61', 'AidenMagic84YT', 'JaxonFlam399', 'XxLightGlitchSkaterx', 'Byt3Danc3rEpic',
                     'EchoOrbitTurbo2016', 'Xx_DanielSilverMiner', 'EthanPlayzZap', 'BeastEpic201799',
                     'ElijahStarCookie93', 'RogueHawkCookie', 'EmmaDragonShadow2018', 'V3n0m_Z00MYT',
                     'PixelatedCrystalFox2', 'XXLIAM_RiftxX2017', 'SavannahCrazeRift28', 'James_Vortex95',
                     'BeastBlastFox', 'ZoomNeon2009', 'XxLegendVoidxX2020', 'Night_Sparkly60', 'XxSamuelPrimalSonicx',
                     'UltraAceClaw', 'Haz3lPlayzEcho2003', 'Jacks0nKnightPixel20', 'LucasByte85', 'ByteHawkHero',
                     'XxZ0eJellySparklyxX', 'AsherPixelCraft2012', 'XxSilverBanexX2002', 'Ne0nMaster43',
                     'Mystic_Turbo2022', 'Flick_STEALTH32', 'StormTigerChase', 'MasterGhostQueen',
                     'XxLukeC0deArr0wxX200', 'Will0wPr010', 'JacksonFusionPulse64', 'XX_Cart3rByt3Inf3rno',
                     'Samu3lInf3rno2021', 'XxZoomDancerHyperxX', 'KingFusionProYT', 'JamesFoxClaw', 'TurboAlphaEpic',
                     'ThunderQueenRift2010', 'R0ck3tFlickCraft', 'CrystalSab3r49', 'JackRider201279', 'Storm_Lava91',
                     'HunterDancerSpark34', 'JellySonic202337', 'DriftMagic96', 'ST0RMYINFERN02010_YT', 'Mason_FLAME51',
                     'Silver_Tiger2024', 'XxHunter_TurboxX2019', 'Logan_Pixelated85', 'XxAubr3yMaxV0rt3xxX2',
                     'NinjaCircuitC0de96', 'Elli3Puls3Inf3rno', 'RogueSilverCodeYT', 'Xx_SHADOWRAVENVORTEX',
                     'PaisleyBacon2024', 'XxRid3rIc3xX50', 'HarperGlitchViper', 'MoonWraithFlick2014',
                     'XXJACK_DragonxX2012', 'HunterTurboMystic', 'EagleMysticFusi0n', 'PandaCha0s52', 'ACE_Claw2008',
                     'XxOliviaBlockMinerxX', 'Thund3rFusion201630Y', 'Hunt3rRiftGold3n', 'Turb0PlayzHyper',
                     'Scarlett_Blaze2008', 'FusionSkaterChill200', 'FurySaberStarry', 'ClawGamer201491',
                     'MysticRavenTurbo', 'RiftFusionPrism2009', 'SkyVoidSkater2013', 'QueenGigaEch0',
                     'XxSparkTurboArrowxX', 'Mason_Block12', 'Xx_Haz3lSparklyBlast', 'SonicUltraArrow',
                     'Jam3s_Drag0n2005', 'Moon_FIR32006', 'InfernoMinerSparkly', 'HawkGh0st2019', 'FireP0werFlash2010',
                     'XxAlpha_FlashxX95', 'R0cketBl0ckYT', 'XxCooki3ChillxX2003', 'Her0R0cketZ00m2020', 'EpicDarkNova',
                     'N0vaDarkMax', 'Cookie_CIRCUIT24', 'TurboBlock202499_YT', 'PrismCha0sNight', 'Dragon_Pixelated93',
                     'Liam_FLAME201798', 'XxLightTurboxX51', 'Xx_Addis0nC00kiePixe', 'CircuitQu33n77', 'ChaseRogue26',
                     'Pro_Silv3r31', 'Isab3llaStormEpic202', 'Blad3Fury17', 'BearDancer72_YT', 'XxAsherEch0xX201687',
                     'XxHarperHunterxX48', 'C0deKnight2021', 'SkaterChaosMoon', 'HannahOmegaYT', 'Void_Turbo2016',
                     'KingHeroHyper2002', 'Xx_OliviaGalaxyRav3n', 'Xx_BaconStarryStealt', 'StreamClawBeast',
                     'Haz3Mystic53', 'ArrowStarPhoenix', 'Epic_Cyber75', 'ShadowHaz32003', 'Jam3sEchoCrystal',
                     'NightByteEcho', 'Charlott3_V3nom2021', 'Glitch_CRAZ3201712', 'Isab3llaR0ck3tVip3r',
                     'ArrowTurbo30', 'St0rmyV0rtex2022YT', 'Pix3lCrystalGalaxy', 'XxShadowStormyxX2019', 'Turb0Dark62',
                     'AvaSilv3rBac0n', 'HazeChaseRogue', 'XxBlade_FirexX2016', 'Mason_Flick2006', 'GamerFr0stSlime',
                     'BuilderKingGalaxy200', 'ZeroGamerStorm', 'XxSab3rNightxX91', 'N3onByt3Puls3', 'MinerEpicBlock',
                     'LionBear78', 'JaydenPrism25', 'Sebastian_Legend63', 'OwenFusi0nF0x', 'XxMat3oDanc3rNovaxX2',
                     'StormyRiftSkyYT', 'XxL0gan_AlphaxX', 'BlastV0idChase', 'XxPr0Ph0enixN0vaxX', 'LaylaSonicAlpha',
                     'XxAm3liaB3astxX2009', 'Starry_MAGIC202225', 'XxHannahMysticxX88', 'VoidBlad3Lucky',
                     'XxAvaFlameSkyxX', 'PrimalZoomPro2005', 'AidenFireArr0w', 'XxMat3oArrowL3g3ndxX',
                     'BlastSaberArrow19', 'Eli_Fox68', 'XxJamesNovaxX202324', 'LuckyAlphaTurbo20177', 'JaxonCircuit89',
                     'UltraPix3l89', 'XxEliChaosxX2007', 'BlazeZeroAqua', 'FlickBuilderFusi0n', 'Haz3l_Crystal2006',
                     'EthanHyp3rPow3r2017', 'WyattLightSparkly200', 'Hunt3rRav3n28', 'BlastChaos201552', 'W0lfH3r017',
                     'SavannahStorm78', 'Owen_Bac0n2010', 'R0gu3_Build3r2002', 'Aqua_Rift202329', 'IsaacDrag0nF0x',
                     'FlashTiger63', 'Addison_Circuit74', 'XxAvaPrimalSkyxX2023', 'NoahMagic31', 'BlizzardSonic200376',
                     'FlameSt0rm2023', 'Elijah_Claw67', 'Pix3lat3dThund3rFox2', 'PAISLEY_Her081', 'XxOw3nQu33nxX70',
                     'CodeEpicOrbit', 'JaydenViperGalaxy', 'AuroraNinja67', 'BeastArrowMaster', 'FlickFlashPrism2005',
                     'EmmaHyp3rTig3r', 'AsherFusionPanda', 'XxPrismPr0StarryxX20', 'N0ahBlizzardV0rtex',
                     'DanielFlash2019YT', 'LiamLegendPrimal', 'XxOliv3rNovaPow3rxX', 'Hyp3r_DragonYT',
                     'AquaStreamGigaYT', 'Ph0enixStealth2006', 'ChaseBearMystic20121', 'AriaPixel201698',
                     'RiftRavenFury78', 'RiftRid3rVip3r', 'EzraSparkSlime', 'ScarlettKing53', 'JellyOmegaLucky2022',
                     'ZapBl0ckB3ast2006', 'FoxBear57YT', 'QueenRogueArrow2005Y', 'VoidRiftGiga2010',
                     'Samu3lStr3amDawnYT', 'DanielGhostTurbo10', 'EzraStar38', 'Xx_JAMESPIXELATEDZER', 'Night_H3ro2016',
                     'LukeHero75', 'HenrySparkPrism_YT', 'XxHazelPulseBytexX20', 'Samu3lCraz3Turbo',
                     'XxMichaelPulseFlamex', 'James_Flash38', 'AquaSonicFlick', 'VortexHazeDrift', 'XxVoidBearxX200627',
                     'LiamOrbit99', 'AidenTiger2005', 'Danc3rChaos200748', 'Dancer_Wraith86', 'XxSebastianCyberPlay',
                     'XxLeviPowerBlastxX', 'BlizzardHunterArrow9', 'Chill_Haze2016', 'Br00klynnAce26',
                     'N0vaViperGamer2010', 'XxAubr3yFlashBlaz3xX', 'Xx_MagicGalaxyPrimal', 'Scarl3ttDuck67',
                     'VoidBan32008', 'Craft_VENOM2020', 'Zer0AceBac0n', 'L0ganLucky2004', 'LavaSaberFr0st',
                     'XXNORA_ProxX2014', 'XxMinerBuilderPowerx', 'XxPix3lVip3rKingxX20', 'LionSpark56',
                     'XxEllie_GOLDENXX2023', 'JulianEagleGhost2009', 'ChaseRider77', 'XxAubr3yBaconFir3xX',
                     'XxLoganFrostAquaxX', 'STAR_Ac32008YT', 'ScarlettBlizzardHype', 'NeonThunderEagle',
                     'XxLightFusi0nxX2020', 'AuroraInf3rnoBlad3', 'Chl03J3llyZ3r064', 'UltraDanc3rSpark',
                     'RileyCookieShadow25', 'FusionTiger2010', 'Abigail_Slim350', 'FuryMagicFlame2024', 'GamerMaxSonic',
                     'XxVortexPlayzxX69', 'Flick_Silver2008', 'AquaEpic70', 'W0lfGalaxyBuilder', 'PowerLegendAlpha',
                     'Grayson_Flash45', 'PaisleyZapEcho', 'XxNovaRiderxX2022', 'FrostMysticPanda2004', 'Craft_Sab3r92',
                     'MinerOmegaLi0n', 'XxByteCircuitClawxX', 'LuckyStormy56', 'Victoria_Blaz363', 'LuckyLionRogu3',
                     'Sebastian_Starry95', 'V0idSaberPlayz', 'GabrielBeastByte2006', 'XxVortexStarEchoxX20',
                     'MasonGhostDancer2021', 'XxGigaGalaxyxX30', 'BaneNova202445', 'Cod3_Echo2005', 'HazelZ00m67',
                     'WyattFlashPrimal76', 'L3g3ndGigaBuild3r', 'L3vi_Giga2022', 'Xx_KnightR0gueG0lden',
                     'SkyBeast200933', 'Luk3Ic388', 'XxAlphaHawkNovaxX201', 'LukeRider201810', 'StealthFrostIce2016',
                     'Ethan_Gh0st2018', 'ShadowEagl3Circuit', 'StormDuckL3g3nd', 'shaquileoatmeal669',
                     'StealthEpicEcho2024', 'XxZaydenTurboxX42', 'Hunt3r_Chas32003', 'CharlotteLegend86',
                     'SkyHeroPanda2024YT', 'VortexEchoSparkly50', 'XxR0gueSt0rmyxX2014', 'STORM_Turbo2020',
                     'Stream_Arr0w2015', 'FusionStarSt3alth', 'PlayzChaosBlock2014', 'RileyVortexAlpha_YT',
                     'ChillShadow16', 'XxHero_TURBOXX2019', 'XxJellyDuckxX2002', 'XxGracePowerGalaxyxX',
                     'AquaBlast201736', 'SilverDancer53', 'Pr0StreamPrism', 'SebastianR0cket77', 'Danc3rMast3r2020',
                     'JamesWolfKnight', 'CircuitHer0Dancer', 'EllaC00ki32022', 'XxWolf_MysticxX2008', 'HannahV0id45',
                     'Hannah_Flash14', 'JaxonGalaxyBlast', 'Ice_ORBIT201399', 'BrooklynToxicPrism20', 'V0RTEX_Miner59',
                     'LionToxic60', 'P0werSt0rm53', 'MiaStealthBlizzard', 'MasonBladeBuilder202',
                     'PhoenixGhostDancer20', 'Owen_Slime84', 'Void_Cyber88', 'Liam_Her031', 'IsaacWraithEcho2002',
                     'Flick_Omega2012', 'XxArrowDuckxX2008', 'KnightSilverSlime87', 'Chill_SILV3R2003',
                     'NoraOrbitHyper', 'HenryZoomStarry', 'DanielSlimeStealth', 'Scarl3ttVip3rChill_Y', 'Jack_Her02016',
                     'EagleFusionPixel', 'JulianSaber32', 'WillowCyber64', 'XxSaberTurboVenomxXY', 'LoganChas32014',
                     'LionClawFlash2023', 'DawnRiftMystic2011', 'XxBaconCodexX2008', 'XxOliviaFlashLegendx',
                     'MasterFusion17', 'PaisleyLightRogue200', 'DancerPrimal2023', 'FlashUltraFusion',
                     'Br00klynEch0Galaxy20', 'RiftSonic55', 'Abigail_Starry90', 'EvelynZapStormy', 'ClawNightCookie',
                     'AlexanderFuryKnight', 'Cyb3rPix3lKing2012', 'AsherSonicGolden2005', 'Ethan_Turbo2013',
                     'ViperTurbo38', 'KnightAquaArrow2020', 'Pix3lP0w3r2010', 'Ne0nZ00mHer0', 'StarRift201968',
                     'NightStormBuild3r', 'Pr0_Haze2018', 'Henry_Jelly55', 'GlitchN0vaCrystal200', 'SparklyFlick81',
                     'SKATERACEVOID_YT', 'Daniel_SPARK81', 'XxLoganWraithxX47', 'Craze_Fire45', 'Cyb3rTig3rTurb0',
                     'CrystalPhoenix87', 'XxMichaelSkaterHawkx', 'XxEchoHeroxX11', 'HunterBacon2020',
                     'CrazeStormyRaven', 'BuilderStealthByte43', 'EchoFlick2024', 'XxAquaFusionOrbitxX',
                     'AlphaEpicByte', 'RiftPix3l82', 'Wyatt_Spark23', 'G0lden_Rider2021', 'BearSilverDawn',
                     'Pow3rZ3ro2009', 'XxBl0ck_St0rmyxX2011', 'Mas0nPlayzDawn', 'WilliamInfern02012', 'Light_BACON2010',
                     'JamesFoxLight83', 'Epic_Code2010', 'R0gueDuck84', 'Magic_Fusion11', 'SebastianPrimal20098',
                     'SparkBacon80', 'GhostStormGold3n2014', 'DriftHyp3rClaw', 'Scarlett_Ace201372', 'PlayzChillEagle',
                     'Charlott3_SPARK2019', 'ChillPuls32018', 'PandaTurboHawk', 'PulseFury52', 'Fusi0nCha0s2015',
                     'Xx_BlizzardViperFlam', 'Xx_ThunderTurb0Queen', 'StormyLucky40', 'XxGoldenClawxX2010',
                     'XX_PaisleyBuilderZoo', 'EllaJ3lly69', 'BlockHawkCrystal', 'StarStreamRogue', 'SaberAceNova',
                     'HawkF0xStealth', 'XxFlameWraithEchoxX', 'H3nryQu33nOm3ga', 'SparkGhostEchoYT',
                     'Br00klynnHawkShad0w', 'OliverZeroMoon', 'XxPrismAcePhoenixxX', 'XxPhoenixVenomRiderx',
                     'XX_Inf3rnoPho3nixFro', 'NEON_Arrow29', 'Z00mDawn2022YT', 'Silv3rLion2005', 'EpicFrost44',
                     'EvelynBlockStormy'}

local RECEIVER_LIST = {'HawkPix3l200550', 'OmegaRoguePrimalYT', 'CharlotteViperFlick', 'LiamWraith201983',
                       'C00KIE_Gamer2018', 'Gam3rFir3Flash2014', 'MoonFrostZoom', 'XxEvelynCraftxX31', 'LucasPixel52',
                       'LeviHeroArrow2009', 'XXELI_StarryxX55', 'RileyDrift33', 'ChillBuilderInferno',
                       'WillowPandaBuilder20', 'ScarlettCyberQueen57', 'EllaJellyPulse', 'Asher_Ultra201883',
                       'KingWraithHunterYT', 'JellyGalaxy46', 'LionClawProYT', 'XxHannahPlayzxX2015', 'Rid3rMin3rPix3l',
                       'Build3r_Glitch2012', 'CraftBlastInf3rno', 'HyperChaos200596', 'Blad3Rift24', 'Ava_Light16',
                       'Jax0nJellyR0gue', 'Xx_AddisonHunterCraf', 'Paisl3yDarkCraft', 'PandaC00kie201116',
                       'ShadowSky200615', 'Addis0nKnightFlash', 'ByteIce202197', 'Aqua_CHAOS49', 'XXG0LDEN_Ne0nxX2022',
                       'FlashEpic200311', 'BlizzardStarrySt3alt', 'L3viEagl3N3on', 'Dark_Turb079', 'SkyStreamPower',
                       'Mas0nOmegaFlame'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
