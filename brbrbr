-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'T0xicPixel201199', 'RILEY_Zoom89', 'PlayzBlazeJelly2009', 'JamesMiner200323',
                     'FoxNinjaBuilder20138', 'XxBlaz3_Turb0xX2005', 'XxSparkUltraxX26', 'LeviFireGamer86',
                     'SonicBan3Rock3t21_YT', 'NinjaMaxSkater90', 'Danc3rDark99', 'XxAddison_EchoxX54',
                     'DuckBlazeCrystal2011', 'Micha3lPix3lLion2004', 'Zayd3nPlayzPuls3', 'LunaGlitchPhoenix81',
                     'Ac3ToxicHawk2003', 'STEALTHGAMERFLAME_YT', 'XxMinerChillxX2003', 'Hunt3rBuild3rArr0w',
                     'XxDriftNinjaChillxX1', 'King_Gh0st65', 'JackPixelated97', 'Drift_Bear21', 'B3arNinja23',
                     'OliviaRock3tFox2021', 'Neon_TOXIC2023', 'XxLuk3NightxX2017_YT', 'Rift_Queen200561',
                     'Mason_Crystal90', 'JacksonStormChase', 'ChaosFlashGlitch', 'BlastStealthLion', 'Haz3lStarAqua',
                     'AsherWraith60', 'Al3xand3rCha0s2002', 'ChloeZoom28YT', 'L3g3ndVoidPanda', 'Lion_Stealth21',
                     'XxHarperRocketSlimex', 'AbigailBacon2004', 'Ne0nGh0stShad0w', 'LucasFlashStealth202',
                     'HazeEch0Gh0st2021', 'XxLavaPix3lH3r0xX201', 'Str3amCooki315', 'Xx_HyperViperSparkly',
                     'TurboWraithCode2011', 'Om3gaBlaz394', 'XX_SparklyBuilderWol', 'XxJack_Vip3rxX99',
                     'Galaxy_Flick29', 'Jax0nFury89', 'GalaxyFusionBlaze201', 'Silv3rHunt3rRift', 'S0NIC_C0de52',
                     'LightDragonCooki3', 'XxBrooklynPowerLionx', 'EAGLE_Frost82', 'PrismPrimalMast3r', 'EagleEch0Aqua',
                     'PulsePrimal50', 'AlexanderChaosGamer', 'EmmaGlitch39', 'JamesHer0200684', 'Pixel_Playz82',
                     'XxMichaelBearxX78', 'JacksonRiftTurbo2004', 'EchoStarFrost201563', 'XxAvaTurboxX18',
                     'XxLuckyDragonxX2022', 'Riley_Epic201246', 'Moon_Arrow26', 'LaylaTigerBear2013', 'LavaOm3gaDragon',
                     'NIGHT_Skat3r2015', 'ChloeArrow55', 'Drift_Dark88', 'GraysonFlam390', 'Bac0nPulseSlime48YT',
                     'AbigailBeast200656', 'XxJulianSkyFlamexX20', 'KnightRift71', 'N0vaArr0wSt0rm2005',
                     'HunterFlash201980', 'MasonGhost202317', 'JellyHazeLightYT', 'SCARL3TT_Sky96', 'XxJamesRiftxX2010',
                     'Zer0Ace11', 'GraysonLegendHunterY', 'HunterPhoenixHyper56', 'GhostGamerUltra2012', 'PulseChaos90',
                     'XxLegendKnightxX2019', 'WillowWolfOm3ga', 'AlphaFireBlock2013', 'XxHenryStormxX62',
                     'AsherRiftPro', 'KayleeVenomNeon2009', 'LunaCircuitPro', 'NightGold3n71', 'EpicBuilder200417',
                     'XxGlitchInf3rnoxX200', 'OliverNe0nCrystal', 'Dawn_Sparkly13', 'PulseMax2019YT', 'DuckDriftCod3',
                     'Alpha_Flame94', 'BaconOm3gaGold3n', 'XxJaxonViperxX2011', 'XxN0ahPh0enixxX75', 'HazeFire51',
                     'Jaxon_Z3ro66', 'PixelInfern0P0wer200', 'JamesHunterRocket', 'James_T0XIC2014', 'LaylaVoidPrism',
                     'Ow3nH3roCrystal22', 'DancerStormStarry202', 'GraysonStar83', 'XXTHUNDERBYTEXX88_YT',
                     'Star_DANC3R69', 'XxBlaz3Silv3rxX2012', 'XxEthanGhostSlim3xX', 'HAWKBLIZZARDGAMER_YT',
                     'PandaHyperNight2021', 'Xx_VortexSparkGlitch', 'Xx_Li0nPix3lat3dMyst', 'XxWraith_DawnxX2019',
                     'OliviaBlizzard71', 'MysticPulseStealth75', 'POWER_Skater200373', 'ChaosDuckStarry2010',
                     'TigerBaneChill', 'JackChillDark', 'Magic_Blad32015', 'HeroBlazeSlime', 'FlickPix3lat3d15',
                     'BrooklynHawkBear2013', 'GigaRogueBlizzard200', 'Haze_Fusi0n202453', 'XxAubreyZapxX19',
                     'JulianMiner99', 'Ava_Epic201962', 'SparklyFir3CraftYT', 'XxLiamSparkStormyxX2', 'NOVA_Skater51',
                     'StealthBear2003_YT', 'SparklyGiga200618', 'XxJaydenSlimexX2005', 'RocketTurboCookie',
                     'Fir3_Min3r76', 'XxIceStreamGalaxyxX', 'PrismDuck66', 'Zo3MagicRid3r_YT', 'EliKingDancer2005',
                     'AidenNinjaOmega', 'Her0Galaxy91', 'V0idCraz385', 'BEAST_R0cket74', 'Pix3lPow3rByt3',
                     'FlickBlock40', 'BlazeCrystal2019YT', 'EthanEagl3Knight2017', 'XxSavannahRid3rVoidx',
                     'SamuelBlizzardQueen2', 'HunterBac0nPlayz', 'Fury_B3AR201069', 'Luna_Inferno69', 'ClawByteWraith',
                     'XxTigerRiftxX82', 'Dani3lEagl3B3ast', 'EpicBlizzardHyp3r26', 'XxMichaelStarryxX41',
                     'Rav3nStr3amHawk', 'JellyMoonBlade2024', 'SonicStealthEagle200', 'PixelBladeClaw2002',
                     'EagleUltraFlick42', 'OrbitByt352', 'FlickRiftUltra45', 'EthanMax200353', 'TurboFlameSkater2017',
                     'XxGlitchPlayzxX2003', 'Rid3rBac0nS0nic', 'XxHunterQueenStreamx', 'XxLight_BladexX2020',
                     'Qu33nGalaxy41', 'EzraHyperStar21', 'XxNeonOmegaxX201363', 'Playz_Rav3n2008', 'XxFuryArr0wPlayzxX',
                     'XxEthan_StormxXYT', 'Samu3lBacon2002', 'GraceAlphaCraft', 'GlitchBaconAce2023',
                     'SavannahZoomMoon2011', 'Byte_Stealth201068', 'HawkStealthBacon2020', 'XxWolfNovaStr3amxX',
                     'AlphaLightStealth77', 'ROCKET_Alpha202079', 'GigaLegendBlock', 'LionStarPho3nix',
                     'AlexanderCode99', 'Vort3xDragonHyp3r200', 'Hazel_Ne0n2004', 'MichaelPixel200710',
                     'ArrowDanc3r2017', 'PowerVenom2024_YT', 'HeroNeonPower', 'Thunder_Craze81', 'Turb0Glitch200677',
                     'Silver_Pulse201720', 'Ow3nV3n0m2013', 'SonicMysticDrift', 'XxZoomNightxX12', 'NinjaNeon2022YT',
                     'Craz3N3onInf3rno', 'Logan_STAR89', 'FuryCrystalByt32005', 'BearCrazeLion', 'Bl0ckTurb032',
                     'OliverMysticGalaxy', 'PandaGalaxyHero2007', 'SKATER_Venom56', 'HarperNeonVoid93',
                     'Ril3yDawn200298', 'GigaNovaUltra86', 'FlameOmegaPro', 'RileyCha0sPlayz', 'XxScarl3ttUltraxX93',
                     'Max_Builder56', 'Ash3rNinjaShadow', 'Zoom_Z3ro70', 'OliverPrimalCode70', 'DancerDawnBuilder61',
                     'H3r0F0x93', 'LionEpic58', 'LegendRocketChaos', 'QueenFusionMiner2020', 'XxAsherEchoRoguexX20',
                     'BlizzardBacon88', 'EzraS0nicZ00m', 'BlizzardJ3llyQu33n', 'FurySilver2019', 'Rid3rSlim385',
                     'DancerBlast47', 'OrbitFusionBuilder', 'Vort3xStormCircuit', 'EagleEchoThunder', 'XxHyperBearxX73',
                     'XX_AmeliaChillStream', 'PowerStormFlameYT', 'VortexGigaViper', 'FUSION_Zap66', 'LightChill76',
                     'XxWolfHazeSkyxX', 'Puls3P0w3rGlitch', 'AbigailByteFury2020', 'GlitchGh0st201968_YT',
                     'MysticNeonBlizzard93', 'XxFuryThund3rxX56', 'Infern0W0lf51', 'Luk3HawkDanc3r', 'Ech0_Night23',
                     'XxPlayzOm3gaPix3lxX2', 'ZapPixelated200218', 'OrbitGalaxyArrow2024', 'Chlo3PrismTig3rYT',
                     'SlimeLi0nMax92', 'XxRocketCraftxX20031', 'Rift_Gam3r201151YT', 'XxInfernoLightZoomxX',
                     'OliviaEagl386', 'Xx_MoonBuilderStealt', 'BROOKLYNN_Playz20209', 'Turb0AquaGlitch',
                     'JaydenPixel76', 'LucasStreamMiner2022', 'ByteGlitchBlast', 'SparkLava81', 'Xx_WraithBaconSparkl',
                     'XxVortexDuckFrostxX', 'EchoFoxN3on', 'WilliamMoonCraft', 'DarkOm3gaPro', 'Xx_StarryP0werStealt',
                     'PhoenixPlayz45_YT', 'LukeRogue27', 'DanielTurbo97', 'XxIsaacFlickEchoxX', 'XxZoeDawnxX2002',
                     'Her0LavaFr0st2015', 'AUBR3Y_Chaos75', 'XxFrost_WolfxX2022', 'Pow3rSt3alth63',
                     'FurySt0rmyPanda2017', 'XxDarkEchoxX33', 'Zo3Ic3Echo', 'ChillInfernoBuilder2', 'BuilderZap13',
                     'BlizzardBane200745', 'XxHyper_UltraxX2004', 'XxHenryFuryCircuitxX', 'Dawn_Gamer201037',
                     'Circuit_Playz2008YT', 'XxG0ld3nNightCraftxX', 'Hyp3r_Cyb3r2007', 'Micha3lProBlast',
                     'Cha0sStream2019YT', 'PixelSilver201888', 'XxSlimePh0enixxX2003', 'Vort3xBan3Hunt3r',
                     'XxFuryBaconMoonxX', 'Ghost_Eagle70', 'Ph0enixBlade85', 'XxSophiaN3onArrowxX2', 'Fire_Prism20',
                     'MagicZ00m202130', 'RiftQueen77', 'XxMoonHawkxX10', 'BuilderLegendZap2003', 'Xx_JamesBuilderSilve',
                     'Lava_Zoom202419', 'XxAvaTurboxX2013', 'CrystalNight22', 'Scarlett_Wolf2011', 'LaylaInferno83',
                     'JackClawHaze', 'Blizzard_Sparkly2012', 'ElijahCircuit200895', 'SebastianZ00mInfern0',
                     'Pro_Jelly201946', 'S0nicGam3r2005', 'SkyDragonBuilder', 'Turb0Skater85', 'CyberTigerCode55',
                     'FusionBuilderEcho202', 'Viper_THUNDER81', 'Spark_Panda82', 'Aur0raDark38', 'AuroraHeroPrimal',
                     'XxPixelNovaDragonxX', 'Oliv3rByt3Fir32017', 'Chl0eLuckyCha0s', 'ZapRocket94',
                     'MinerPlayzKnight2019', 'Asher_Epic33', 'Xx_DANIELDANCERST0RM', 'MaxClawSlim3', 'DawnRogu32018',
                     'Lion_Echo17', 'EchoBlaze53', 'XxDragonOrbitxX2016', 'ChloePixelatedBane20', 'Eli_Build3r81',
                     'Silv3rPuls3Aqua', 'Rock3tN3onLava', 'XxGrac3Eagl3OrbitxX2', 'HawkBladeAqua',
                     'XxGamerWraithStarxX2', 'ZoomPowerPixelated20', 'CircuitMaster201612', 'XxVortexRavenxX32',
                     'LegendPrimalChase_YT', 'Scarl3tt_BLAST2005', 'NinjaWraithPulse', 'RileyBlastPanda2003',
                     'ZaydenByte65', 'XxRiftPrismxX2017', 'VortexFlick2014', 'PulseTigerVen0m', 'LuckyCyberPlayzYT',
                     'COD3_B3ast32', 'AmeliaCookieRocket20', 'N0ahSt0rmMagic', 'XxJaxonCooki3PrismxX',
                     'GOLDEN_Hawk2023YT', 'XxStealth_BladexX59', 'NoraArrow57YT', 'GamerVenomQueen2014',
                     'MaxHunterStar', 'StormyTigerBacon', 'BrooklynnStarPanda20', 'JacksonPix3lEpic', 'Skater_Tiger45',
                     'Xx_BuilderNovaSparkl', 'XxG0ld3nZ00mxX50', 'Haz3lBlad3200830', 'BlastNinjaChaos', 'EPIC_Fury26',
                     'XxRocket_AcexX201122', 'XxEpicStormyLavaxX', 'SkaterSparkHaze', 'CircuitRock3t23', 'Zayd3nDuck57',
                     'BlastFrostAqua', 'HenryGlitchNeon', 'GalaxyStealthFrost20', 'Tig3r_Ech02005', 'Eagl3Moon2005',
                     'Mate0Thunder30', 'BrooklynnGamer18', 'Elli3MagicArrow', 'XxGigaVoidxX2004YT', 'PaisleyFoxShadow',
                     'R0cketPr0Her0', 'Hero_CRYSTAL91', 'XxNeonPowerVoidxX', 'Ech0V0id13YT', 'MoonGlitch201077',
                     'IceSonicStarYT', 'SaberMagicBlast2012', 'XxCharlott3Slim3xX77', 'XxVoid_PlayzxX18',
                     'MichaelKingCode2011', 'Xx_VictoriaHyperAlph', 'LegendLionThunder201', 'MasonFlameSkater2012',
                     'XxLuckyCircuitxX68', 'LoganGold3nPuls3', 'Spark_Venom68', 'Ac3_Dawn33', 'HazelChaos77',
                     'XxBladeRavenEaglexX2', 'FuryDancerCrystal202', 'ChloeHazeCraze84', 'Sky_Flam32003',
                     'ChloeTurboStorm2002', 'EthanStormy83', 'XxAsherPixelxX201095', 'Thund3rEagl3Magic32',
                     'SebastianGhost49', 'H3r0R0gu3Hunt3r', 'ProIceCircuit2019', 'N0ahPixelZ00m2019',
                     'CircuitMasterStormy2', 'Xx_Build3rRogu3Light', 'PulseFrostStorm', 'FIRE_Wraith37',
                     'PulseAceStream', 'OwenBuilder202232', 'Sparkly_R0gue2002YT', 'XxAbigailStarxX2002',
                     'MaxHaz3Orbit', 'DanielGlitchEcho2012', 'XxFireMoonxX2024', 'Br00klyn_Alpha2012',
                     'Z00m_GLITCH2005', 'XxElijahDriftQu33nxX', 'XxJulianClawUltraxX3', 'FrostPuls3Qu33n',
                     'Prism_Rogue55', 'NoahNeonDragon', 'XxNightProSaberxX58', 'AriaWolfPixel2011',
                     'BearFr0stMaster2006', 'Golden_NOVA2012', 'SonicCooki3Spark', 'HunterLion56',
                     'XxSebastianEagleFlic', 'StormyCrystalMagic', 'L3g3nd_Primal2023', 'EmmaKnightRaven2022',
                     'MaxZ00mPrimal2012', 'LaylaBeastToxic', 'GoldenDark200940', 'XxNightRiftGhostxX', 'WillowByte65YT',
                     'St0rmFlick200443', 'WillowLegend10', 'QueenLavaChaos', 'MIA_S0nic59', 'MiaSky201488',
                     'XxLegend_RIFTXX2014', 'ChaosNeonDragon2014', 'LoganQueen200988', 'SkyChaseRift2021',
                     'NINJABANEHERO_YT', 'UltraStarry58', 'ScarlettAqua43YT', 'Prism_Craze86', 'Paisl3yStarIc3',
                     'HyperStormSonic90', 'GamerLegendShadow202', 'XxGraceChaosxX33', 'Xx_CHARLOTTERIDERTOX',
                     'XxBlazeStarxX61', 'SkyBuild3rPho3nix201', 'Claw_Hunter60', 'XxHenryEch0xX2003',
                     'Light_R0gue2020YT', 'PrismFlashHaze', 'StormToxicLava54', 'Xx_TurboStealthHyper',
                     'CarterPhoenixAqua', 'NoraHyp3r2006', 'LukeClaw67', 'MiaStormToxic2012', 'SparkFury2008_YT',
                     'XxPaisleyPrismHeroxX', 'Aid3nTurboFox', 'Grays0nLight202360', 'BlizzardOrbit69', 'ChaseRaven76',
                     'CodeNeonMax21', 'Michael_Bear31', 'BuilderTurboFury2018', 'FireMaxJelly', 'EliSilverDancer',
                     'Ven0m_Bane200396', 'Bl0ck_Cyber98', 'ZapRoguePlayz94', 'XxBlastDawnxX2008',
                     'WilliamStealthEcho57', 'SonicPrismChaos62', 'Xx_GlitchPhoenixThun', 'J3llyDrift200946',
                     'Charlott3V3nomFlash', 'EliAlphaBlock', 'DuckMoonFlick', 'XxM00nQu33nxX53', 'H3r0LavaChill2003',
                     'XxHero_MinerxX201545', 'XxIsaacSaberxX201657', 'BrooklynZ3roBlock201', 'MagicB3astBlizzard',
                     'H3roCraftBlaz32006', 'AquaClaw94', 'XxKnightHeroxX2017YT', 'XxVip3r_ArrowxX2011', 'Rav3nH3ro70',
                     'MinerStormyAlpha77', 'GigaPixelatedAce2016', 'FlashPuls3Z3ro2013', 'ZapVoidGalaxy37',
                     'Turb0CircuitThund3r', 'Vort3xB3astPro', 'LoganPowerNeon26', 'SaberCrystalEch02003',
                     'BlizzardGlitchRocket', 'XxSonic_BANEXX23', 'VoidBaneSaber2004', 'AbigailBlastToxic',
                     'XxKayleeJellyRiftxX', 'CrazeR0cket51_YT', 'WolfProMoon2018', 'Xx_AddisonGlitchWrai',
                     'JamesWolfFrost2023', 'XX_PaisleyGlitchStar', 'N3ON_V3nom96', 'XxEagle_FlickxX24',
                     'Min3rLion201629', 'BrooklynVortex93', 'ClawNinja36', 'VictoriaSparkly20243', 'HawkFlick75',
                     'V0rtexPlayzFr0st', 'Haz3lOrbitRift', 'Cyber_Hyper96', 'PrimalStreamToxic_YT',
                     'ViperToxicMystic45', 'Addis0nNe0nViper', 'GigaV0idKing2007', 'GraysonBlizzardBlast',
                     'XxLavaHeroProxX', 'Puls3LionMagic2008', 'Magic_Bac0n2008', 'PixelatedClawCraft94', 'LuckyCraz351',
                     'XxAriaBytexX86', 'EzraByteMaster2023', 'OwenDriftPro2013', 'PowerDragon201129',
                     'XxIsaacPlayzRiderxX', 'F0xUltraRider', 'XxArrowStarLightxX93', 'Zoom_Primal2010',
                     'XxAbigail_DUCKXX23', 'EthanEpic201736', 'XxMasterSparkxX42', 'XxChill_PIX3LXX57',
                     'Cha0sPulse2011', 'XxGhostPixelWraithxX', 'LukeS0nic2002', 'Ev3lynSparkly30', 'VoidProWraith',
                     'DawnMiner202125', 'XxPrismPandaLuckyxX', 'AIDEN_Ace25', 'JacksonLuckyPulse96',
                     'XxClawWolfDancerxX', 'HazelZap14', 'Ethan_SLIME2005YT', 'XxChl03DawnxX89', 'HannahUltraCircuit20',
                     'Queen_FLASH88', 'CarterZ00mLucky2010', 'Ban3Cyb3rStormy2021', 'GoldenStormy200333', 'Fire_Hero90',
                     'ZoomVortexStormy', 'Mystic_Blad3201077', 'Noah_RIFT85', 'CircuitEagleMagic201', 'LunaRiftVortex',
                     'XxVip3rZapxX2010', 'AddisonMoonB3ast', 'Pho3nix_Fox2002', 'EllieMagicDrift82', 'StarryEpicMax',
                     'ZoeCyberUltra31', 'ZapShadow72', 'StarHunt3rPow3r', 'Qu33nOrbitRift', 'Z03DuckAlpha',
                     'XxLightIcexX93', 'DUCKBEASTPHOENIX_YT', 'LucasNe0nFlame', 'Ninja_Om3ga14', 'Craze_Dancer51',
                     'CRAFT_Max91', 'Gold3nSilv3rZap', 'C0deSparkly42', 'BearSaberNinja', 'JacksonPix3lPro',
                     'BaconTig3rGhost', 'Xx_MichaelBlizzardFr', 'SonicGigaKing200427', 'AvaMaster202114',
                     'GhostCraze66', 'Ne0n_Duck91', 'CarterStarry15', 'AbigailProPrism', 'EzraInferno2004',
                     'Dani3lCraftF0x2015', 'XxCrystalStealthGhos', 'AidenGh0stFr0st', 'Xx_TOXICPHOENIXINFER',
                     'FuryFusionIce', 'Xx_AddisonBeastDrift', 'Dani3lBlad388', 'InfernoJellyUltra200', 'EagleSky33',
                     'Stream_King87', 'FUSION_Block85', 'MaxBuild3r2003', 'SparklyStealthLion', 'VENOM_Bane20',
                     'PulseCraft200932', 'BaneViperGlitch2024', 'Ph03nix_Inf3rn02010Y', 'SparklyStream23',
                     'Hyper_ZAP62', 'XxAsherOrbitxX94', 'XxMysticPlayzxX2014', 'Li0nCircuitN0va', 'XxEpicRiftxX201727',
                     'MasonFusionCooki3', 'CraftLi0nR0gu32021', 'LionByteClaw78', 'WilliamSonic2011YT',
                     'PhoenixPixelatedShad', 'Fr0stEpicClaw', 'XxRogue_WolfxX2007', 'Byt3Thund3r2013', 'NeonOrbit88YT',
                     'XxJames_AlphaxX2004', 'UltraHaze201654', 'Danc3r_Mystic202095', 'GraysonBuild3r40',
                     'XxBlad3ToxicxX2019', 'Mat3oDawn63', 'XxZeroQueenMagicxX', 'JackStormStar90', 'Byt3Rav3n2012_YT',
                     'Br00klynnZ3r031', 'NinjaZapGolden2010', 'BrooklynUltraGamer69', 'WilliamHyp3r2005',
                     'Light_CIRCUIT67', 'ArrowCrazeUltra', 'FurySaber2002', 'St0rmyPr0200475', 'UltraSparklyChill50',
                     'BuilderLightFusion80', 'Jaxon_Venom64', 'TigerAqua54', 'StarPow3r2023', 'XxChaseUltraZoomxX',
                     'NinjaRocketDrift', 'Knight_Zap200369', 'XxChloeMinerxX2002', 'InfernoCyber80',
                     'IsabellaBlastFusion2', 'EmmaEchoPro2005', 'StarryBaconRocket', 'ByteVenom201421',
                     'StarrySt3althFlash', 'WyattBeast70', 'LoganSparklyPix3l', 'EthanCraftPrimal2018',
                     'Om3gaInf3rnoHyp3r', 'Inf3rnoClawN3on', 'Miner_Shadow201021', 'QueenHunter201628', 'Tig3r_Ban333',
                     'BrooklynWolfByte', 'LukeSlime51', 'SamuelWolf53', 'Willow_Wraith60', 'PaisleyFlashStarry20',
                     'ScarlettVoidEpic', 'WillowFrostSonic2024', 'Mast3r_Li0n2021', 'Puls3_Om3ga202337', 'BearNova59',
                     'MiaByteOrbit50', 'Ultra_Haze99', 'XxBuilderToxicHunter', 'ELIJAH_Craft43', 'XxEllieSonicFusionxX',
                     'FrostEpic40', 'RiftVenom46', 'PRISM_Hawk68', 'W0LF_H3r02017', 'XxPlayzP0w3rR0ck3txX',
                     'XxHunterCrystalFlame', 'Magic_Viper93', 'MasterHazeChase2013', 'XxJackKingCodexX77',
                     'N0ahJ3lly11', 'DragonStarryEagle202', 'StarryMast3r39', 'Inf3rnoSt3althB3ar',
                     'Starry_J3lly201186', 'CrazePlayzZap56', 'FlameClawEcho', 'NightShadowB3ar2021', 'GhostChaseSaber',
                     'BaneRiftCraze2002', 'XxMateoRoguexX2011', 'Min3rClaw2024', 'XXZO3_St3althxX14', 'Toxic_Chaos2019',
                     'XxV3n0mDuckxX60', 'St3althHawkSpark', 'AuroraBlade2014', 'GalaxyCyberSparklyYT',
                     'Silv3rPrimalBlast', 'EllieUltraNight', 'SparkCyb3r74', 'Zer0Rift2023YT', 'PixelSt0rmy25',
                     'Echo_Power94', 'Ph0enixByte55', 'XxOwenGamerxX2014', 'CodeCircuitBlizzard', 'FrostSlime31',
                     'XxIsaac_GHOSTXX2014', 'XxCrystal_VoidxX30', 'XxLucasWolfSlimexX', 'WRAITH_Bacon99',
                     'ScarlettRiftKnight', 'NoahDragonFox', 'LukeGoldenVortex', 'GalaxyMax200442', 'NeonChill56',
                     'Ac3LavaH3ro2011', 'Samu3lT0xic2002', 'Logan_ROCK3T2013', 'BlazeFireBane2004', 'KnightQueen73_YT',
                     'MysticDrag0nSky', 'Fr0stPix3lat3d2018', 'MoonChill201456', 'EthanByt3Dawn2007', 'Chill_Phoenix84',
                     'SparklyAc3Light', 'WraithV0id72', 'ElijahPlayz202362', 'FusionZap200592', 'Z3roPow3rB3ast',
                     'KingHawkPrimal38', 'Pow3rSilv3rDrift', 'PlayzMagicFlash2023', 'TIG3RBLIZZARDDRIFT20',
                     'XxEvelynHawkFirexX', 'XxPlayzBytexX2023', 'XxClawNinjaOm3gaxX', 'Mat3oDriftSpark',
                     'Oliv3rDriftPanda2012', 'XXJACK_MasterxX2013Y', 'FlameSlimeEpic2007', 'SavannahDark50',
                     'LuckyRav3n14', 'XxOrbitPlayzxX76', 'KingZero202447', 'Grays0n_Turb037', 'XxLeviFrostxX2004',
                     'KayleeMysticHyper_YT', 'Fusi0n_Spark74', 'KayleeZoom90', 'Fusi0nPlayz2013', 'KayleeIceMaster52',
                     'XxMoonBeastCookiexX', 'StreamW0lfYT', 'Tig3rFury202232', 'H3nryPr02008', 'EthanGamerCraft2016',
                     'XX_FlameMasterVortex', 'SlimeProSkater', 'Ril3yVort3xYT', 'ChaosViperEcho2007', 'DanielFlick31',
                     'LeviStar35', 'Xx_Cha0sAlphaPixelat', 'Xx_ScarlettGlitchBui', 'BlizzardByt3Z3ro', 'LI0N_Aqua2011',
                     'Bl0ckHawk201716', 'VictoriaGhost2004_YT', 'ThunderWraithJelly', 'RiftShad0wSparkly44',
                     'RiderN0va2008', 'KayleeHyper95', 'T0xicCraft2016', 'DarkLegendZap2024', 'HazePixelatedNova',
                     'EliRogueRiftYT', 'Cart3r_Ech02020', 'BlockStarryVoid', 'J3llySkat3r99', 'RiderLavaShad0w',
                     'HyperWraithFury', 'Jayd3nPlayzEcho20156', 'XxPho3nixGold3nxX44', 'XxLegendInfernoxX88'}
local RECEIVER_LIST = {'DuckBlizzard202239', 'XxBaneNovaOmegaxX', 'GigaZeroClaw', 'GlitchInferno2024_YT',
                       'AquaInf3rnoStar', 'H3ro_Inf3rno51', 'BEAST_Blade2009', 'XxScarlettPrismxX80',
                       'BlazeVoidTiger26', 'CrystalStormy98_YT', 'Aur0ra_W0lf2018', 'Omega_Bane13', 'XxNoahAquaAlphaxX',
                       'AsherCookieLava2023', 'SonicAce200811', 'Ac3Block2018', 'Chl03_Panda2024',
                       'SebastianGalaxy20083', 'KingSonic200467', 'Xx_ToxicRocketThunde', 'XxPrimalInf3rnoxX94',
                       'XxHunterFusionxX56', 'PrimalZeroBlizzard', 'Drift_Builder200540', 'SamuelRiderCrystal',
                       'MasonZ3ro2009', 'JaxonSky78', 'ZeroFrostChaseYT', 'ViperTurbo73YT', 'LaylaGalaxy2003YT',
                       'VortexZoom76', 'Sky_Gam3r63', 'Circuit_Z00m2019', 'XxAl3xand3rAc3Crysta', 'Chaos_Viper12',
                       'XxPixelatedPixelTige', 'LegendDarkVen0m', 'Pix3lat3dLucky202082', 'OliviaV0idPrism',
                       'G0ldenZ00mCyber'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
