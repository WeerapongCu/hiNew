-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'XxChillNightPixelate', 'FlameSkaterBlizzard', 'NeonLuckyPrimal2019', 'Alexander_PHOENIX55',
                     'BaconPixelated80', 'InfernoMysticPower', 'GraysonVip3r2018', 'XxToxicChaosxX200328',
                     'XxJaydenPixelClawxX', 'Aid3nDanc3rChill', 'MagicLegendHunter202', 'IsaacStormyPrism2019',
                     'Xx_ZEROGOLDENCRYSTAL', 'WillowArrow2007YT', 'KnightPower70', 'CharlotteBaneSlime',
                     'ElijahEagleFlickYT', 'ToxicUltraCode', 'RiderKingOrbit41', 'AvaNeon201578',
                     'PixelatedIceBeast200', 'ZapMin3rFlam3', 'UltraHyper40', 'JamesRiderMaster39',
                     'UltraCrystal200857', 'XxLiamTurboxX73', 'MasonVort3xEcho', 'EthanLavaPix3lat3d90',
                     'Aubr3y_Blad32010', 'NeonChaos22', 'XxAidenPlayzxX2016', 'Fire_Chill2003', 'Block_Code73',
                     'OmegaBladeTurbo42', 'XxRileyNovaStarxX', 'FusionDanc3r2006', 'Am3liaGalaxy68',
                     'DarkSonicCraft2012', 'Xx_DancerPixelatedBa', 'Flick_Ban342', 'XxNoahChillQueenxX',
                     'EmmaCrazeN0va', 'XxJellyCookiexX91', 'Blaz3Chill201352', 'FlickSlime43', 'HazelPandaTurbo83',
                     'CyberRift202011', 'XX_EllieSparklyPixel', 'XxJacks0nThund3rMin3', 'LoganUltra89', 'AsherPixel51',
                     'Xx_WilliamPandaCraze', 'EvelynIce202490', 'Power_Jelly93', 'Dani3lOrbitSkat3r27',
                     'Fr0st_Lucky2003', 'AlphaSilverSaber2009', 'Jam3sGalaxyDuckYT', 'ChaseMagic63',
                     'OliverBlizzardCha0s', 'XxStealthPixelxX36', 'CraftByt3Build3r', 'HawkPixelated20',
                     'RiftUltra200788', 'FlashPhoenixBlast', 'BlizzardSkaterBlast', 'XxJackNinjaRiderxX',
                     'XxRocketNovaxX_YT', 'Paisl3yDragonYT', 'HazelGolden50', 'Build3r_Nova56', 'NinjaBl0ck73',
                     'ThunderPowerWraith20', 'Rogu3B3arSilv3r', 'XxByt3Eagl3xX2013', 'FlameBlizzard200587',
                     'PixelByte2013YT', 'PrimalLegend200595', 'FlickArrow83', 'B3astHaz3Lava', 'MaxLava201123',
                     'GamerCraze90', 'GigaCyberPixel2003', 'Luk3Tig3r2013', 'NightZapOmega2002', 'Build3rN0vaSilv3r',
                     'Aid3nHawkStar', 'Mast3r_Moon2024', 'GABRI3L_Build3r20238', 'PixelDuckStarry2005',
                     'XxHazel_GamerxX26', 'Mas0nMagicBac0n2003Y', 'XXBAC0N_BladexX20102', 'StormyStream201746',
                     'ThunderFusionSlime', 'HazePixelatedDrift74', 'ChaseGh0st2015', 'XxHarp3rFlam3xX2006',
                     'Luk3ClawYT', 'VoidProTurbo2007', 'JackSlime62', 'LavaPulsePrimal2006', 'N0ahInfern026',
                     'AriaZapHawk41', 'XxLogan_PowerxX2012', 'SkaterNinjaR0cket200', 'Ech0_Raven2016',
                     'BrooklynEchoEpic', 'XxSt0rmBuilderxX2014', 'XxZayd3nSkyFlashxXYT', 'JacksonEagleSaber61',
                     'DanielPixelFlick', 'XxSophiaGalaxyxX2024', 'HazeGhostFusion2015', 'Aurora_Night67',
                     'XxByte_PixelatedxX46', 'CookiePulse36', 'ElijahAquaFusion2004', 'BlizzardW0lfWraith20',
                     'MinerHer0Giga', 'Pix3lThund3rDrag0n_Y', 'PixelatedZer02023', 'CarterOrbit201536',
                     'OwenStealthCha0s', 'XxOmegaPixelxX86', 'Jacks0nC0de2005', 'XxSamu3lTig3rxX2019', 'AC3_Zap21',
                     'VortexGlitch28', 'ProBlastCraze2019', 'ArrowSt3althThund3r5', 'BeastP0werBuilder',
                     'Xx_ArrowPlayzStealth', 'Thund3r_King2010YT', 'FlickBladeSonic82', 'CircuitVoidFox2009',
                     'ZapPuls3Ninja', 'XxZoeMysticxX89', 'PowerEagleBear', 'XxMasonRiderxX2023', 'XxOliviaSonicSparkly',
                     'StreamFr0stGh0st', 'Xx_Pix3lat3dRock3tFl', 'LavaWolfBane', 'ScarlettVenom84', 'LucasChillRaven',
                     'S0phiaNe0nStar2012', 'XxFusionShadowOrbitx', 'StormySkater66', 'LiamSaberTiger',
                     'XxRileyAquaArrowxX', 'XxMysticCraftStarxX', 'PowerShadowRift', 'Pow3rStr3am2002',
                     'AquaFusi0nInfern0', 'Void_Arrow2010', 'Eagl3Flam3Ic3', 'Knight_Qu33n2005', 'Cart3rPix3lIc3',
                     'GraysonSparklyBlade', 'TigerDuckDrag0n', 'Star_Craft48', 'XxNovaAc3MaxxX62', 'BaneFuryDrift',
                     'Kaylee_Dragon69', 'Prism_Raven48', 'MiaIce201021', 'B3arBlad385', 'DarkL3g3ndPix3l2011',
                     'MaxSilverLight', 'MagicEpicGalaxy2016', 'FuryTigerHeroYT', 'Zayd3nBan3Ultra2007',
                     'VenomStream2011YT', 'Tiger_MOON201248', 'PLAYZ_Orbit200646', 'Scarl3ttCooki3201129',
                     'XxBuild3r_RiftxX2016', 'Pr0PrimalFusi0n', 'XxKnight_EaglexX2004', 'Rider_TIGER77',
                     'GalaxyCookiePixel68', 'Lion_Chill71', 'MasterGhostZoom2023', 'RileyLava81', 'ChillTurboSkat3r',
                     'CookieJellyMax2003', 'XxBlizzardFlamexX_YT', 'SparklyClawMaster201', 'Glitch_J3lly90',
                     'Gam3rMagicGalaxy', 'XxGamer_BACONXX91', 'DarkBlockChill', 'Craze_Golden92', 'Qu33nH3roHaz3',
                     'MasterCrazeTiger', 'PhoenixDawnSparkly', 'XxBeastSkaterDawnxX2', 'CrystalSab3rSpark202',
                     'XX_BaneCyberBlizzard', 'XX_HunterDancerRocke', 'Golden_Drift200830', 'PlayzVenom202237',
                     'Build3rUltraAlpha87', 'AuroraPandaFlash', 'XxLegend_OmegaxX2009', 'AceDawn2024YT',
                     'XxQu33nStr3amxX46', 'CookieHunterWolf', 'JaxonBuild3rShadow', 'WyattStream77', 'Byt3_Storm2004',
                     'XxGlitchToxicxX2023', 'XxInfernoBeastStormx', 'AriaPho3nix30', 'IceArr0w64', 'ChillUltra35_YT',
                     'XxBlastKingSparklyxX', 'PixelFoxCraft2015', 'PulseRiftRogue', 'XxPandaLegendxX94',
                     'ChloeSonicFlash2019', 'Zoom_B3ast201069', 'AddisonGamerBlast73', 'PowerSky202318',
                     'NightBlaz32013', 'StarryBlaze2004YT', 'BaconJ3llyBlock', 'JackAlpha201031',
                     'XxFrostByt3Thund3rxX', 'XxBaneAceBladexX', 'ROCKETNOVAHERO2021_Y', 'S0phia_St0rm25',
                     'XxMichaelCodexX2011', 'Will0wDriftBan3', 'XxJam3sFlam3xX202341', 'AbigailBlastV0id',
                     'Br00klynChill2006', 'ElijahThunderLava', 'XX_CharlotteLionGame', 'NovaWolfNight2015',
                     'SebastianZ00m200571Y', 'Gabri3lRift14', 'GabrielPixelLucky201', 'MiaSlime2007YT',
                     'Br00klynnPixel44', 'XxAddis0nF0xGalaxyxX', 'XxLiamTurb0CircuitxX', 'XxMagicDriftMysticxX',
                     'WolfGoldenPixel2013', 'PandaArrow11', 'Gam3rR0gu3Panda20141', 'XxOrbitQueenxX2020',
                     'AvaMin3rFox2021', 'XxCraftHyp3rxX_YT', 'Oliver_Blizzard20032', 'JAMES_Ace200696', 'LunaChaos59',
                     'Xx_ThunderSilverBuil', 'V0RTEX_S0nic77', 'XxH3roPow3rxX2006', 'Hyp3r_Cyb3r50', 'EllaTurb085',
                     'Rav3nGalaxy67', 'Xx_LaylaInf3rnoSt3al', 'CookieSlime201731', 'DanielViper2016YT',
                     'S0nicV0idLi0n201880', 'Li0nBl0ck2012', 'AvaChaos73', 'GabrielKingBlast', 'XxJulianAquaxX2006',
                     'XxCyb3rPandaxX2013', 'XxJacksonGoldenSlime', 'XxGalaxy_BaconxX2006', 'CraftFoxEpic54',
                     'MINERPHOENIXEAGLE_YT', 'Charl0tt3Qu33nYT', 'AriaFoxCircuit43', 'LeviPixel16', 'EthanP0werSt0rmy',
                     'CrazeGlitchMaster17', 'Blizzard_Puls32003', 'BuilderZ00m202363', 'JaydenSaber73',
                     'JulianPixelDuck2022', 'XxZaydenTigerxX2014', 'Chlo3ZapGold3n', 'J3llySt3althHunt3r',
                     'JamesVortex62', 'PrimalRid3r20', 'XxOliviaLegendxX2014', 'XxOliviaV0idxX2023',
                     'CrystalMysticEch0201', 'VoidFuryToxic', 'XxZoeFuryEchoxX', 'GigaC0de2008', 'Isab3llaMast3rMax13',
                     'XxNoahGhostFusionxX', 'GoldenToxic93', 'PhoenixEchoHyper2018', 'Xx_BrooklynThund3rEc',
                     'HannahNight35', 'BuilderSparkWolf2021', 'FuryNight200774', 'RiderChill22_YT',
                     'XxHenryClawFusionxX8', 'Pho3nixUltraTurbo', 'Echo_Thund3r2016', 'Harp3rBlad3Dawn72',
                     'Rogue_King89', 'Rift_LAVA12', 'XxTurboStormCrystalx', 'HyperThunderV0rtex', 'PlayzWraith62',
                     'JacksonB3arDuck', 'Byt3Craz3Claw2018', 'Hyp3r_Vip3r89', 'PhoenixMinerUltra202', 'Z0eHyper2023',
                     'FoxBlade10YT', 'RiderNeonPower', 'XxEthanV3nomCyb3rxX', 'SavannahNe0nF0x44',
                     'Pixelated_Pixel20077', 'ZaydenAlpha49', 'XxVoidMagicxX2022', 'ChillDrag0nDrift',
                     'RiderStealthMiner56', 'XXMAGIC_GhostxX80', 'XxEllieV0rtexxX2002', 'XxPixel_MysticxX93',
                     'Ic3DragonQu33n', 'Hunt3r_Turbo58', 'Turb0_Night200375', 'SparklyLi0n27', 'PowerRiftViper2015',
                     'AbigailBearBeast2002', 'AsherQueen200569', 'AriaMystic13', 'MichaelChillZero2005',
                     'M00N_Pixelated63', 'XxDawnVortexxX2003', 'DriftCircuitBeast', 'SonicLucky21', 'PixelBac0n24',
                     'XxLunaThunderTigerxX', 'Xx_Isab3llaVort3xIc3', 'MiaFrostPro_YT', 'BlazeStarPower2012',
                     'Ech0_Slim3200233', 'XxBlastGamerLuckyxX', 'GraysonToxic20', 'M00nPrism63YT', 'Grace_Stormy2005',
                     'CircuitZapPho3nix', 'Gam3rSpark2019', 'XxGhostStarVenomxX', 'StreamBearCraft57',
                     'PulseBeastCyber', 'V0idGlitchFlame2010', 'R0cket_Duck202094', 'XxPandaGamerxX2019YT',
                     'LucasPix3lRock3t77', 'CraftBlaz3Starry2007', 'StealthThunder76', 'Dani3lMysticSonic202',
                     'BuilderJellyZap2011', 'RileyHazePh0enix', 'BlizzardG0ld3n2007YT', 'CyberNinja200366',
                     'Xx_SAVANNAHBLAD3FROS', 'SparkSkyCraft', 'InfernoPanda202166', 'XxBrooklynSlimeThund',
                     'Br00klyn_Legend2023', 'DarkFuryPix3lat3d200', 'PulseToxic37', 'XxCha0sLi0nxX79', 'N0raStar44',
                     'QueenFuryLight2010', 'Inferno_Max88', 'XxSamuelFuryxX2005_Y', 'NoraLuckySaber',
                     'Thund3rCod3Galaxy202', 'Void_BLADE202355', 'XxJackTigerxX202231', 'Ghost_Frost91',
                     'XxHazelGlitchGalaxyx', 'NeonWraithIce_YT', 'CodeRiftZoomYT', 'GhostMysticRogue2005',
                     'Vortex_BYTE200340', 'Rogu3_King2013', 'AvaPanda202392', 'ChaseEchoAce', 'Al3xand3rStr3am94',
                     'ElijahOm3gaFlam3', 'NeonVoid202048', 'XxPowerBladeSonicxX', 'ABIGAIL_Panda55', 'Z00mStarAce2022',
                     'WraithHyperChill', 'XxLeviNeonMasterxX', 'LunaSlimeShadow', 'Flam3Ph03nixBlaz3',
                     'KingGlitch200531YT', 'TigerCyber201560', 'ChillThunderCraze', 'Br00klynnDanc3rLight',
                     'NoahLionRocket', 'XxP0werOmegaxX2005', 'DriftSkyAce', 'Br00klynPandaFlash20', 'EagleChillSonic',
                     'EthanThund3rCircuit', 'MasterHawkSkater_YT', 'ClawBlad3Sab3r', 'Gam3r_INF3RNO90',
                     'DanielBlockChillYT', 'ShadowByteEchoYT', 'FlashStealthClaw2014', 'XxRocketTurboxX2024',
                     'StormyGamer2015_YT', 'XxScarlettClawTurb0x', 'L0ganZer0M00n', 'N0vaLuckyThunder',
                     'DawnCraftStream2020', 'ToxicBlockByte51', 'S3BASTIAN_Sky2012', 'XxScarlettEchoRavenx',
                     'XxN0ahHunterxX2021', 'Danc3rToxicLava', 'SonicBan3Circuit', 'BlizzardZapSlime',
                     'LeviSparkVortex20091', 'XxJackB3arSkat3rxX20', 'EllieC00kieFire', 'JulianWolfStream',
                     'Bac0nPh0enixR0gue200', 'XxCircuitSparklyNova', 'Silv3rSlim3Primal', 'XxRocket_DRAGONXX12',
                     'DragonCircuitCrystal', 'Craft_Ultra69', 'Bacon_CRAFT2009YT', 'FusionVip3rByt3',
                     'XxLucasLionTurboxX59', 'XxSilv3rByt3L3g3ndxX', 'Zer0_Ne0n2019', 'Zayd3nMystic33',
                     'IsabellaC0deF0x', 'Arr0wClawStealth', 'XxHarperMagicxX46', 'St3althByt3Vort3x201',
                     'G0ldenPr02006', 'XxRiftJ3llyDanc3rxX4', 'XxRiftChillGoldenxX', 'LegendZeroPro2018',
                     'HannahBlockCraft88', 'ZoomBlockWolf2008', 'SparklyMagicCrystal', 'Will0w_Bear2021',
                     'OmegaEagle46', 'MoonStream55YT', 'Arr0wViperRift48', 'ArrowGhostBeastYT', 'XxNe0nAquaEch0xX',
                     'XxIsaacPhoenixEaglex', 'MysticThunder40', 'GoldenMoonStar2024', 'JaxonStarry52', 'Isaac_S0nic55',
                     'AidenOmegaCode', 'LegendNight88', 'Spark_Block201554', 'XxKnight_ArrowxX2002',
                     'TurboGoldenNight56', 'MagicPandaBeastYT', 'Z00mC00kieMaster', 'Aid3nDuck201113',
                     'Pulse_Silver200530', 'Fusion_Echo51', 'BrooklynnClawFir3', 'XxIceCyberxX75', 'FrostRid3r2002',
                     'HawkSaberPlayz2012', 'Haz3B3astBlast', 'CraftViper59', 'EthanPuls3Fir32013', 'LiamV0rtexHawk',
                     'FoxRiderJellyYT', 'XxAlphaBlazeRocketxX', 'Stealth_Ace14', 'ChaosAceJelly2014',
                     'AlexanderGhost201570', 'PandaStarPow3r2014', 'L3g3ndToxicNinja15', 'EzraEchoMaster47',
                     'JAM3S_Gam3r91', 'Xx_PlayzCrystalSaber', 'XxAlexanderVenomxXYT', 'ElijahLegendInfern0',
                     'R0ck3tRid3rFlam32023', 'SKAT3R_Chill200451', 'XxJacks0nVip3rxX2014', 'XxEllieViperStormyxX',
                     'SHAD0W_KingYT', 'GabrielDriftFire', 'StormyAqua201744', 'GraceSkater34', 'FlashStarCha0s47',
                     'OliviaLion85', 'Rider_Zer043', 'Chase_Hyper200415', 'NeonGamerPixel', 'HannahChill36',
                     'DragonSkaterBear2011', 'AcePixelatedCraze201', 'N0raOrbitMystic2004', 'BlazeSkater24',
                     'XxLucasZ3r0xX2013', 'Moon_Byte84', 'B3ar_Z3ro70', 'JaxonSab3r2024', 'ArrowWraithBear',
                     'RiftHawkFury2021', 'XxSparkly_NovaxX75', 'TurboCircuitCraft201', 'DawnN0vaDanc3r_YT',
                     'XxHaz3Slim3xX11', 'ZaydenTurboBear2005', 'FireGh0st57', 'EthanFusionGhost2002', 'GigaRogueWolf',
                     'Storm_Queen98', 'AceClaw2011_YT', 'NoahChill200480', 'Chaos_N3on2010', 'PrismEch0Saber',
                     'XxMate0_WraithxX45', 'Ph0enixBlazeTiger', 'XxGigaCodeCrystalxX', 'Rider_Panda18',
                     'FuryDancerHawk', 'B3astDark67', 'StreamHazeZap2024', 'HeroSparkNova_YT', 'FireAquaTurbo',
                     'KingG0ldenT0xic2004', 'S3bastianV3n0mFlam3', 'AquaMasterEpic_YT', 'XxZ00mHer0GalaxyxX35',
                     'Build3rWolfHawk', 'LuckyStorm91YT', 'TURBOHYP3R60_YT', 'LuckyFr0stV0id201537',
                     'SkaterChaseFlame93', 'Gam3rThund3r200464', 'XxHazelKnightxX23', 'XxRaven_CraftxX64',
                     'EpicAqua201020', 'ChaseSpark52', 'XxEchoHazeWolfxX', 'AceChaos201111', 'LukeCrazeNight2014',
                     'XxSkyMasterWolfxX', 'Cod3Gold3nFox', 'XxFlameArrowxX2014', 'ZaydenDancerFire15',
                     'Craze_Fusi0n201731', 'C00kieWraithS0nic', 'HazeDancerLava2004', 'XxLaylaBlockxX2014',
                     'Gold3n_Spark42', 'Claw_BEAR64', 'XxVictoriaTurboOm3ga', 'XxBrooklynCooki3Wolf',
                     'XX_PaisleyRiftC00kie', 'SaberProEpic79_YT', 'Gold3nFlickStarry', 'SkaterHero202366',
                     'WilliamDawnChaos2020', 'FireSkaterCrystal202', 'Turbo_Orbit23', 'XxRiftPrismDuckxX76',
                     'Bane_SPARK67', 'Gam3rNovaShadow', 'ViperMystic201135', 'TurboAc3Drift26', 'MasterR0cketBear',
                     'XxMax_PixelxX2021', 'PrimalZapN0va2010', 'Moon_Haze2003', 'ChillGamer201975',
                     'BlastKnightSkat3r200', 'XxThunderGalaxyTiger', 'RocketChill15', 'Pho3nixDuckSlim3',
                     'WRAITH_Primal2016', 'XxWillowRavenBlastxX', 'StarryDawnBlade', 'Chas3FlashSky', 'GracePixel45_YT',
                     'HazeStarryGamer', 'XxEthanFuryBytexX57', 'RiftCookieHawk', 'BaneStar202453', 'GhostLightSt3alth',
                     'Fir3Cod3Fox', 'EllaShadowToxic2006', 'Hyp3rDawn84', 'HunterChaosGalaxy201', 'OwenPhoenix69',
                     'XxLuna_HyperxX2024', 'WraithMagicWolf2023', 'SparkCyb3rEcho', 'ChaseTurb0Ultra2013',
                     'Pix3lat3dSkat3r22', 'OliviaGamer201535', 'StarB3ar67', 'Zayd3nChas3Wraith', 'LegendHer0202433',
                     'XxHazeGalaxyxX32', 'JackH3roPix3l', 'KingDawnCraze2014', 'EliKnight200742', 'XxPrismCodeFrostxX',
                     'AceDriftGamer2009', 'RiftFuryHaze', 'OrbitBladeHero2016', 'PlayzFireNeon', 'HazelJellyCraze2022',
                     'XxOliv3rWraithxX23', 'SavannahMysticDrift3', 'XxRiderDragonxX46', 'MagicEchoFury2018',
                     'HeroBlade68', 'LuckyPulseCode', 'CraftFlash2013YT', 'EagleBaneLava38', 'AddisonViper2010',
                     'Dani3l_Mast3r2010', 'XxRileyPulseProxX', 'J3llyOrbit10YT', 'LeviGigaHawk2002',
                     'JaydenCircuitVortex8', 'Hyp3rSilv3r200277', 'JaxonFlamePlayz', 'PrismR0gueDawn',
                     'UltraMagicGlitch2024', 'XxPixelLi0nxX79', 'Starry_ACE43', 'StarSkater80', 'BUILDER_Chill2012YT',
                     'Nora_Lucky24', 'Toxic_WRAITH72', 'XxHannahL3g3ndEchoxX', 'RiderBladeShad0w2003', 'SparkPlayzByt3',
                     'IsabellaCyberSlime68', 'XxGrace_GlitchxX2024', 'RileyN0va2023', 'BlastFireUltra2007',
                     'XxOrbit_SkaterxX59', 'Mason_V3NOM2004', 'GhostQueenLegend2020', 'LuckyH3roEchoYT',
                     'OliverUltraClaw', 'XxHaz3lKnightxX54', 'CrystalNova2011', 'LukeMoonPowerYT', 'ZoeOmegaFox2010',
                     'XxW0lfBeastxX31YT', 'StarAqua83_YT', 'LuckySilverPixel56', 'Pixel_Beast53',
                     'BrooklynnHunt3r2012Y', 'LightC00kieP0wer2023', 'PIX3LAT3D_Ban32012', 'EliSkaterPower',
                     'StarryCodeFox', 'GalaxyPh03nixArr0w', 'GamerSaberToxic', 'AceHyperBlizzard44',
                     'BlizzardCrazeLava', 'GoldenFlick2024_YT', 'StreamClaw11', 'Saber_Playz52', 'ZoeIceFire2009',
                     'XxToxicBuilderMinerx', 'LionFlickBlade', 'Jam3sSlim332', 'Addis0nClawWraith',
                     'XxEzraDarkR0guexX202', 'CodeFlashRift', 'Ril3yStr3amSab3r', 'CraftV0rtex2015',
                     'ZapBeastLegend2013', 'XxFrostFlameVortexxX', 'SonicChillOrbit2010', 'XxHazelLuckyxX71',
                     'Build3rH3r075', 'BrooklynnDrift54', 'XxByt3Hyp3rArr0wxX', 'XXRAVEN_BearxX2019',
                     'XxF0xN0vaBlastxX', 'AidenR0gue90', 'EzraR0gue2011', 'SparkFuryLight81', 'FlashGiga200293',
                     'XxBearStarryJellyxX', 'VortexRiftMiner58', 'GalaxyBeastShadow66', 'V0rtex_Ne0n2016',
                     'BLADETURBODANCER2004', 'KnightV0rtexEch02015', 'XxNoahBlizzardTurbox', 'OmegaAceZapYT',
                     'AUBREY_Cyber46', 'AuroraArrowAc3', 'Xx_TURBOSPARKLYHUNT3', 'Saber_Magic49', 'LoganSkaterZero',
                     'XxJulianEch0xX65', 'EpicBlazeRift2013', 'CookieKnight201551', 'Z3r0CraftPix3l',
                     'PandaPix3lL3g3nd2004', 'Xx_Al3xand3rMoonTurb', 'Xx_FUSIONSTORMYROCKE', 'Xx_SavannahEchoGlitc',
                     'Aid3nCrystalWraith20', 'Lucky_Primal2010YT', 'Isaac_Pixel73', 'Craft_Night200264YT',
                     'Starry_Blaze26', 'BAC0N_Builder70', 'XxDawnZ00mG0ldenxX', 'XxWillowStreamPixelx',
                     'FlickCrystalF0x', 'EllaBlade99', 'Sebastian_Thunder67', 'PlayzCraftFlick15', 'Danc3r_OM3GA64',
                     'Zayden_Zer02019', 'MysticMoon200465', 'Xx_HunterCookieLight', 'Xx_PANDABUILD3RT0XIC',
                     'H3r0Li0nStr3am2017', 'FireLegend2004_YT', 'Jam3sGhostSky', 'LucasB3astPanda2016', 'Zoe_GHOST22',
                     'HannahDancerRift2008', 'FoxCrystal2011YT', 'ChaseSkater201797', 'XxNoahRiderxX29',
                     'MinerSlimePanda2018', 'Xx_MichaelGalaxyClaw', 'JellyHunter2024_YT', 'PrismRocketFox62',
                     'ChaosRiderClaw2018', 'Craz3BaconThund3r', 'Pix3lat3dCyb3rFlam3', 'NinjaSilverM00n',
                     'KayleeJellyGalaxy200', 'MiaSparkVoid', 'CRAZ3_Ac32008', 'ChloeChaseHyper', 'Cooki3Flam3Star',
                     'AquaFrost201980', 'ZapPixelRogue2007', 'BlockInfernoCookie', 'XxLightCircuitWolfxX',
                     'Pulse_Zero62', 'LavaArrowFire2002', 'Hyp3r_Build3r79', 'Wyatt_COOKIE32', 'Li0nOmega18',
                     'Xx_Pix3lL3g3ndCrysta', 'Sky_STARRY201868', 'HannahZeroSparkly82', 'DarkC00ki358',
                     'Harp3rPlayzBac0n', 'AddisonCrystalHyper', 'Fire_Bane83', 'Viper_PRO69', 'ZoomFoxMagic_YT',
                     'CircuitChas3Om3ga200', 'BACON_Cyb3r45', 'R0cketAlpha2011_YT', 'FireHunterEagle2014',
                     'Fr0stV0id69', 'DawnMast3r201323', 'ZapTigerEcho', 'ALPHA_Tiger80', 'SparkDarkGh0st',
                     'Slime_Turbo2015', 'Turb0_Bac0n30', 'Grace_Her010', 'HyperOrbit47', 'Luna_Blade73', 'Ow3n_Turbo86',
                     'PixelatedJelly89', 'RileyStormy200486', 'ScarlettCrazeP0wer', 'CraftTurboGolden',
                     'XxZoomCookieHeroxX', 'KingRav3nJ3lly', 'ZoeFlashQueen2019', 'Hazel_Alpha54', 'RogueStarClaw2021',
                     'AIDENCOOKIE200795_YT', 'Max_Saber55', 'HyperLionUltra2017', 'HyperLavaSky2009',
                     'SavannahBlad3F0x27', 'Riley_Tiger2006', 'SparklyMystic201429', 'Eagl3Pro22', 'Craft_Bac0n2020',
                     'CarterLegend201463', 'Block_Pixel30', 'SamuelAqua88', 'Jax0nNinjaRider2013', 'Logan_J3LLY200541',
                     'BeastDawnCode75', 'StormyDancerVoid2013', 'RocketPrimalEagle85', 'Bacon_Haz32011',
                     'Thund3rSparkFusion', 'LightWolfLucky', 'FuryPixel15YT', 'OwenG0lden201053', 'Will0wOmega201588',
                     'FusionToxicFox60', 'XxThund3rDriftxX98', 'BlizzardNinjaCraze', 'FuryNovaFox2005',
                     'XxKayleeTigerxX2014', 'SavannahCodeDrift202', 'DancerOrbit23', 'V0rt3x_N0va201198',
                     'PlayzZ3r0Prism', 'XxLightUltraxX201118', 'JulianShadowVip3r201', 'FrostClaw2009YT',
                     'PrimalJellySlime24', 'XxByte_CodexX2004', 'AIDENEAGLELIGHT_YT', 'MiaMoonAqua2002',
                     'XxStormRiftCraftxX', 'CrazeGalaxy99', 'Elli3Shad0w2015', 'ZoeSlime2006YT', 'ZoeMysticSilver',
                     'XxBuilderStealthMine', 'AidenDancerThunder', 'Infern0DarkOmega', 'Ril3ySt0rmy201932',
                     'DancerBlockKing2010Y', 'Xx_Pow3rPix3lat3dByt', 'Xx_EchoThund3rDragon', 'Hunt3rBan372',
                     'Ril3yDark31', 'DuckOmegaPrimal2019', 'StreamAqua82', 'FlickTurb0Duck', 'Phoenix_Toxic21',
                     'MaxDawnZoom', 'PULSE_Nova2006', 'BladeJelly28', 'Cart3rBlast91', 'XxChaos_EchoxX200718',
                     'Vict0riaBl0ckTurb020', 'XxNinjaStormyDragonx', 'SkaterInfernoBlock20', 'LionJelly55',
                     'XxZoe_BlockxX2024', 'V0rtexDancerMystic', 'AlphaZoom58', 'XxFuryGhostFoxxX'}
local RECEIVER_LIST = {'XxHenry_CodexX2020', 'NoraNight200472', 'QueenThunderDancer', 'BlockBladeHunter56',
                       'PrimalMagicF0x', 'Mystic_Duck201677YT', 'RIFT_H3ro89', 'Skater_Frost19', 'Xx_ScarlettInfernoMo',
                       'EpicFlameUltra54', 'XxStormHawkZoomxX', 'BlastZapCyber2021', 'Zer0MinerBlaze',
                       'Xx_OrbitStormyKnight', 'BuilderVenom66', 'ChaseStormyPowerYT', 'ArrowCodeOrbit2007',
                       'WraithMaxGlitch13', 'B3arVort3xH3ro2013', 'JackEagleDuck', 'XxInferno_ArrowxX200',
                       'XxFireBl0ckDuckxX201', 'LightViperNight85', 'FusionPix3l200468', 'SilverFr0stFury',
                       'LucasStarryOrbit2004', 'SkyChaosInferno2005', 'KingSt3alth2012YT', 'XxRiftVenomxX2021YT',
                       'AddisonIceShadowYT', 'SebastianV0idW0lf', 'ElijahStormyRock3t79', 'PrimalAquaC0de',
                       'RiftSkat3rStorm', 'Hunt3rStr3amB3ar24', 'Build3rNightRogu3', 'OliverThunder11',
                       'NinjaDancer96YT', 'GraceMysticOmega78', 'DarkRock3tMagic', 'XxScarlettDarkPrimal',
                       'PrimalP0wer2008'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
