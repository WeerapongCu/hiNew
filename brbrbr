-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'XxElijah_QueenxX2008', 'EllieWolfSparkly2017', 'N0raLuckyPulse', 'WolfHyper2021_YT',
                     'FLAM3_B3ast200741', 'XxGhost_SilverxX2010', 'Pow3rRav3nLion', 'N0ahLava2019',
                     'XxInfernoArrowxX14', 'Xx_AlphaStreamShad0w', 'XxChill_DriftxX2008', 'BlazeGolden65',
                     'NeonToxicHunter2002', 'FuryStarryBlizzard', 'XxMagicPrismPlayzxX8', 'Hyper_Haze30',
                     'VIPERORBIT2006_YT', 'Gamer_Haze81', 'EllaBladePrism', 'AddisonCircuitNight2',
                     'XxBrooklyn_CRAFTXX33', 'ProEpicWolf90', 'Ban3_Sky57', 'AquaArrow40', 'XxBeastSlimexX30',
                     'N0vaCyber39', 'XxMasterWolfxX201171', 'HazeRiderOrbit86', 'Xx_OrbitPixelatedGig',
                     'XxPlayzRogu3xX2017_Y', 'ZoeZeroPanda47', 'PrimalFlashChase2007', 'XXDRIFT_PhoenixxX91',
                     'ThunderUltraGh0st', 'XxFrostLegendBuilder', 'St3althStr3am40', 'XxEpicRiderxX_YT',
                     'PrimalShadow97', 'Savannah_Cyb3r2007', 'PaisleyMaster19', 'BlizzardNe0n2017', 'Cart3rHaz3Spark',
                     'PrimalAlphaCod3', 'Henry_Ice62', 'OwenMaster201310', 'XxByteDarkProxX', 'LoganNeonPixelated',
                     'RIDER_St0rm21', 'BlockBlizzardTiger43', 'Xx_HazelStealthHunte', 'Build3rStormyFlam3',
                     'N3onVip3r29', 'TurboCrazeZap2004YT', 'V3nomH3roKnight2005', 'SparkMin3rHaz3', 'PixelGalaxyNe0n15',
                     'SparklyMasterLegend2', 'XxDriftFlashWolfxX', 'Knight_Golden70', 'StarryFlash201018',
                     'MagicSilverDuck2018', 'XxChloeDriftBanexX', 'Br00klynnPix3lDark20', 'Mystic_Blast79',
                     'XxFury_PixelxX2009', 'LegendNinjaThunder', 'HarperKingBeast2008', 'Xx_Jacks0nT0xicCyber',
                     'XxChaseSonicxX2007', 'ByteOrbit88YT', 'Shadow_Pulse89', 'XxBuild3rWraithC0d3x', 'NightHyper79',
                     'MichaelMaster53', 'BearVenomPixel96', 'WilliamClawDawn2018', 'T0xicFir32007',
                     'XxCarterStreamxX93', 'GlitchEchoPower20224', 'N3onPlayzLava2006', 'ARROW_Hawk61YT',
                     'HawkLuckyHer0', 'LegendDrag0nMiner', 'NoahRocket201895', 'XxUltra_F0xxX201964', 'P0werLightPlayz',
                     'BlizzardVip3rTurbo59', 'Hannah_Venom98', 'Orbit_Stream44', 'XxSilverToxicxX2017',
                     'XxLegendFirexX13', 'AddisonSonicGolden20', 'TigerFusion2005', 'H3roGigaToxic67',
                     'St0rmyCircuit2024', 'Dawn_Epic62', 'Her0_Hawk69', 'F0xUltra2014', 'FireBaconKing13',
                     'JamesRider202260', 'XxAm3liaZ3roBlastxX', 'XxFlam3OrbitVip3rxX', 'FusionSparkChaos',
                     'Aqua_H3ro2021', 'XxF0xLi0nBearxX', 'FlashPandaVortex', 'L0ganBear2010', 'Pr0Jelly2002',
                     'G0ldenSilverP0wer', 'Rogue_Echo47', 'XxByt3CraftDuckxX202', 'EthanJ3llyGam3r70', 'PIX3L_Claw29',
                     'XxNinjaNeonxX201946', 'Min3rDawnSonic', 'ZeroBaconPhoenix', 'EthanSilverDuck2010',
                     'XxRiftHunterxX58', 'XxPuls3ToxicEchoxX', 'Michael_Blade201824', 'Chloe_Ultra78', 'N30nT0xic2023',
                     'XxLukeInfern0Hunterx', 'N0vaGalaxy49', 'Xx_Addis0nThund3rPul', 'Emma_Storm60', 'LeviV0idLi0n',
                     'AsherFusion57', 'Xx_HawkSilv3rSparkly', 'CraftHeroPrism2024', 'PrismZ3roFox2011', 'Ow3nGhost56',
                     'Eagle_Blade2011', 'St0rmy_NIGHT69', 'XxChaosLavaSparklyxX', 'XxSavannahEpicHunter',
                     'S0nicAlphaDawn2019', 'N0ahRider2020', 'MiaBlazeSt0rmy', 'ScarlettBeastShadow',
                     'ChillT0xicArr0w_YT', 'SamuelMaxFrost2002', 'RavenRocket16', 'MaxNight56', 'FusionNova59',
                     'BlastZapAlpha', 'MichaelViper32', 'AquaSt0rm202220', 'FlickStealthPanda', 'XxCyberPulseRavenxX7',
                     'BlizzardGlitchSlime', 'Ic3Sab3r17', 'R0GUE_Queen2018', 'XxHarperOmegaxX31', 'Elli3St3althDanc3r',
                     'AlphaV0idDrag0n_YT', 'XxB3arZ00mxX200493', 'Turb0V0rtexAlpha2002', 'XxNovaPhoenixFusionx',
                     'ZapInf3rnoL3g3nd2009', 'H3roKingCyb3r', 'Pix3lat3dIc32017', 'Pixelated_CRAFT46',
                     'F0xRaven2011_YT', 'SparkStreamPrism', 'EthanCod3Vort3x2012', 'ProBlizzardClaw20063',
                     'Vip3rAquaPix3l2015', 'SILVER_Bl0ck2007', 'FlickVoidMax2023', 'GraceDuckBlade2008',
                     'FusionKnight16', 'EzraNovaDrift2005', 'LuckyEpic86YT', 'FlameG0ldenFusi0n', 'XxMicha3lJ3llyxX94',
                     'XxMagicMinerxX2020', 'MinerBuilder2004YT', 'InfernoZeroFox2017', 'Fir3_Cyb3r2012',
                     'SkaterT0xicCyber', 'Grays0nClaw41', 'St0rmyBuilderFire', 'Ow3nLuckyTurb0', 'Zap_SHADOW200595',
                     'HAZE_Toxic45', 'Raven_Flick50', 'ZaydenRocketFrost201', 'XxAid3nEpicxX21', 'PixelCodeAce2016',
                     'StormEcho201277', 'Mast3rDriftFlash2003', 'Starry_Blast71YT', 'Block_NINJA2023', 'SparkV0id2018',
                     'XxN0ahMinerxX2002', 'Jacks0nMax2014', 'Xx_Br00klynnG0ldenHa', 'Ow3n_GOLD3N2015',
                     'Bacon_Puls32005', 'XxHazelClawAcexX', 'StormKingPixel29', 'SparkQu33nChill20092',
                     'SophiaVip3rPlayz2004', 'Pix3lPuls395', 'MasterPixelated20168', 'EllaFlam32003',
                     'ViperLightBlock2022', 'Rock3t_Craz3201454', 'IcePrimalChill', 'BUILDER_King201186',
                     'XxWilliamFlashxX62', 'BrooklynnDawnHawk', 'Li0nGlitchHawk', 'LunaCrazeBlizzard202',
                     'SavannahBan315', 'RocketSkaterPanda', 'XxChaos_ToxicxX2005', 'LavaDriftRocket2017',
                     'Cha0sHer045YT', 'DanielBear201955', 'EmmaHaz3Orbit', 'V0rtex_Skater2005', 'XxJack_BlastxX2003',
                     'XxTurb0SkaterxX93', 'Flick_Sparkly2014', 'Jelly_Moon61', 'Cooki3SparkBlaz32017',
                     'PrismWolfPrimal86', 'AddisonCodeDuck2020', 'PANDA_Glitch202356', 'FrostGalaxyByte',
                     'M00nHyp3rMystic74', 'ChillMaster65_YT', 'FireStealth57', 'KnightSkaterZero', 'XxMaxCircuitxX34',
                     'Addis0nNe0nBlade', 'NightG0lden90', 'Alpha_Haz323', 'XxAsh3rBuild3rStormy', 'CodeFlick50',
                     'Bl0ckDuckHawk2002', 'Hunt3rEchoFrost2011', 'Tig3rBuild3rSonic', 'AubreyBaneDuck56', 'Li0nSt0rm95',
                     'S0nicZ00mFlash', 'MaxDriftBuild3r', 'NovaFlash202288', 'LucasBane92', 'OmegaEagleViper37',
                     'XxChaosArrowxX36', 'HunterHazeStealth200', 'DuckHazeDawn2013', 'Hunter_LUCKY40YT',
                     'XxHyperTigerxX66', 'XxBlaze_MoonxX2015', 'MoonPulseShadow2016', 'EpicStealth67',
                     'BaconViperBeast', 'LeviWraithStorm2014Y', 'Z00M_Blaz32003', 'XxPlayzRiftxX2018',
                     'XxHyp3rLionGalaxyxX', 'ShadowJelly200547', 'Hyp3rBuild3rHaz3', 'FireDawn83', 'DriftSparkShadowYT',
                     'SparklyCookieSonic20', 'ZoomTigerDrift', 'OrbitTurbo20_YT', 'PixelVortexViper2023',
                     'MaxBlaz32005', 'Prism_Sparkly62', 'Byt3Pow3rArrow2018', 'AriaDriftChaos73', 'XxArrowBaneSkyxX',
                     'GhostOm3ga83', 'EmmaPixelatedGlitchY', 'ElijahStormy86', 'ClawArr0w2005', 'PlayzBlazeSilver2015',
                     'LoganQu33nZ3ro2021', 'PandaUltra71', 'XxOliverFlamexX88', 'EpicPlayzVip3r', 'MagicBeastStealth',
                     'XxAqua_LIONXX200641', 'Echo_Pro94', 'BrooklynClawNight200', 'EllaStealthDark2014',
                     'BLAST_Slime31', 'RavenShad0w201482', 'Fusi0n_Slim32019', 'St0rmZer0Crystal', 'GamerC00kiePanda57',
                     'RiftPow3r22', 'Hero_Ultra28', 'Xx_BrooklynnArrowPla', 'Alexander_T0xic85', 'THUNDER_Shadow2018YT',
                     'ToxicCraft202098', 'Fir3Pix3lTurbo2014', 'HazelIceBeast2006', 'Golden_HAZE67', 'MysticGold3n59',
                     'MoonMin3r2022', 'WolfViperCraft2016', 'XxLevi_ZoomxXYT', 'S3bastianGigaBan329',
                     'Ash3rBlad3Fr0st48', 'SilverByteSonic2018', 'Rider_Fr0st2020', 'STORMY_Cyber201223',
                     'Ow3n_Light45', 'PIX3LSILV3R53_YT', 'DuckMasterAlpha2012', 'FuryDrift21', 'Str3amBan3Aqua2021',
                     'JackArr0wZ3r0', 'OliverNinjaPixel59', 'Ezra_B3ast42', 'Skat3rFlickLucky', 'XxPho3nix_ZoomxX84',
                     'OliverPlayz200390', 'GlitchHunterThunder2', 'Slime_Orbit2007YT', 'BrooklynnDawn77_YT',
                     'XxHarperDragonxX2015', 'XxRileyWraithxX68', 'LionChaosEagle2024', 'St0rmySparkly93',
                     'LionSab3r2024', 'Elli3Build3r51YT', 'EmmaDarkC00kie', 'XxPro_LuckyxX2019', 'XxPandaIceChillxX',
                     'XxZ0e_FR0STXX2012', 'FireSkaterShadow', 'FlameWolfInferno2016', 'RiftPrimalFusi0n2011',
                     'LuckyFlick89', 'H3nryRav3n67', 'VortexViperChaos2007', 'GraysonProChaos', 'SaberM00nGalaxy',
                     'Vict0riaFire29', 'OmegaGamerVortex2014', 'Hyp3rInf3rnoRift', 'XxLukeCookiexX2011', 'Drift_Fire67',
                     'LightStarryFlick61', 'AbigailSt0rmC00kie', 'StarUltra201884', 'Mia_GH0ST2020',
                     'XxSavannah_JellyxX55', 'XxRiftSparklyxX39', 'JackWolfZoom', 'RiderBuilder54YT',
                     'XxEllaDuckxX2022', 'ViperFr0st82', 'FoxNeon2005YT', 'XxSilv3rSab3rxX38', 'Blad3_Fox93',
                     'XxSophiaBlizzardBlas', 'PulseV0id89', 'XxDarkBlockBearxX', 'Br00klynnSparkRav3n2',
                     'MagicLavaEch0', 'MagicW0lfGh0st', 'XxPaisleyChillLuckyx', 'DriftStormy201850',
                     'TurboSonicChill49', 'Mate0BaneMystic29', 'GalaxyFir3Drift', 'Flam3SonicThund3r201', 'FoxCode32',
                     'Xx_Scarl3ttBlaz3L3g3', 'XxZoom_LightxX2019', 'HunterAquaMagic2014', 'Li0nEch0Stealth58',
                     'QueenCodeSparkly', 'L3g3ndSkat3r2018', 'XxPowerRiftShadowxX', 'ChillEchoVenom2002',
                     'Silv3rFir3Wraith', 'H3r0DarkRift', 'XxBearKnightxX2011', 'TurboPrismMaster2012',
                     'XxDarkUltraStealthxX', 'HenryBacon2024', 'ToxicRock3t51', 'N0raKnightNinja', 'MysticBacon29',
                     'ZapBanePrimalYT', 'Savannah_Master51', 'GlitchBeastTurbo92', 'Zayden_Ace29',
                     'XxHunter_TigerxX2003', 'XxCrazeHunterxX67YT', 'BlizzardT0xic2015', 'DawnSlim3Bacon',
                     'EmmaV3n0m2010', 'ClawMagicDragon_YT', 'DancerFireGamer', 'SparklyViperEch0', 'BeastStormy201360',
                     'AriaC0d3Knight2017', 'XxAubrey_MoonxX2022', 'MasonThund3r2003', 'MiaMaxSpark',
                     'SparkBearOmega2023', 'Pix3l_Chill2012', 'KnightPow3rOrbit', 'HeroSkater202126YT',
                     'Rid3rAc32013_YT', 'XxSparklyPrimalMaste', 'NoraFlickCraft', 'EpicThunder200953',
                     'ChaosSparklyH3ro2014', 'PhoenixGhost200567', 'HeroSparklyDragon202', 'XxHaz3lBlastByt3xX',
                     'JackBlockDancer2023', 'LavaDuckMagic', 'XxMasterSparkArr0wxX', 'KnightStarDuck',
                     'Shad0wAquaSt0rm', 'RiftCookieAqua2022', 'ToxicLegendMystic201', 'BearFlickHazeYT',
                     'JacksonWolfEcho_YT', 'PlayzDawnEcho', 'XxLunaVenomBuilderxX', 'XxSebastianLionxX11',
                     'DarkGlitchPanda2009', 'Harp3rFlam3Vort3x200', 'DriftDancerRider2013', 'CODEKNIGHTVIPER17_YT',
                     'Mas0nCyberClaw', 'XxLuna_WolfxX2017', 'AbigailV0idPanda', 'AuroraPow3rGlitch', 'GraysonByte96',
                     'ByteMasterSilver2011', 'Z0eGamer31', 'V0rt3xKingZ3r0', 'LegendW0lf2009', 'JellyStarryLight2019',
                     'XxJames_ZeroxXYT', 'StreamSlime86', 'XxDawnBlazeHawkxX201', 'XxGraceR0gueEaglexX',
                     'Xx_DragonFusionHyper', 'UltraBlizzardHawk20', 'HazeInfernoCookie202', 'LukePixel81',
                     'Stormy_Zero66', 'XxUltraPrismxX2024', 'Ril3ySparkToxic', 'ByteUltraZap2003', 'Lucas_FLAME78',
                     'XXSLIME_SkyxX2019', 'Ph0enix_Pulse85', 'OliverPh0enixM00n', 'XxR0gu3St0rmyHunt3rx',
                     'KingZeroPower2005', 'S3bastianCooki3Rid3r', 'Gam3rUltraCod3', 'PrismGh0st2019', 'NE0N_Blade2011',
                     'EliV3nomGalaxy', 'KINGPIXELBYTE_YT', 'BlockShadowFury', 'LavaV0rtex2008', 'GlitchTurboGhost2014',
                     'XxAuroraPandaAlphaxX', 'XxPrismInfernoxX2003', 'AriaBladeByte', 'XxCircuitBlastCookie',
                     'EagleChaos28', 'ClawPrism201551_YT', 'EthanBaconBlast', 'Fr0stEpicPrimal', 'FlameDuckFr0st28',
                     'HeroRift57', 'FuryLionNova2005', 'Stormy_Hunter23', 'XxFrostOm3gaxX2015', 'KayleeStarClaw79',
                     'XxBlastBl0ckxX_YT', 'XxMateo_BlastxX2004', 'WraithFuryChas3', 'ThunderTurb0Spark202',
                     'Arrow_L3g3nd2016', 'NoraCircuitPhoenix20', 'GalaxyHawkP0w3r2014', 'XxDawnShadowSilv3rxX',
                     'ChloeUltraFire2010', 'DarkDancerAlpha89', 'Xx_FlashDrag0nInfern', 'Storm_Blizzard201596',
                     'Xx_EvelynMagicWraith', 'StarryWraithJelly200', 'Ic3_Storm65', 'EthanOm3ga2009',
                     'StormyBladeSlime2005', 'HawkTigerInfern0', 'AvaStorm2011YT', 'Primal_Light97', 'AcePixelated99',
                     'Mas0nBac0n2023', 'XxShadowStormBytexX', 'BladePandaSilver', 'Chlo3GlitchFir3',
                     'Arr0wSparkly201173', 'XxIsaacSt0rmxX68', 'DarkRiftFusion201936', 'Infern0Queen201259_Y',
                     'XxCircuitPix3lxX78', 'BlastChaseFlame', 'Alexander_Vortex53', 'ClawBlizzard30',
                     'EagleSlimeDragon_YT', 'Oliver_Beast14', 'N3onB3arZap', 'R0cketStreamHer0', 'XxMichaelS0nicxX69',
                     'FusionHunterEpic', 'MagicVoid92', 'XxJelly_FlashxX39', 'EZRA_M00n11', 'Scarl3ttMystic2019',
                     'PandaByte202296', 'XxGam3rV0rt3xxX2013', 'B3arIc3Stormy', 'XxViperChillKingxX', 'GigaChaos80',
                     'JaxonGlitch71', 'SparklyZer02002', 'XxRavenBanexX200392', 'XxCrazeEchoxX2015',
                     'Xx_BlizzardMasterN0v', 'SparklyLavaFrost', 'MasterZeroArrow', 'XxCraft_STR3AMXX2019',
                     'AlexanderBearInfern0', 'Ac3LuckyBuild3r_YT', 'Amelia_Builder90', 'XxFlash_FlickxX2014',
                     'AceMystic60', 'Skat3rCod32004', 'FuryBlastRaven2016', 'XxC00kiePrimalDriftx', 'Henry_Drift201157',
                     'XxCircuit_SkyxX2011', 'XxSophia_Min3rxX2007', 'EvelynAquaOrbit', 'XxFusi0nCyb3rxX2019',
                     'StarHeroRift77', 'FoxVip3rZoom', 'XxLightLavaStormxX', 'EpicVort3x200285', 'Harp3rEchoDrift',
                     'Cart3r_Turbo2023', 'DanielHyperKing79', 'AmeliaZeroPanda', 'Blaz3H3ro95', 'B3arSparklyH3ro',
                     'LionB3arLight56', 'XxJulianDawnEaglexX', 'FuryCircuit89', 'FlashHunt3rRogu3', 'Ech0_Slim32006',
                     'Ultra_ARR0W201139', 'HeroQueen74', 'Alpha_J3LLY2023', 'DanielNinja202062', 'BuilderDancer202247',
                     'Xx_EvelynViperCookie', 'XXTIGER_FlashxXYT', 'EchoSonic201433', 'Her0Flash37', 'Ech0FlickFire2009',
                     'XxIsaacHawkxX61_YT', 'XxJamesLi0nxX2007', 'XxCart3rByt3xX2012', 'NightSt3alth51', 'FlickBeast64',
                     'XxPix3lFlashSkat3rxX', 'Xx_Aur0raStealthPrim', 'DancerStorm89', 'Zo3Toxic67_YT',
                     'CrazeRider200288', 'GraysonBlast200965', 'Bac0nSky97', 'FoxWraith201047', 'RavenFlash201019',
                     'Luke_Blaze40', 'BlastSab3r202318', 'HERO_Zap96', 'NoraKnight63', 'Cooki3StarSt3alth200',
                     'RILEYRIFT40_YT', 'XxEli_STORMYXX2014', 'LucasPulseC00kie', 'Ech0PixelBuilder83',
                     'Blaz3W0lfPrimal20141', 'LionFireBuilder2023', 'XxDawn_LionxX79', 'XxFire_FlashxX2009',
                     'OliverPh0enix49YT', 'Ph03nixQu33n89YT', 'FusionIc3Dawn2024', 'WillowEchoByte2006',
                     'OwenHawkViper', 'CodeAce202145', 'UltraBuilder61', 'CarterProCode', 'PixelFrostFire68',
                     'Xx_BuilderLi0nStream', 'LUKE_Fire16', 'Eagl3H3r02002', 'XxGraysonProDragonxX', 'Fusion_Turbo2016',
                     'XxOmegaLionBytexX', 'XxJam3sFlashDriftxX2', 'Byt3V3nomOrbit', 'HeroProMagic', 'MagicBlockFlame22',
                     'NoahViperMagic', 'LeviPlayzEcho2012', 'XxAmeliaFusionRavenx', 'ArrowPrism202095',
                     'XxFlick_LUCKYXX2005Y', 'OliverAquaBeast', 'Cha0s_Dawn2022', 'XxLuk3_C00ki3xX2022',
                     'Rav3nCooki32012', 'StealthSt0rm55', 'NoraStream84', 'DriftFire83', 'HazeBlast27',
                     'VoidHunterGlitch25', 'XxSparkBuilderBlastx', 'XxMoonEpicxX27', 'PLAYZ_Max2003',
                     'XxNovaThunderxX2003', 'GoldenStealthFlick', 'HazeSkyTurbo39', 'Hannah_Dark42', 'FURY_Haze80',
                     'Gh0stRav3nCrystal_YT', 'XxScarl3ttTurboxX202', 'EpicVort3x18', 'XxBuilderCrystalxX58',
                     'XxBuild3rZapLavaxX', 'XxLukeLuckyxX12', 'Xx_RileyShadowGalaxy', 'Drag0nPh0enixMaster',
                     'AlphaCrazeMystic', 'HarperToxicAlpha', 'XxMagicCyb3rxX2009', 'AriaMast3rShadow',
                     'Charlott3_Ultra94', 'XxNoahGoldenDragonxX', 'GabrielCyberWolf2023', 'Rid3rWraithBlad32015',
                     'Xx_SilverInfernoBliz', 'EliHunt3rGh0st', 'Hyper_Sonic202480', 'ChaseSparkStream',
                     'Jackson_Fire72YT', 'GalaxyNovaSt3alth', 'Ace_Hero76', 'Am3liaInf3rnoToxic', 'DanielBac0nFlick',
                     'BUILDER_Toxic202384', 'DragonPixelNight', 'NinjaSab3r2004', 'Flick_Nova97', 'XxGiga_StreamxX2009',
                     'T0xic_Skater30', 'STARRY_Rift200815', 'Turb0Byt3Mystic2008', 'XxJaxonDancerxX99',
                     'EllaMaster201673', 'Dani3lStarEpic', 'StormyBlockPulse53', 'XxRiftInfernoxX86',
                     'MOON_Tiger201028', 'MiaRaven44', 'L3g3ndFir3Arr0w', 'KayleeOrbitPanda', 'MateoBeastMiner',
                     'BlastZapFr0st2013', 'BlockMaxClaw', 'Her0_Cyber29', 'XxChaseRiftSaberxX', 'VenomMoonLuckyYT',
                     'HyperPr0Flick', 'HunterNovaCraze2003', 'THUNDER_Alpha61YT', 'XxStormInf3rnoxX2012',
                     'CarterGamer202312', 'Panda_Stealth200440', 'Xx_BrooklynnNinjaFox', 'XxGrac3Pix3lat3dMaxx',
                     'Ev3lynAc3Ninja2022', 'B3arH3roIc362', 'Slim3_Chill2007', 'MysticOrbitAce2009',
                     'HeroSkater2010_YT', 'Zer0Ven0m2010', 'KingChaos2017_YT', 'Xx_TigerCyberSparkly', 'Gh0stDancerPr0',
                     'ECH0_Hyp3r2021', 'Xx_GABRIELNIGHTCRYST', 'Shad0wZapPanda202063', 'XxAddisonByteLavaxX',
                     'ZeroJellyFlame', 'Grac3B3arMystic2008', 'KingStormViper', 'ORBIT_Mystic47', 'XxL0ganHunterBanexX',
                     'ShadowToxicMaster', 'EzraRocket81', 'EliBladeSky', 'AbigailV0idGh0st', 'RocketEagleStormy',
                     'Pr0BlizzardChill', 'SebastianBlizzardGho', 'C00kie_Cyber59', 'Giga_Rift35',
                     'Xx_Scarl3ttGam3rBaco', 'XxCyberHeroBaconxX', 'Li0nHunt3rYT', 'Mystic_Rider37',
                     'Samu3lToxicHawk2016', 'SparkP0w3rBlad3', 'PandaBaconBeast2023Y', 'W0lf_Flam32003',
                     'FuryByteBear2009', 'GhostFuryZap', 'Duck_Pixelated200337', 'FlickIc32007', 'Arrow_RAV3N2023',
                     'SilverRocketBlaze201', 'LoganCodeRider2023', 'ZapIceHero21', 'Frost_Tiger2017',
                     'HunterProPanda201131', 'XxPixelBlockxX82', 'SilverStormyStealth', 'XxEli_PIXELXX18',
                     'Flick_Blizzard90', 'PrismH3roBuild3r', 'MagicKing200447', 'OwenBane31', 'EpicTigerZer0',
                     'Aid3nStr3amPuls382', 'PAISL3Y_Ghost2017', 'PandaBlazeSkater', 'ZapStormyMast3r',
                     'ElijahShad0w200339', 'EmmaMaxV0id', 'Crystal_Pow3r96', 'StormPrimalChaos2017',
                     'HarperLightDuck2016', 'BuilderBlockAlpha', 'XxJacksonHunterStarx', 'Rav3n_Danc3r2004',
                     'Luke_Aqua2020', 'RocketQueenGalaxy', 'Xx_OliviaGalaxyDanc3', 'AceDarkBlock64', 'Byt3Z3roBlock',
                     'XXNOVA_GlitchxX2021', 'HawkSaber200345', 'NovaHunterBacon2012', 'Light_R0gue2013', 'FoxMaxVoid91',
                     'Alexander_Epic98', 'CraftKingStar12', 'Aid3nWraithIc3', 'XxSonicFoxStealthxX2', 'BlizzardH3ro63',
                     'DancerGigaGh0st', 'ZoeSonicPixelated', 'EzraTigerSt0rmy', 'V0rt3xRift2015', 'Fox_SPARKLY200247',
                     'EvelynEagleBuilder94', 'AvaStarrySaber2019', 'BeastMinerBlast2002', 'XxN0vaTurb0T0xicxX',
                     'Fusion_SLIME2009', 'ArrowSlim352', 'Sophia_Ghost50', 'H3roKingNova', 'FuryRocket21',
                     'DuckPrimalW0lf2014', 'HannahUltraGamerYT', 'XxW0lfV0idZer0xX2009', 'CrazeGalaxyLava',
                     'Sky_Sparkly46', 'Micha3lBuild3rPho3ni', 'VenomCodeBear2020', 'P0wer_Sky53', 'GabrielEpicDark',
                     'LucasGamerPrism2016', 'DARK_Fusion64YT', 'Drag0nBlazeLegend200', 'XxShad0w_HawkxX83',
                     'XxSamuelOrbitOmegaxX', 'PhoenixWraith24', 'PlayzDarkBane', 'FrostSparklyWraith20',
                     'XxThunderNeonSkyxX20', 'JacksonAce87', 'GoldenGamerMiner', 'XXLUCAS_PowerxX2017', 'EllaPho3nix19',
                     'VictoriaPrismStarry2', 'R0gueFury73', 'FireCircuitNova2017', 'Str3am_Rock3tYT', 'FoxEcho39',
                     'Xx_Fir3Danc3rBuild3r', 'MiaEch02009_YT', 'XxV0rtexFlashxX2003', 'PixelZ00m87',
                     'ZapStormStream2021', 'XxInfernoFoxLionxX', 'Dani3lLion2011', 'DRAGON_Fire202245', 'QueenFury58',
                     'AvaSlime200286', 'XxVictoriaGoldenxXYT', 'Luk3Chill54'}
local RECEIVER_LIST = {'WilliamSlimeVortex20', 'AmeliaDarkCircuit91', 'EthanBlizzardPulseYT', 'St3althGam3r2006',
                       'AbigailBear68', 'DanielZer0Drift', 'XxDawnTig3rLionxX', 'XxGabriel_EchoxX86', 'RiderCodeAlpha',
                       'ASHER_Bacon2005', 'Ev3lynB3astEagl3', 'NoraBaconFire', 'Fusi0nDancer13', 'FireSlimeNight_YT',
                       'H3roFrost36', 'V0idFlash72', 'SparklyGigaTurbo28', 'Cha0sOmegaM00n', 'RocketGalaxyLegend20',
                       'IceCraftMaster', 'XxZoeSkyTurboxX', 'StarArrowCrazeYT', 'LightLavaRift10', 'LegendTurbo79',
                       'JamesMoonDark2012', 'R0cketMagic2014', 'XxEagleTurboGalaxyxX', 'B3ar_Hunt3r2017',
                       'SilverGolden47', 'NoahDrift21', 'XxChaosPrimalMaxxX', 'KnightGalaxy2012YT',
                       'PlayzFusionCraft2003', 'HunterPixelChase2016', 'C0de_Epic2008', 'Paisl3y_Thund3r48',
                       'XxWolfGalaxyxX2014', 'XxHazeMagicZoomxX201', 'XxJelly_GigaxX96', 'EllieVortexMystic200'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
