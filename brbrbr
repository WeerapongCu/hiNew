-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'ZaydenGamer200842', 'XxWill0wRavenR0cketx', 'Xx_InfernoBaneLegend', 'Toxic_Blaze202269',
                     'SkaterKingVoid', 'XxStormyCraftxX2020', 'XxPlayz_AquaxX2011', 'XxGrace_ToxicxX2015',
                     'BeastSkater51', 'Mas0nIc3YT', 'NoraHero48', 'ZapVoidDark95YT', 'XxSophiaZeroVenomxX',
                     'FlickBuilder56', 'XxViperHyperFlamexX', 'BaneFusi0nJelly2013', 'XxBaneStreamxX89',
                     'Magic_Inferno2012', 'Circuit_Vort3x62', 'ScarlettAquaLucky201', 'MichaelCraze46_YT',
                     'BrooklynnSlim3Fir3', 'SavannahChillKing201', 'CrystalBlast202140', 'EliNeon19', 'Fusi0nTurb092',
                     'SaberSpark201621', 'VortexVoidPixel2019', 'Elli3CraftPro', 'LunaSonicPrism2022',
                     'Vort3x_BUILD3R2024', 'XxBuilderShad0wxXYT', 'HunterBladeGlitch21', 'XxFrostRavenStormxX',
                     'EzraIceWolf', 'XxJamesRocketxX33YT', 'LukeCode2015', 'Chas3ZapCrystal2005', 'HeroRogueInferno15',
                     'Br00klyn_Orbit2004', 'Fusion_St3alth2020', 'Xx_ROCKETPOWERWRAITH', 'Xx_SonicWraithStormy',
                     'BeastPulseZap2021', 'Ech0_EAGLE48', 'JacksonStormDanc3r', 'LuckyZapWolf73', 'XxBear_StormxX88',
                     'XxAbigailBlaz3Sonicx', 'Craz3_King64', 'XxViperByteHawkxX', 'Ava_Hero90', 'XxRiftRogueTurboxX89',
                     'EllaPulse70', 'Pix3lEcho39', 'Jayden_OMEGA200335', 'Z0eKingBac0n37', 'HarperTurbo93',
                     'Giga_Drift2023', 'LightBaconFire', 'SparklyCodePanda', 'XxSophiaJ3llyPho3nix', 'AquaSt0rmy202482',
                     'Silv3r_Pow3r95', 'StormyPandaPower2018', 'TigerHer0Magic', 'ChaseMagicShadow2023',
                     'MAT30_Ac32013', 'Ech0St0rmRift2019_YT', 'XxCha0sChillLavaxX20', 'Haz3Eagl3Frost2002',
                     'L0ganC00kie73', 'DancerBeast70', 'Flam3Nova75', 'LaylaV3n0mPr0', 'Haz3T0xicCraft',
                     'Flam3_Rid3r201049', 'StarPower201747', 'BeastSaberChillYT', 'Craz3Rogu3Ban3',
                     'PlayzBuilderStreamYT', 'Ac3Z3r0Panda', 'XxJulianRavenFrostxX', 'Cod3Stormy93', 'Br00klynAce61',
                     'GlitchCraz374', 'Sab3rStarStarry', 'VortexDuckBeast99', 'WraithFlashBlizzard2',
                     'StormyRavenDawn2011', 'C00kieDark80', 'ZaydenStormyStarry20', 'XxBaconHunterChaosxX',
                     'Silv3rCrystalL3g3nd2', 'C00ki3Thund3r12', 'FireChillSilver2022', 'Xx_ScarlettEpicKnigh',
                     'FoxPixelSlime', 'Jam3sZ3r0Fir3', 'SPARKLY_Skater18', 'Ace_Cyber31', 'JamesNovaUltra35',
                     'XxChillCircuitxX91', 'FlickChill92', 'XxJaydenCraftxX_YT', 'Zer0Pr0Playz', 'WilliamFire202068',
                     'GhostLuckyPrism2016', 'RiftAc348', 'Dawn_C00kie41', 'Xx_DanielG0ldenPlayz', 'Gh0stGlitchPrimal',
                     'CodeSlimeBane37', 'Fusi0n_Shad0w2011', 'Ow3nL3g3nd200253', 'ECHOBYTE200443_YT', 'LavaFrostSilv3r',
                     'StormyCyberViper62', 'XxLogan_NinjaxXYT', 'BaconPulse77', 'Puls3_L3G3ND2012',
                     'MasterPandaBlaze2018', 'DragonThunderTiger', 'Ultra_FLICK2018', 'UltraVoidBlizzard',
                     'PhoenixRaven202326', 'NoahJ3llyEcho', 'FLAMELUCKYLAVA_YT', 'PowerNinjaStarryYT',
                     'Xx_SparklyFlickTurb0', 'XxScarlettDawnxX2012', 'EzraFlashMystic', 'Ethan_Fusion87',
                     'Tig3rLionStarry', 'Sky_Thund3r46', 'FrostMoonOmega200743', 'R0CKET_Drag0nYT',
                     'GoldenEchoRocket2013', 'XxAddis0nBytexX36', 'Arr0wDrift2005', 'Cart3rCraz3Gam3r',
                     'WraithPixelPro', 'Ice_MINER201919', 'Rav3nL3g3ndRid3r', 'CrystalGlitchEpic201', 'UltraZ3ro2019',
                     'XxPrismQueenCircuitx', 'XxWraithHeroAquaxX', 'XXPULS3_DuckxX12', 'LucasAce200698',
                     'Jayd3nTig3r2022', 'XxHaze_PixelxX2019', 'DanielNinja200554', 'GoldenPrism200523', 'B3arFir3Rav3n',
                     'ChaseEagleZero', 'Harp3r_B3ar2006', 'XxProOmegaxX89YT', 'Rav3nWolfCyb3r2016', 'VortexPrism28',
                     'XxBan3_BlastxX2024', 'XxDani3lV3n0mxX2009', 'Silver_Claw95YT', 'Chas3Cooki32021',
                     'StreamHawkStar2006', 'UltraPixel200479', 'KnightHer0Silver75_Y', 'B3astBuild3r93',
                     'SlimeSparkZero', 'MoonInfernoStarry', 'Xx_HannahMasterMiner', 'P0WER_F0x2009',
                     'EchoCyberAqua201518', 'Jayd3nSab3rWraith17', 'RavenSilver202087', 'XxJ3llyDriftMysticxX',
                     'XxHunterSonicRoguexX', 'Ellie_Blast27', 'Byt3Blizzard2014', 'TurboDancerChaosYT',
                     'Legend_CYBER201862', 'Rift_Echo200648', 'Build3r_Eagl32003', 'StealthEpicFox', 'LunaPhoenixLucky',
                     'OliverSt0rmy12', 'BrooklynnDancer20197', 'WillowSonicSlime2018', 'XxVoidDarkxX83',
                     'SparkGhostViper', 'XxChillBuild3rGlitch', 'Arr0wNe0nLucky', 'Harp3rLavaByt3', 'FlickPix3l98',
                     'Turb0PixelatedBuilde', 'JaxonToxicClaw2013', 'V0rtexEpic54', 'GamerSparkly2009_YT',
                     'Paisl3yRock3tByt3', 'XxRavenEagleCyberxX2', 'B3arSparklyGalaxy', 'XxGraceFlashxX2005',
                     'BlockSab3r2013', 'Rav3nPrimalBlast', 'Zoom_FURY2002', 'Xx_AlexanderBlockDan', 'Mate0Drag0nFlick',
                     'XXPLAYZ_OrbitxX2024', 'ZeroNinjaIce', 'XxFusionPixelatedZoo', 'XxChas3C0d3xX33',
                     'StarryStormyQueen', 'PaisleyShadowGamer', 'MasonGiga87', 'HannahSt0rmT0xic', 'GigaMagic99',
                     'GraysonByteTurbo43', 'FuryBlaz3Eagl32019', 'EthanMaster201195', 'LightQueen200750',
                     'ZAYDENDARKTHUNDER_YT', 'SonicEchoMast3r', 'XXHYPER_M00nxXYT', 'AubreyChaosStealth',
                     'QueenTigerDuck', 'XxCraftAcexX200663', 'OmegaStormyInferno20', 'Fusion_Cod32010',
                     'Mystic_Gh0st30', 'KingMagicRider32', 'BaneUltra67_YT', 'XxDuckStealthxX20096', 'R0gueF0x2023',
                     'SonicTigerBlast2018', 'Vort3xVoid28', 'VIPER_Lava2024', 'Cyber_Flash2017', 'Eli_Inf3rn02017',
                     'XxMateoPandaxX2020', 'DriftHeroWraith91', 'DawnUltraStorm', 'XxWolf_LuckyxX64',
                     'TigerJellyCraft2016', 'BlazeRocketInferno55', 'Paisl3yLi0n87', 'Nora_Dark79',
                     'PaisleyChillSlime201', 'Ech0OmegaPanda', 'StormSlim3Chill', 'XxRiderSparklyxX76',
                     'Drift_W0lf2002', 'DarkChaos200729', 'QueenArr0wSaber', 'Xx_MiaBladePixelated',
                     'HazelWolfPrism2002', 'Fury_Primal52', 'Blaz3Fir3Shadow', 'S0phiaThunderR0cket4', 'NovaZ3roFox',
                     'RiftSlimeFuryYT', 'CrazeGhost79_YT', 'SparkVenom202165', 'WraithGhostHero', 'CrazeEchoFire',
                     'ChillOmega38', 'Mystic_DANCER200810', 'GlitchKing2021YT', 'Vip3r_Orbit201859', 'LoganBlaze200685',
                     'Ash3r_Fusion83', 'XxShadowFrostxX2022', 'Xx_DanielFusionArrow', 'Ril3yChas3Crystal75',
                     'WilliamLionMoon2017', 'XxWilliamRoguexX80', 'Infern0G0ldenDancer2', 'FoxMiner47',
                     'GhostDanc3rCod3', 'LoganAceNeon', 'WyattAlphaToxic31', 'FlickLightTurb02015', 'AquaGigaEpic',
                     'Haz3Bac0nPix3l2007', 'SophiaBlastBlade79', 'GabrielFox55YT', 'XxLegend_EaglexX2022',
                     'SebastianAceGamer69', 'XxThunderEaglexX56', 'ChaosStarryEcho2024', 'VictoriaLightNova',
                     'OwenArr0w99', 'XxClawNinjaxX_YT', 'Lava_Saber66', 'IsabellaPrismLucky20', 'F0xGamerKing2007',
                     'OmegaMinerSlime2014', 'RiderInfern02019', 'HunterBear2008YT', 'HazelRaven86', 'EzraNovaNinja62',
                     'Xx_RogueCrystalGamer', 'CarterEchoFrost_YT', 'XxZ3roLavaxX2022', 'LavaStarMin3r2012',
                     'XxStar_BladexX2015', 'XxEpicUltraxX2011', 'RileyN0va200560', 'BladeBlaze39', 'TurboHawkDawn2010',
                     'Ow3nInf3rnoHawk', 'EMMA_Omega60', 'SkaterHyperBear20031', 'JackQueenCyber2014', 'GlitchBlaz32018',
                     'Xx_BlizzardStarArrow', 'XXDANIEL_QueenxX14', 'CrazeFireCraft', 'FlickTurbo70',
                     'Xx_EvelynCrazeSilver', 'Tig3rEpic2021', 'Aur0ra_BAN32005', 'AriaRavenBlast2024',
                     'PrimalToxicRogu3', 'BlockGoldenFlash17', 'UltraNova201343', 'Zoom_NIGHT2015', 'MagicZapSparkly24',
                     'PlayzSkyFrost', 'Ash3rRogu3Starry2019', 'XxSavannahVortexSoni', 'NightRiftFury200860',
                     'XXGIGA_MaxxX2012', 'DawnShad0w2020_YT', 'XxRiderFlamexX40', 'XxAiden_St0rmxX2019',
                     'XxFlashMinerStealthx', 'TigerPulseToxic24', 'ChaosEagl3Flash', 'XxTigerDancerxX20046',
                     'WillowSonic200324', 'FlameDarkCookie77', 'LucasBlade82', 'LightHyper200856',
                     'HarperPlayzBuilder65', 'CircuitChillPix3l202', 'RileyPlayzJelly', 'StormyRid3r39',
                     'InfernoHyper59YT', 'IceZ00mDark', 'CyberMoonGolden', 'SamuelIce98', 'Inf3rno_N3ON13',
                     'H3nryKing200438', 'UltraLuckyBlast2005', 'CookiePixel93', 'XxFlickOmegaxX11', 'OliverFlickFury',
                     'XxFlameStealthMystic', 'MaxLegendInferno', 'XxOmegaBlockInfernox', 'XxSparkCyb3rAlphaxX',
                     'MaxMysticShadow', 'Grays0nR0gueTiger', 'ChaosMoonPhoenixYT', 'ShadowTig3r79', 'Moon_Builder75',
                     'JacksonMast3rFlash20', 'JaxonZero16', 'Ril3yStarryFir3', 'XxIceLuckyAcexX',
                     'Xx_CarterFlickStealt', 'StarNightRider2017', 'XxDanc3rJ3llyDragonx', 'LionThund3rDragon202',
                     'DriftCrystalPhoenix2', 'DriftByteFlick', 'XxFir3Pix3lGhostxX', 'BladeDancerCyber',
                     'SamuelArrowHaze', 'FrostZap200286', 'VortexZoomMystic25YT', 'CyberDarkGlitchYT',
                     'XxFlickFireGigaxX', 'ZoeFlickBlaze2007', 'FuryFlameFox33', 'HannahFlameSlime2019',
                     'GalaxyRider2003_YT', 'Pho3nixZap41', 'WolfFury95', 'Alpha_Silver83', 'Fusi0nKnightMystic93',
                     'KnightHer0Builder', 'XxBuilderSkaterFrost', 'ElliePrismSpark64', 'XxBuilderRocketToxic',
                     'Grac3MaxPanda', 'ToxicBlock75', 'M00nSparklyPixel19', 'MaxSonicStarry2007', 'VoidDragonFusion_YT',
                     'EpicMiner2003_YT', 'Fusi0nS0nicN0va', 'EliAc3Bl0ck', 'StealthNovaSilver200', 'XxBlastGigaxX2017',
                     'ThunderMinerCyber', 'XxWillowEchoShadowxX', 'HarperTiger28', 'Stealth_King60', 'Frost_Moon54',
                     'Vort3xRock3tBacon', 'XxFir3LionPrismxX', 'LegendRaven84_YT', 'JacksonDragonHyper20',
                     'XxEmma_LightxX2009', 'Code_Hunter201670', 'Puls3_Thund3r2023', 'Skat3rStormy31',
                     'MoonChillFlick10', 'Aid3nN0vaV0rt3x', 'Fusion_H3ro71', 'DancerMaster86', 'XxLi0nV0rtexSaberxX2',
                     'FUSI0N_Ninja89', 'EzraPhoenixLionYT', 'Xx_NinjaViperThunder', 'AcePrism84', 'OliviaSonic77',
                     'GigaTig3r200610', 'Hannah_P0wer2009', 'Rogu3Rock3t2008', 'FoxOrbitHawk', 'SamuelCircuitHyper59',
                     'RileyThunder87', 'XxPixel_PhoenixxX37', 'GraysonTig3rJ3lly', 'EthanVoid71', 'ZeroGoldenStealth',
                     'TigerDuckHyper', 'DRIFTZOOM87_YT', 'ElijahDawnByt3', 'OliverKnightPrimal53',
                     'XxIsaacLegendxX20137', 'ElijahDragon48', 'SonicPixelated15', 'ViperFlameAce2002',
                     'Cart3rThund3r42', 'MoonFrostFlick2019', 'CrystalNova44', 'StarPlayzPhoenix2008',
                     'XxHer0_Infern0xX51', 'WolfEagleMoon42', 'Pixel_Arr0w2004', 'LukeCrystalChaos2023',
                     'PrismRocketBuilder65', 'AceMaster2007_YT', 'SlimeDragonPlayzYT', 'XxPix3l_ArrowxX20195',
                     'NoahRiftHyperYT', 'Isaac_Flash74', 'HazelC00kie2003', 'XxWill0wCraftxX2020',
                     'TigerJellyDrag0n_YT', 'GraceV0idFire2008', 'ZAYDEN_Flame201064', 'CHAOS_Fire200238',
                     'ISAAC_Flame93', 'ClawZ00mLava2010', 'XxDuckDawnSonicxX', 'IsaacRift201359', 'Neon_Turbo97',
                     'BaconNinja2024YT', 'XxHarp3rFir3xX2023', 'PhoenixLavaAqua', 'St0rmy_P0wer44',
                     'XxDragonTurboStealth', 'Vip3rDarkStar67', 'MiaLuckyBeast2023', 'XxNe0nCraftxX_YT',
                     'XxBuild3rTurboNovaxX', 'Kayl33LionWraith', 'XxLucasRocketDuckxX2', 'BYT3_Fir32019',
                     'XxDawnHeroxX13', 'Builder_Alpha201929', 'TurboGam3rOm3ga', 'DriftQueenRaven93',
                     'XxFlashAquaPrimalxX', 'XxMinerSlimexX82', 'PlayzSparkKnight', 'EthanMysticBacon2019',
                     'PandaWolfH3ro', 'Ril3yPrism2009', 'AriaMasterBlaze', 'Chlo3_Fir32012', 'XxHarp3rZ3roxX53',
                     'ArrowTurboRift2014', 'OliviaEpic68', 'BlastLegendPhoenix', 'ChillRider201516',
                     'XxPanda_C00KI3XX2003', 'Blaz3PlayzRav3n', 'Rock3t_Z3ro2009', 'Byt3Cyb3r2002', 'AriaGlitch17',
                     'FOX_Fusion82', 'EpicHeroSlime_YT', 'St0rmAlphaHunt3r', 'XxGigaTurboBlockxX', 'MichaelGigaAqua45',
                     'SPARKCODE92_YT', 'Ac3N30n200878', 'XxLiam_UltraxX2003', 'Rider_Aqua47', 'FoxHyper200454',
                     'XxAubreyGlitchLuckyx', 'Charlott3Spark27YT', 'OrbitStormySab3r2010', 'RogueBladeMoon2021',
                     'Ril3yDriftPix3l', 'MasonDawnPrimal2010', 'SavannahDrift2011_YT', 'HenryStar92',
                     'XxN0ahFlameBac0nxX20', 'RogueNeonMagic52', 'RiderCrystalWolf66', 'HERO_Inferno16',
                     'Chas3H3r02016', 'XxMasonBlizzardHawkx', 'Flash_Ice200681', 'StarSlimeKnight',
                     'AceSaberCraze2022_YT', 'KnightEchoTig3r', 'XxPixelatedMagicxX95', 'XxJayd3nB3astxX2007',
                     'Owen_Fusi0n17', 'Raven_Haze28', 'Dani3lStr3am36', 'SparkOrbitR0cket', 'R0CKET_Ice2007',
                     'UltraThund3rCyb3r202', 'XxDragonStarryxX2009', 'RiftBuilderBlock2019', 'FlashAquaBuild3r',
                     'Str3amBan3Flick2022', 'XxRift_Byt3xX2018', 'BearLucky46', 'WraithByteFuryYT', 'Crystal_SKY200699',
                     'RavenVenomPrism2003', 'ChillVoidLucky2012', 'BeastLightNinja20023', 'XxOliv3rJ3llyxX24',
                     'XxJack_MAGICXX28', 'SparkL3g3nd2005', 'Ow3nCraftVort3x', 'Epic_Neon201867', 'OrbitTurboL3g3nd',
                     'XxSamuelStealthSlime', 'ByteCyberCookie', 'XXCRAZE_VortexxX2021', 'MasterSonicDuck',
                     'Charlott3Zoom69', 'ElijahFrostSlime97', 'Aqua_Gam3r54', 'Michael_Blade88', 'XxJacksonRiftxX2012',
                     'BlockL3g3nd39', 'BearRiderTiger21', 'Harp3rZap14', 'IsaacHunt3r66', 'ZeroHazeChaos',
                     'Chill_FIRE2017YT', 'RavenLucky68', 'L3vi_CRAZ32021', 'Venom_Blizzard202366', 'RogueHeroEchoYT',
                     'Puls3Cyb3r17', 'BearNova45', 'MinerBuilderAlpha200', 'GamerPixelHyper2024', 'T0xic_FLAME2004',
                     'M00n_Sparkly2015', 'XxJellyStarAlphaxX', 'SavannahMast3r2004', 'Drift_Star201184',
                     'ElijahZoomPrimal2023', 'KingPowerFox2013', 'HunterPrimalBlock202', 'C0d3C00ki365', 'B3ar_Fury54',
                     'XxLiamBaneGhostxX', 'ToxicZapGiga2018', 'SonicDark202342', 'XxGamerVoidxX76',
                     'SparklyMinerBacon200', 'XxR0cket_SlimexX99', 'Rogu3_Ghost2011', 'RiftQu33nTurboYT',
                     'HunterTurboThunder20', 'Fox_Spark49', 'XxHarperOmegaFlashxX', 'JaydenFlameHawk', 'RiftKingEagle',
                     'PIXELATED_Ice74', 'HazelDarkSparkly', 'AuroraGold3nCircuit2', 'GabrielBlaze98', 'LukeLightSonic',
                     'Inf3rnoKingBlockYT', 'Hawk_Lucky25', 'DancerCyber33', 'NinjaEchoVenom2022', 'GabrielGamerLight47',
                     'Li0nDrag0nEch0', 'Jam3sCooki3201728', 'DarkCooki3Ninja', 'LunaShadowClaw', 'CodeDuck202377',
                     'SonicWraith27', 'RiftNinjaStar2007', 'XxGraceGigaDancerxX', 'B3astFlash58', 'EliFrostNight',
                     'ChaosZeroLegend2013', 'XxPaisleyHyperxX2019', 'Sparkly_HAZ337', 'JackChill44', 'FrostFlame201167',
                     'LiamTurboHyper201842', 'DragonHaze2022', 'XxMoonFlameStealthxX', 'Ace_Jelly37', 'MagicNe0n77',
                     'LionZapCode', 'MysticBane83', 'Xx_BrooklynFlam3Bliz', 'Tig3rRift30', 'KingNightRogu3',
                     'Zer0BeastKnight', 'TurboHunt3rZap76', 'XxFusionNovaCodexX', 'PrismChill2017_YT',
                     'B3arGh0stChas32006', 'JackFlameNe0n', 'StreamAlphaSlime2024', 'XxGamerVenomClawxX',
                     'Pix3lW0lfFlam3', 'ScarlettInfern0Chase', 'XxArrow_TurboxX2022', 'XxChlo3Pho3nixxXYT',
                     'Blade_Blast202126', 'PLAYZ_TurboYT', 'Jam3sSt0rm2004', 'Cyb3r_Slim313', 'XxSaberVenomChaosxX2',
                     'Ethan_Circuit51', 'WillowByte92', 'XxViperStarxX2012', 'PrimalBane202359', 'XxH3r0V0idPlayzxX',
                     'SavannahGamer43', 'ToxicBlastPanda25', 'Xx_HannahCookieQueen', 'AsherVoid92', 'LuckyDragon2022YT',
                     'GalaxyGiga20', 'XXASHER_LegendxX2014', 'TurboThund3r28', 'XxEllieC0dexX84', 'GoldenQueenNight',
                     'GalaxyAlphaCraft', 'Hyp3rStarrySky', 'B3arPow3r94', 'Aid3nRiftJ3lly74', 'ThunderHyperG0lden',
                     'MysticStormyArrow', 'Xx_ThunderNeonSparkl', 'RiftVort3xGold3n', 'FusionNinja201867',
                     'Gh0stPixelatedTiger2', 'Michael_Lucky201837', 'AlphaCrystalHero', 'King_DRIFT2009YT',
                     'Fusi0n_Flam32019', 'ElijahStreamBear44', 'XxCarterAlphaFuryxX2', 'XxV0rtexWraithxX2005',
                     'XxWyattZapxX2004', 'OliverBac0nBlast2023', 'Aria_Thunder93', 'JamesFlickVortex2002',
                     'Bear_Flame200715', 'Ow3nBlizzardCyb3r', 'J3llyZapCyb3r2011', 'DragonChillThund3r20',
                     'XxCooki3St3althProxX', 'XxStarVoidxX201726', 'FuryRiftLegend2007', 'XxSlimeThunderxX2009',
                     'HannahRiftGalaxy2019', 'XxMinerBuilderMoonxX', 'Xx_LiamSt3althDanc3r', 'XxZayd3nZapGam3rxX79',
                     'RiderBac0nN0va2009', 'SonicRift201734', 'Xx_KayleeViperGalaxy', 'XxEvelyn_Zer0xX38',
                     'BlastPh0enixSlime', 'PaisleyLucky32', 'BlockSparklyCode', 'Fir3Blaz32008YT', 'Lucas_Duck200359',
                     'PlayzSky80', 'Xx_PixelatedPhoenixI', 'H3roBlast2014', 'Byt3Haz383', 'XxSonicSlimeBlizzard',
                     'Hyper_Turbo87', 'Ech0Prism201430', 'CircuitMaster200816', 'LukeHawkHaze2018', 'STAR_Turb081',
                     'XxThund3rByt3xX83', 'CrystalStormyClaw', 'RIDER_Duck2005', 'XxMat3oGlitchxXYT', 'EchoPower200479',
                     'GraceRocketGalaxy40', 'FireVenomPixelated20', 'XxWyattZeroSaberxX20', 'Gabriel_Knight2006',
                     'Xx_CharlotteMagicBea', 'RileyFuryTurbo2012', 'Craze_Blade96', 'Slim3Pix3l202068',
                     'V0rt3xF0xUltra2020', 'XXULTRA_ZoomxX2015', 'StarDark2006YT', 'XxKnightRiftxX202148',
                     'ZapCyberViper', 'XxBaneIcexX2015', 'Pix3lArrowPho3nix', 'MysticHawk200889', 'XxHenryStreamxX60',
                     'FlameGigaZap2004', 'RiderGamer200240', 'GhostArrowBlaze2015', 'SkaterRogue28_YT',
                     'XxPulseBaconxX2018', 'LucasOmegaSkaterYT', 'V0id_Magic2016', 'XxHannahTurboGold3nx',
                     'G0ldenHer0Dark', 'LeviUltraTiger2011', 'JackGalaxyInf3rno200', 'IceTurb035', 'Ash3rGold3nPrism',
                     'FlickV0id95', 'TigerMysticMaster76', 'XxDanc3rPrismDragonx', 'Pix3lMin3r202420', 'BearZoom33',
                     'PrimalPulseHaze', 'SkaterStealthSky', 'Harp3rHawkChaos', 'XxHenryEaglexX2012', 'Moon_HYP3R202015',
                     'JamesDriftMoon2009', 'XxGigaPix3lxXYT', 'RocketBane51', 'Addis0nPanda2009', 'HawkWolfInferno',
                     'BlazeUltra93YT', 'SonicPulseNeon2018', 'MasterDuck201724', 'XxHenry_PrimalxX70', 'Aria_Blast56',
                     'Hyper_Dancer2006', 'TurboFlick202179', 'XxWilliamBytexX2007', 'BeastCyber62', 'LionGalaxySonicYT',
                     'SkyZ00m71', 'DragonTiger2004', 'JaydenHawkVenom2008Y', 'Li0nM00nCrystal', 'XxDriftSparklyBlastx',
                     'XxBlastTurb0xX200811', 'Will0wDarkT0xic', 'XxAiden_CraftxX2004', 'CyberAqua37',
                     'Xx_GraysonSlimeChaos', 'XXPAISLEY_FlamexX201', 'XxBrooklynn_BanexX56', 'XxSkaterBladeCraftxX',
                     'XxStormInfernoNinjax', 'Bacon_Rift99', 'RogueFlick2012', 'BlastMaster200960', 'EliPixelCha0s',
                     'BLAD3_F0x2022', 'KingGalaxyOm3ga', 'PrimalSaberFire', 'CrystalHeroBlast2021', 'Kayl33_Dark2013',
                     'AQUA_Thunder200652', 'Zo3Gold3nPanda', 'XxClawPandaxX2005', 'EchoMoon2006_YT', 'XxAquaZapxX2003',
                     'Harp3rFrost97', 'ZapHaze39', 'XxPowerBladeDarkxX', 'XxLukeDriftxX2016', 'LaylaSparklySlime',
                     'Zo3LuckyChill2008', 'HazeEchoUltra2016', 'Build3rBlad3Rogu312', 'XxLunaEchoPandaxX',
                     'Jayd3nB3ast25', 'CrystalCraft55_YT', 'Stealth_Circuit22', 'EliPho3nixArrow', 'R0gu3Drag0n95',
                     'Inf3rnoDragonRav3n', 'Gabri3lSkat3r2011', 'LavaSonicMast3r59', 'NovaHawkPrism55',
                     'StarrySkat3r2024', 'JamesEch02010', 'Levi_TURB02018', 'HawkLightOrbit57', 'Dani3lNinja2023',
                     'ZoomShadowDancer', 'Samu3lSkyBlaz3_YT', 'BrooklynnWraith34', 'Jam3s_Ninja2023',
                     'ElijahStr3am202340', 'Inf3rn0N0vaLava', 'XxHannahZapBlizzardx', 'ClawGamerBac0n',
                     'EthanBuild3rBan3', 'WilliamBuild3r26', 'SavannahStarry200985', 'Br00klynGalaxyLegend',
                     'St0rmyThunder19', 'Str3amCooki3Arrow202', 'BearCyberNova66', 'PaisleyDarkHyper',
                     'Charlotte_Stormy89', 'AubreyHer052', 'L0ganPandaBlade52', 'SparkShad0wDuck', 'C0deByteHer029',
                     'HawkPulseStream67', 'EchoByt3Max', 'SkyBan3Circuit', 'EmmaCrystalSab3r', 'XxSonicArrowOrbitxX',
                     'AlexanderMax200211', 'Hunt3rPow3r32', 'Min3rCrystalQu33n201', 'PrismHawkRogue',
                     'Turbo_Pixel201266', 'ArrowB3ar75YT', 'ClawHyperMagic', 'MagicRocket200498', 'ZapFireSilver200431',
                     'StarryZeroSparkly', 'XxAqua_EpicxX201378', 'EthanEcho2018YT', 'XxThund3rSparklyChas',
                     'Ech0_ALPHA67', 'EzraSparkBlade', 'Aid3nInf3rno2004', 'OliviaGold3nNinja'}
local RECEIVER_LIST = {'SparklyBlizzardLight', 'XxCookieTurboxX20124', 'XxLaylaQueenxX2013', 'AceBane201550',
                       'Xx_Al3xand3rGam3rSha', 'BaneSlimeSpark', 'XxHarperC0deR0cketxX', 'FLASH_Jelly50',
                       'HannahDancerFrost200', 'FlickSilverEch0', 'Eagl3EchoBlad3', 'Ne0nBane74',
                       'Xx_DancerChillStealt', 'XxSamuelDragonxX2010', 'JamesHawkByte2008', 'XxStarryHunterxX2023',
                       'DuckZoomHawk', 'JackEcho70', 'Ultra_Ph0enix202118', 'JaxonBlizzardGolden2', 'SparklyEagl32008',
                       'Fire_Zer02003', 'MYSTIC_Dark201778', 'DarkFireCircuit', 'Ultra_B3ast200658', 'BuilderAceLi0n',
                       'Oliv3rAc337', 'NovaEpicKnight97', 'EpicPh0enix45', 'LiamBladeNinja202232',
                       'XXBROOKLYNNPROXX89_Y', 'AlphaChaseFire', 'PowerGamerBlast', 'LegendCircuit54',
                       'XX_Al3xand3rT0xicH3r', 'HazeDawnHer076', 'MasonDarkCraze', 'LeviGoldenThunder201',
                       'FlashFlame201681', 'ThunderGalaxyByte60', 'BearTigerBlade', 'Ow3nFoxStarry18'}


-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
