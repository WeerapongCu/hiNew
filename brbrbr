-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'Xx_DANCERULTRABLIZZA', 'XxIsabellaVoidxX2021', 'GraceZero2006', 'XxWolfQueenxX2020',
                     'XxCrystalBlockLegend', 'Sab3rCrystalBlad3202', 'Wyatt_Venom200940', 'CrazeS0nicRider',
                     'StormyFir3H3ro2022', 'MysticDrag0nSky20046', 'EzraLionSky', 'Rift_Slime201493',
                     'IsaacTurb0Giga2003', 'OliverCookieSpark201', 'WillowJellyPixel2019', 'GigaBuild3r65',
                     'Stream_Venom23', 'NoahFlickJelly18', 'Turbo_Pixel2007YT', 'Jacks0nChill2007',
                     'SPARKLY_R0cket2009', 'XxLukePrimalArrowxX', 'Zoe_Cyber96', 'Ban3_Fox201076', 'HeroEpic29',
                     'VoidStreamThunder81', 'AubreySt0rmyFlash', 'Xx_SebastianZapCraze', 'ViperFlame84', 'JACK_Echo35',
                     'IsabellaSt0rmyMax', 'Xx_CircuitStormGlitc', 'Br00klynS0nic200551', 'Mas0nV0rt3x2003',
                     'Oliv3rSparkly200818', 'PLAYZ_Rift31', 'XxHer0GamerxX2019YT', 'ClawDancer48', 'GalaxyPulseTurbo95',
                     'XxAubr3yProxX2018', 'Rogu3_St3alth25', 'HunterKingStream', 'LeviFusion202165', 'Z00M_Hawk2020',
                     'BuilderPrimalBlock', 'LaylaShadowSaber', 'LavaKnightAqua2021', 'MinerZer0Turb02016',
                     'XxPrimal_PRISMXXYT', 'GraysonNova201991', 'BaneChillArrow94', 'J3llyChaosSpark2019',
                     'GalaxyTurboCraft', 'TigerPixelatedZ00m20', 'XxHyperAceSaberxX', 'HannahSt0rmyHawk',
                     'Addis0nW0lf200616', 'MiaBlazeThunder2017', 'BlizzardMasterRift90', 'Void_Primal60',
                     'VenomRiderNova', 'BlockHyp3r2012', 'MasterAquaDragon2018', 'SkaterInfernoHawk200',
                     'IsaacPrimalTig3r', 'SonicEchoSparkly54', 'Haz3Pix3lat3dNinja', 'DarkNightNeon2012',
                     'GoldenLightEagle2006', 'SkaterZap93', 'VenomGalaxyGolden', 'CraftCooki3Bacon',
                     'Ril3yBlaz3Crystal', 'Luk3Ic3YT', 'Blad3L3g3nd31', 'Hunt3rSkyBuild3r2014', 'EzraPowerEcho',
                     'ChaosPanda201422', 'Am3liaFlashAc3', 'Zo3Rock3t69', 'Xx_L0ganSparklyAlpha',
                     'XxKayleeSkaterRocket', 'JAXON_Blast51', 'NightDragon2014_YT', 'LionMast3r202125',
                     'XxGraysonWolfJellyxX', 'Xx_BrooklynByteCyber', 'Abigail_EPIC92', 'Her0_Skater22',
                     'Skater_THUNDER2006', 'Mat30Vip3r2018', 'Fusi0nChas32017', 'ChloeVortexLight', 'Kaylee_Cha0s94',
                     'XxUltraBanexX24', 'EpicBaneToxic', 'LAVA_Pr02009', 'AuroraShadow70', 'XxJam3sVoidBlaz3xX',
                     'ChaosMystic33', 'HunterFire201975', 'XxEcho_ChaosxX99', 'XxBl0ckDriftxX94', 'William_Circuit30',
                     'JackTiger202299', 'StormSkater32', 'LeviV0rtex2024', 'OrbitCyberAce200829',
                     'Xx_VictoriaRock3tUlt', 'Drift_Zoom2017', 'V0rtexInfern0Panda', 'ZaydenNightClaw',
                     'XxJax0n_Z3r0xX', 'Fr0stIc393', 'XxPow3rDriftxX200445', 'Pho3nixQu33n2002', 'Xx_AlexanderNovaGame',
                     'EchoTigerVoid', 'Jacks0nHazeDrag0n', 'NightMin3rTurbo', 'Kayl33_N3on55', 'L3g3ndN30nStr3am',
                     'MiaV0idH3r0', 'XxHannahViperFlamexX', 'Om3gaStr3am201892', 'DriftCraft201099',
                     'SlimeHazePixel2009', 'LavaGalaxy200213', 'SkaterBlastP0wer91', 'IceSkaterN0va',
                     'InfernoBaconNight201', 'XxWolf_PIXELXX2020', 'Tig3rRid3r76', 'PIXELATED_Ghost20142',
                     'Flash_R0cket40', 'SparklyOmegaFire', 'Flam3_B3ast51', 'XxVenomHyperMaxxX201',
                     'Xx_SavannahShadowMoo', 'XX_SparklyInfernoCra', 'StarGh0stPix3l', 'Gold3nL3g3nd86',
                     'EagleDrag0nStar', 'Blizzard_TIG3R', 'PlayzLegendTurb046', 'ByteMasterSonic',
                     'XXGLITCH_FirexX20122', 'Liam_Om3ga2024', 'PulseGalaxy2012_YT', 'XxAidenRiderxX2003',
                     'XxChloeGigaxX14', 'MiaRogue72YT', 'AbigailSonicSky', 'LuckyVip3rEcho46', 'N0va_Lava2004',
                     'Z3roNova2002', 'XxWraithZapRock3txX', 'LegendTurboGalaxy201', 'Echo_Raven200275',
                     'LionStreamByte', 'XxShad0wFlameOrbitxX', 'Pix3lat3dPr075', 'ZeroLegendGolden2017', 'Mateo_Code88',
                     'Claw_Prism95', 'Xx_MoonStormyBuilder', 'LuckyLightMiner', 'XxNoahBanexX60', 'AUBREYCODE2006_YT',
                     'Light_St0rmy28', 'XxFrostSkySkaterxX20', 'BlockMoonChaos', 'IsabellaPh0enix35',
                     'Chloe_Golden2023', 'Arrow_Fusion202462', 'Ech0_N0va2020', 'AuroraEchoDawn',
                     'XxGraysonLuckyMaxxX9', 'Sky_Blizzard45', 'XxCircuitMagicHer0xX', 'Om3gaNinja2003',
                     'VortexLuckySaber2018', 'AddisonBlizzardH3ro', 'ElijahCircuitPower20', 'Aur0raBaneMysticYT',
                     'BeastQueenIceYT', 'IsaacPix3lBuild3r', 'Hawk_Stream2018YT', 'ToxicVoid201713', 'ACE_Knight2008',
                     'GlitchSaber200978', 'WraithPrimalRaven', 'Skat3rGam3r56', 'XxCarter_ToxicxX86',
                     'HarperGhostAce2019', 'ZoomKnightFire', 'XxJamesGlitchAquaxX', 'LegendCraft201039',
                     'XxHenryShadowZapxX', 'St3althPho3nix200762', 'XxAlphaLionxX2018', 'AubreyHawkTiger2021',
                     'RiftKingLegend', 'XXVOID_RavenxX2005', 'Saber_Pulse51', 'HeroBuilderFury20042',
                     'JamesHeroRider29', 'XxPrismStarFlamexX', 'XxDancerZeroHunterxX', 'XxEzraPrismxX53',
                     'ThunderEchoMaster201', 'XxJulianBaconxX20161', 'UltraArr0w72', 'Qu33nGhost2013YT',
                     'XxBuilderQueenKingxX', 'JaxonSkater81', 'GracePandaGiga', 'XxLion_SparklyxXYT',
                     'MateoFrostPrimal2023', 'XxPaisleyPulseBuilde', 'ZaydenNe0n48', 'CrazeStarry52', 'RiftDarkZ00m12',
                     'S0phiaStealthTiger', 'Ava_Storm30', 'KingVen0m2002', 'N0raFlick96', 'MiaZapRogue',
                     'AlexanderChaosClaw', 'XxGraceCrystalCyberx', 'ChillViper2004', 'XxMiaDarkIcexX2020_Y',
                     'Xx_PixelatedBuilderT', 'ViperQueen82', 'Will0wDawnMystic', 'XxJamesQueenxX2024',
                     'XxIce_FirexX2017', 'XxZayd3nZ3roGold3nxX', 'Ace_Magic49', 'HarperSaberFlame2016', 'Cod3_H3ro72',
                     'ViperHeroChaos23', 'AlexanderThunderVipe', 'XxSkat3rBan3xX74', 'BrooklynnInferno38YT',
                     'XxDawnBearPixelxX', 'MoonTurboBlade_YT', 'RogueSkaterPixelated', 'ViperBuilder18',
                     'Pixel_Storm46', 'Logan_BLIZZARD86', 'PrismSkater54', 'Bac0n_Pr071', 'InfernoHero202359',
                     'VenomRiderNova', 'AriaRiderDuck2016', 'Paisl3yCraft28', 'EaglePulseZoom', 'XxJayden_KNIGHTXX10',
                     'CrazeBlockJelly', 'DuckL3g3ndFir3', 'ZapHeroFire', 'PixelatedNe0nUltra20', 'WolfRavenRogue2018',
                     'QUEEN_Ninja2011', 'MAXOMEGA2014_YT', 'XxBaconMinerBlizzard', 'RocketBuilder201943',
                     'LaylaDancerCode', 'AquaCraze2003YT', 'Pho3nixPix3l90_YT', 'MaxHunterArr0w',
                     'JaydenPixelatedV0rte', 'XxRavenQueenxX2002', 'IcePixelMystic_YT', 'CRAFTPULSE38_YT',
                     'Xx_BlizzardWraithBan', 'Michael_Blade82', 'BearR0gue80', 'AbigailPixel200296', 'PixelMagic43',
                     'LiamKing201129', 'PixelatedMoonHawk', 'HazelPixelSlime', 'TurboLightPro', 'StarQueen201588',
                     'PaisleyGoldenEagle', 'ChillGigaL3g3nd', 'TigerLegend90_YT', 'Isabella_Blade201835',
                     'AmeliaDriftCode2018', 'XxEmmaCraftZeroxX', 'Chlo3Inf3rnoVort3x', 'GraysonLuckyStormy',
                     'Xx_OliviaWraithShado', 'Orbit_N3on13', 'XxPlayz_BANEXXYT', 'BlizzardSkater47', 'Eli_Mystic66',
                     'XxWraith_MOONXX2009', 'Blad3B3ast16', 'IsabellaDragonGhost', 'G0ldenPlayzSkater',
                     'Mas0nHunterZap2009YT', 'JaydenRiderNight', 'EthanDawnNight', 'LukeCyber75', 'Flick_Golden',
                     'RogueEcho200510', 'HazelByteRogue2012', 'Rid3r_Dark85', 'CraftGhostDragon2017',
                     'Grace_Vortex2024YT', 'SaberLight41', 'Oliver_Spark62', 'MinerPowerNinja', 'Str3amIc3Ultra',
                     'ZeroWraith32', 'FlickCraftRider', 'Chl0eNinja2003', 'Vortex_Mystic52', 'ThunderHazeRogue52',
                     'Xx_WilliamTurb0Drag0', 'Ne0nCraze2015', 'ClawBlastStream73YT', 'WyattDuckZero', 'Silver_Venom96',
                     'CharlotteZero79', 'W0lfLightMagic', 'Pix3lVip3rC00ki32013', 'HawkIce62YT', 'TurboCyberPlayz27',
                     'MichaelAce38YT', 'Pixel_Bear201351', 'XxPrism_StormxX2018', 'Grace_Toxic28',
                     'LucasOrbitPixel2003', 'W0lf_Jelly202236', 'M00nFuryW0lf', 'RILEY_Playz200394',
                     'AsherCircuitBacon', 'Hannah_Viper74', 'GabrielC00kie96', 'Build3rProHaz3', 'XxEliFusionTurboxX',
                     'AquaAlphaBlock', 'XxHyperChaosWolfxX20', 'Haze_Ice69', 'Fir3Z3roStormy', 'XxAlexander_BanexX78',
                     'CodeMoon31', 'XxOliverSparkxX2009', 'Xx_Charl0ttePixelEpi', 'XxN0raBlizzardR0cket',
                     'JaydenKingPlayz', 'StarFury201665', 'PhoenixLava2003', 'GigaPlayz35YT', 'M00n_V0rtex2009',
                     'StarryGalaxyVoid', 'Legend_Viper2023', 'Br00klynnBeastLegend', 'RogueCyberSlime2016',
                     'Chl0eBladeW0lf', 'Saber_LUCKY202396', 'EchoZoomPixelated81Y', 'KingWraithUltra96',
                     'GABRIEL_Stream50', 'TURBO_Saber69', 'Inferno_Blade2013', 'RiderPlayzToxic', 'Grace_Her02021',
                     'HarperDark57', 'XxMiaAcexX53', 'VortexRocketSkater', 'ArrowNinjaChill2022', 'ZaydenS0nicCraze',
                     'CyberWolfStealth', 'SamuelFox17_YT', 'Br00klynnCrystalHawk', 'SkyArr0wRider', 'OrbitEagle67',
                     'WilliamBuilder56_YT', 'ZapChillEch0YT', 'XxLava_PixelxX15', 'KnightBlockKing2005',
                     'Ash3rV3nomStormy', 'Rocket_Starry200614', 'BrooklynCrystalRid3r', 'Vort3x_Rogu32008',
                     'XxJacksonLuckyxX2006', 'SophiaCrystal70', 'XxJackFuryStormyxX', 'BlockWraithByte',
                     'Ech0Crystal200292', 'XxSebastianEchoxX25', 'KingStormyBuilder82', 'Blaze_Inferno2015',
                     'EvelynGolden85', 'Hyp3rUltra2006', 'Builder_GigaYT', 'ZOOM_Night89', 'Mas0nLightBlade',
                     'Cart3rLightOm3ga', 'XxEmmaFr0stxX2007', 'FlameKnight2008_YT', 'PULSE_Dark12', 'HannahArrow202419',
                     'R0gueBuilder201366', 'RiderAceM00n', 'XxBuilderMasterxX19Y', 'ZoomRocket2021_YT',
                     'P0w3rSparkPrimal', 'ZaydenFr0stDark', 'XxStarryTurboxX64', 'XxElli3GigaEchoxX',
                     'XXSONIC_AlphaxX2008', 'BladeProDragon', 'Code_Haze57', 'Cyb3rKnight202496',
                     'Xx_FlameCraftBuilder', 'Fr0st_Ech02002', 'XxS3bastianInf3rnoMa', 'Xx_CharlotteFlameCra',
                     'StarryFusionFir3', 'XxCrazeRocketxX2003', 'RogueMinerDragon2009', 'CarterSkaterS0nic',
                     'BaneVenom22', 'T0xicWraith2020', 'EthanClawCrystal2005', 'Byt3NovaFlam3YT', 'AquaBlizzardTiger',
                     'JamesLegendMoon2021', 'XxS0nicDriftEch0xX', 'Hawk_VENOM47', 'OliverC0de89', 'St0rmyMagic62',
                     'AddisonPuls3WraithYT', 'MiaPrismTig3r', 'LuckyCircuitNight28', 'Mate0Epic2022',
                     'Danc3rT0xic2006YT', 'EchoBlockCookie_YT', 'MasterFlameStar2011', 'Ghost_B3ast2024',
                     'XxLightPowerxX201612', 'StarryPulseBlaze11', 'Her0_Rider2002', 'CraftGhost202048',
                     'Spark_NINJA11', 'Ow3nFlashH3ro2022_YT', 'ECHO_Ban32014', 'XxOliverBearSaberxX9',
                     'EvelynPixelatedClaw', 'FlashShad0wP0wer2015', 'ZaydenArr0wLight', 'BaconPrimalPixel2014',
                     'GigaFlameBlizzard95', 'RavenStarrySilver', 'Oliver_Beast18', 'Pulse_Hunter80',
                     'UltraCookie201227', 'DuckL3g3nd2024', 'W0lfV0idSky', 'Xx_PhoenixTurboVenom', 'Slim3Gold3nNova',
                     'RavenFuryFlame43YT', 'EllaVoidDawn11', 'Cyber_Tiger2010', 'XxBr00klynDancerFury',
                     'FLASHPULSEHAZE_YT', 'Build3rRogu396YT', 'OrbitN3onDrift', 'XXORBIT_Arr0wxX2017',
                     'XxSparkGalaxySkyxX', 'XxSlimeBaneLightxX', 'XxCraftEchoH3roxX201', 'DuckBaconQueenYT',
                     'LunaN0vaR0gue', 'Galaxy_L3g3nd2007', 'BaconPlayzSkater', 'XxHeroMagicxX201588', 'EliRogue84',
                     'Inf3rno_St3alth2018', 'Eli_Rift201181', 'Elli3Eagl3YT', 'N0vaBuilderG0lden200',
                     'KingMasterMystic', 'AriaGolden200967', 'Dark_Build3r2006', 'XxMichaelDrag0nxX202', 'Grac3Moon29',
                     'XxLegendChillStreamx', 'SKATERICEFUSION_YT', 'CircuitAce37', 'Cyb3rHyp3r2004', 'NinjaSonicCookie',
                     'EliSky200233', 'N0raSparkly87', 'XxHawkMasterxX2006', 'Crystal_B3AST23', 'NoraStormyLava2020',
                     'Aur0raStr3amCircuit', 'XxDriftLegendFuryxX', 'XxChaseNinjaxX2020', 'FoxBlizzardRaven',
                     'XxGhostNovaDancerxX2', 'Vip3rMast3r2011', 'AceEchoViper', 'DarkBuilderKing2021',
                     'XxMast3rCooki3Craftx', 'Aabangzl7850', 'LaylaLight201794', 'HyperFire200635',
                     'KnightArrowMystic200', 'XxL3g3ndFlam3Eagl3xX', 'Mast3rAqua28', 'DuckFlameWolf', 'Hannah_Lava84',
                     'JamesLegend49', 'RiderZeroViper2006', 'BrooklynnSpark31', 'BladeBear88', 'EthanCookieCraft',
                     'XxPowerBearEchoxX', 'HERO_Turbo47', 'ChaosThund3rTurbo', 'MateoKingDuck_YT', 'S3bastianCraz3Star',
                     'BrooklynnSpark12', 'Build3rSparkRav3n', 'GraceCodePulse', 'Grays0n_M00n88', 'StarryGalaxyVoid',
                     'XxLeviHeroxX', 'Xx_BlizzardNeonFlame', 'HarperFlashGalaxy', 'ViperUltraCookie',
                     'XxSpark_Ech0xX2011', 'Skat3rV3n0m60', 'ChillSparklyRaven', 'BeastBladeZ00m2008', 'Rock3tSky2020',
                     'Str3amDark2023', 'XxPulsePrimalxX2016', 'CrystalFusionUltra85', 'JamesHazeSt0rmy_YT',
                     'JellySt0rmyCrystal', 'Abigail_Chase44', 'WilliamNightZer0', 'Luna_St0rm88', 'Om3gaStormy2020',
                     'P0w3rGam3rGh0st2003', 'XxArrow_StormxX64', 'XxGhost_StarxX45', 'XxSaberAlphaMagicxX2',
                     'XxJulianC00kieM00nxX', 'XxCookie_HawkxX20119', 'XxWilliam_StormxX40', 'BlockEagle200725',
                     'MaxShadowCode', 'JulianBaconGalaxy', 'AlphaM00nEagle2024', 'BlastDarkHunt3r',
                     'ArrowKnightPixel2007', 'GalaxyLava32', 'Pix3l_Craz332', 'Power_Toxic88', 'AvaGhost2021',
                     'XxN30n_RID3RXX', 'Xx_SilverSlimeGlitch', 'Isab3llaFury15', 'MasterFusi0n2018', 'DancerAquaZoom',
                     'Elli3_Pro2007', 'Wyatt_Ph03nixYT', 'ZaydenChaosShadow202', 'AbigailSkat3rZ00m',
                     'Cod3Rogu3Cyb3r2007', 'Sonic_B3ar2005', 'ZapPixelOrbit2023', 'AriaShadow201718', 'PrismFuryUltra',
                     'Oliv3rS0nicBuild3r', 'GalaxyCookiePrimal20', 'XxN0raBlastxX', 'XxGamerTurboxX95_YT',
                     'SavannahShadowOmega', 'CraftInfern0Viper', 'OliverSilver202222', 'ZeroEcho2003_YT',
                     'XxShadowHeroxX46', 'PrimalStormyZero2005', 'Luke_MASTER202418', 'Mate0P0werChill',
                     'Aur0raGh0stBl0ck74', 'CircuitRift201170', 'CyberAlphaJelly', 'XXELI_WraithxX200346',
                     'SAVANNAHNOVA2023_YT', 'MiaPixel28', 'ThunderChillDark2015', 'Pho3nixPlayz201761',
                     'XxLi0n_Gh0stxX', 'MysticPixelatedPrism', 'Blade_Sonic201538', 'WraithHeroBeastYT', 'HazeZap21',
                     'KayleeGh0stUltra', 'FireNe0n59', 'XxPrismArrowxX2019', 'ZoomCircuitPho3nix_Y',
                     'XxMysticEaglexX2024', 'EllaSilv3rInf3rno53', 'MagicFlam3Gam3r2017', 'XxCraz3Om3gaxX2021',
                     'XxStormyEchoxX2014', 'BANE_Gamer56', 'XxOmegaRiftFirexX', 'XxNova_Rogu3xX40', 'NovaNeonRaven2020',
                     'AsherBearDawn', 'VoidRocketCrystal201', 'XxLionBlazePixelated', 'RiftSparklyCrystal',
                     'Haz3C00ki3Ban3201899', 'ChaosGalaxyPhoenix20', 'XxCodeEpicHawkxX', 'COOKIE_Mystic2015',
                     'XxInferno_DuckxX2014', 'XxFoxDarkGhostxX2010', 'Str3amB3arInf3rno', 'CarterOrbitToxic',
                     'SlimeGolden2022YT', 'BaneMiner200965', 'Jacks0nLegend80', 'AceShad0wPrism201222',
                     'DancerHawkR0gue', 'AriaFlashRider', 'M00nNe0nNight', 'SlimeSparkly65', 'XxUltra_LegendxX2020',
                     'Gabri3l_PULS348', 'SILV3R_PandaYT', 'GraysonZapRogue', 'EliEagleHaze83', 'Gh0stUltra2024',
                     'B3arV3n0m2018', 'ArrowAceZap53', 'XxAuroraRiftVoidxX', 'PIXELATED_Bear63', 'StarBac0nCrystal2006',
                     'EchoCodeCraze', 'HawkRocketMystic', 'MasonAc365', 'P0werByteKnightYT', 'Xx_R0cketDancerSkate',
                     'Toxic_Craft2006', 'SparklyFir3Qu33n', 'Aur0raPixelatedV0id', 'Mas0nMast3r2016',
                     'LaylaToxicShadow', 'Mat3oChaos44', 'CharlotteBaneSpark20', 'N0raPlayzRift', 'PlayzPulseSpark2023',
                     'Julian_Ultra202018', 'Inf3rn0G0ld3nSt0rm', 'Daniel_Pixelated36', 'PlayzIceNight', 'PulseRift36',
                     'PixelOmega87', 'Saber_Star51', 'MichaelClawSaber', 'Xx_Vict0riaChillLigh', 'Hyp3r_LuckyYT',
                     'LukeNinjaSparkly', 'VenomStreamDawnYT', 'StormySonicChill', 'Chlo3Rift98', 'Xx_BuilderSparklyVip',
                     'Paisl3yArrow201569', 'ViperHunterKing', 'Fire_Pixel97', 'XXMAX_PrimalxX2017',
                     'XxStormyMasterRocket', 'NinjaFir3Light', 'HannahQueenToxic65', 'DawnCrazeRift36',
                     'XxPuls3EpicxX2012', 'BlizzardEchoFox2012', 'ViperSaberEcho', 'SparklyViperCrystal',
                     'MiaJellyBl0ck', 'Emma_Epic94', 'GabrielBaneMystic65', 'BrooklynnMystic44', 'ChaseStormyPixel2005',
                     'XxZ00m_SlimexX2014', 'XxJack_BeastxX201219', 'Drag0nPulseBeast', 'LeviStarryCraft',
                     'GalaxyWraith95', 'Vip3rCraftLion', 'MichaelRiderVoid', 'SkyShadowTurbo201169', 'Chlo3Spark201769',
                     'XxWolfStormyxX2020', 'RocketSilverAqua2018', 'BearBeastZoom', 'RileyStealthTiger200',
                     'XxOlivia_MasterxX200', 'GraysonRiftFir3', 'EvelynSkyGalaxy', 'Grays0n_Fusi0n2016',
                     'MagicWraithZoom', 'CookiePro55_YT', 'XxSamuelFlashPrismxX', 'XxRogu3PrimalxX_YT',
                     'SparklyShad0wStarry', 'EzraRiftRocket2022', 'XxGoldenInfernoProxX', 'RocketLegendSilver',
                     'NOVA_H3ro2017', 'Rider_Ultra2024', 'Xx_Danc3rSilv3rOm3ga', 'H3nryDawnMagic', 'EvelynBlaze31',
                     'XxP0werEaglexX2003', 'Kayl33Pow3r202121', 'XxChaosStarxX2022', 'Power_Hero202269',
                     'XxPrismBuild3rFoxxX8', 'LightGlitch31', 'LaylaFire201574', 'Aur0raRift15', 'PandaStr3am2017',
                     'HannahBl0ck202318', 'CodeZoomByte', 'PlayzBlast200723', 'ViperDragonBlock2022',
                     'XxWolfStormyxX2020', 'XxEliBeastxX2003_YT', 'Layla_Light75', 'EchoOmegaHyper2013_Y',
                     'MinerOmega27', 'Bl0ckSaber54', 'StormDawnZap', 'PrimalPrismNinjaYT', 'Al3xand3r_VOID2016',
                     'FrostTurboPulse78_YT', 'SamuelWraithSilver', 'RiftFuryArrow2010', 'LucasBlizzard200221',
                     'Slim3Gold3nNova', 'XxJacksonBeastxX2017', 'MaxBuilder35', 'XxHarperPixelZapxX20', 'FusionEagl339',
                     'XxCookieNightxX2011', 'NinjaGigaVen0m', 'CrystalRogue61', 'SavannahEcho55', 'BaconPixel2012_YT',
                     'Jacks0nSt0rmy2018', 'Julian_Bear54', 'MasterFrostFuryYT', 'J3llySilv3r92', 'Am3liaSky2010',
                     'Aqua_Fury200486', 'Chaos_Epic62', 'Charl0tt3Ph03nixHawk', 'Aur0raC0deFury', 'XxFireHeroLavaxX',
                     'EllaFusion201284', 'IsaacClawLucky2022_Y', 'OrbitZer0P0wer', 'Hunt3rLi0nB3ast', 'NoraFury93',
                     'Rid3rArrow2004', 'HAWK_Pix3lat3d2004', 'XxChase_CodexX2010', 'ZeroPhoenix90',
                     'AbigailFusionOrbit', 'ClawDancer48', 'LavaGigaRaven50', 'XxOmegaCyberPixelxX', 'SamuelMasterClaw',
                     'XxSavannahTurb0Maste', 'LunaPandaPrimal', 'B3astChas3Blad3YT', 'Turb0N0vaBlaze', 'Oliver_Beast18',
                     'RocketBuilder201943', 'ChillGhostThund3r', 'BlockKingChaos2013', 'VoidPandaRaven',
                     'Xx_MoonStormyBuilder', 'TurboPrimal2002YT', 'XxEzraPrismxX53', 'XxZaydenCodeAlphaxX',
                     'Xx_WilliamTurb0Drag0', 'WraithToxic202171_YT', 'NoraStormyLava2020', 'DriftCraft201099',
                     'CodeCrystalStar_YT', 'S0phiaStealthTiger', 'HeroEpic29', 'XxMast3rCooki3Craftx',
                     'AuroraFusionThunder', 'EvelynPixelatedClaw', 'HannahCraftGiga25', 'JellyBaneNova',
                     'Paisl3yVoid2004', 'WilliamNightZer0', 'LukeCyber75', 'AlexanderThunderVipe', 'LeviFusion202165',
                     'ThunderHazeRogue52', 'Xx_SebastianStarrySp', 'Isabella_Blade201835', 'XxGhostNovaDancerxX2',
                     'FoxKnightEpic', 'Ne0nCraze2015', 'FuryNightHer0YT', 'ZeroWraith32', 'XxEcho_ChaosxX99'}
local RECEIVER_LIST = {'Lucas_Nova200247', 'MagicMasterNova2011', 'MasterBuilderFury200', 'AriaFlam3V3nom2019',
                       'XxLukeDragonBuilderx', 'JackBaneTiger', 'TurboTig3r21', 'CraftByteZ00m', 'Julian_Hawk200534',
                       'PrimalFlickSt3alth', 'IsabellaGamerMiner20', 'XxNoah_Danc3rxX2022', 'Alpha_HERO2019',
                       'XxMate0P0werClawxX', 'XxStorm_BlizzardxX85', 'AvaCraftNight2003', 'XxSophiaPowerEaglexX',
                       'SebastianBlade65', 'RavenStormBlade2012', 'Inferno_Wolf200812', 'SophiaEagle200757',
                       'EagleWolfHawk', 'Dancer_Lion70', 'ClawRift2004_YT', 'LiamMystic201928', 'WolfBaneFlame2024',
                       'Sonic_DARK96', 'FireSilverFox2013', 'XxHazelSparklyxX2002', 'Ne0nLavaCyber',
                       'Kayl33_Build3r2016', 'BlockThunderBlast', 'XxCharlotteBuilderMy', 'InfernoChaos38',
                       'Thunder_Echo14', 'XxAbigailRiftArrowxX', 'Jacks0nLightMagic200', 'Ech0SparklyEagle',
                       'StarryTurb0Silver26', 'L0gan_Sab3rYT', 'GhostThunderHaze', 'CodePlayzPrimal', 'NoahArrowFlick',
                       'JulianMast3r89', 'Ph0enixNightCircuit', 'AceRogueCircuit'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local coinsValue = LocalPlayer.Data.Coins.Value
        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        local validPartner = FindValidReceiver()
        if validPartner then
            SendTradeRequest(validPartner.Name)
        else
            -- ถ้าไม่มี partner ให้ปลดล็อค main sender
            isSenderMainActive = false
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
