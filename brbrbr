-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'Blast_Orbit11', 'SkyFlickStealth', 'BladeBlazeStorm', 'SebastianAlpha2020', 'Ril3yFlickDawn2010',
                     'CircuitTurboNeon2002', 'Spark_BLIZZARD201894', 'Thunder_Chase37', 'Sparkly_L3g3nd63',
                     'TurboPrism55', 'XxZo3Sab3rxX2019', 'XxSlimeBanePrimalxX', 'FlameStreamMiner2023',
                     'XxZoom_LionxX84', 'ThunderPrimalStealth', 'Fire_Blast201145', 'Pow3rPix3lLion', 'ZoomLightBlock',
                     'RiderAquaFury', 'Xx_StormWraithCircui', 'BrooklynCyberTurboYT', 'TurboQu33nRock3t2024',
                     'XxHeroRiderxX2005', 'FusionOmegaCircuit', 'SparklyJellyShadow', 'KingZer0Rider2011',
                     'Chase_ORBIT62', 'MagicDuck2015', 'LunaKnightRift12YT', 'SebastianFusionNinja',
                     'XxDrag0nIcexX2003', 'Xx_RiftN3onPix3lat3d', 'CraftCooki32022', 'BrooklynnCrystalLigh',
                     'MysticRiftSlime20177', 'Victoria_SPARK86', 'EpicMystic200650', 'Craze_Flash2003',
                     'POW3R_Str3am2023', 'EzraRogu3B3ast2016', 'TurboCrystalStealth4', 'ViperStarry84',
                     'GigaOmega201938', 'BrooklynnMinerHero20', 'HenryVenom29_YT', 'XxMasonStarChillxX',
                     'XxZapLightxX2002', 'Xx_BuilderDarkGolden', 'GabrielStarKing', 'XxKingFusionOrbitxX',
                     'Blad3BaconFox', 'XxHannahEchoBeastxX4', 'GoldenLucky76', 'EpicBlastBear', 'Dark_Aqua200846',
                     'Tig3rMin3rStr3am', 'S0phiaSkaterPixelate', 'XxMateo_SilverxX2002', 'Cod3Eagl375',
                     'XxMagicRock3txX2009', 'EliViperFire', 'PaisleyPixel63_YT', 'RiderBlockSparkly', 'XxLi0nF0xxX_YT',
                     'Levi_Fire200519', 'Elli3Craz3Hyp3r16', 'AddisonSt3althBan3', 'M00nHawk73', 'DragonAc3Void',
                     'HenryRiftFr0st', 'GlitchTigerRift2020', 'AcePrimal201931', 'EzraStormyChaos2006',
                     'XxDawn_WRAITHXX2023', 'VortexBladeDuck', 'IsaacKnightVoid61', 'XxFrostClawCookiexX2',
                     'ARROW_Alpha96', 'XxBacon_CookiexX76', 'Zoom_Starry49', 'MiaBuild3rAlpha', 'Chase_Flick2004',
                     'Xx_AriaBuild3rStormy', 'V0idSkaterLava', 'BL0CK_C0de81', 'SlimeVenom2014YT',
                     'XXASHER_TigerxX2013', 'Mat3oShadowArrow', 'PixelatedZ00mRift', 'Zayden_Dawn59',
                     'XxJellyFlickxX2017', 'William_LEGEND26', 'Vip3rMin3rChas3YT', 'XxFury_FlickxX',
                     'Xx_OliverInfernoBaco', 'L3g3nd_Drift19', 'Cyber_Ninja200787', 'XxByt3SparklyHaz3xX',
                     'KnightMysticRaven', 'NoraHunt3r2016', 'MinerBladeOrbit', 'LionHeroPanda', 'LionBuilderSonic2016',
                     'Al3xand3rCyb3r99', 'WillowStealthStream', 'LaylaAlphaCooki3', 'XxCookie_GoldenxX18',
                     'St0rmyGigaOrbit_YT', 'LoganFlameStarry2004', 'XxLiam_DAWNXX36', 'C00ki3Drag0nOm3ga',
                     'MoonViper2006', 'XxHyperStarryxX2012', 'Ghost_ECHO11', 'ChillViperCraft', 'Sab3rCooki319',
                     'Flick_Power2010', 'Ph03nixBan385', 'TurboStreamGalaxy', 'SonicClawViper2008',
                     'XxPrismBlastTurboxX', 'CyberMiner11', 'Grays0nMaxV0rt3x2019', 'Scarl3ttEcho2010',
                     'Zayd3nSt3althMast3r2', 'Micha3lB3astAlpha', 'Circuit_MYSTIC66YT', 'XxSamuelBeastBl0ckxX',
                     'BROOKLYN_Orbit201491', 'Playz_SPARKLY96', 'Jacks0nBlade47', 'PandaPlayzG0lden',
                     'XxIsab3llaSlim3Ic3xX', 'MagicHeroNeon', 'L3viDanc3r34', 'Silver_Giga59', 'XxFlashGalaxyAcexX',
                     'Rogue_Giga201370', 'BeastMysticHyper', 'RocketTiger31', 'HawkRiftByte2011',
                     'AlexanderGlitchDark2', 'KayleeFlick53', 'PlayzInfernoZeroYT', 'XxEllieIceFirexX',
                     'Xx_KayleePhoenixCrys', 'Fox_Ultra201111', 'VictoriaQueen200377', 'Isab3lla_PLAYZ29',
                     'ChaseSlimeHawk26', 'Skater_Sparkly2013', 'FlameSpark99', 'XxIc3SkyHunt3rxX2016',
                     'NinjaRogu3Rid3r2018', 'BlazePrismGhost20138', 'Ril3yWolfRav3n', 'XxSkaterBlizzardGiga',
                     'CLAW_Glitch75', 'LiamShadowTurbo32', 'XXULTRA_ZoomxX80', 'Ne0nShad0wAqua', 'JacksonViperVortex',
                     'MagicV3n0mFlam382', 'LegendPixelMystic', 'PrimalViperVen0m', 'SamuelBacon2018',
                     'ShadowCircuitKnight', 'ChaosSonicCircuit', 'Byt3Z3roMin3r', 'Willow_Stealth201316',
                     'Br00klynn_Bl0ck98', 'Xx_StealthCodeSparkl', 'Am3liaZ3ro202364', 'L3viTurboGold3n',
                     'Puls3Echo2007', 'Pr0S0nicDrag0n', 'FlameVortexFire2018', 'FlickViperAlpha', 'FlickByteRiftYT',
                     'ChaseBladeVortex', 'W0lfSt0rmy2020', 'Fusion_Turbo2013', 'EzraPrismEch0', 'HunterHawkW0lf',
                     'Xx_HarperPrismMystic', 'HazelWraith12', 'UltraGhostSlime_YT', 'InfernoCraze200822',
                     'R0cketMasterPixelate', 'XxBlastStealthStormx', 'MysticNight95', 'Owen_Ninja97YT', 'WyattN3on2015',
                     'StealthBuilderBlaze', 'ZoomWraithGhost_YT', 'PrismLuckyZero', 'MAGIC_Stream64',
                     'XxMysticStormArrowxX', 'Z00mPr0201775', 'XxRogueBeastxX91', 'HAZE_Turbo201453',
                     'BytePhoenixPrism48', 'Logan_Cookie73', 'DuckRock3tTurboYT', 'IcePowerStorm2003', 'NoraSonic65',
                     'ElijahQueenPrism68', 'B3astSlim321', 'N0ra_Slime2016', 'WraithNight201389', 'N0vaC0deThunder',
                     'Ic3_B3ar201947', 'MiaSonic58', 'XxStarryOrbitxX78', 'ViperDark72', 'PandaClaw2011YT',
                     'XxRil3yLionxX200548', 'SkyLight202098', 'XxSparklyUltraAlphax', 'Ev3lynArrowPow3r47',
                     'VictoriaFire34', 'BrooklynnSkyMoon', 'XxChaosPowerMasterxX', 'XXELLIE_TigerxX',
                     'MoonSparklyHunter', 'Str3amZapMagic201834', 'Pix3lTurboH3ro38', 'XxZero_FoxxX2015',
                     'XxVort3x_NinjaxX2007', 'XxZer0KingxX59', 'XxWraithHunterFirexX', 'XxB3arPix3lPow3rxX',
                     'Vip3rByt3Epic', 'Ic3KnightGam3r', 'AriaRiftTurb0', 'WolfSparkBear', 'Dani3lIc3Hunt3r',
                     'MasterFire202328', 'Ghost_ZOOM49', 'XxEzra_GigaxX2022', 'PixelatedAlpha201048',
                     'AsherRiftThunder', 'Stormy_Drift2017', 'LeviPixel52', 'Str3am_Dawn2003', 'NoraStreamVoid2002',
                     'TurboJ3llyFir3', 'RogueMax97', 'SavannahLuckyFlame', 'Aqua_Rid3r87', 'NightNeonBear96',
                     'MinerEpic95', 'G0lden_C0de2005', 'XxRil3yV3nomxX16', 'InfernoByteNeon2014',
                     'BlizzardBuilderFusio', 'Wraith_Ph0enix51', 'ClawCha0s52', 'ChloeEchoClaw', 'LaylaSonicFlame2008',
                     'Sky_Neon92', 'PlayzFir32017', 'FrostMysticIc3', 'XxCircuitNinjaSt3alt', 'AvaBlizzardEagle',
                     'XxEpicNightFlickxX', 'JellyGlitch13', 'AsherDawn88', 'EpicByteRocket13', 'FlameNovaHawk',
                     'VenomBlastInferno200', 'ProViperLucky2007', 'Rock3tSkyAc32023', 'St3althSparklySpark',
                     'CookieBacon2018', 'XxDawnDancerxX2018', 'DANIELRIFT97_YT', 'Venom_GigaYT', 'Hawk_Rocket46',
                     'Xx_OLIVERVORTEXVENOM', 'Vortex_Galaxy33YT', 'CookieFusionHyper', 'XxOm3gaFir3LuckyxX98',
                     'XxEmmaCraftMagicxX20', 'ZapLucky82', 'Skater_Flick2021', 'PixelNovaDark2012',
                     'Xx_LucasBlastPhoenix', 'Hyp3r_STARRY89', 'PandaPhoenixPixel201', 'EliStormTurboYT',
                     'Cyb3rPix3lat3d91', 'Inf3rnoPrimal200389', 'XxLuckySlimeThunderx', 'Qu33nEagl3Dark',
                     'Victoria_Thunder89', 'ToxicLight57', 'Xx_CIRCUITCRYSTALST3', 'EthanLegendHawk', 'SparklyByt3Claw',
                     'GigaBaneBlock2020', 'Silv3rFlash201521', 'XxScarlettStormChaos', 'XxHazeNightBytexX',
                     'QueenRider201495', 'Slime_Zer02013', 'Jam3sNova2012', 'XxAriaMysticInfernox', 'XxOliviaPandaxX84',
                     'XxBladeMoonMagicxX', 'XxNoahKingPrismxX', 'GoldenVenom202187', 'XxGabrielRogueChillx',
                     'Hyper_Miner201230', 'XxFlickGalaxyxX2005', 'Ultra_Tiger202160', 'ThunderHer0Builder49',
                     'SavannahBlazeCraft', 'Tig3rStr3am2018', 'Hunt3rRogu378', 'XxRileyPrismTigerxX2',
                     'Ech0_Byt3201252', 'Stream_Rogue2021', 'DragonFusion51', 'KnightCraz3Craft', 'XxOmegaNeonxX64',
                     'XxHunt3rGold3nShadow', 'XxCharlotte_ChaosxX7', 'Toxic_ECHO63', 'Harp3rCrystalBan3',
                     'ZaydenEcho98', 'XxSamuelNovaxX2023YT', 'DuckStarryR0gue80YT', 'LucasHyperChill', 'StarNeonRift',
                     'LegendStormyHero', 'XxRaven_NovaxX2024', 'BlockPixel71', 'DuckAquaR0cket', 'StealthPandaUltra',
                     'Ril3yAlpha2021', 'XxViperFusionHeroxX', 'GlitchSilverGhost', 'ToxicCookieDancer',
                     'BearWraithStormy', 'GalaxyPrismDrift', 'BuilderChaseViper29', 'Queen_Pixelated49',
                     'LeviArrowDancer', 'SkaterCookieLight202', 'H3roMaxShadow', 'MateoSparklyMaster',
                     'Xx_VictoriaSonicMoon', 'Sky_Craz339', 'Zo3ProStarry2019', 'ElijahShad0wNight',
                     'PixelatedSaberCyber2', 'Toxic_FlickYT', 'NoraDuckPrimal2011', 'ArrowLavaPlayz2009',
                     'LUCKY_Alpha83', 'St0rmySkyPixel', 'SparklyMinerZoom2023', 'DancerTurboSparkly',
                     'VenomStealthToxic', 'PRIMAL_Ghost200862', 'Scarlett_Code2016', 'LukeCodeZero',
                     'CharlottePowerChaos4', 'ChaseDrag0n15', 'WILLOW_Jelly53', 'Str3amM00nPrism2014Y',
                     'Noah_Claw201012', 'AubreyBane49', 'FrostInfernoGalaxy', 'FlickIce88', 'FuryPlayzPixel81',
                     'Pr0Gh0stCyb3r2005', 'V0idSpark202359', 'UltraV3n0mAqua', 'AbigailPandaWolf47',
                     'HeroUltraFrost2002', 'Liam_Om3ga2018', 'BlockBear202069', 'JellyLegendBeast',
                     'XxRiderTigerxX2002', 'XxAceBuilderTigerxX', 'HunterZoom73', 'RiderFox91', 'SebastianCircuitThun',
                     'XxIsabellaRogueBearx', 'ZeroStealth2003', 'ZoomDanc3r2012', 'Nora_Blizzard62', 'L0ganN30nPh03nix',
                     'JellyFlash48', 'MinerVortexEagle2009', 'XxJackBuilderxX32', 'MaxM00n27', 'EvelynPulseKing2019Y',
                     'WyattHeroHunter19', 'BlizzardMysticBlade2', 'BLIZZARD_Rider99', 'Xx_Skat3rSonicDanc3r',
                     'SebastianHunterBlade', 'BrooklynRogu345', 'TurboRavenCraze', 'DawnStormySkat3rYT',
                     'BlizzardAquaVip3r', 'StreamStormAqua', 'DarkByteQueen2012', 'XxL3viGhostLuckyxX',
                     'RileyPixelated2016', 'Ven0mCraftR0cket2010', 'Legend_Prism81', 'XxWilliamEpicStormxX',
                     'VictoriaBear33', 'SilverChaosTiger2014', 'Aid3n_Circuit68', 'SkyVoid64', 'FuryPixelAlpha2006',
                     'BrooklynnIc3Craft', 'Ice_Rocket201348', 'XxLegendZeroRoguexX', 'BlastEagl3Flam32012',
                     'DawnEpicPrism', 'FlameLionCookie2003', 'Rock3tMoon56', 'LuckyCha0sRaven2008', 'V0idInfern0F0x',
                     'XxEliLi0nBearxX2017', 'XxSt0rmStarryBlizzar', 'LionBeastClaw2003', 'B3arBac0nKing',
                     'Scarlett_Stealth2007', 'Charl0tteGamer2010', 'QUEEN_Blizzard200230', 'S3bastianGlitch61',
                     'XxHawkNovaBearxX', 'XxMagicNovaxX2010', 'XxAvaFlashxX12', 'Puls3Z00m52', 'AvaFusionPro2022',
                     'XxEchoCodeBaconxX201', 'AvaDawnLegend', 'Blad3Hyp3r2007', 'Aria_Claw200836', 'HyperDawnMoon',
                     'DragonBacon200841', 'LukeGlitchTiger44', 'XxHawkP0werxX2020', 'Aur0raDanc3r40',
                     'XxScarlettFirexX75', 'LegendRift200411', 'SamuelTurb0Rift2021', 'Grac3Hunt3rCrystal20',
                     'Daniel_Bac0n2004', 'Xx_ChillBlastBuilder', 'XxCyberEpicLightxX', 'Haze_Vortex26', 'Galaxy_Bane73',
                     'Rogu3V3nomLucky', 'Fir3FlickPanda', 'ZoomBlazeHero11', 'EpicByteZero', 'XxGalaxyIc3NightxX20',
                     'CircuitH3roNinja', 'Blizzard_Starry70', 'ScarlettStarry50', 'PixelatedClaw43',
                     'MaxT0xicRaven202185', 'Shad0wArr0wStarry', 'Blad3FlickAc3', 'XxMast3rFusionxX2003',
                     'IsaacViperGhost2009', 'Gabri3lGold3nLucky52', 'Rav3nRift49', 'SEBASTIANBEAST2020_Y',
                     'GalaxyHer0F0x', 'MiaPr02021', 'KayleeVortexShadow20', 'JulianKing94', 'ArrowEagleZero',
                     'Build3rZap202453', 'XxDancerW0lfxX2020', 'Phoenix_MASTER88', 'CharlotteMax32',
                     'Pix3lat3d_Prism32', 'Cart3rHyp3r80', 'Micha3lIc3Turbo', 'OliviaR0gueBlade', 'LunaLuckyPhoenix',
                     'FlashSilver73', 'SparkByteEcho2021', 'RiftCyber19', 'Byt3BlizzardUltra', 'Om3gaQu33nLion',
                     'Z00mStar2009', 'OmegaBlockIce2012', 'XxSophiaStreamBytexX', 'Knight_INF3RNO18',
                     'Aria_Blaz3200457', 'XxPowerBlizzardxX56', 'FireLightEagleYT', 'Epic_Ic32011',
                     'XxLuckyCrystalPh0eni', 'Orbit_Nova61', 'MysticDragonZap2016', 'FoxAlphaPower',
                     'Golden_Galaxy202250', 'Rift_Turbo90', 'MinerFlick26', 'J3llyDanc3rCrystal', 'ZapFlick202492',
                     'St0rmRiderZer054', 'Aria_Fire20', 'Bac0nH3r0Crystal', 'ViperBlastFlame2021',
                     'NinjaRogu3Turbo2015', 'BrooklynnMoonWolf202', 'DawnLion33', 'Wolf_Haz32006', 'ZO3_Rid3r50',
                     'Ezra_Rift201823', 'JellyBl0ckGiga', 'Magic_Viper2007', 'ElijahSparkRid3r', 'XxPixelatedFuryWrait',
                     'EpicSaberStar2006', 'Ech0BlastVen0m', 'Sky_Shadow16YT', 'SamuelUltraHyper', 'MasonKingIc3',
                     'Vict0riaSlime84', 'HannahOrbitPulse34', 'PhoenixSkaterPlayz', 'WilliamSlime77',
                     'Harp3rCircuitFir3', 'StreamNova44', 'ChaseCyber64', 'BlastPrism23', 'Str3amHunt3rInf3rnoY',
                     'OmegaHazeLegend', 'GalaxyFuryPhoenix', 'HazelGlitchCraft', 'XxFrostMysticxX2011',
                     'XxGraysonPandaxX48', 'Arr0w_Viper2003', 'BlockPrimal33', 'GabrielAlphaViper202', 'CarterFlick70',
                     'Star_Flick2019', 'XXAUBREY_BuilderxX21', 'StarryChaosStormy201', 'BeastKnightDrift',
                     'WilliamZer0202256', 'Gamer_Chaos23', 'HawkChill2009', 'XxEagleGigaxX2014', 'MichaelMysticDuck74',
                     'ScarlettPower57', 'HenryMystic200214', 'XxSebastianZ00mMiner', 'Pro_Glitch46YT',
                     'T0xicRider2011YT', 'ZOE_Stream2013', 'ScarlettStream2012', 'AmeliaPixel202392',
                     'ShadowBlaz3200241', 'JellyBladeGlitch50', 'Sab3rVort3x201176', 'LucasCrystalNova',
                     'EvelynNeonFox2018', 'Night_Slime2008', 'TurboDark2010', 'MateoPanda201152',
                     'Elli3WraithFir320191', 'XxCyber_FirexX78', 'OrbitBladeBlast', 'XxEch0FlickxX2014YT',
                     'PandaTurboMaster2004', 'GalaxyGamerBlast2008', 'CharlotteNightVenom', 'DanielHawkLi0n',
                     'Xx_KingBlizzardBlock', 'AvaB3astMagic2023', 'N0vaEch0G0lden_YT', 'XxJam3sBuild3rxX50',
                     'Sab3rF0xV0rt3x', 'TOXIC_Nova71', 'HarperHer0Blade', 'ScarlettGoldenUltra2', 'StarNightPix3l',
                     'DawnClawRift2011', 'MinerRogueSilver', 'Mat3oVip3rGam3r', 'WyattGoldenFlash', 'OliviaVoidPixel52',
                     'IsaacMagic50', 'QueenFlashWolf', 'HenryDriftCircuit98', 'LightHunterViper', 'XxOrbitEchoChillxX',
                     'LuckyJellyShad0w', 'FusionB3ar24', 'W0lfR0cket2009', 'SparkHaz32009', 'RiftHazeMoon98',
                     'SparkVoidPower', 'XxByt3BlockxX200514', 'STAR_Pulse24', 'RiftLavaHawkYT', 'Ac3EpicBlad3',
                     'Br00klynBlaze67', 'PandaEagle200914', 'StreamPulseGlitch', 'ToxicViperAce2019',
                     'IsabellaUltraFury200', 'MiaFlam3Sonic', 'XxBlastVortexxX64', 'FoxMiner2024', 'Rift_Omega96',
                     'KnightMinerNeon', 'Rogu3Fir3Rift2024', 'HunterBacon22', 'ByteCraze38', 'AsherFr0stN0va',
                     'BrooklynThunderLava', 'Bac0nAqua28', 'XxSkat3rCraftH3roxX2', 'ZoomStar63', 'Xx_CarterGh0stInfern',
                     'WillowBuild3r95', 'MasterPrimal16', 'DanielShad0wZap2002', 'GraceFlick15', 'ShadowFusionTiger',
                     'XxByteArr0wRavenxX', 'PrismKingV0id26', 'Kayl33Crystal88', 'Micha3lZ00mCraz32023',
                     'IceStarry201257', 'Charl0tteBlade35_YT', 'KayleeSparkGhost2004', 'AvaDanc3rLucky78',
                     'WilliamInfernoPixela', 'Xx_ElijahStarryHyper', 'MysticLucky2008', 'L0ganC0de10',
                     'Jax0n_C00kie2020', 'TurboGlitchMagic76', 'SilverAqua202283', 'JellyGhostDawn51',
                     'Ne0nPrimalNinja', 'Sab3rAc3Nova', 'BlockShadow201546', 'W0lfBuilderBac0n', 'InfernoRavenViper',
                     'DragonSt3althBan3202', 'Xx_MasonSkat3rVort3x', 'Pixelated_Hero76', 'PrimalStorm201690YT',
                     'ShadowStream201949', 'Haz3lGhostVort3x', 'AuroraAquaGam3r32', 'Light_Turbo90',
                     'RileyPlayzGalaxy40', 'XxBan3NinjaxX2023', 'PhoenixPrimalLight', 'PlayzNe0nSky',
                     'Am3liaVort3xClaw2006', 'OmegaStormyZero2022', 'StealthBlazeBlock200', 'Hannah_Blizzard2020Y',
                     'Jacks0nBlazeChill92', 'XxDrag0nGigaxX', 'BlastFlickTurbo2016', 'S3bastian_Skat3r12',
                     'AquaVortexLava2007', 'BlockWraithStream86', 'MAGIC_Chaos2007', 'ChaseChill2023',
                     'XXMIA_GlitchxX2017', 'Addison_ORBIT76', 'SLIME_Starry66', 'NoahMasterDuck', 'N0AH_Shad0w2010',
                     'G0ldenPh0enix20', 'CrystalLucky30', 'XxPixelNightJellyxX9', 'Owen_Flash2021', 'FuryShad0w55',
                     'EllieViperRift2002', 'GigaEch0Blast', 'FlickPh0enix2019', 'QueenOrbitAlpha2020', 'BaconSlimeHaze',
                     'Om3gaTurbo2005', 'XxNoahLegendxX30', 'EmmaIc341', 'ZoomHunterByte', 'RileyCraftGhost',
                     'AlexanderSlime76', 'TurboLavaMoon', 'Vip3rPanda59', 'XxBane_BlizzardxX43', 'Hunt3rDark73',
                     'Mas0n_CLAW56', 'Xx_OliverR0cketBeast', 'CarterGlitchClaw63', 'LavaFuryRogu3',
                     'ThunderFlashPulse200', 'BuilderDragonNeon80', 'CodeRavenMax', 'N0vaPrismBan3', 'EzraMin3rArrow',
                     'Jax0nDrag0nBlaz3', 'XxEliLavaxX49', 'Void_Dawn200774', 'CodeVoidLion', 'AuroraSonicSparkly',
                     'Scarl3ttZoom59', 'HawkLuckyFox2020', 'BlazeHazeChase', 'Mast3rSonic2014', 'XxC00kieDancerFirexX',
                     'AuroraStealthKnight', 'VenomFlashZero', 'HarperDancerCyber', 'BlastStormViper', 'Aid3nHawk94',
                     'Star_Stealth2021', 'WillowHawk98', 'XxV3nomBan3Hyp3rxX20', 'Xx_V0rt3xGlitchPix3l',
                     'Flam3Fr0stF0x', 'JaydenHyperCha0s', 'Silver_Craft67', 'XxSparkRocketxX2010', 'Ow3nShadowPro',
                     'FoxGhostDawn202426', 'PulsePrimalPrism', 'ZoomMoonSpark', 'JulianEpic91', 'Xx_PlayzSilv3rPix3la',
                     'AubreyFlick2007', 'HunterUltraTurbo', 'XxP0werMasterxX20218', 'RiderProFrost',
                     'XxEllieZeroStormxX77', 'NoahBacon202075', 'TurboFusion15', 'StarryFlashCrystal20',
                     'DriftGlitch11', 'Void_Jelly2010', 'SavannahSkat3r75_YT', 'PhoenixEagle50', 'Rogue_Vortex78',
                     'Grac3Skat3rSonic2014', 'VoidSparkly84YT', 'KingFr0st59', 'JackFr0st31_YT', 'Om3gaFir380',
                     'FrostChaseMystic', 'XxKnightMysticDragon', 'ThunderDancerVoid201', 'XxHawkRavenWraithxX9',
                     'V0id_SKY200488', 'BlizzardOrbitIce', 'Infern0Stealth35', 'XxAlphaRavenxX2006',
                     'PulseLightHero2008', 'XxGh0stEpicxX2002', 'XxLucasDragonxX2015', 'XxIceHeroStarryxX17',
                     'LukeSonicPrism99', 'Thunder_Cyber201740', 'LionBlazeBlizzard', 'Chl03Blast2009',
                     'Rav3nPix3lat3d97', 'ViperBlizzardRift63', 'RiftSky93', 'BlizzardCodeInferno',
                     'XxZoeUltraVortexxX', 'AquaFire85', 'PrimalShadow200489', 'HazeNovaPro', 'ZOOM_Aqua23',
                     'CRAZE_St0rm200813', 'Craz3Puls3200393', 'CarterHyperLucky', 'Gam3rMoon2010', 'ByteHyper93',
                     'AsherChill80', 'Vip3rRock3tMystic', 'EthanV3nom96', 'FuryHawkEpic2023_YT', 'MiaBladeEcho',
                     'NovaOmegaHaze', 'Ow3nZapPandaYT', 'CrystalFireHaze67', 'EpicStorm49', 'EagleStarCraze2004',
                     'Chas3Ech0Build3r', 'StormyCraftEcho', 'MinerStarryCraze84', 'CharlotteHero66',
                     'XxMiner_SkyxX2015', 'GabrielMagic200687', 'GabrielRiftPulse2010', 'AidenVortexClaw',
                     'XxIceStarxX2007', 'Ril3yTig3rBlock2005', 'MiaBan3Chill', 'RogueMinerLion', 'XxDancerDarkTigerxX2',
                     'Min3r_Playz2004', 'Xx_WILLIAMROGUESTARR', 'Xx_ELLIEFLAMEBLIZZAR', 'XxPrismZapxX90',
                     'Vict0riaChill82', 'H3nryMast3rAqua2018', 'Stormy_St3alth2010', 'BrooklynnByteBeast',
                     'GlitchSkyCyb3r2015', 'RavenTurboGalaxy68', 'PrimalBladePrism', 'Elli3Haz3Flick',
                     'XxBearAcexX2011', 'AuroraMagicSkater', 'FoxThund3rVoid', 'HannahEchoSt3alth', 'Ellie_Turbo2003',
                     'CodeBlazeSaber2011', 'XxIsaacSonicxX2018', 'XxByteNinjaxX94', 'PlayzOm3ga_YT',
                     'XxEpicArrowGoldenxX2', 'ElijahV3nomMagic', 'BlockHyp3r89', 'Silv3rWraithGiga2007',
                     'CookieBladeAqua', 'XxMateoCookieMaxxX28', 'InfernoVoidFlick', 'ToxicDuck2009',
                     'AuroraNeonRaven2017', 'SophiaZoomIce2022', 'MoonFlashRid3r', 'MAGIC_Blad3201926', 'GabrielRift50',
                     'Liam_H3r02017', 'B3ar_RID3R33', 'OliviaLegendChase201', 'PowerBearHyper2008_Y', 'Riley_Orbit21',
                     'GlitchShad0wSaber', 'XxBearLegendxX92', 'Xx_Turb0BlizzardHer0', 'GlitchEagl3Star',
                     'MoonPulseSparkly2016', 'NoahVenomAce', 'Xx_VictoriaDawnRock3', 'CharlotteBearLegend',
                     'Fury_Star20YT', 'Grac3Blizzard17', 'ProInf3rno200396', 'St0rmyQueenUltra', 'LunaFlick2003',
                     'B3astHunt3rClaw2015', 'Ezra_Chaos23', 'GabrielM00nWraith', 'Giga_Turbo201596',
                     'Byt3_Dragon200845', 'XxAsherEch0xX2003', 'MagicP0wer2023', 'R0GUE_Giga2019',
                     'XX_Paisl3yPix3lB3ast', 'XxAquaVoidxX2005', 'XXPRIMAL_TigerxX2003', 'GabrielSkySonic33',
                     'UltraCrystalEcho2012', 'Epic_Beast201578', 'FireMoonNight2011_YT', 'PandaWolfSilv3r',
                     'XxPlayzDrag0nNinjaxX', 'XX_Rock3tShadowLight', 'BLADE_Ghost2008', 'PrismRocketMoon',
                     'BlastPhoenixBane2019', 'HawkZap47', 'BrooklynnSparkly59', 'Ezra_Eagle98', 'Samu3lPuls32011',
                     'PrismBlast2016YT', 'PrismProNinja19', 'RileySaber55', 'OrbitStarEcho2023', 'BaconSaber201491',
                     'VortexFuryFrost20193', 'TurboDarkGamer', 'Luk3Fir3Turb02009', 'AlphaRocketCrystal20',
                     'Flame_King200548', 'GalaxyVip3rHawk', 'Build3rBaconChaos202', 'IsabellaUltraShadow',
                     'XXGIGA_DawnxX98', 'XxRileyPixelatedEpic', 'EvelynCookieSpark202', 'S0nicQueenDancer2012',
                     'Ev3lynCraz3Fusi0n202', 'Flash_STREAM67', 'IceClawFusion2015', 'OmegaPrimal32', 'SkySonic39',
                     'UltraFusionTig3r2007', 'BladeChaos202084', 'Paisl3y_Duck2015', 'OrbitTurbo201984',
                     'Amelia_Neon2021', 'SparklyRogu3Max2016', 'MichaelGalaxySonic20', 'XxOrbitR0gu3xX2005',
                     'NightNeonPulse', 'XxL3g3nd_Thund3rxX94', 'Bear_Viper35', 'HannahEagle15', 'ETHAN_Turb077',
                     'AceLavaBlaze', 'Inferno_Viper37', 'KingVen0m2005', 'Aid3nDanc3rChaos', 'XxRiftBuild3rCyb3rxX',
                     'XxLavaGoldenxX96', 'ByteNovaVenom', 'StealthStream201710', 'Viper_Rider2023',
                     'SavannahBlockNinja20', 'LeviTurbo200571', 'NoraMystic70', 'Scarl3ttSonic2007', 'Liam_Zero58',
                     'Jax0nPr0Blast', 'Paisley_Flash28', 'SaberBlaze63', 'Xx_BrooklynInf3rnoGi', 'Viper_VEN0M2012',
                     'TurboDriftBan3201084', 'XxHunterFoxxX2007', 'Builder_Silver16', 'Eagl3Craft2009',
                     'N0vaPixelCha0s', 'XxGalaxyOrbitCraz3xX', 'MaxAqua202325', 'SamuelSparklyDancer',
                     'ByteMinerLion2018', 'JulianVenomRider2019', 'Crystal_Hero202125', 'AriaTigerChill2015',
                     'Lucky_Ac32024', 'PixelCircuitBlaze201', 'ZeroQueenHero2005', 'GabrielBuilderWraith',
                     'JaydenInfernoCookie2', 'Grays0n_Glitch2016', 'Micha3lFlick2009', 'Shad0wRiftVip3r',
                     'SaberCrystal97', 'DuckLucky201929', 'HarperVen0m2011', 'Cha0sAquaFlash', 'XxChlo3_RAV3NXX2021',
                     'JulianAceZ00m2018', 'MASTER_Starry202194', 'Zo3_H3ro2009', 'Chl03R0ck3t2005',
                     'WraithRavenPixel2015', 'ZAP_Stormy96', 'XxLightDriftxX50_YT', 'XxStormyRiderxX25',
                     'AlexanderDuckRocket3', 'KnightAlphaPho3nix', 'NinjaPrism98', 'ZaydenBlast77', 'FireByteFlick70',
                     'PixelatedRaven201999', 'LiamByt3Flick2011', 'Bl0ckEch0Pr0202390', 'Xx_BuilderDragonNigh',
                     'EvelynCookieDrift42', 'St0rm_Shad0w2008', 'TigerHer0Pr0', 'HunterMysticChill60',
                     'H3r0_L3g3nd201311', 'Fusi0nPrimal2023', 'LoganMasterClaw38', 'EchoStarryChill2008',
                     'HyperAquaMoon2008', 'BlockLion200382', 'BlazeArrowDawn', 'VOID_Skater2003',
                     'XxPh0enix_BearxX2012', 'SaberRiderCrystal200', 'CraftNinjaFlick', 'Xx_DanielWraithViper',
                     'AbigailInferno80', 'BrooklynPuls3Thund3r', 'ByteStorm97', 'XxTurb0W0lfxX', 'NightEpicEch0',
                     'RiftMin3rPanda', 'St0rmyC0dePr02007', 'Ac3Ph03nixMin3r', 'ECHO_Galaxy201787', 'XxLuk3_ZAPXX66',
                     'AsherGh0stNinja', 'LightSkyHero2004', 'BlizzardLucky2010', 'Inferno_Legend2006YT',
                     'Hunter_Byte82', 'LuckyFusionZero2007', 'HawkToxic79', 'JacksonRiftSkater201',
                     'XxLucasAlphaDrag0nxX', 'ByteLava200212', 'Z00m_Crystal66', 'XxDrag0nN30nxX72', 'WillowGalaxyNova',
                     'XxAm3liaPlayzCraz3xX', 'SparklyBeastGamer57', 'XxMiaOmegaBladexX201', 'Stormy_Builder202383',
                     'LightNeonDancer45', 'JulianGiga2004', 'H3ro_ZAP2021', 'DawnPix3lat3d2024', 'Bac0nMin3rClaw',
                     'ChaseFrostBacon', 'RileyTigerOmega45_YT', 'XxH3roZapxX37', 'ChaseRiderGhost', 'SebastianPower34',
                     'Willow_Alpha82', 'T0xicUltra2009', 'GigaBlizzard13', 'XxNoraNovaBlizzardxX', 'HeroChaos2009_YT',
                     'PlayzOmega_YT', 'SophiaBlaz318', 'Ph03nixR0ck3tEagl3', 'ThunderCrystalViper7', 'XxLavaVortexxX',
                     'ASHER_Flick2011', 'XxWolfGold3nMagicxX8', 'Danc3rUltra12', 'CharlottePhoenixDrif',
                     'XxEthanGamerNeonxX', 'HUNTER_Ultra20', 'PixelBearArr0w2018', 'WolfTurbo200912', 'AUR0RA_Drift24',
                     'ScarlettLion2004', 'SaberVenom201078'}

local RECEIVER_LIST = {'AvaHawkHer0', 'MaxStormyShadow2002', 'VenomMasterDrift', 'KnightGhostBlock', 'C00kieCyber79',
                       'Vortex_Neon79', 'Min3rStar2012', 'ScarlettGiga2004', 'Z0eEch073', 'PulseSilverKing',
                       'Vip3r_Pow3r2005', 'OliviaCodeArrow20122', 'BrooklynnIceChaos', 'Xx_HazeStealthSilver',
                       'AquaHeroDancer', 'GoldenOmega20', 'JellyCircuitPulse', 'XxGiga_DuckxX2020',
                       'EllaSilverRider2007', 'JaxonStormEcho2022', 'NoahTurboDancer', 'Min3rAlphaCircuit200',
                       'N3onVort3xGlitch', 'BlizzardHazeHer02006', 'XxOliverOmegaxX78', 'PrimalCircuitFire',
                       'St3althF0x68', 'LaylaGalaxyMoon70', 'AddisonArrowPrimal20', 'WILLIAMPRISMSKAT3R_Y',
                       'C00kie_G0LDENYT', 'WolfBlizzard32', 'Ezra_Turbo2023', 'Ace_Skater202412', 'StarChas399',
                       'Aur0raBlazeWraith201', 'IsabellaEagleV0rtex', 'Xx_HazelInfernoBlast', 'FuryM00nBlaze',
                       'Bac0nGam3r2010', 'MysticFury51', 'MaxGigaSaber', 'Sebastian_Craft20055', 'Gabri3lOrbit2019',
                       'FusionIceFox', 'HenryPrimal22', 'N0vaUltraAce', 'XxCyberWolfxX2004', 'Xx_IsabellaStormyEch',
                       'ChaseS0nicCha0s', 'ChloeDancerHaze', 'TigerCyberIce201035', 'Arr0wGh0stPrimal',
                       'XxDragon_ArrowxX71'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
