-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'AquaFireN_inja6185', 'Fusio_n596Ace', 'NeonLight16523', 'CalebFlash7590', 'Ech0354Cyber9609',
                     'JaydenFlash51655', 'JulianMiner1926', 'ElenaFusion58862', 'DawnStar2645', 'MayaCraft2024',
                     'TheodoreFlash73431', 'ElenaRider8233', 'NathanFlame7835', 'Oliver265Storm7354',
                     'EagleBuilder996134', 'SilverOrbit66629', 'AndrewHero32807', 'Bl0ckGamerFlame1829',
                     'AlphaEagle7365', 'Cl_aireDawn6350', 'EagleBuilder41734', 'Lucky245Code', 'AceFox1495',
                     'PixelMysticHero3644', 'Flame263Turb03822', 'CodeNeon50665', 'BlockBlaze6519', 'SilverCrystal5349',
                     'StellaFrostRider', 'PrismMystic8743', 'JackHyper34685', 'CarterDrift5844', 'HenryWolf8238',
                     'FoxArrow9838', 'CrystalLucky988522', 'BlockChill75846', 'ChillPixel5856', 'Fl_ashGamer7382',
                     'DawnCyberMoon8197', 'MinerNeon3037', 'EthanE_choPhoenix391', 'NoraAlpha3310', 'NovaDrift1599',
                     'Chl0eFlash4884', 'PhoenixLion1362', 'AlphaLu_cky', 'AvaLion57147', 'Charles611ShadowByte',
                     'ByteAlpha74996', 'ClaireCyberDawn', 'James213L1onWolf', 'JackStormCrystal5111',
                     'FrostMoonGam3r6720', 'JaydenGamerFox5364', 'RocketCode100031', 'Liam991Ro_cket',
                     'Sarah364Gamer1320', 'Hy_perLucky7737', 'VictoriaCraft47368', 'Gabriella064Mystic13', 'H_yperAqua',
                     'AdelineRocket89564', 'CyberBlaze44907', 'Storm858Alpha', 'FireHyper5295', 'FireBuilderStorm2144',
                     'VioletWolf56031', 'N_injaBlaze', 'Chlo_eFox', 'WolfM_ystic', 'DavidWolf860Frost',
                     'Fusion414Builder38', 'BlazeAlpha5857', 'ThomasFusion5342', 'Mystic123ArrowBlaze7',
                     'Madison034Blaze23', 'OrbitPhoenix3564', 'Evelyn232Code1168', 'Silv_er366Gamer9013',
                     'ChillFusi0nSilv3r', 'DavidBlock5088', 'AceFlash75089', 'Star_HyperSky4818', 'OrbitByteHero9365',
                     'MoonTurbo64156', 'Miner835Ace601722', 'AmeliaFlash8988', 'Drift052Ace3996', 'LucasMoon41545',
                     'TurboFusion2527', 'AlexaBlock1180', 'DriftP_rism4460', 'Pr1smFlash9656', 'FrostLigh_t8016',
                     'AlexaFrost5660', 'Echo706Alpha', 'AnnaCyberFlame2214', 'AaliyahNinja6193', 'LightHyper73232',
                     'AlphaTurbo4705', 'BlockAlpha361433', 'Micha3l720Ninja', 'FlashArrow9315', 'AaliyahFusi0n6008',
                     'GraceHeroBlock6784', 'VioletFox8222', 'CraftByte32513', 'Byte449Builder', 'EagleSky84438',
                     'CodeSpark2334', 'BlazeLi0nFlash8515', 'FrostFire3902', 'N3onSkyBlaz33904', 'BellaPhoenix1254',
                     'JamesWolf9077', 'AubreyFusion6337', 'AquaFu_sion', 'Sky439Eagle', 'FrostFlash9128',
                     'LaylaCraft11703', 'Co_deMiner5415', 'Julian729Star3201', 'CamilaEagl3', 'DriftEagle3055',
                     'RocketTurbo2556', 'EchoFlash9161', 'LightAqua14952', 'AuroraLion895223', 'Gabriella554Lucky',
                     'LightPho3nix707724', 'FlashAceEcho8748', 'DawnMiner706636', 'HeroNinja7431', 'SparkFire6428',
                     'PenelopeLucky4013', 'Turbo890Eagle4466', 'ByteHero6256', 'LucyFire4020', 'GraceStarCrystal7973',
                     'MinerHero429Nova36', 'AceHeroTurbo21', 'OrbitFusion66600', 'AllisonStorm36677', 'StarCode8783',
                     'LincolnStorm4036', 'SamanthaDawnEagle682', 'Sebastia_nSparkFlame', 'Shadow475Dawn4467',
                     'FlameHyperCraft8461', 'NoahBy_t3Storm251331', 'CharlotteGamer602Sha', 'ZoeyVenom44326',
                     'Pho3nixGhostEcho6108', 'Samuel162Prism3463', 'ElliePrism4071', 'ThomasNinja7233',
                     'AlexaPhoenix7741', 'SarahCraft998Ace9408', 'DylanCraftBy_te6504', 'AnnaOrbit24', 'EagleSt0rm31',
                     'Charles736Blaze', 'Hannah900Ace32', 'F_lameChill9810', 'NoraGam3r681628', 'Ow3nFlashH3ro6315',
                     'FlameNova8815', 'NoahArrow7028', 'JoshuaHyper2462', 'FlameOrbit49739', 'VenomHyperMystic3623',
                     'CarterLight1230', 'Samuel423Prism2632', 'F1reStar40', 'FrostSilver5349', 'CarolineBy_teArrow73',
                     'BytePhoenix1291', 'Light326Dawn', 'S0phiaGamer7591', 'AlphaGhost71079', 'LeoCodeDawn',
                     'AlexaRider1367', 'CyberFlash23052', 'AmeliaFusion4273', 'Sky658Rider', 'Drift331Turb0424842',
                     'Mi_chaelSpark1768', 'DawnWol_f4626', 'Levi899Fox8212', 'LionFox1566', 'LoganBlock71025',
                     'Ev_elynFox', 'ThomasFrost2658', 'AceC_raft33', 'Gabriella074Alpha216', 'Allison_Flash4827',
                     'MysticAquaEcho6128', 'KennedyAce77050', 'AlphaPrism429Pix3l77', 'Prism070Gamer',
                     'LeoBuilder263130', 'Lion394Drift', 'PhoenixBlaz_e', 'CrystalFire926Lion', 'Daniel_768Flash12882',
                     'Em_maEagle21', 'Zoey685Hyper9386', 'TurboRi_der7046', 'AlexanderFlash4161', 'LionAqua80208',
                     'JacksonSpark5700', 'RyanTurb_08138', 'BuilderWolf20106', 'PenelopeMiner791Neon',
                     'IsabellaCraftNeon882', 'RyanAce14510', 'ZoeDriftPixel1744', 'HenrySilve_r510923', 'AmeliaFla_sh',
                     'CyberRider4031', 'SkyMysticPrism4946', 'SkySpark8626', 'Samuel891Flash37', 'Samuel107Pixel',
                     'EchoPrism4198', 'Anna566LionCode', 'SparkCrystal68328', 'Spark827Nova', 'AceCrystal6702',
                     'PixelMoon88033', 'Moon333Hyper', 'Lincoln576Flash1596', 'LoganCrystalStorm770', 'ByteMiner108732',
                     'JaydenFlame74933', 'IsaacHero8599', 'M_inerStar7033', 'PhoenixSto_rmShadow9', 'CrystalHyper6684',
                     'FrostP_hoenix3497', 'AquaOrbit342341', 'FlashNinja3055', 'Prism281Aqua3828', 'ZoeyTurbo3366',
                     'MadisonPixel7652', 'LeoAquaRider', 'R0cket995Li0n8781', 'Builder582Cy_berSpar',
                     'PhoenixAlpha16500', 'JaydenStarFr0st4604', 'Fox437Orbit', 'Mia005Gamer921824', 'MiaFusion1776',
                     'BenjaminWolf2768', 'NovaArrow20619', 'DawnStar3047', 'StormChill1498', 'WilliamLight44351',
                     'RyanNova7843', 'BellaCrystal9604', 'DawnAqua677729', 'RiderRocket6418', 'BenjaminSky34',
                     'StellaByte2082', 'ClaireGhost4075', 'AnthonyCrystal86421', 'S3bastianBlock6451',
                     'Vi0letCyberBuilder29', 'NeonFrost2968', 'BlazeG_amer1050', 'HyperRocket134825',
                     'Shad0w877Ninja3748', 'PhoenixHyper8988', 'Ryan732Hyper8053', 'SkyOrbitWolf9278',
                     'L1ghtCh1ll796Craft', 'RileyBlazeStorm1315', 'GamerAce75335', 'EthanVenom1452', 'NathanTurbo8985',
                     'NovaTurboBlaze4791', 'FoxByte87790', 'PrismOrbitMoon5763', 'AquaMystic4907', 'Dawn075CodeLight',
                     'Rocket933Drift', 'LuckyRider19237', 'SparkArrow84706', 'ShadowMoonFlash5776', 'Orbi_tPh0enix7501',
                     'DawnRider1834', 'AvaGh0stNe0n9344', 'Mystic982Builder3459', 'DriftEag_le', 'Alexander119Echo7379',
                     'SamanthaMiner7304', 'KinsleyAlpha87975', 'StormFlash6684', 'PrismEagleRocket1103',
                     'Star13_7PhoenixHero', 'IsaacPrism1723', 'Ell_aChill', 'GamerRider4856', 'Maya559Fire',
                     'IsaacChill5490', 'Luca_sFox5946', 'EagleOrbit32412', 'EchoCode9742', 'AlphaOrbit9023',
                     'Gamer3_97Blaze7475', 'FirePris_m5719', 'CraftMystic34312', 'CraftSt0rm4328', 'F_lashNova39',
                     'RocketFusion9021', 'MadisonOrbit846339', 'Antho_nySpark8123', 'VioletWolfAlpha9850',
                     'RocketFusionStar4398', 'MasonNinja1682', 'JamesFox5215', 'LuckySilverFrost5548', 'SamuelNeon8334',
                     'HarperSky28', 'VioletAqua4230', 'Flash543DawnPhoenix2', 'Jonathan_152Ghost', 'Byt_eRocket887520',
                     'Lion754Chill3079', 'Sil_ver646Drift5893', 'JonathanHeroFusion', 'SparkSilver682634',
                     'FlashOrbit2188', 'FlashNeonNinja4734', 'ZoeMoon9655', 'AlphaMine_r', 'CraftBlaze86243',
                     'EaglePhoenixFire8531', 'J0nathanByte9734', 'HyperDawn8467', 'AidenBuilder15655', 'Gamer082Blo_ck',
                     'BlazeStorm8467', 'MinerFrostMystic1486', 'EmmaStormPhoenix26', 'AquaBuilder60198',
                     'JoshuaDawnMoon4784', 'EllaCraft9214', 'NoraCrystal4358', 'SkyTurboFu_sion52542',
                     'AriaGamer142527', 'PixelG_host', 'NathanPhoenix9172', 'NovaCraftFi_re9952', 'ZoeyFox2318',
                     'ChillRider1542', 'FoxDrift1401', 'Violet227Silver7972', 'LukeLightStar2277', 'Fox359Nova4162',
                     'Is_aacCode', 'Vi0letSky9025', 'FlashCyber9345', 'Phoenix1_06Arrow', 'Ghost543Code8459',
                     'RyanMystic749Lion554', 'Builder819Hyper', 'FlameShadow8548', 'IsabellaByte64958',
                     'Mas0n011Dawn1142', 'Silver132_Flame4011', 'Caleb059Blaze8396', 'DawnSkyNova4393',
                     'CrystalWolf428Pixel', 'M_inerFlash', 'MysticCodeDrift5245', 'Noah485Ghost9784', 'ElenaPrism8496',
                     'ByteBuilder8071', 'JohnFlame4555', 'CarterSky17560', 'FlameRocketLight5914', 'Genes1sEcho',
                     'JacksonFlame1588', 'ShadowPixel7882', 'Ha_rperStar475742', 'Phoen1xPr1sm7229',
                     'Gamer162Block4017', 'LucasAce7164', 'EagleFlash49471', 'FrostFlame938130', 'CharlesM_ystic3159',
                     'Sky689Gamer5843', 'DawnStorm82896', 'PrismWolf14859', 'Zoe471Builder7521', 'LeviBlaze41616',
                     'ChloeFlash1241', 'PhoenixFire992540', 'SparkDawn7449', 'G_abrielStar', 'PenelopeSpark3816',
                     'Liam535Wo_lf', 'SebastianAqua44279', 'SkyMoonDrift5330', 'Dawn502Fox5142', 'LightTurboHyper3827',
                     'ScarlettStar6741', 'JonathanCode8308', 'Rider204Builder6179', 'HeroSt_orm4776', 'William894Dawn',
                     'AvaCraft27511', 'ChristopherDrift5374', 'SkyPixel43758', 'ChillSilver3022', 'StarCraft25961',
                     'SkyCrystal4996', 'AnthonyL1on3415', 'ChillFusion7042', 'AllisonSpark2634', 'AceStarDawn743635',
                     'AvaAce1467', 'AllisonStar4673', 'EchoFire875035', 'AubreyStorm8206', 'EthanAlpha8161',
                     'AnnaSt0rm4009', 'Ril3y965Ac3', 'G3n3sis199Gam3r2132', 'AceFoxM_iner', 'EthanRocket619441',
                     'LightDawn5360', 'EmmaCraft4880', 'Crystal170Miner', 'Turbo547Shadow485638', 'Hero046Star2937',
                     'PrismCraftMiner5978', 'IsaiahHyperStar4280', 'NoraFrost43008', 'Byt_eBlock6558',
                     'KennedyBlock2092', 'Pix3lDa_wn', 'Blaze776Fr0st38', 'SkyStorm4560', 'LaylaStorm71433',
                     'Lev1F1reBlock1166', 'HannahRider8261', 'Lucky115Nova21', 'IsabellaMystic2539', 'H3roArrow1772',
                     'CarolineGamer9838', 'William163Block', 'AriaPhoenix5633', 'NeonMoon83633', 'JackVenom78582',
                     'NoahGhost8257', 'AidenSky50461', 'Blaz3Pho3nix2034', 'OliverShadow8663', 'A_ubreyMiner1840',
                     'Crystal873Mystic2576', 'RyanDawn50150', 'AquaNovaArrow34', 'SamanthaDrift6548', 'OwenLucky6587',
                     'Fire226Nov_a7753', 'L_uckyStormSilv3r468', 'CrystalMystic481232', 'M_oon645Ace1822',
                     'FusionStorm7264', 'Lucky948FlashNova922', 'NoraDrift31', 'MysticEagle2491', 'VictoriaStorm8128',
                     'GhostAce6586', 'FlashEcho6855', 'PrismByte60393', 'Bella981Mystic', 'FlameGamer8400',
                     'FlameEagle4619', 'BlazeCh1ll010S1lver5', 'BuilderNova7659', 'CarolineStar_Moon459', 'SkyFox9207',
                     'Eagle713Drift3413', 'Pixel137Fire', 'Aqua710Byt36895', 'SparkBlockAce960920', 'N0ahRiderFlash',
                     'SparkLion8268', 'MadisonNeon5726', 'DriftBlock2054', 'AidenMoon8917', 'LionStormBlaze3496',
                     'ArrowLuc_ky5992', 'PixelVe_nom', 'TurboRider3522', 'StellaAce84089', 'Arr0w405Drift',
                     'R_iderHero', 'FlameWolf4277', 'Z0eyFlashRider1273', 'LeoCrystal2472', 'MoonFrost65312',
                     'Is_a1ahCodeWolf', 'AvaVenomLucky6584', 'OrbitAce1333', 'PhoenixMoon2387', 'EllieMoon5396',
                     'Leo_Alpha358036', 'BellaFrost9489', 'Cyber597Lu_cky1521', 'LilyWolf8853', 'JosephBuilder2937',
                     'VioletFox9104', 'AquaFrostBuilde_r614', 'FusionAqua6016', 'AriaVenom948', 'HyperChill4361',
                     'RiderLight9855', 'Jayden359Arrow42', 'LiamGh0st9845', 'CalebEagle9781', 'FrostNinja43634',
                     'OrbitLion1036', 'ShadowPixel2706', 'L_iamPixel7185', 'GenesisMiner2363', 'Caroline572Storm5457',
                     'WilliamPixel3104', 'JackPho_enix6784', 'MasonPrism1164', 'DavidHero75462', 'Ninja917Alpha6121',
                     'Theodore545Star', 'GamerFrost4603', 'StarPho3nix9068', 'NathanStarDawn292340', 'MysticGhost1146',
                     'EchoPixel80724', 'ClaireFireRocket2114', 'DylanEagle1515', 'Ph0enixMystic5278', 'FusionFire7984',
                     'LoganWolf112521', 'DriftAce54099', 'CyberBlaze5458', 'J0sephStar4847', 'OwenLion7630',
                     'AvaNova8976', 'Lev1Fus1on700Fox', 'CodeWolfGamer5305', 'PixelBlock3929', 'JohnOrbitLucky605823',
                     'ShadowM1ner5380', 'FireEagle3459', 'John944Lion114732', 'AmeliaCodeRocket', 'Aiden489Eagle7002',
                     'JamesOrbit3684', 'StormByte1852', 'Christian828Arr0w', 'LucasArrow79844', 'VioletCrystal7892',
                     'Aqua138Chill5110', 'Charlotte207Eagle', 'JulianNeon4245', 'Ven0mF0x317225', 'Ash_erEagle6428',
                     'CamilaGhost5139', 'Luke783Gh0st7892', 'Charles758Crystal242', 'LeviFlash9851', 'Chr1st1anHer0',
                     'FlameSilver5180', 'Hyper517Turbo8327', 'LuckyMiner1293', 'GamerNeon8830', 'MinerFlash8425',
                     'C_amilaByte2011', 'Neon670Frost1766', 'EagleShadow9622', 'Lion636Code9085', 'Li0nCrystal8926',
                     'Mason949Arrow26', 'CraftBlock81099', 'HyperSpark31436', 'EllaCr_aft41', 'C_arterSilver9018',
                     'ChristianCode5595', 'FrostHyper18908', 'FlameSilver38398', 'John212Echo6541', 'S_hadowDawn3149',
                     'Fl_ame007Rocket', 'Tu_rboVenom9754', 'N_injaHer05379', 'Aqua773F0x', 'EllieWolf46319',
                     'LuckyChill4036', 'JaydenDrift75579', 'LiamBytePhoenix5430', 'BenjaminLion874336', 'SparkFlame160',
                     'HyperPrismWol_f34', 'LuckyWolf145Arrow482', 'HyperStarStorm8417', 'BlazeWolfAce5452',
                     'Neon485Wolf4485', 'AndrewStar4995', 'Alp_haSt0rmEch0', 'MoonRocket9220', 'GenesisNeon2236',
                     'DawnCra_ft722625', 'LionFireMiner6139', 'CyberRocket3308', 'Victoria492_Drift', 'Fusi0nAce8713',
                     'BellaDrift75218', 'Ace480Sky6728', 'MasonNinja81905', 'Pri_smLight3507', 'EchoSpark18274',
                     'BlockLight816036', 'MichaelGhost21033', 'StormSilver67302', 'JulianHeroOrbit5159',
                     'JamesOrbit868035', 'Owen756Craft922840', 'Benjamin872Chill7320', 'Chl0eM00n5946', 'HeroBlock7250',
                     'AceHyper461Flash', 'EthanDrift9489', 'RocketAquaNinja4579', 'LightNeon7909',
                     'Hannah036Byte313533', 'BlockHero61006', 'Venom002Flame8938', 'NinjaOrb_it1121', 'WolfRid_er3141',
                     'HannahDrift327533', 'AsherSilver2598', 'E_agleMiner7416', 'Henry273NovaStor_m', 'DriftNeon5154',
                     'SparkBlazeFlame6884', 'Dawn180Lion7223', 'Bla_zeByteLion', 'LuckyHyper42', 'SebastianArr0w6171',
                     'GenesisRocket2524', 'C0deNe0nSky', 'ZoeCraftMiner8314', 'Rider612Echo', 'Luck_y582Craft4924',
                     'Riley204Orbit39', 'PhoenixNeon987Echo10', 'FlameMystic4752', 'EchoArrow161732',
                     'CyberPhoenixSilver12', 'BuilderFire116128', 'LeoCodeStorm9080', 'GraceLightMysti_c232',
                     'ElenaHero5063', 'GamerLi0_n1939', 'SamanthaByteChill', 'ClaireNinjaMoon40', 'Lu_ckyEagle8647',
                     'KinsleyAce4810', 'AlexanderGhost38136', 'LaylaCraft9396', 'JosephFox5572', 'CrystalEcho605923',
                     'Fox073Hero1400', 'F0x045Fusi0n300833', 'TurboAlpha32989', 'GraceBlaze87886', 'Dawn400Alpha',
                     'CrystalHyper3772', 'Rider422Blaze', 'Lincoln244Rider7530', 'SparkAlpha6473', 'ZoeGhost89578',
                     'LucasRocketL1ght38', 'LaylaShadow5387', 'ThomasPhoenix68723', 'OliverHyper23411',
                     'Miner097Bl0ck3775', 'OwenDawn8001', 'HyperEagle8060', 'TheodoreChill1127', 'AceTurbo57854',
                     'OrbitByte3006', 'StormAqua26831', 'SavannahShadow39804', 'EthanShadow4398', 'Bloc_kBlaze1906',
                     'AndrewCrystal461724', 'JackFire4283', 'Rocket973FrostFox900', 'JulianHyperNeon',
                     'SkyPhoenixBlaze3767', 'Moon723Blaz_e', 'SkyCyber3136', 'SkyCra_ft9761', 'CarterSilver755Code9',
                     'SkyCraftGhost878521', 'Charlotte_Mystic6009', 'Drif_t099Dawn', 'AceRocket1103', 'CodeFrost21238',
                     'Gh0stR0cket4551', 'Ne0_nLi0nFr0st', 'LincolnDrift64242', 'Hannah173Craft4222', 'FlameGhostEcho37',
                     'ChristianShadow8130', 'SilverDrift23267', 'PhoenixOrbit51180', 'BlazeMiner84875',
                     'CrystalLucky20400', 'Ninja_835AceSpark241', 'Miner808Wolf', 'Gamer125Frost29', 'Luna063Rider2208',
                     'AllisonPrismBuilder', 'Caroline364Prism4703', 'DylanAlph_a9176', 'CraftCyber4630',
                     'HarperBlaze8866', 'Echo488Rid3r', 'HarperAlpha042Wolf36', 'KennedyMinerSky2890',
                     'VenomLucky216725', 'Genesis101Shad0w8277', 'TurboOrbit43939', 'CamilaBlaze1711',
                     'Wolf286Hy_per20', 'EagleDrift2536', 'LincolnLuckyLion2667', 'AubreyTurbo79702', 'ByteLucky9857',
                     'AquaOrbit6370', 'LuckyHyperBlaze7442', 'TurboEagleDrift9335', 'StellaDriftSpark4592',
                     'LightEch0Flash1946', 'OrbitFusion6231', 'FireFusion9962', 'MysticAqua4810', 'EagleRocket109230',
                     'AnthonyStarTurbo', 'FireLucky76800', 'LionDawn6541', 'Byte890OrbitSpark384',
                     'Gamer588Phoenix7978', 'KinsleyTurbo7473', 'Samu_elLight', 'MiaAlpha39152', 'LucasFrost662Nova607',
                     'Jacks0nEagle5861', 'StormFusion7189', 'Ace501Lu_cky423126', 'Logan_327Shadow4045',
                     'JonathanDawnByte8112', 'Ghost719Arrow', 'WilliamNeon88885', 'SarahM00n7851',
                     'CalebCraftCrystal656', 'AlphaEagle105441', 'Mason426Chill1757', 'NoahOrbit3382',
                     'Jacks0nSpark232330', 'Ace840Alpha', 'CharlesStar2524', 'WolfBlaze3294', 'LiamPhoenix33735',
                     'MysticChillPhoenix37', 'JosephCraft4526', 'Daniel826CyberLion70', 'Oliver297Her0',
                     'Nora626Lucky2078', 'ChloeDrift21', 'StarCod34764', 'N0vaSkyFire', 'Rocket265Sky', 'StarCyber6015',
                     'HyperTurbo4582', 'CodeDrift1923', 'CalebA_qua9087', 'Lion061Ace', 'AuroraL_ucky', 'Wolf942Flame',
                     'Gra_ysonAce', 'LiamNeon9716', 'G_rayson859Moon', 'MysticMoon9486', 'DawnGamerFox9910',
                     'NathanSky9883', 'JackNin_ja', 'CodeA_ce8496', 'CharlesBuilder932222', 'Chloe234BuilderLight',
                     'FireCode89017', 'JoshuaOrbit7414', 'AvaFlame8754', 'SkyFlash3842', 'Charles926Mystic3813',
                     'StormCybe_r7366', 'PhoenixSilver9480', 'OrbitBlock53776', 'TheodoreEagleLucky22',
                     'BlazeArrowWol_f33', 'Wolf423Echo1052', 'Riley472Star29', 'MiaFrostCraft4347', 'LucasPixel5447',
                     'OliverBlaze9498', 'Aria958ChillLion5813', 'GhostDawn72184', 'HannahMystic1979', 'EllaAqua27751',
                     'Kennedy686Orbit2551', 'IsabellaNinja6819', 'WolfN_injaFlash7426', 'IsaacCraft66404',
                     'LuckyOrbit3829', 'Block877Ghost2670', 'William752A_lpha5345', 'Ace834FoxHyper', 'Anna_Lucky40',
                     'LeviAqua22440', 'CarolineGhost8853', 'ChristopherBlaze9818', 'ByteVenom4583', 'PhoenixHyper85922',
                     'ArrowEcho2099', 'ByteStar500025', 'OwenNinja20128', 'LuckyBlaze27440', 'AquaStarBuilder9029',
                     'AlphaTurboShadow3087', 'AubreyLucky58085', 'Rock3t107Cyb3r', 'Luna149Lucky9244',
                     'Isaiah055Hero7794', 'DanielPixel459133', 'NoahFrost3334', 'DawnOrbit45701', 'GabrielWolf1812',
                     'Jonathan182Cyber6083', 'LionRocket6307', 'FlameShad_ow7892', 'OrbitAlphaMiner7653',
                     'HannahEagle12073', 'Gam_erHero37', 'Luke112Byte6243', 'Byte055Eagle4616', 'SkyCode40991',
                     'HarperFox1403', 'Luk_eBlock1591', 'IsaacCyber2508', 'DawnWolf1904', 'LaylaSha_dow',
                     'CalebPrism5562', 'LilyBlock46702', 'CodeLion37143', 'JamesChill15867', 'Bu1lderNova9292',
                     'LightSpar_k4448', 'GamerSilver6423', 'Bl0ckBlazeEch0', 'DylanSilver85631', 'Levi315StarBlock8397',
                     'Alpha477Eagl3', 'ChloePixel75385', 'SamuelMoon4726', 'EllaLight29463', 'NeonStar4040',
                     'AnnaCyberByte954823', 'LuckyMystic5855', 'LoganFire58361', 'MoonPr1sm8443', 'AceAqua2838',
                     'Rocke_tOrbit7242', 'ZoeyCrystal4356', 'ScarlettWolfPixel123', 'WilliamLucky17823', 'Sarah708Aqua',
                     'Dawn594AquaCrystal29', 'MichaelNovaSky7084', 'JamesTurbo8495', 'Eagle335Hero',
                     'ChillFusionVeno_m40', 'Leo897Aqua40', 'Rocket335Prism5488', 'DylanRock3t6830',
                     'Drift429EchoRocket', 'CalebBlock2521', 'SarahChill3141', 'Gamer757Drift4778', 'GamerFire75276',
                     'Ril3y017Arrow', 'Sha_dowMiner7747', 'FusionCrystal32700', 'LightHyper49956', 'O_wenLucky9541',
                     'Lion941Builder6855', 'JoshuaEagle88189', 'LuckyDrift6067', 'Theodore800Cyber', 'LeoSt_ormByte',
                     'ScarlettCode32173', 'CyberHero6770', 'AceMystic3977', 'ThomasBlaze4619', 'RocketPhoenix21982',
                     'ByteStar5710', 'Nor_aCodeShadow6809', 'CraftLu_cky272138', 'Jonathan465Da_wn9164',
                     'EagleTurbo2712', 'A1denDawnTurbo4082', 'Shad0w877Crystal', 'SkyHyperShadow9272',
                     'ScarlettTurbo4097', 'AceVenom46655', 'HyperGhost1460', 'OrbitSilver179742', 'A_ce905Ninja7471',
                     'ScarlettMystic591428', 'NinjaFire431Echo', 'LunaN_eonCyber', 'AceFusion2132', 'MasonEcho2811',
                     'OrbitEagle1353', 'GraysonByteCode25', 'NovaLucky30503', 'Betseybusbr79622', 'Minahbgwv57488',
                     'Irenaqqjqo41786', 'Galeiwqwv19487', 'Haleytznnf00408', 'Gwenaiqqa50185', 'Hopesojfu46676',
                     'Kelliqrmkr43828', 'Aurorejrdbu15371', 'Kelilarrssw49219', 'Cristyvcegx00995', 'Babhwufa81304',
                     'Marislxgnm10704', 'Nadiyaylfjy17221', 'Fredranmpjj51117', 'Ronnadokag13832', 'Brynnnblil50351',
                     'Peggientumj71522', 'Neillahcibv24062', 'Liannagjyfu42015', 'Tabbykbrep86001', 'Blinnyjhmqn01570',
                     'Audiemamyq38985', 'Pammiesskac83515', 'Marnetwvmx77369', 'Didosxbwp29668', 'Bertybutqw37896',
                     'Dottyaluer56974', 'Roxiertisk22181', 'Starrlubbq88950', 'Eugineyvksw59506', 'Madeljqbhq49759',
                     'Connbiqw33601', 'Rachelmuftw15936', 'Eadithlehpx30651', 'Deenapphcg06849', 'Sheameppz67961',
                     'Brittekbrns14827', 'Freddyldiae63309', 'Vitaeztgv54883'}
local RECEIVER_LIST = {'Alexa215Miner33', 'SparkGamer516122', 'Vict0riaCrystal7820', 'ArrowFire7758', 'MiaShadow5666',
                       'LucyC0de2942', 'AvaF0x4304', 'St_ormDawnOrbit4952', 'O_rbitBuilder9799', 'Flame106Ninja1461',
                       'BlockFlameLion6836', 'Zoey127Rocket', 'SparkArrow7039', 'LukeBlaze8415', 'IsaiahFrost6346',
                       'ZoeDawn8855', 'GenesisPrism415Hero', 'AceBuilder406242', 'PixelTurbo4548', 'Savannah816Moon',
                       'Allison833Sky3067', 'ElijahFusion2657', 'LeoChill32634', 'WolfGamerRocket4398', 'LionVenom3777',
                       'Sky_Eagle9376', 'IsaacMoon8573', 'TheodoreLight14724', 'BlazeFusion67385',
                       'Logan75_4ShadowEcho', 'Lion012Pix3l', 'AquaShadow9941', 'SamuelRocket5207', 'StellaFlash289232',
                       'Light981Craft5300', 'LeoFlame11396', 'RocketDawn3997', 'MinerDawn4440', 'JaydenDrift28930',
                       'AndrewSilver6673', 'PrismRider64163', 'AlphaMiner938135', 'JulianAce8764', 'FlameSilverEcho9162'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
