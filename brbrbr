-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'GraceAceWraith', 'AlphaSparklyEch02002', 'Jax0nBlazeArr0w', 'B3arRock3tDrift2004Y',
                     'F0xR0gueChase', 'XxSamu3lHyp3rxX2015', 'RavenFlame86', 'Panda_Dragon200953', 'Blad3_Drag0n99',
                     'Zero_Starry2002', 'Skater_Fr0st36', 'OliverIceTurbo83', 'XxFrostSparklyTurbox',
                     'XxCharlott3Gold3nLig', 'EchoZapInferno76', 'NightZapSilver70', 'Xx_Gam3rInf3rn0Blast',
                     'XxEagle_DarkxX2016', 'FlashByteM00n', 'VictoriaPixelated67', 'DancerFire75', 'OmegaV0id37',
                     'Kayl33Vip3rGalaxy', 'Zayd3nNight47', 'Playz_Starry202046', 'JacksonLegend55',
                     'Xx_BlastRogueThunder', 'VoidLightSlime', 'Eli_Jelly31', 'Vip3r_Arr0w2018', 'XxSamuelBladeHyperxX',
                     'PrismChaosCraft2019', 'Build3r_Lava51', 'XxLukeBuilderxX2002', 'CircuitUltra201422',
                     'FireUltra71_YT', 'DarkGamerZoom2006', 'Thunder_Hero2005YT', 'Scarl3ttQu33nCyb3r', 'ELI_Chase2006',
                     'Hero_Silver73', 'CraftBuild3r13', 'Turb0Fury67', 'NoahPixelatedPrism', 'XxPrism_TurboxX2018',
                     'Pixelated_RogueYT', 'IceSparkNova', 'XxAubr3yVort3xOm3gax', 'JAMES_Venom202332', 'Bac0nIce74',
                     'XxShad0wB3astxX2023', 'S3bastianFox76', 'NightInfern0Z00m', 'HannahGoldenStream', 'GalaxyGh0st47',
                     'LucasSparklyKing', 'XxGhostFoxQueenxX', 'OmegaGigaLava', 'XxLi0nM00nV0rtexxX',
                     'XxSt0rmPrismEagl3xX2', 'TigerLegendPr0', 'XxMason_KnightxX2020', 'BlastVoidByt3', 'JaxonPanda84',
                     'FlashThund3rIc3', 'XxEpicSt0rmxXYT', 'EthanEpicVen0m2005', 'Zero_Toxic200421',
                     'XxStarry_OmegaxX37', 'R0guePulsePh0enix', 'L3vi_W0lf2004', 'XxStr3am_TurboxX2017',
                     'EllieShadowCraze', 'SlimeToxicPlayz', 'XxKingEaglexX2003', 'KnightStar33', 'LuckyJellyWraith2006',
                     'NightBlock39', 'NightUltraGolden', 'HawkGhostDrift', 'Rav3nEchoGalaxy', 'Night_BLIZZARD41',
                     'Haz3lBuild3rCrystal2', 'XxHannah_CHAOSXX2003', 'DarkRogueMaster2003', 'XxWraithAlphaxX53',
                     'XxChloeDarkSkaterxX2', 'DarkNeonSky', 'BrooklynnDancer2019Y', 'Playz_Craz3200410',
                     'HawkStealth65YT', 'WraithEpicFusion2007', 'ROGUE_Starry2015', 'CraftHunter48',
                     'MichaelViperWraith', 'FlashChas3J3lly2008', 'ChaosCooki323', 'FusionEchoBlock2022',
                     'NightF0xUltra2017', 'WillowPanda75', 'XxIsaacCircuitFlam3x', 'NovaChillPro',
                     'XxSilverPrimalProxX', 'EliNovaKing2010', 'CrazeLegendUltra2020', 'OliverMinerDrift',
                     'PixelSaberBeast86', 'PowerArrowDragon2012', 'SaberC0deV0id70', 'Zero_Flame39', 'Am3lia_Gam3r29',
                     'R0cketFlashW0lf', 'NovaFlash59', 'Micha3lRogu346', 'Cyber_Code55', 'XxEmmaNeonTurboxX',
                     'Cod3_Dawn2024', 'XxStormyChillxX2007', 'XxSab3rPix3lHawkxX', 'XxWolfArrowRocketxX',
                     'ZeroPrismQueen', 'XxTurboSkyVortexxX_Y', 'Rav3nCooki3201775', 'Chl0eLuckyEagle',
                     'ChillOrbitGam3r', 'OwenBlaze94', 'Star_Saber50', 'ChillHazeCodeYT', 'J3llyNightDuck',
                     'PhoenixBacon43', 'RiftSab3rFlash2010', 'FLAM3_Ic32010', 'NeonEagle201672', 'BaneVenomFlame2013',
                     'AubreyEagleFury', 'B3arVort3xEcho', 'GabrielClawZ00m', 'Xx_FrostTurboBlizzar',
                     'FrostSlimeMoon2024', 'FusionOrbitSkater', 'Xx_DanielClawSparkly', 'Circuit_Frost2017',
                     'PhoenixMagicChase201', 'M00N_StealthYT', 'RID3R_Ac321', 'OrbitStorm202257', 'ChillBan3Cod3',
                     'Blast_N30n80', 'BlockThunderSaber_YT', 'ProMasterCyber', 'StreamShadow64', 'JellyIceSt0rm2020',
                     'AubreyPulseAqua2018', 'GalaxyBlockRiderYT', 'HarperSonicCraft2023', 'Ban3V3n0m2012',
                     'Storm_Blizzard2022', 'Xx_ThunderCrystalFla', 'LegendSt0rmyS0nic', 'Her0Flick2014',
                     'EllaEagl3Orbit', 'SaberBlazePixel2011', 'Xx_RogueToxicStealth', 'Vortex_Flick76',
                     'Ven0mAceShad0w', 'SkaterProGiga52', 'Chill_Omega2010', 'NightDuckZoom2016', 'MasonFir3Wolf',
                     'OliverStarStream2024', 'Br00klynnRav3n86', 'ZoomCraftToxic', 'XxEmmaChillLavaxX202',
                     'OliverPrismStorm2018', 'Ril3yPlayz2004', 'Jacks0n_Craze200659', 'XxVict0ria_ClawxX17',
                     'XxOwenEchoxX2017', 'XxStealthTurboxX64', 'Queen_Blast92YT', 'ChaosPrimalRaven48', 'Queen_Ace68',
                     'XxQu33nEagl3WraithxX', 'XxBanePowerxX201527', 'OmegaTurb0Night62', 'SparklyGlitchCraz349',
                     'FrostSonicMagic', 'FlickStealth87', 'LoganMax29', 'Craze_Flick2018', 'AmeliaAce32',
                     'Samu3lPlayzFrost', 'EthanKingC0de2020', 'XxOliv3rMoonHyp3rxX', 'XxKingFuryJellyxX',
                     'ZapSparkBlock67', 'ScarlettBuilder2013', 'OliviaBlade39', 'CircuitLavaRiderYT', 'JAMES_Flash66',
                     'XxMiaSaberxX2007', 'Grays0n_Flame51', 'FlickPhoenixArrow', 'FlickTurboRogue',
                     'Hunter_Stream201529', 'CrystalPow3r64', 'Ace_Thunder2006', 'BladeStormyBlock91', 'Ech0Bl0ck84',
                     'J3llyDark202062', 'EchoThunderPixel81', 'SavannahGhostSpark', 'HeroBladeNeon2019',
                     'PixelatedNightInfern', 'CIRCUIT_Zap23', 'Hyp3rGold3nRogu3', 'LionHyperPhoenix',
                     'DragonDancerFox28', 'PlayzRocket202422', 'XxBlazeHawkRavenxX', 'Addis0n_S0nic2007',
                     'LightKingStormy_YT', 'AceNeon88', 'ByteBaneQueen', 'XxFireSonicHeroxX', 'VenomBearFlame33',
                     'Rav3nGlitchBacon', 'IsaacRiftEcho201118', 'LavaJellyR0cket', 'XxLuckyHeroMoonxX', 'J3llyVoid2007',
                     'OliverTigerDark92', 'GraysonLegendZero200', 'XxGraceSparklyxX18', 'GABRI3L_H3ro68', 'Duck_Hero44',
                     'Ghost_Viper43', 'Pix3lDanc3r32', 'KayleeFusion49', 'Build3rFlash2020', 'XxRiftNinjaRogu3xX20',
                     'VortexKnightDawn2010', 'QueenThunderOrbit', 'XxHawkGlitchV3nomxX', 'Bl0ckV3n0mEagl3_YT',
                     'Xx_JacksonBlastBlock', 'OliviaCookieNeon2005', 'EzraG0ldenF0x', 'Pix3lPlayzKnight58',
                     'Z03_Fury78', 'BeastCrazeSpark', 'S3bastianFrostRift', 'XxSkyBuild3rFlickxX', 'Gam3rBlaz3Night',
                     'AddisonBaneSky', 'HeroNovaRider', 'N0vaThunderPr0', 'DuckAlpha200899', 'DriftRavenFire96',
                     'HawkM00n25', 'Sparkly_SKATER85', 'RocketQueenMoon2018', 'DriftBaconZap', 'EchoIceChase86',
                     'XxStreamShadowVortex', 'WilliamToxic202238', 'Pix3lat3dEcho2005', 'Xx_HannahHunterGlitc',
                     'JackEchoMagic2013', 'Xx_CIRCUITTIG3RS0NIC', 'BuilderLi0n2019', 'InfernoHyperGiga2019',
                     'XxC00kieStreamxX2012', 'Tig3rBacon43', 'HyperBlizzardSkater2', 'SPARK_Prism69', 'N0raArr0w55',
                     'Her0_Turb081', 'KingHero97', 'JACKKING2005_YT', 'XxRift_TurboxX36', 'Silv3r_Ic375',
                     'SparklyGh0st202035', 'IsaacHawkN3on', 'EagleHyperLucky', 'Vort3xZap2010', 'M00n_V0RTEX36',
                     'ShadowBuilderEagle', 'XxS3bastianInf3rnoSt', 'Luk3Mystic52', 'CircuitGlitch90', 'MaxL3g3nd71',
                     'HenryLi0n29YT', 'XxCode_MagicxX77', 'ChaosDawnAqua', 'LionFlashBlaze', 'Vip3rAquaHaz3',
                     'BaconOm3ga55', 'XxIsaacGlitchV0rt3xx', 'AvaBlock201996', 'OliviaBearSlime2022', 'ChaosCodeSilver',
                     'PixelZeroStealth2010', 'PowerZeroNight', 'XxAubreyWolfxX2009', 'RiderDawnLion',
                     'EagleZeroHawk44YT', 'BlazePr02003', 'EzraWraith76', 'BladeGoldenStorm', 'Miner_Ultra45',
                     'Vortex_Bane41', 'W0lfZer02007', 'XxGhostMoonStormyxX', 'CrystalBaneThunder',
                     'XxMateoBuilderxX2018', 'Eagl3Shadow21', 'ScarlettSonicFire', 'TurboFlickEagl3',
                     'XxBlade_TigerxX2023', 'Xx_Inf3rnoCircuitDar', 'AquaDanc3r200552', 'MaxSilverJelly',
                     'XxT0xicGh0stxX2021', 'KnightHawkNight44YT', 'G0ldenGlitchDrift200', 'Fir3Blad3V3nom',
                     'NinjaC0de67', 'Pix3lat3d_Rid3r2005', 'Saber_Builder28', 'RiderHawkHyper2014', 'CraftNinja22',
                     'RiderRavenPh0enix', 'JellyMasterSkater202', 'JaydenFlame200752', 'Hunt3rVoidTurbo2021',
                     'DanielTurb0Sky201622', 'LunaDawnStream2017', 'OmegaThunderStar', 'StarStealthFire',
                     'RIDER_Claw24', 'VenomCraftViper', 'SaberClawChase', 'Xx_MysticBuilderInfe', 'ZapRock3t202123',
                     'RileyStarry30', 'JaxonDuckCyber2024', 'Chase_Ven0m67', 'SebastianFlick25', 'Blad3L3g3nd19',
                     'EllieSky31', 'CrazeStarryFlash', 'ChaseMinerVortex2009', 'JackV0rtexV0id', 'XxNeon_PixelxX2021',
                     'EzraFlickSparkly', 'Ban3Ac3V3n0m', 'HyperBaneCircuit2020', 'SamuelZ00mSparkly200',
                     'XxAceSaberxX76', 'St0rmyNinja202494', 'DancerMagic36', 'XxPixelCookiexX2012', 'HazeSonicChill',
                     'Will0wGlitchMaster12', 'XxEvelynDawnxX86', 'Ph0enixPixelated49', 'XxBuilderFuryKingxX',
                     'ChaseFox95', 'Byt3_Lava2005', 'XxCarterGigaPixelxX', 'ThunderJellyGamer', 'GamerArrowNova',
                     'MichaelProHawk2014', 'Epic_Danc3r2024', 'EchoGoldenCraft_YT', 'Crystal_P0wer202350',
                     'BrooklynnMoonClaw201', 'Tiger_Spark2008', 'Br00klynT0xicRift200', 'EagleRogue74',
                     'NeonGlitchSonic', 'BrooklynKingGhost_YT', 'XxArrowSlimeOmegaxX', 'CyberSkyOmega81',
                     'Br00klynN30n2007', 'XxChaseEpicTigerxX20', 'ChaseShad0wAlpha42', 'Luke_Power15',
                     'GhostEagleCraft2018', 'N3on_B3ast2024', 'RocketPixelBane', 'Her0_S0nic2002', 'Ic3ToxicFlash',
                     'XxAmeliaMoonLavaxX20', 'NovaEchoByteYT', 'KayleeBlastCraft', 'FROST_Playz84', 'Samu3lGlitch58',
                     'XxSamuelStarryxX2009', 'Aur0raG0ldenBlaze', 'CraftSaberChaos', 'Xx_DriftV0rtexDrag0n',
                     'Danc3r_Light2014', 'JackPix3lat3d200495', 'MoonStormyHunter71', 'IceLavaHunter2017',
                     'HawkStormWolf2004', 'Zoom_Spark2022', 'LiamBuilderToxic2022', 'AriaMagicSilver2016',
                     'XxLavaCyberBaconxX', 'TigerAqua202016', 'Victoria_Craft55', 'BaneJelly75', 'SavannahLight93',
                     'VenomCrazeUltra2007', 'RocketGiga200472', 'FoxEagle92', 'XxDanielChaosxX2015', 'CyberNeon53',
                     'ClawAceToxic', 'Li0nNe0nQueen', 'TurboBlock17', 'UltraRiftMagic', 'L3g3nd_Slim390',
                     'VoidRift201562', 'Giga_Craft45', 'XxGalaxyGlitchxX99', 'XxChaosFlashxX2012', 'MysticTig3r76',
                     'EliBlast200971', 'EpicStarRocket', 'PhoenixChillPulse', 'HyperBeastIce', 'BladeHazeStormy',
                     'C0deMasterFury', 'StarryH3ro2021', 'StormyDawnBlaze', 'AceFrostPrism', 'XxRid3rUltraxX2002',
                     'Gamer_CIRCUIT92', 'WilliamZoom40YT', 'Grac3CircuitBuild3r', 'LeviPixelatedCraft20',
                     'NightBladeCode', 'NovaBlazeClaw', 'ZoomCode83', 'XxSparklyThunderxX73', 'EpicInfern0201763',
                     'XxLunaCyberFlashxX', 'XxDriftHunt3rxX2002', 'WolfBlaze201846', 'XxBlizzardLionBlockx',
                     'JACKSON_Build3r20058', 'NightGalaxyEcho2005', 'PhoenixBlaze46', 'SlimeCookieUltra',
                     'PrismDragonCooki3200', 'G0ldenTurb069', 'XxPhoenixGhostPlayzx', 'CarterToxic24',
                     'XxCraftS0nicPh0enixx', 'XxKnightBearPixelate', 'XxFr0stPixelatedFury', 'Omega_Stormy2021',
                     'HazelNeon28', 'TigerPulse24', 'XXFLASH_BladexX2015', 'ScarlettLegendMagic', 'Kayl33_Craz3200218',
                     'LightViperBlade2017', 'EliSlim3Wolf_YT', 'Dawn_Knight96', 'W0lf_Chase2011', 'Ice_DRIFT2012',
                     'BaneRavenSilver2013', 'Will0w_Ech096', 'ProRogu3EchoYT', 'ARIA_Mast3r38', 'XxInfernoPulseLavaxX',
                     'Cod3PlayzBlast2007', 'Xx_SebastianPlayzSli', 'Chase_Spark44', 'XxEchoZoomWraithxX20',
                     'JulianRid3rLucky', 'XxAvaEpicxX202337', 'XxAvaEaglexX200762', 'EmmaFr0stCha0s', 'S0nicMaxR0gue',
                     'ElijahPhoenixIce', 'XxIc3_HAWKXX91', 'HunterMagicGalaxy50', 'SonicShadowGhost2007',
                     'Pulse_R0gue2006', 'Rock3t_Str3am201059', 'EzraHer0Builder2020', 'LightAlphaBane_YT',
                     'Jam3sHawkCraft', 'BaconSaberStream', 'LaylaZ3roCooki3', 'Night_Echo2010YT', 'BuilderPixel202150',
                     'N0ahPixelatedSt0rm72', 'BlazeIceSaber67', 'SamuelGhostSky', 'XxBeastInfernoxX2012',
                     'MasonCrazeBeast', 'Galaxy_Flick2017', 'Byt3Rift89', 'CHASE_W0lf201915', 'XXNINJA_FoxxX2008',
                     'GalaxySilverTurb0', 'CarterBear200916', 'XxLucky_FirexX95', 'XxFoxMinerxX53',
                     'NightDragonLucky2007', 'Pixelated_BEAR86', 'BLAST_Alpha200939', 'XxEvelynUltraBeastxX',
                     'Xx_OliviaInfernoRide', 'Oliv3rV3nom95', 'MichaelNova27', 'Ezra_Ace92', 'SkaterOmegaPr0',
                     'JaydenW0lf2022', 'Charlott3Moon76', 'EagleWolf84', 'XxBr00klynSab3rxX202', 'Ech0Skater2013_YT',
                     'JackPandaBuilder2018', 'RiftBuilderGlitch201', 'Puls3Flam32003_YT', 'XxChillCookieHeroxX',
                     'XxDriftFrostxX201878', 'Ow3n_SONIC16', 'CookieGhost202070', 'InfernoLucky202047',
                     'BuilderChillChaosYT', 'Rock3tHaz317', 'AsherVenom52', 'XxByt3Silv3rxX2020', 'UltraZ3r02013',
                     'XxSavannahFlamexX55', 'Build3r_Thund3r2013', 'LeviLavaZero70', 'JELLY_Infern02010',
                     'ScarlettShad0w21', 'LavaV0rtex89', 'LavaGalaxyPuls32011', 'CookieBlaze201976', 'StarChaseCookie',
                     'HunterS0nicHyper', 'NORA_Ac32008', 'MaxW0lfStar', 'Infern0Omega69', 'Charlott3PandaClaw_Y',
                     'DawnMysticAqua200443', 'Byt3Glitch2021', 'XxEch0RiftxX58', 'XxMysticNightBanexX',
                     'XxOmegaTurboxX84', 'Qu33nFoxClaw', 'UltraHazeInferno2019', 'XxStreamCookieStarry',
                     'Aubr3yVoidByt32014', 'XxHero_BanexX2009', 'MiaClaw46', 'XxEagleDuckPhoenixxX',
                     'RiderBeastDancer2012', 'SparkDarkUltra', 'HeroArrowCyber2003', 'IsaacDarkByte2014',
                     'RocketQueenOmega2011', 'AlphaNe0n2002', 'AsherBaneGhost', 'Mate0PixelatedStealt',
                     'Jam3s_BLAZ32014', 'AddisonGhost32', 'AidenGh0stMiner76', 'Xx_AuroraMasterHyper',
                     'Grays0nZapP0wer', 'RiderMasterTurbo2017', 'H3roChill29', 'Craz3StarDanc3r2018', 'Blad3Rav3n2018',
                     'Pix3lN3on80', 'BaconSilver68', 'AsherStealthEagle', 'Aiden_ORBIT56', 'Aubr3yCircuit91',
                     'LightMystic58', 'NightPlayzR0gue2010', 'SparklyCraft2023_YT', 'DriftRavenFusi0n', 'FoxFlashPower',
                     'AvaSparkHaze', 'MagicNova2018YT', 'Zo3Ic3200427', 'HyperChillBane25', 'P0w3r_Z00m2021',
                     'EllaClawBlaz3', 'ZapMaster50', 'Pro_Frost66', 'GlitchLegendChaos', 'Glitch_Builder200597',
                     'EliFusionBuilderYT', 'FuryTurboCyber21', 'XxAsherBanexX2015', 'Hyp3rPlayz34', 'TigerOrbit18',
                     'EzraFoxQueen', 'FuryGlitch201279', 'AvaGhostJ3lly2004', 'ThunderFlickRogue',
                     'JaydenCookieFrost36', 'StormyToxic83', 'Ghost_Block202421', 'TurboL3g3ndDuck2003',
                     'Chl0eChaseZer0', 'MysticZoom26', 'TigerMax201274', 'R0gueLi0nDancer2009', 'RocketDark202251',
                     'KingHeroHyper20', 'EzraGamerTiger2013', 'BladeVortexFlick', 'S0nicCrystal2004', 'EzraSparkHero94',
                     'KingN3onOm3ga', 'Her0QueenSaber2003', 'Om3ga_Eagl32007', 'XxEmmaFuryxX2024', 'Br00klynT0xic78',
                     'Gh0st_Thund3r2008', 'AbigailGigaFlame', 'AidenRavenVoid2007', 'XxAquaBlockBuilderxX',
                     'InfernoCircuit99YT', 'BearBaconNova83', 'XxSilverMagicFoxxX', 'BrooklynThund3r2021Y',
                     'XxFusionToxicxX20049', 'VoidMoonPulse', 'Duck_Om3ga201145', 'AvaRift201666', 'MaxNinjaSkat3r93',
                     'FusionStarry32', 'N0vaDark2013', 'Willow_Pulse58', 'JamesWraith39', 'XXQU33N_Hunt3rxX55',
                     'OliverHunter201443', 'IcePrismDark', 'AsherClawSaber16', 'StealthQueenSpark',
                     'EthanStealthClaw2024', 'Inf3rnoWolfNinja', 'NeonStream202142', 'XxEthanBlad3xX2013',
                     'XxChillByt3xX_YT', 'WilliamSkaterCode76', 'Xx_OliviaGalaxyTurbo', 'ClawGoldenBeast2003',
                     'XxEpicCrystalNovaxX2', 'WillowRock3t200643', 'Qu33nJ3llyNight', 'Fr0stSilver53', 'BuilderBeast64',
                     'VoidOmegaNinja41', 'OrbitLi0n2010', 'HyperNovaBuilder2024', 'Hawk_Silv3r2002YT',
                     'StreamNovaMasterYT', 'Addis0nArr0wRift', 'XxChas3StarryxX2002', 'Scarl3ttInf3rnoStar',
                     'XxHannahStormxX94', 'EvelynOmegaVoid2003', 'Z00m_Fire2010', 'AsherMax200598', 'XxDancerHyperxXYT',
                     'LightWolfBlaze', 'AvaBlazeGhost46', 'GigaPrimalPower2022', 'JacksonBaneBuilder25',
                     'Xx_Ph0enixSparklyDan', 'XxFlickKingRiderxX20', 'BaconGlitch2002YT', 'BuilderAceMaster',
                     'PixelFlash201347', 'ShadowSonicIce2017', 'HunterPrimalEagle201', 'WraithVoidFire',
                     'ChillLionEagle2017', 'AubreyLucky45', 'MagicSonicZap72', 'Fire_AQUA201419', 'EliNightFlam3',
                     'AmeliaBladePrimal', 'Mason_Dancer58', 'Omega_PLAYZ201677', 'UltraNinjaThunder',
                     'XxMoonGigaSonicxX', 'Carter_Epic202266', 'XxMagic_Qu33nxX20065', 'KingN0vaPix3l',
                     'ThunderInfernoHawk73', 'LightStarryPrism', 'AVA_Inferno17', 'GoldenDragonJelly200',
                     'Silver_Mystic2016', 'ThunderAceSparkly_YT', 'ZoomStealthCraft2007', 'Xx_St0rmyCrystalBuil',
                     'GraysonPrimalCod3200', 'Ultra_Builder201856', 'XxAurora_FrostxX2011', 'FusionVenomNight',
                     'CarterVen0mHer0', 'HawkFlashCookie2014', 'EchoStar201822', 'JaxonKnightMax_YT', 'DancerAquaChase',
                     'Qu33n_Blast200865YT', 'PhoenixSkater92', 'XxCrystalLuckyPhoeni', 'AceEpicPanda2022',
                     'XxByteKnightEchoxX', 'XxJamesHeroFirexX', 'SparklyInferno37', 'AlphaMiner202431',
                     'S0nic_Jelly2024', 'OmegaGh0stC00kie', 'OmegaSt0rm93', 'SaberToxicGhostYT', 'Xx_Charl0tteEch0Myst',
                     'Ech0V0id82', 'L3g3ndBuild3rGold3n2', 'ViperLuckySonic2008', 'L0ganNightKing2021',
                     'Chlo3DawnLight', 'PandaFlashHunt3r', 'KingOrbit11', 'NoahFusionSaber', 'MasonPixelSilver',
                     'Cha0sLava2003', 'HeroRiderRocket2003Y', 'EmmaCraz3Max', 'Mat3oSkyCod32008', 'ZaydenStormDark34',
                     'Build3rCod3Str3amYT', 'WilliamMin3rDrift', 'Z0e_Flash201111', 'XxStormyOmegaCookiex',
                     'OwenGlitchKnight_YT', 'GalaxyFlam32003_YT', 'SamuelStormPixel2020', 'XXELLA_MaxxX2017',
                     'Prism_Ace64', 'Power_COOKIE200686', 'Xx_CraftPlayzCrystal', 'XxSophiaDuckCooki3xX',
                     'AsherGoldenNeon', 'BaneFusionPrimal2024', 'Sky_Phoenix57', 'XxNoraOrbitxX21',
                     'LuckyAquaBuilder2010', 'XxAriaEagleCodexX34', 'EvelynByteRavenYT', 'XxTiger_FLAMEXX2010',
                     'N0ahViperBeast', 'Hunt3rTurboNinja2023', 'Isaac_RIFT54', 'Bl0ck_Turb02022', 'Dawn_Shadow2011YT',
                     'XxGamerRocketRiftxX8', 'Builder_Hunter31', 'DragonSparklyGhost', 'MasonBlaze44', 'Micha3lFoxPro',
                     'XxElijah_FrostxX2009', 'AidenDrift86', 'XxUltraLightxX201111', 'NovaGigaPrism28',
                     'HunterMinerR0cketYT', 'MasterCrazeNinja2020', 'Vip3r_Max2003', 'Slim3Circuit2014',
                     'LuckyLionCraz3', 'StarLionRock3t', 'NovaFusionEcho82', 'FoxChas3AlphaYT', 'B3astSilv3rGh0st',
                     'SparklyJellyOmega', 'LoganSkat3r38', 'HenryMoon201898', 'XxHawkMasterHeroxX',
                     'XxGalaxy_FlamexX82', 'Fr0stMaster41', 'RiderCyber2002YT', 'TurboSab3rLava',
                     'BlizzardOrbitDark_YT', 'MagicVoidDragon2023', 'Flame_Hyper84', 'GraysonBlockPixel11',
                     'Rogue_Hawk201352', 'ViperWraithDragon201', 'HeroChillEagle53', 'GlitchPixel2022_YT',
                     'DawnHeroNeon201489', 'Xx_AsherOrbitCrystal', 'N0vaMagicSpark', 'Xx_BlizzardLuckyEcho',
                     'VenomGoldenLegend', 'PandaPrism202131', 'WraithThunderVoid', 'XxEagleF0xVen0mxX202',
                     'Slim3Cyb3rBlaz32022', 'AMELIA_Circuit68', 'Xx_BuilderSparkPanda', 'XxBuilderChillProxX2',
                     'T0xicSaberOrbit', 'XxBuilderVortexBacon', 'Chl0eMax2002', 'James_Fr0st2019', 'PandaDuckPlayz15',
                     'ByteBearBlaze', 'XxPh0enixZapVen0mxX', 'XxLunaHeroFlashxX', 'XxMiaPhoenixxX29', 'RileyAlpha36',
                     'ClawBuilderZoom2012', 'LucasBuilderCraft', 'EliByteEagle65YT', 'Claw_St0rm2005', 'LuckyStarFury',
                     'Ethan_Raven74', 'GigaBlizzardVenom200', 'XxEllieMoonxXYT', 'ProNovaEcho', 'XxHaze_StreamxX17',
                     'Ban3Max2007YT', 'GalaxyPandaVip3r', 'WilliamIc3Gh0st60', 'ViperSilver28YT', 'XxHazeLightDawnxX',
                     'StormSilver88', 'GigaVip3r24', 'XxCrystalEagl3xXYT', 'BeastSaberPanda', 'Aria_Cookie60',
                     'LunaBuild3r17', 'TigerMoonNova2024', 'JULIAN_Ghost2004', 'Stunzveis4445', 'Hoitgoula8671',
                     'Greakbredy40848', 'Violewilke1115', 'Iranvanyo429', 'Aviahash57889', 'Aliajbugni307',
                     'Dalkafayma7153', 'Wylamsiham69692', 'Dumonlytes114', 'Debemedus64237', 'Nannadonah33766',
                     'Sauromoews537', 'Leetsadera053', 'Ollielowri3714', 'Whishbeyke95044', 'Raneedemro538',
                     'Buhrarino54698', 'Rolespipia35993', 'Abeertalos2459', 'Trollsturn28553', 'Yergteff536',
                     'Schycary4688', 'Kerneabd13148', 'Metosrota551', 'Sibysonn968', 'Dubilcoto0600', 'Domonkutil68215',
                     'Gametrufus545', 'Kearyfaull92169', 'Balleabrol626', 'Paopilat830', 'Melbajimmo469',
                     'Noijanay28586', 'Crociseth1079', 'RavenStormSkater', 'NoraLion82YT', 'Danc3rPr02002',
                     'IceLuckyFire', 'Vip3rKnight85', 'Grace_RIDER16', 'BaconToxicPow3r', 'XxKnightF0xxX2012',
                     'Nova_Craz327', 'LunaTurboHero77YT', 'InfernoThunderNight2', 'AubreyByte71', 'Jayd3n_Pro2008',
                     'N3onRock3t19_YT', 'XxHaz3Hunt3rxX2004', 'Aur0raKnight2021', 'VortexTurboLight2005',
                     'HunterZoomPrimal', 'Inf3rnoFir378', 'XxJaxonLegendxX2023', 'GalaxyPow3rJ3llyYT', 'Ethan_Dawn72',
                     'Vict0riaS0nicM00n202'}
local RECEIVER_LIST = {'JaxonArrowStream2003', 'ElijahRiftWraith2008', 'Xx_BlizzardEagleBuil', 'WyattCyber53',
                       'XxDragonSkySonicxX', 'LukeSkater202257', 'LoganViperTurbo', 'GlitchLionMaster',
                       'NightChaseSkater2009', 'XxPowerBytexX2023', 'LavaBuild3rDarkYT', 'Xx_HeroPixelatedLigh',
                       'ChillGlitchWraith', 'Rock3tStarry16YT', 'StreamCraft61_YT', 'XxChloe_ChillxX2006',
                       'JAXON_Jelly99', 'LunaBan339', 'AsherHer083', 'XxCircuitCrazeClawxX', 'IsaacN3on2003',
                       'AvaLionBuilderYT', 'XxHenryDancerHyperxX', 'DriftTurboCrystal200', 'ChillSkaterPulse',
                       'LoganRogu3Shadow', 'Qu33nB3astGhost', 'BuilderEpicV0id70YT', 'ToxicPlayzRav3n2011',
                       'PandaLavaFrost', 'XxBlockPuls3Build3rx', 'FlickH3ro17', 'ArrowMagicHaz32003',
                       'LukeCodeNova2023', 'JellyZ00mStar', 'FrostMiner15', 'Oliv3rStormyByt3', 'PlayzGhostPanda',
                       'Xx_StreamFuryPhoenix', 'Henry_R0cket2003', 'JacksonHunter58', 'Cyber_HAWK2012'}


-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
