-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'XxDark_CraftxX200680', 'Zer0ByteLight', 'XxOrbitRoguexX40', 'Cookie_Mystic2008', 'BladeSt0rm21',
                     'PixelatedBear201167', 'JulianRocket54', 'BeastCyberFire', 'QueenV0rtexDarkYT',
                     'FlickSkaterFrost2011', 'FuryStarryJelly', 'Mat30Li0nNinja2017', 'Eagl3St3althBlad3',
                     'XxMiaRid3rxX40', 'XXOWEN_GalaxyxX2022', 'XxBeastMinerxX36', 'HAZEL_Venom88',
                     'JamesC00kieMaster200', 'EpicNinjaClaw76', 'ClawArrowToxic', 'XxDanielLavaxX23',
                     'XxVict0riaM00nxX2020', 'NinjaAquaHer0', 'GigaLegendBuilder200', 'XxGamerFireRocketxX6',
                     'Rogu3Thund3rPanda', 'RiftHeroJelly99', 'WolfCrystalMaster200', 'XxCyb3rQu33nxX62',
                     'Master_Code77', 'ScarlettEchoGamer201', 'NightRiftL3g3nd2002', 'XxNoahGalaxyxX2010',
                     'Cha0sV0rtexVen0m', 'HenryCookie48', 'Hunt3rIc3Zoom2020', 'PhoenixCodeSparkly20',
                     'FlameStealthHunter25', 'WraithRiftToxic41', 'Turb0Lucky200881', 'Jacks0nZer0Z00m',
                     'PlayzKingWolf2014', 'MaxBuilderZer0YT', 'ZoomPlayz33', 'FlameCookie200459', 'Pixel_HAWK63',
                     'ClawFrostJelly', 'HazeNeonStorm201853', 'WilliamIce200981', 'XxEliHeroxX2016', 'XxHenryTurb0xXYT',
                     'VoidSlimePhoenix', 'AuroraPixelated86', 'Haz3PandaQu33n', 'XxLukePrimalRocketxX',
                     'OmegaInfernoMystic', 'Orbit_Bacon2010', 'ViperNinja97', 'FuryPr0Rift', 'RileyNeonBlast',
                     'HazeGh0stPlayz', 'PixelatedZeroMaster2', 'FlashHyper39', 'Neon_ULTRA2022', 'EagleRider2013_YT',
                     'XxRogue_SkaterxX2020', 'FoxPowerDancer', 'MAX_Aqua86', 'FirePulseW0lf91', 'HenryPlayz200417',
                     'MasterFurySky', 'Fir3Silv3rPix3lat3d', 'FlickBlockBeast', 'LightAceGamer2022', 'Zer0N0vaSlime52',
                     'Rav3nPro2024', 'BearVenom68', 'Dark_VIP3R78', 'Xx_Will0wLightC00kie', 'XxZ00mPrimalxXYT',
                     'T0xic_Prism10', 'XxNeonKingxX2002', 'XxBeastNightxX200554', 'PrismToxicSlime2021',
                     'LionSparkNight', 'SkaterDriftFire', 'JamesInferno60', 'SlimeStarPixel2024', 'ByteCircuit91',
                     'JamesStealthPower202', 'WyattMinerChaos84', 'XxVoidStarMagicxX29', 'AsherBane47',
                     'PandaBlastB3ar', 'L0ganFlash30', 'FlickFrostEcho2024', 'SophiaInfernoClaw', 'HeroStormyHawk2002',
                     'M00n_BEAST2021', 'EzraToxicZ3ro', 'Chase_Wraith2002YT', 'ChasePixelated202460', 'FlickFuryYT',
                     'BrooklynEagl3Ghost', 'S3bastianRiftFlam3', 'BaneC0deDancer', 'XxSaber_BlastxX98', 'Ninja_Spark43',
                     'XxFrostHeroLionxX', 'Skater_Hyper2005YT', 'FrostMagic201984', 'Xx_BrooklynLegendAqu',
                     'C0d3_T0xic2018', 'DanielEpicPanda2015', 'ChillAqua19', 'WraithNightThunder',
                     'MagicEagl3Puls32022', 'LunaStr3am35', 'RiderEch046', 'XxToxicMoonNinjaxX', 'Xx_PixelFusionStarry',
                     'PulseFr0st202446', 'H3RO_Haz32021', 'NeonPixel201718', 'PixelatedCrazeZero20',
                     'XxSophiaCraftxX82', 'AvaRocketRift2003_YT', 'XxEthan_RIFTXX62', 'EllaByt338', 'BaneStormyCircuit',
                     'Pr0S0nic74', 'XxStar_MaxxX2011', 'Cooki3Crystal2008', 'WYATT_Bear18', 'TigerCode39',
                     'BuilderPowerLion2018', 'XxJamesZapxX59', 'GalaxyStreamNight_YT', 'Oliv3rH3r0Fir333',
                     'HazelSt0rmFr0st', 'CarterStarryCrystal2', 'Charlott3Ac3Haz3YT', 'ArrowPho3nixInf3rno5',
                     'StreamWraith67', 'SparkBlastRocket', 'WraithPlayzZap2022', 'XxLiamMasterxX18', 'EagleMoon89',
                     'XxBac0nCraz3Rav3nxX2', 'Br00klynCha0sBlizzar', 'B3ar_Blast2024', 'XxIsaacFoxxX98',
                     'JulianRock3tHyp3r201', 'VenomEchoZero2002', 'CookieSparklyFlame45', 'Eli_Hunt3r2010',
                     'NoraVip3r2006', 'Xx_PrimalStormyStarr', 'XxTurb0G0ld3nxX63', 'T0xicRid3r2020', 'Ph0enixZ00m2010',
                     'StormMoonSonic2014', 'DarkN3onWraith', 'STREAMAQUA57_YT', 'Kayl33Byt3Sky40', 'MoonStormy2016_YT',
                     'OliviaGam3rMagic', 'Danc3rH3roAc3', 'Hawk_Alpha201217', 'Chl0eC00kie64', 'XxDragonRogu3LuckyxX',
                     'Rav3nFlashDragon2009', 'MasterBuilder2002_YT', 'MysticLionFrost', 'T0xicLegend2012',
                     'Craft_C00kie77', 'InfernoEpicGamer70', 'PixelUltraDancer2007', 'RocketGhost202456',
                     'Infern0ZapFury', 'L0ganS0nic2008', 'MinerZoom201712', 'XxJulianOmegaCraftxX', 'RiftInferno37',
                     'XxHannahViperxX31', 'BladeChillMiner93', 'Luke_Inferno84', 'XxEvelynBlastAlphaxX',
                     'N0raSkyRift2007', 'KnightBuild3r78', 'Rift_Str3am79', 'XxNoraSab3rxX20', 'Xx_SparklySparkPh03n',
                     'EmmaArrow86', 'Rock3tSilv3r44', 'SamuelOrbitStar', 'Chas3Gam3rFury200216', 'XxNovaJellyxX49',
                     'HenryChaosDrift2015', 'Grays0nDrift85', 'MinerPixelBlaze71', 'UltraGalaxy11', 'NoraEcho57',
                     'GalaxyThunderChase', 'AlphaBane91', 'BLAZEJELLYDANCER18_Y', 'FrostCircuitPuls3', 'DuckGh0stF0x',
                     'XxMysticGigaDriftxX', 'PandaPhoenix201237', 'XxTurboCrazeChillxX', 'EmmaFlickTurb02006',
                     'AquaIc3Glitch', 'Bl0ckGh0st2018_YT', 'Flam3Sonic12', 'XxEvelynToxicxX2023', 'EzraCyber95',
                     'StormPandaTurbo', 'Ech0LuckyJelly', 'RileyAlphaSilver', 'XxAubr3yRogu3LavaxX', 'Blaz3Fir32005',
                     'Jackson_Flame52', 'BeastRiftMystic52', 'ClawBladePixelated', 'HawkToxicWraith2007',
                     'VictoriaByteUltra201', 'XxKayleeTigerxX2010', 'XxSilver_PRIMALXX29', 'XxNightFoxxX2006',
                     'Rider_LAVA75', 'IsaacBan32016', 'XxLayla_MysticxX2023', 'Gam3rPandaH3ro_YT',
                     'XxEch0Gam3rFusi0nxX', 'Jayd3nRiftBlizzard', 'HyperOrbitHawk', 'BanePandaGhost', 'WyattThund3r86',
                     'VictoriaGhostSonic27', 'PulseFlash98', 'FlameHer0C0de77', 'AriaSaberDragon2012',
                     'Xx_NeonToxicBlizzard', 'GlitchNova36', 'FlickVortexBuilder20', 'FusionGhostFrost', 'LeviViper29',
                     'AQUA_Ice94', 'MasterSilver202223', 'Bac0n_Chill11', 'XxVortex_BanexX2003', 'EpicWolfSonic2023',
                     'HawkSparklyPixel40', 'XxEthan_OmegaxX2008Y', 'TigerSaberAce2018', 'XxDawnHyperxX30',
                     'Xx_SamuelPrismStormy', 'Aur0raMaxAqua', 'RIFT_Spark13', 'AubreyArr0wAce88', 'PrimalFrost200616',
                     'Nova_ICE74YT', 'XxSophiaStarryCraftx', 'FireStormy201244', 'CyberMoon2011', 'LaylaBuild3rBacon',
                     'XxAbigailSlimexX2003', 'LegendSilverGiga32', 'JacksonRocket79', 'NoahEpicBlaz376',
                     'Z00mSkaterWraith2015', 'JellyFoxAce', 'HawkAquaOmega2011', 'Hunt3rArrowCyb3r2010',
                     'XxZoeBlazeLavaxX', 'Chl0eKnightDark57', 'Blaz3Slim399', 'InfernoBlastOrbit58',
                     'XxEchoEagleMoonxX201', 'LukeLightBane2024', 'Cart3rHawkSkat3r', 'JackN0vaRift',
                     'RileyPixelatedArr0w', 'StreamNight13', 'Zo3Danc3rRid3r', 'XXAQUA_NightxX2022', 'Ech0Ne0nStar',
                     'KnightB3arWolf2009', 'OwenBlazePr0', 'Lion_Fox41', 'LaylaCha0s88', 'XxFlashUltraxX2007',
                     'ChillSt3althWolf65', 'VortexArrow88', 'DarkPanda200916', 'Willow_SONIC2005YT', 'G0ldenUltra2003',
                     'SlimeByteHer0', 'WilliamFrost200322', 'GhostPlayzBlock', 'PulseToxicSaber2021',
                     'ArrowMysticCookie201', 'Cookie_Ninja201448', 'ZaydenHazeP0wer', 'BlastSkyOmega78',
                     'V0idCha0sGiga201067', 'GlitchVoid202323', 'SparklyNeon12', 'HeroLucky63', 'Samu3lFir385',
                     'Cyber_Arrow54', 'JacksonStormDancer20', 'EthanTurb083', 'XxCrystalMysticAquax',
                     'Build3rSparkEagl3', 'B3arPrimal2012', 'Blizzard_Jelly48', 'XxPrimal_Skat3rxX202',
                     'Epic_Pixelated202181', 'XxUltra_TigerxX59', 'L3g3ndT0xic2024', 'CHASEFIREEAGLE2014_Y',
                     'MysticOm3gaZ3ro', 'XxArrowSkaterAlphaxX', 'BaneArr0wBlizzard', 'Aid3nL3g3nd201660',
                     'DragonDancer201580', 'GraysonHaz374', 'NoahLuckyPrimal', 'FlickFusi0nZ3r0', 'EthanPrismDancer',
                     'XxJackZ00mR0cketxX20', 'DarkGigaRift2007', 'VenomHeroSaber50', 'HawkSky11',
                     'Xx_SavannahNightCook', 'XxBrooklyn_TigerxXYT', 'Gabri3lBlastPix3l', 'GraysonRiftMax_YT',
                     'LunaEcho37', 'LaylaPho3nixDragon20', 'ZoeFoxSky22', 'Ven0m_Thunder2014', 'Xx_PixelatedRocketOr',
                     'MaxGigaDrift', 'Zo3Rav3nFlick2012', 'L3vi_Craft80', 'LuckyFlashCrystal201', 'PrimalBlad32019',
                     'ChloeVenomVortex2009', 'AsherOrbitRift', 'Vort3xCraftByt3', 'DawnThunderN0va', 'XxBaneHawkxX60',
                     'CyberVoidBeast2018', 'CyberGlitch2018_YT', 'StormyMoon200893', 'BUILD3R_Mast3r86', 'RogueFury64',
                     'ZoeBlizzard23', 'HunterFlick66', 'Knight_Tiger201058', 'FrostDriftByt32018_Y',
                     'BuilderWolfRift95', 'TigerCookieBeast77', 'HazelMystic200355', 'GhostSonicFlash2004',
                     'XxDragonCodeBytexX', 'Chase_Claw46YT', 'P0werIceGalaxy202263', 'HyperFlashFury2024',
                     'RiftChillSpark23', 'XxDragonJellyxX43', 'GoldenIce2017YT', 'MichaelShadow52', 'LunaSaberMoon21',
                     'ZeroEaglePulse2007', 'Turb0RavenLight', 'Ne0n_Hawk201995', 'PixelChasePlayz',
                     'ClawFusionDragon2011', 'Xx_Oliv3rCircuitQu33', 'StarryTigerStar2007', 'BuilderFireBeastYT',
                     'EllieTurb0Craft', 'OwenHawkPhoenix20216', 'ByteAceCrystal', 'XxMystic_DarkxX82',
                     'StormyPrimalVortex', 'XxAlpha_BANEXX63', 'Qu33nFury96', 'Al3xand3rBacon42', 'HunterZ00m2005',
                     'XxNeonGlitchNightxXY', 'Xx_CrystalMast3rSkat', 'XXWILLIAM_LionxX2007', 'Arr0w_Cha0s2009',
                     'MinerStormyBlade2005', 'LiamFrost2023_YT', 'Drag0nDancer201486', 'StarryFusi0n76',
                     'TurboZ3roFlick', 'JulianFusionCyber87', 'C00kie_Pr032', 'JacksonBlastGiga51', 'MagicN30n2009',
                     'SkySaberNinja53', 'Ph0enixFr0st90', 'Build3rStr3amV0rt3x', 'HawkJellySparkly',
                     'SparklyLavaPr02007', 'CircuitInf3rn024', 'Ev3lynFir3Arrow2009', 'XXECHO_NovaxXYT',
                     'St3althCyb3rPix3l21Y', 'MiaPr0Arr0w', 'XxAmeliaStarSlimexX', 'Zayden_Zoom52YT', 'Ezra_Tig3r21',
                     'XxStar_FrostxX2020', 'Duck_Fir333', 'Eagl3AlphaSonic', 'GigaRiftPrimal46', 'XxFlashLightxX2022',
                     'XxHannahV3nomxX20044', 'Isaac_BANE90', 'XxEchoMasterxX2003', 'XxJackQueenxX62', 'ArrowOrbit74',
                     'Craze_Hunter2009', 'HazeCookie201733YT', 'OrbitVoidFlame', 'LeviPhoenixBeast2018',
                     'QueenVoidKnight2024', 'Craz3Qu33nV3nom2003', 'SparklyBlastDawn', 'CrystalRoguePrism200',
                     'DragonFlickZ3ro2005', 'NoraVenom2016YT', 'T0xicMinerGamerYT', 'BuilderDragonFlame',
                     'HUNTER_Turbo27', 'AddisonCircuitPix3l', 'FlickZap98', 'Chas3Puls3Ech02020', 'Elli3PrismMin3r',
                     'Inf3rn0Z3r0Mystic201', 'XxFire_Infern0xX82', 'Chase_Skater97', 'XxSamuelR0guexX2004',
                     'VortexSlime200832', 'AvaTurb0Sparkly69', 'Gh0stBlaz32016', 'FlickSonicStormy', 'Aid3nCrystal2018',
                     'FlamePlayzHaze34', 'EthanSkyFlick2012', 'H3nry_Fr0st2007', 'XxLunaC0d3BlizzardxX',
                     'V0rtexBeastStarry201', 'BlastPro2003YT', 'XxShadowVort3xxX2014', 'Ban3J3llyCod32006',
                     'PulseStarryTurbo2014', 'ChillDragonBlast2024', 'PixelatedBeastDancer', 'Kayl33CircuitPlayzYT',
                     'LunaCraftAce2019', 'XxTigerSparkGlitchxX', 'Ril3ySab3r2012', 'PulseNinjaSkater', 'Pow3r_VIP3R81',
                     'H3r0_Ninja24', 'HazeRogue32_YT', 'XxStormDarkFrostxX', 'EchoMoonSaber47', 'SlimeHunterFury',
                     'BearGoldenArrow51', 'XXMASON_AquaxX99', 'ZaydenIceSparkly2020', 'Pix3lVip3r201478',
                     'XxVortexSkyxX19', 'GAMER_C00kie2009', 'XxS0phiaPrismxX32', 'XxToxicMysticPhoenix',
                     'LavaDragonFoxYT', 'VoidNinja44_YT', 'XXOWEN_TurboxX2019', 'FuryKingRift', 'ETHANECHOSTAR_YT',
                     'BlizzardFury201383', 'Toxic_Builder18', 'TigerAlphaPixel52', 'EliTurboKing68', 'PrismCode70',
                     'XxZeroSilverxX77', 'DanielWraithBlazeYT', 'XxScarlettBanePixelx', 'Skat3rMin3r59',
                     'XxPhoenixRoguexX2013', 'Xx_PixelBuilderRider', 'CarterM00n47', 'ArrowSkyBuild3r2011',
                     'MysticInf3rn02016', 'Charl0tteLavaStealth', 'DarkVoid200273', 'BrooklynProKing2007',
                     'ScarlettMagicBlast', 'EthanPh03nix49', 'XxNightSilverxX2021', 'H3nryNinja45', 'FrostFusion94',
                     'AlphaStarry98', 'Blast_Flash39', 'NeonOmegaArrow', 'SAB3R_Starry2009', 'AquaFuryPower',
                     'Mystic_Galaxy201440', 'Mas0nP0wer2014', 'BlizzardMaxBl0ck', 'Storm_L3g3nd200912', 'NoraPulse18',
                     'GhostIceDancer2008', 'XxCyber_PowerxX28', 'CarterHero92', 'Xx_Blaz3Thund3rShad0', 'LukeLight82',
                     'XxMaxUltraxX2008', 'LoganEagleDancer2008', 'Xx_PowerHunterStormy', 'EzraCraze2024YT',
                     'ROGU3_Rift2003', 'Mate0HyperIceYT', 'NoraRogueWolf', 'Danc3rSab3r97', 'AuroraHunterPixel',
                     'OliverFusi0nC00kie', 'V0rt3xPandaBan3', 'DanielChillBl0ck', 'PixelIceSlime2019', 'UltraFuryLucky',
                     'Queen_Zap37', 'AlphaT0xic2002', 'RavenDawnThunder', 'V0id_V0rtex47', 'ElijahG0ld3nBlizzard',
                     'OliverFlame19_YT', 'HunterChase31_YT', 'XxNe0nStreamxX2017', 'WraithOmegaPrimal92',
                     'XxPhoenix_FuryxX74', 'XxOmegaInfernoxX2012', 'XxBlazeZeroxX2012', 'RiderDancerArrow',
                     'SparklyBlockLava2009', 'XxSonicBearxX2020', 'XxUltraBlastxX2003', 'BrooklynnPix3l56',
                     'DragonWraithCookie', 'OliverMasterOrbit201', 'CrazeKing200235', 'HawkSpark200434',
                     'EmmaStorm42YT', 'Charl0tteDriftGalaxy', 'DawnAceP0wer', 'Jayden_Ace82', 'XxRocketChaosBaconxX',
                     'EagleTigerCrystal202', 'Zer0R0gue2006', 'XXJAXON_RoguexX2009', 'EzraEpicBlaz3',
                     'XxAubreyEaglexX20123', 'PixelMiner2013_YT', 'BlockStreamBaconYT', 'XxH3r0MagicxX58',
                     'SilverGiga200894', 'Skat3r_Ban32021', 'XxP0wer_HER0XXYT', 'SilverVenom61', 'Eagle_Lava63',
                     'XxDuckBlazeZeroxX', 'XxArrowStormyxX69', 'IsaacHero92', 'XxUltraRiftChillxX',
                     'OmegaChillFury201724', 'XxSparkWolfxX50', 'BladeLuckyGolden', 'B3astFlam3Sonic',
                     'LightMagicR0gue2024', 'Lucky_CHA0S72', 'Haz3lGigaFury19', 'XxAur0raCyberxX45', 'DuckDawn63',
                     'Gabri3lBlaz32005', 'Ech0FlashJelly', 'Ban3Turb02003', 'GalaxyMoonSilver82',
                     'Xx_Arr0wBuilderStarr', 'NovaToxic200880', 'Flick_Eagl32014', 'Duck_H3ro2005',
                     'SparklyHeroBlade2017', 'HeroJellyCyber', 'MoonByteAlpha', 'KnightOrbitOmega', 'Frost_Flam380',
                     'XxIsaacGoldenBlastxX', 'ChaosFuryZap2002', 'OliviaRiftCookie2021', 'Primal_BLAST65',
                     'BrooklynnBlizzard68', 'XxKayl33KnightxX2005', 'CrystalLava202145', 'TURBO_Rift48',
                     'DriftAlphaBacon', 'XxHenryCha0sSlimexX', 'Xx_MichaelRiftC00kie', 'CodeBlizzardOmega_YT',
                     'ScarlettNeonIce2022', 'XxJamesClawRiftxX', 'NoahCrystalBuilder41', 'GlitchChaseMystic60',
                     'JamesNinjaEagle13', 'PrimalPanda202085', 'ByteHawkChill', 'ZoomBeastVenom', 'ChillStream2013',
                     'PlayzFury2022YT', 'InfernoAceGlitch', 'EmmaMaxR0cket2004', 'NeonFusionMax50', 'EllieFlickViper',
                     'XxHyp3rPrimalZapxX', 'PrismT0xic2014YT', 'RiderZeroEcho77', 'CarterLuckyMagic65', 'EmmaThunder40',
                     'Bac0nM00nCraze', 'MoonBuild3r2023', 'LionMasterStarry2006', 'FusionBlaze74', 'TurboFlick2007_YT',
                     'StarBlockAceYT', 'XxLegendGigaxX78', 'BuilderSilverCrystal', 'Xx_L3g3ndPho3nixSlim',
                     'EthanHawkZer0', 'IceHunterOrbit', 'BrooklynnUltraPix3la', 'LegendRiftNinja2011',
                     'Panda_Dawn201699', 'Haz3l_Knight87', 'XxHawkWraithxX200557', 'BladeOmegaBear2004',
                     'XxMiaByteDarkxX2007', 'VoidProCraz3', 'Vortex_Neon77', 'NoraGiga67', 'BrooklynnVort3xAlpha',
                     'Xx_SparklyIceCrystal', 'MysticSilverFrost73', 'Jacks0n_Knight2004', 'Isab3llaIc3Duck2007',
                     'XxBuilderPr0xX202471', 'XxStr3amZapAc3xX', 'XxByteEchoxX2002', 'Arr0wEch0SkaterYT',
                     'XxCyberHazeSparklyxX', 'RavenAceEagle', 'LuckyFlashFox55', 'Bear_Ven0m2004',
                     'FrostRiftMaster2014', 'SavannahZ3r0YT', 'XxCharl0tteRavenZapx', 'MoonPuls3Thund3r',
                     'AlexanderPrismDuck58', 'Blaz3Drift90', 'AidenCraftZoom2004', 'Mate0HyperFlame', 'ChillIceMoon',
                     'GHOST_Gold3n2021', 'XxGlitchArr0wEch0xX', 'XxNoahCraz3FusionxX6', 'Inf3rnoFuryFlam3',
                     'Stormy_Vip3r72', 'VenomBacon2024_YT', 'XxLogan_MoonxX2022', 'Hyp3rByt3Lucky',
                     'XxSamuelPowerBytexX2', 'ChaosGlitch75', 'Prism_DRIFT202211', 'DriftArrowRift_YT', 'Orbit_Ace12',
                     'XxNinja_Hunt3rxX48', 'XxFir3WraithxX72', 'XxMiaEch0AquaxX', 'Chl0eP0werDawn', 'L3g3nd_Fox27',
                     'SkaterCrystalUltra', 'F0xBeast2007', 'Will0wM00nHaze85', 'Oliv3rCircuit55', 'PixelArrowHunter',
                     'Ezra_NIGHT28', 'XxCod3ToxicxX2006', 'ProDancerOrbit2002', 'LionSparkDancer2005',
                     'ADDISON_Builder46YT', 'OmegaStormyThunder', 'Charl0tteDark64', 'Chl0eFireMystic',
                     'JellyPixelTurbo2004', 'DawnPow3rFrost', 'Gam3rMaxEcho2012', 'XxHaz3lAquaxX201918',
                     'XxRift_W0lfxX49', 'Sky_ZAP16', 'L3g3ndGhost2002', 'XxCart3rZ3roHunt3rxX', 'Aur0raDuck13',
                     'StealthEpicAce', 'StormyTurboChaos2012', 'XxDarkJellyRiderxX89', 'Cod3StormNight2006',
                     'BrooklynAquaPro', 'Star_Pr02004', 'EllaAquaSky', 'Isaac_Phoenix19', 'RocketQueenPixel',
                     'XxSonic_Rid3rxX2015', 'RogueEpic85', 'AmeliaIce92', 'Byt3Qu33n76', 'XxZaydenBanexX83',
                     'WraithBlastUltra', 'XxGamerSkyxX2018YT', 'Ban3Vort3xNinja', 'XxSaberShadowBuilder',
                     'SavannahSparkly96', 'Addis0nBlade2022', 'RiderV0idGalaxy_YT', 'XxThund3rLavaTig3rxX',
                     'SavannahLionToxic202', 'LiamSkaterCraft2005', 'DriftEpic73', 'FlickSaberGhost2006',
                     'HannahEagle51', 'MysticDawnFlash', 'RileyBuilder202440', 'BlastNight201844', 'LoganWolfQueenYT',
                     'ZoeVoidBacon', 'Z0e_Ven0m90', 'Blad3Gam3r2003', 'Scarl3ttP0w3r22', 'SonicSky69YT',
                     'ThunderStormyStorm', 'Sparkly_Hawk67', 'XxPowerLegendxX2012', 'ThunderSlimeStar',
                     'HeroWolfSparkly', 'ZapSt3althKnight2022', 'Will0wPr0201551', 'Chaos_Frost202240YT',
                     'RiderSaberAlpha', 'XxHenryOmegaxX2009', 'XxIsaacBaneCraftxX', 'LionFoxGiga2003',
                     'Brooklyn_H3ro2004', 'ZeroFoxSonic', 'RiftRogue202023', 'XxChlo3Build3rxX70',
                     'SebastianPrimalFrost', 'ELI_Void2020', 'LaylaN3onRid3r', 'XxCooki3MysticxX2011',
                     'EllieViperBuilder', 'PhoenixBuilderStealt', 'XxPrimal_SlimexX37', 'XxCrazePandaDragonxX',
                     'XxPrism_NeonxX64', 'KnightPulseFlick2021', 'XxRogueBuilderLegend', 'XxAriaBuilderBlastxX',
                     'StarB3ast34', 'ByteBladeBeast2004', 'H3NRY_Om3ga93', 'SavannahPix3lV0id', 'JellyPulseBacon',
                     'Michael_V0rtex73', 'HeroZeroFlick', 'MagicFlickDark39', 'WilliamHunt3rCraftYT',
                     'LaylaRiftVoid2007', 'XxJamesNeonxX2023', 'XxFrostJellyZapxX', 'Amelia_BEAST51', 'ChaseR0cketRift',
                     'M00nMiner2006', 'Cart3rBlock67', 'Stream_Lava13', 'SparkCraze201049', 'Mat3oB3ast61',
                     'TigerStarryQueen', 'ProMaxEpic', 'FusionGalaxySaber_YT', 'Samuel_Circuit28', 'ChaosIc3Fox',
                     'AlexanderQueen200763', 'ZapPixelatedFire2021', 'WillowSonicWolf2015', 'EpicStarDanc3r',
                     'S0phiaSparklyPixelat', 'N0vaRider2003', 'RiftQu33nEcho', 'Playz_Galaxy80', 'Zo3Zoom2012',
                     'JacksonRocketBlaze15', 'Tig3rThund3rSlim3', 'SebastianSonicFlash', 'ChaseRiftHunter2019',
                     'Jayd3nArr0wYT', 'Blaze_P0wer94', 'Danc3rAlphaMoon', 'GoldenBlazeFury', 'OwenCookie201272',
                     'AmeliaRiftLegend2022', 'St3althDragon2009', 'Mat30Skat3r67', 'BlizzardCrazeEagle',
                     'Rav3nStr3amDragon66', 'OliviaMystic2007_YT', 'JulianSparklyOm3ga20', 'XxChillNeonHeroxX',
                     'ScarlettMaxAqua', 'Storm_Pow3r2013', 'XxNeon_CyberxX2016', 'ZapOm3gaSilv3r', 'Storm_Jelly68',
                     'DuckMoon96', 'StreamLionDragon12', 'Ac3Build3r85', 'JackFir3Storm24', 'SonicPhoenix61',
                     'J3llyFlam3Rid3r', 'RiftTurboFury46', 'Haz3Skat3rCrystal99', 'BearFire57', 'BuilderBlizzardP0wer',
                     'DancerStarToxic', 'XxLeviDuckxX95', 'Sab3rShadow2014', 'StreamKnight21', 'Chill_J3lly200273YT',
                     'AquaDrag0nSt0rmy2019', 'CraftStealth18_YT', 'Saber_Fire49', 'MOON_Orbit2016', 'Fr0st_R0gue2011',
                     'JulianRavenStormy33', 'Pow3rSparkly202422', 'Carter_Bear55', 'SkaterCrazeBeast',
                     'XxRocketZapxX49', 'Qu33nRid3r201325', 'Jack_Void201647', 'XxAmeliaPrimalBearxX',
                     'Samu3lWraith201237', 'StarByte15', 'Z0eSt0rmySilver', 'LukeFlashDancer_YT', 'XxGiga_LI0NXX97',
                     'SparkEpicDanc3r', 'Ultra_Rocket71', 'JacksonClawStormy', 'XxVict0riaLegendKnig', 'HazeTurb022',
                     'FrostGalaxyBlaz3'}
local RECEIVER_LIST = {'XxMaxDawnxX97', 'Crystal_Phoenix2024', 'XxMichaelPowerDarkxX', 'XxZoeHazeFlamexX',
                       'DragonGold3nDawn', 'ThunderStormyDrift', 'SebastianRider74', 'ZoeEpicMax2003', 'VenomHawkToxic',
                       'XxSebastian_QUEENXX4', 'Her0RiftSilver2023', 'XxJaydenMasterxX2005', 'LaylaDragonHawk2009',
                       'N3onLion95', 'Bac0nM00n15', 'HenryUltra200498', 'LuckyPixelViper42', 'XxGlitchPixelOmegaxX',
                       'Xx_NINJANE0NBLIZZARD', 'SebastianViperPanda', 'Elijah_Magic31', 'XxPuls3MaxxX2005',
                       'LuckyZoomCooki32008', 'PulseAquaShadow2008', 'ThunderMiner2004YT', 'StormInfernoRaven201',
                       'ORBIT_Pro200295', 'BuilderSilver66', 'NeonGlitchGalaxy88', 'ChaseDragon201481',
                       'BeastThunderBlast', 'ST3ALTHKING_YT', 'EmmaSt0rmy2010YT', 'NeonHeroCrystal20185',
                       'BlazeByteDarkYT', 'Xx_StreamMysticThund', 'Epic_Storm75', 'V3nomBuild3rFlam3200',
                       'Dani3lDawnSky2018', 'Cart3rM00nKingYT', 'XxOliviaCraftxX_YT', 'Blaz3DragonMast3r'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
