-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'XxZeroNinjaQueenxX', 'GlitchM00n72', 'KayleePulseCraft', 'ProV3nom2012', 'Chl03Pr02016',
                     'GraceNovaLionYT', 'Xx_RiftPixelatedRave', 'Byt3_Flam32008', 'FuryV0rtexT0xic2017', 'Haz3Rid3r23',
                     'Ph0enixEch0Fire', 'KingSparkNinja2015', 'Ven0mZap27', 'SkaterCrazeHero2014', 'IceRocketJelly',
                     'RavenSt0rm94', 'Am3lia_DRIFT2023', 'AceEchoKnight2007', 'StormyBlockPuls32012',
                     'Xx_SkaterTurb0V0rtex', 'R0GUE_StealthYT', 'WolfEagle36', 'G0ldenDrag0nIce', 'P0werRavenCraft',
                     'AriaMoonRider', 'XxGlitchInfernoDrift', 'WraithL3g3nd2012', 'XXLEGEND_CrystalxX45',
                     'XxGigaEchoxX2006', 'XXC00KI3_Danc3rxX201', 'GoldenPandaFlash', 'Lucky_BAC0N2011',
                     'XxEzraEagleMasterxX', 'XxHannahBaconBanexX', 'AubreyAquaRift77', 'V0idPixel88', 'Jackson_Lucky30',
                     'DragonPandaHaze2022', 'XxRider_TIGERXX2015', 'Sebastian_Star33', 'XxSavannahGlitchxX94',
                     'KnightVip3rWraith200', 'L3vi_B3ast45', 'AsherSaber13', 'XxJellyHeroMinerxXYT', 'ZeroRavenLegend',
                     'ChaosStr3amChill', 'Shad0wPulseHer02010', 'ZapDawnDrag0n_YT', 'BlastByteT0xic',
                     'CharlotteToxic21', 'XxCraftSparklyxX2009', 'XxZapLavaxX2008', 'XxN0raFusi0nNightxX',
                     'SparklyRiftEcho48', 'EchoRiftCrystal2017', 'MysticFlashP0w3r', 'XxHarperTurboFlamexX',
                     'MasterNightAqua_YT', 'LavaHawk201443', 'XxLoganDanc3rZapxX_Y', 'Xx_GalaxyPrismDragon',
                     'WraithEchoMoon', 'StormLightNova10', 'XxJacks0nCircuitSkat', 'ChaosClaw15',
                     'XxCrazeWraithMinerxX', 'DarkDanc3r95', 'WillowTig3rCircuit', 'N0ahN0vaPh0enix', 'Li0nBl0ckG0ld3n',
                     'InfernoVenom14', 'FusionFlickFire20183', 'LukeAlpha200251', 'Byt3FlashArrow', 'ToxicSky200678',
                     'RileyViperCode2016', 'Chill_Flick68', 'EvelynBytePrimal', 'EliVip3r202273',
                     'XxQueenStarStormxX90', 'Cha0sDuckSkat3r', 'Om3gaVort3x17', 'CodeMaxEagleYT', 'STORMGIGA2014_YT',
                     'HeroJellyCodeYT', 'XxHaz3NovaMysticxX_Y', 'AceSt0rmy202340', 'Wraith_Builder17',
                     'PhoenixFoxZap2016', 'J3lly_Str3am59', 'Gold3nFuryAlpha', 'XxTig3rSonicxX2010', 'Ezra_Tiger40',
                     'Jam3sSpark200267', 'AquaDuckSonic', 'DuckStormy31', 'XxTigerPrimalxX65', 'ZoomRid3rCrystal',
                     'Galaxy_MYSTIC2023YT', 'Michael_Rider35', 'SEBASTIANCRAFTLION_Y', 'Toxic_Pro2018',
                     'SlimeR0cketT0xic', 'CodeGhostStorm2015', 'Xx_GoldenPrimalEagle', 'AceZapGh0st29', 'WolfCodeQueen',
                     'CraftLucky65', 'XxPix3lHunt3rxX2012', 'LavaDawnHyp3r', 'NinjaAquaTiger2013', 'Luk3Rid3rPanda',
                     'VoidPrism65_YT', 'Samu3lH3r02008', 'Rock3tRav3n200994', 'OmegaRogueBlade2010',
                     'XxSkaterRiftDuckxX', 'DriftTurboSkater_YT', 'FireZap55', 'ClawGolden2023_YT', 'AuroraBlock201632',
                     'PulseLightWolf79', 'Haz3Bacon2021', 'CyberLightHunter', 'XxRift_FirexX2022',
                     'InfernoNeonGamer2013', 'HawkKnightQueen_YT', 'GhostGlitchLion2017', 'SkyMin3rPro_YT',
                     'Br00klynnFir3Ph03nix', 'FuryT0xicP0wer2019', 'CrazeEch0C00kie', 'BlockOrbitLucky84',
                     'Drag0nPrismLucky', 'ZoeTurbo202358', 'Gabri3lThund3r47', 'DuckSab3rToxic98',
                     'ElijahPrimalBuilderY', 'WilliamHeroMoon2003', 'GLITCH_Gam3r2014', 'Pix3l_Ban3200546',
                     'JackByte202132', 'Gabri3lMax28', 'RavenHero202375', 'XXFLAME_N0vaxX2024', 'H3roBuild3rZap',
                     'Shad0wUltra2024_YT', 'LunaUltraStormy', 'EagleZ00mChill', 'DuckNight79', 'XxEchoPowerAcexX',
                     'BeastMystic47', 'LunaEagleRift2019', 'JackDancerBlock', 'XxPix3lat3dR0ck3tSha',
                     'ArrowBacon201987', 'FlickLightSlime', 'HannahFlameEcho', 'H3roToxic85', 'XxMaxRavenxX200596',
                     'XxAquaGam3rxX36', 'SkySparkly19', 'Xx_JacksonHyperSpark', 'PrimalEagle57', 'Dani3lCrystal30',
                     'SlimeDancerStealth45', 'LightPrimalGhost2012', 'XxOwenRiftTigerxX201', 'XxFireLightxX2016',
                     'XxFusionRiderZoomxX', 'AriaMasterFlash52', 'Aubr3yGalaxyCrystal', 'MoonGigaArrow81',
                     'Aqua_Build3r200286', 'XxNightBanexX2021', 'BlazeGlitch2005YT', 'MiaDancerBlock33',
                     'Vort3xSonicMast3r', 'ZapQueenDark2024', 'Lava_Rogue17', 'Ne0nEagleFire2013', 'BrooklynMaxAc3',
                     'XxTigerGoldenxX31', 'Turb0BlastDark', 'Gam3rNova45', 'Build3r_SONIC76', 'UltraPandaVortex',
                     'XxFireDragonBytexX', 'XxBearOrbitDancerxX5', 'UltraGam3rVoid2008', 'PlayzMaster201311',
                     'Knight_Blade200968', 'GabrielDrag0nLucky20', 'AsherGalaxySparkly50', 'S3bastianAc356',
                     'L0gan_V0rtex2011', 'Scarl3ttZoomFusion20', 'ChaosGam3rPix3lat3d2', 'Blaze_Skater200540',
                     'WillowFlashCraze2009', 'LiamMysticViper_YT', 'FlameVortex201561', 'XxAvaMysticJ3llyxX70',
                     'FrostQueenMiner', 'HazePixel12', 'PrismDawnByte', 'FusionMagicPix3lat3d', 'BlizzardPulseStorm',
                     'DRAGON_Ghost42', 'XxPrism_SkyxX2023', 'XxClaw_C0dexXYT', 'EmmaFr0st200514',
                     'Gold3nToxicPlayz2007', 'AsherPower86', 'XxAubr3y_DRIFTXX2015', 'Build3rPanda62', 'Ninja_G0lden64',
                     'Ech0Bl0ckSky', 'XxF0x_EPICXX2022', 'XXZERO_BlastxX2016', 'N30nSt3althWraith', 'LoganBladePrism',
                     'EchoQueenRider', 'MiaB3astH3r02010', 'AsherGigaCode2019', 'SonicChill72', 'XxEthanVenomCrystalx',
                     'XxZero_WolfxX12', 'DuckZeroChaos2002', 'AquaDriftBear2019', 'HarperBlastQueen',
                     'EchoWolfNinja201730', 'XxCookie_UltraxX2019', 'Charlott3Silv3rRift', 'GRAYSON_Night84',
                     'SILV3RSTORMY71_YT', 'Ezra_Dark27', 'Ezra_Bane31', 'XxGoldenHeroxX2016', 'EmmaMinerMaster20179',
                     'Pix3lSlim3Alpha', 'Luk3Dark200772', 'IceMaxBeast2007', 'SilverNightCraft', 'AddisonRav3n89',
                     'MinerArrow49', 'Mate0_Gamer94', 'BlizzardFox60_YT', 'Ultra_Zero202420', 'Ech0_Glitch200699',
                     'RAVEN_Inferno96', 'SebastianM00nNight', 'XxHazeDarkVen0mxX_YT', 'SparkAceNinja2010',
                     'StreamKnightLion2014', 'Omega_C0de2009', 'AquaHunterStream48', 'Eagl3_Epic86',
                     'ChaosVort3xStormy', 'DragonMinerZap91', 'AidenNova28', 'CharlottePixel200220',
                     'KnightSlimeFusion', 'XxBlazeRocketLionxX', 'Aur0ra_B3ar16', 'MysticChillUltra31',
                     'XxRiderStarryCrystal', 'LeviZoomHyper2008', 'ChaosBuilderGhost17', 'JulianMinerThunder20',
                     'LiamSonic13YT', 'Giga_Rock3t95', 'W0lfC0de36', 'ThunderRiderBlade', 'CraftThunderTurb0_YT',
                     'StormyByteGlitch', 'BearRiderCircuit', 'Sebastian_Wraith12', 'InfernoSonicCircuit',
                     'XXSOPHIAIC3XX_YT', 'Gh0stSkaterDark', 'Echo_Vip3r2021', 'St0rmyCyb3rLava2023',
                     'XxProSparklyxX2009', 'R0guePanda67', 'JulianCrazeVenom46', 'Chaos_Fusion68',
                     'XxGrac3Danc3rFusionx', 'JellyFlame202173', 'CrazeF0x2023', 'L3viTurb051', 'XxZoomHunterxX77',
                     'PlayzAlpha200752', 'WyattAc3Toxic2021', 'EzraMysticBuild3r', 'Noah_Dawn202250', 'ZaydenBeast29',
                     'LuckyC0d3Danc3r2023', 'Aubrey_Byte65', 'ScarlettDuckTiger201', 'FlameStreamEpic',
                     'Zer0Fire202465', 'MaxGalaxyDawn', 'DuckLuckyBlast2010', 'LoganVortex52', 'DragonCraft202191',
                     'XxEchoCookieNightxX', 'ToxicThunderNeon49', 'XxLavaSparkToxicxX31', 'XxBlastFlamexX2005',
                     'Aubr3yFoxDuck', 'PrismChaosMoon93', 'EpicMaxPixel', 'XxKing_WolfxX18', 'PixelatedTurbo84',
                     'LightEpicFusion61', 'TigerSaberRaven20243', 'XxNovaFusionxX2024', 'KingW0lfStr3am',
                     'XxGamerFireHunterxX', 'BrooklynnNightBeast1', 'Byt3Ech0W0lf', 'SamuelMaxGhost',
                     'XxNoahRocketFoxxX202', 'FusionWolfLegend2023', 'Gold3nPuls3St3alth', 'Hyper_MASTER61',
                     'Mateo_Ninja31', 'EvelynMinerLight', 'XxBl0ck_AlphaxX2005', 'C00kie_Rift202149', 'G0ld3nFlick2002',
                     'BladeFuryRocket', 'KnightStream54', 'S3bastianFlick2024', 'Grac3Knight51', 'DancerAlphaRocket40',
                     'FlashInfern071_YT', 'FuryIc3Wraith', 'Fr0stS0nic77_YT', 'XxWolfClawxX2010', 'DragonViper2018',
                     'Samuel_G0lden2002', 'EthanStarryStar_YT', 'Aiden_Wraith12', 'PulseSlime200688',
                     'XxFlickAquaSparklyxX', 'HenryC0de62', 'Willow_Knight2005YT', 'Panda_Str3am16',
                     'FlickFrostEcho2020', 'BlizzardRocketByte', 'S0nicBeast49', 'DawnEchoFrost2007',
                     'Inferno_Rocket93', 'Moon_HERO54', 'Max_Echo17', 'Craft_Wraith201231', 'Pix3lStormWraith2003',
                     'Cod3Pix3l77', 'LegendG0lden2007', 'CharlotteChaos48', 'Light_Builder75', 'FireMax201347',
                     'RileyStormLegend2021', 'PixelMaxDrift2011', 'Chas3CraftHaz3', 'S0nicTiger38', 'Pr0J3lly2002',
                     'LunaTurboLight2023', 'MaxAquaDark2017', 'LukeDragonRocket', 'RavenSaberC00kie2021',
                     'MaxBuilder201233', 'WyattHeroPrism2017', 'Henry_M00n70', 'XxGigaMagicOmegaxX',
                     'Prism_Chaos200757', 'XxWillowGamerxX26', 'DawnF0x89', 'ScarlettSky31', 'XxWraith_GalaxyxX82',
                     'Sky_Wraith91', 'ZoomPixelatedLion_YT', 'MOON_Giga39', 'XxMasonSlim3xX2023', 'AriaHyperDuck75',
                     'Charl0tteFlashGamer', 'SophiaIc3Rift', 'Zayd3nClawPow3r', 'Flame_SPARKLY53', 'Night_Chase52',
                     'XxJackDuckxX86', 'XxOwenRavenWraithxX2', 'Micha3lPho3nix83', 'XxByteAquaxX57', 'Hyp3r_FLAM385',
                     'Pow3rNight34', 'SilverZer0Light', 'BladeStreamHero2016', 'IceGoldenDrift2013',
                     'PixelatedDriftGalaxy', 'XxLunaAquaBlastxX68', 'H3nry_TOXIC95', 'PixelEcho90', 'ChillEpicLucky',
                     'AceDawn39', 'LeviStream2022YT', 'PLAYZ_Blad353', 'RocketCookie200897', 'F0xFuryHawk',
                     'LeviStarryRocket26', 'Scarlett_Sonic12', 'Ow3nQu33nDuck2016', 'ChaseBuilder201219',
                     'LaylaZ00mT0xic56', 'MasonToxicSlim32009', 'StealthSkaterDragon', 'LOGAN_Sab3r201125',
                     'Blaz3Pho3nixStar', 'RiftLavaWolf2002', 'NightSaberSpark2014', 'JackT0xicF0x', 'GalaxyPr0Craft',
                     'Fr0stDark61', 'ToxicHawk20', 'RogueBlockThunderYT', 'Chl0eNinja2020_YT', 'HunterRiderPrimal201',
                     'GamerUltraZ00m', 'L0ganRift81_YT', 'Eagl3Om3gaNova', 'XxEcho_ClawxX2019', 'Blast_CHILL39',
                     'AmeliaRiderEpic2017', 'Shad0wCircuitSt0rmy', 'Xx_WillowAquaSparkly', 'HazelStreamGhost',
                     'NinjaByt32024', 'TurboClaw2002_YT', 'AvaSky11YT', 'Qu33nSilv3r2023', 'DancerGigaPixel2023',
                     'PixelC0de33', 'Ghost_Pixelated62', 'H3roBan3Pix3l', 'VoidStr3amKnight', 'SaberAqua43',
                     'Ace_Fire2005YT', 'ArrowLightMagic', 'AriaTurboGalaxy96', 'EchoVortexSkater', 'EpicKnightLava2014',
                     'MasterArr0w13', 'Flam3_S0nic2019', 'AddisonInfernoNeon20', 'L3vi_Rift79', 'Br00klynn_Epic55',
                     'Lucas_Toxic34', 'FlashLavaDrift', 'Blaz3Silv3r2024', 'Z00mTurb0Build3rYT', 'OrbitTurbo91',
                     'XxLaylaCrystalFusion', 'Viper_Jelly87', 'XxClawStormySlimexX2', 'EzraZ00mFlash',
                     'RiftStreamClaw200988', 'XxCircuitLavaH3roxX2', 'MOONNOVAMAX_YT', 'PlayzTurboFlame2007',
                     'LightToxicHaze', 'Hunt3rToxicPanda', 'HERODARK43_YT', 'Aubr3yMast3r2002', 'XxRiftVoidLavaxX',
                     'Primal_Code84', 'GalaxyAc3Ic3', 'Hunt3rPh03nix31', 'N0va_C00kie51', 'Ech0Infern0Prism48',
                     'MaxV3nom202483', 'XxPlayzR0cketPh0enix', 'LionPhoenixCrazeYT', 'ZeroPulseHyperYT',
                     'Prism_Orbit24', 'LegendM00nBlizzard20', 'Jax0nRider2005', 'CyberPowerDark',
                     'Xx_GoldenBlizzardSte', 'LukeRiftChase202296', 'FlameFuryBlizzard45', 'Owen_Craft12',
                     'ChaseGoldenMystic', 'Sebastian_Drift2011', 'Ethan_PRO2002YT', 'William_Z3RO2015',
                     'Ban3AlphaSab3r40', 'XxZapStealthxX2022', 'XxN0raBytePixelatedx', 'HenryPlayz202121',
                     'XxLiam_DuckxX43', 'XxChaosEpicxX18', 'MateoBlade67', 'Jayd3nKingHyp3r', 'XxDarkBl0ckxX2004',
                     'L3g3ndMagic2012', 'Micha3lIc3Starry', 'BlockBlazeEchoYT', 'LiamDragonZero83', 'MoonDanc3r2014',
                     'XxOmega_NightxX2010', 'P0werOmega2018', 'Rock3tTurbo200845', 'CraftUltraNight2006',
                     'Haz3l_Rift63', 'SonicTurbo2003_YT', 'Sab3rPow3r17', 'XxMas0nSparkBuild3rx', 'Ezra_Echo80',
                     'R0cketPh0enixHyper', 'XxFireSlimexX2023', 'XxEchoCircuitEpicxX2', 'HyperCyber201124',
                     'XxEvelynBlastEchoxX', 'SlimeHunterStorm', 'Cyb3rZoom91', 'LeviCookieAce', 'AlexanderDancerVoid9',
                     'GoldenChaosChill2012', 'PrimalHazeShadow2007', 'XxAm3liaZ00mH3r0xX20', 'J3llySkat3r89',
                     'ZoomNovaDawn', 'HannahLionGamer2004', 'AbigailMysticArrow31', 'Toxic_Moon46',
                     'ZoeInfernoVortex87', 'AvaGold3nMax', 'OrbitJelly2015YT', 'DuckSonicMaster', 'PixelRogue2013YT',
                     'SebastianDancerTiger', 'JamesPrism37', 'FurySparkly97', 'SavannahTurb053', 'Hyp3rL3g3ndLight',
                     'Br00klynnHyp3rPr059', 'MagicZoom79', 'DarkSlimeBlizzard56', 'Zer0Giga201341', 'UltraStar61',
                     'Craft_Pixelated16', 'AquaEagle201875', 'Pho3nixCooki3202320', 'N0RA_Infern02015',
                     'XxRav3nL3g3ndxX2014', 'GalaxyBlaze95', 'Dani3lGhostUltra38', 'ZapWraithGamer', 'Tig3rSparkBlast',
                     'StormyMoonPanda', 'NinjaBane2005', 'Li0n_C00kie87', 'HunterFrostStorm2022',
                     'WraithLightPrism2022', 'Rider_Haze64', 'XxMin3rDawnxX2017', 'R0gu3CircuitHaz32015',
                     'LucasLuckyCraft20198', 'Pho3nixGam3r49_YT', 'Ne0nGalaxyBear', 'Byte_Builder89', 'HANNAH_Sky27',
                     'XxLavaAlphaG0ld3nxX', 'NinjaChaos201796', 'Charl0tteFireLucky', 'Cha0sPulseSparkly',
                     'XxMasterQueenxX2008', 'DuckPrimalStar2017', 'Zo3Cod32002_YT', 'William_Starry25',
                     'KingChaosVenom29', 'XxOmegaEpicFlickxX', 'MinerShad0wMaster42', 'AbigailStarDancer',
                     'Max_Rider25', 'LuckyZoom78', 'Sab3rV3n0m2005', 'XxBrooklynVortexLigh', 'OrbitCircuitFlame',
                     'XxCrazeMinerxX_YT', 'HazelQueen200522', 'Hunt3rGold3nGalaxy20', 'Isaac_Lava85YT', 'AquaSky201998',
                     'BlizzardAquaNinja', 'JellyGlitchDark2024', 'B3arIc3H3r0', 'Xx_ARROWDANCERSILVER',
                     'XxGamerSkyxX2014', 'InfernoStarry37', 'Craz3Vip3rSpark20', 'XxJackStarryxX44',
                     'LaylaBuild3rMin3r201', 'StarrySlim3Hawk', 'RiftDancerPixelYT', 'VoidDuckSab3r',
                     'XxTigerInfern0xX32', 'MichaelBuilderFlash2', 'XxIcePh0enixxX_YT', 'Zayd3n_Gam3r2011',
                     'Build3r_SILV3R49', 'RogueNovaPrism57', 'AuroraStarTurbo', 'CrystalChas3Qu33n',
                     'XxGraceHer0xX200468', 'Charl0tt3F0x2017', 'DawnEagle38', 'XX_JellySparklySonic', 'NinjaPrimal64',
                     'SparkFox10', 'SkyG0ldenHunter', 'XxDancerPhoenixPrism', 'Bl0ckR0ck3tUltra', 'XxRogu3VoidHunt3rxX',
                     'AvaSkyWolf2016', 'CyberShad0wFury', 'WolfZapRocket', 'HeroStarCraft2024', 'MaxPowerEcho2013',
                     'CrazeGalaxyTurbo32', 'Sonic_Pho3nix2005', 'IsaacUltraRocket', 'QueenFlick67',
                     'ZapStarryStream20138', 'BrooklynnPix3l2017_Y', 'StarLionTurbo2005', 'LaylaArr0wR0cket',
                     'F0xAlphaLi0n2024', 'XxEzraChillxXYT', 'XX_BlizzardWolfWrait', 'XxCrystalFlashxX2005',
                     'ChaosUltraHawk', 'GoldenRiderZoom', 'ChaseSkaterBlock', 'QueenDuckRaven2019', 'VICTORIA_Code19',
                     'HyperIce201815', 'StormyToxic71', 'FlashStealth43', 'XxLoganToxicxX89', 'NovaDragonInferno200',
                     'BuilderRavenHaze96', 'Alexander_Builder78', 'FlameToxicPower', 'TurboRogu3Star',
                     'XxSkaterLegendxX2022', 'DancerOrbit200741', 'G0ldenEagleHaze31', 'AriaHyper60',
                     'XxHawk_TURBOXX2004', 'XXSILV3R_Cooki3xX200', 'LunaSlimeBacon', 'St0rmyStealthDawn200',
                     'UltraBlastHyper', 'Power_Rider25', 'LionTigerFox', 'XxDuckBuild3rxX29', 'XxSkaterCookiexX2015',
                     'XxTurb0PrimalxX2011Y', 'Z00mT0xicPulse', 'ElijahLionNova', 'XxIsaacBlizzardHerox',
                     'FrostTurboPhoenixYT', 'BlazeMagicJelly20118', 'Byte_Sky202218', 'Stealth_Wolf92YT',
                     'JaxonVoidGlitch', 'JackGalaxyV0rtex', 'ScarlettCraze19', 'Epic_S0nic2021', 'BlizzardPrimal55',
                     'GhostSilverGalaxyYT', 'Xx_AUR0RAALPHAGALAXY', 'XxWraithMysticBuild3', 'Gabriel_Thunder52',
                     'V3nomFusionFury', 'Will0wAlphaRaven2005', 'NinjaBeastDragon2022', 'EthanInfern083YT',
                     'XxStormMasterxX2018', 'N0raThunderF0x', 'XxNinja_Pr0xX35', 'EchoBuilder200630', 'FusionTigerSky',
                     'UltraMasterBear', 'XxDanielBlastCyberxX', 'L3viPho3nix87', 'Cart3rGlitchFrost200',
                     'XxAquaDarkGhostxX63', 'NinjaPixelated52YT', 'BaneCrystalCha0s76', 'ZoeBeastSlime', 'CHAS3_Giga56',
                     'ZeroChase201114', 'Z0eG0lden2018', 'RavenW0lfYT', 'AriaByt3Ic324', 'Arrow_Raven33',
                     'Void_Dancer30', 'XxRift_KnightxX2017', 'VictoriaBan318', 'LuckyBlaz3Storm', 'FLICK_Rift66',
                     'Ne0nPixelatedNinja', 'JackChas3Arr0w', 'Fir3Byt359', 'Omega_Epic200952', 'LuckyRogue10',
                     'Bac0nC00kieNinja2004', 'FusionDanc3rNight', 'Blaz3_Light200814', 'HarperPr0Fire',
                     'Xx_BrooklynnStarrySt', 'StormBearThunder', 'Rift_PRIMAL54', 'Fusi0n_Li0n2006',
                     'TurboZeroUltra2004', 'Ban3FoxBacon2017', 'DragonUltra29_YT', 'Scarl3ttPr0R0ck3t',
                     'JamesDarkOrbit', 'PrismDawn202379', 'FrostBuilderVenom45', 'XxStr3amFir3RiftxX', 'PlayzEchoRogu3',
                     'SaberKnight75', 'FUSI0N_Chas3200297', 'PrimalFoxWraith', 'CyberUltraNe0n', 'Will0wOrbit202316',
                     'XXGALAXY_FoxxX89', 'SavannahRavenSt0rm', 'PixelBuilder201692', 'GlitchChaosDancer202',
                     'DuckPh0enix32', 'AidenOrbitP0wer24', 'WilliamBuild3r51', 'Chl03_Flam32004',
                     'Dani3lCooki3Fury2019', 'JulianSkyUltra17', 'Min3rZ3r02002', 'XxAsherFuryQueenxX',
                     'HenryFrostPanda', 'SebastianDancer20249', 'ArrowHunt3rHaz3', 'PowerCodeCraft64',
                     'RiftWraithV0rtex', 'AsherLightLava93', 'RiftSt3althDuck', 'PhoenixBuilder17YT',
                     'XxBladeBlastPrismxX', 'Z3roOm3gaKnight', 'Puls3N30nFlick2016', 'FrostEchoZ3ro12',
                     'Al3xand3rDarkDragon', 'FoxWolf2024YT', 'XxEzraNovaClawxX', 'EthanB3ast84', 'Xx_SparkCircuitKnigh',
                     'M00nBaneAqua', 'XxGalaxyBlizzardEcho', 'T0xicStealth202074', 'SparklyPandaFlame',
                     'NovaGamerHyper2024', 'STORM_Knight33', 'MichaelMinerAce', 'XxInfern0ThunderxX34',
                     'AmeliaTurbo2016', 'Addis0nSparkly2009', 'Panda_MAGIC62', 'Jack_Panda52', 'OrbitEagl32013',
                     'PandaDanc3rBuild3r20', 'SebastianLuckyStar83', 'XxCyb3rSparklyQu33nx', 'XxEzra_CodexX2012',
                     'JaydenFuryLight', 'FoxDancerGiga2007', 'ArrowStr3amPho3nix20', 'Eli_BLADE200623',
                     'Dani3lStarClaw', 'EpicHaz32004_YT', 'CrazeCircuitCraft201', 'Galaxy_Blad348', 'FlashRiftCode',
                     'Z00mP0w3r2014', 'ZapGoldenPro', 'XX_PixelatedEagleGho', 'AubreyRider51', 'XxEliEagleGoldenxX',
                     'XxJax0nDrag0nxX89', 'BlockToxicVortex2002', 'GOLDEN_Code2021', 'NinjaEagl375',
                     'DriftBearThunder2010', 'ZoomFlam3Blast', 'Xx_Al3xand3rHyp3rLuc', 'FusionViperHunter',
                     'CircuitArrow51', 'TigerToxicCyber2014', 'XxDragonEchoRavenxX', 'JellyMinerTiger', 'Ice_Blaze63',
                     'HunterGamer201081', 'B3arPr084', 'BladeGhostDancer25', 'Ash3rMagicFusion2022',
                     'WilliamChillStealth7', 'OliviaV3nom55', 'XxEagle_QUEENXX2008', 'CrystalNovaChill',
                     'Hunter_Jelly93', 'Rogue_Drift28', 'LunaGold3nEcho', 'InfernoDawnVortex', 'AbigailStarry65',
                     'AriaDuckG0lden2018', 'AmeliaByteRift36', 'Bl0ckAquaEch078', 'XxGalaxySkaterxX66',
                     'XxAbigailWraithBeast', 'XxTig3rDragonZoomxX', 'ElijahPrism2010YT', 'NeonHazeCookie',
                     'Ech0LavaSaber', 'XxQueenRiderFlickxX2', 'PrimalClawFusion68YT', 'Craz3Tig3rBlizzard55',
                     'XxZoom_GalaxyxX79', 'AbigailStormyDark_YT', 'XxEllaToxicxX57', 'DriftRiderLegend',
                     'Xx_BeastPhoenixFrost', 'XxPandaClawxX2010', 'XxThunderTurboxX2011', 'Emma_Ninja96',
                     'XxCraftStormxX40', 'LightHaze78', 'OmegaFoxFlash2007', 'BlizzardHaz3Block', 'Br00klynnCrystalPr0',
                     'Cooki3SkyPuls3', 'GamerFox202022', 'XxBuilderToxicBearxX', 'WolfDragonUltra2010',
                     'Turb0EpicPixel', 'RavenStarry52', 'Vortex_Dragon200975', 'Am3liaThund3rPho3nix', 'Nora_CRAZ373',
                     'VoidSab3rFir3', 'XxHazelBanexX_YT', 'XxFrostMasterMoonxX', 'Dark_Pix3l47', 'StarShadowBuilder201',
                     'XxAmeliaNinjaxX66', 'TigerCraftRift_YT', 'V0rtexViper42', 'Xx_CircuitFlashVenom',
                     'Silv3rChill2017_YT', 'XXBEAST_FrostxX2017', 'Flash_ULTRA15', 'StormyTig3r2003',
                     'AUBREY_Inferno96', 'Cod3FrostMystic', 'Jam3sQu33nZ3ro', 'UltraIcePrimal200952',
                     'Flam3GlitchPanda', 'XxSkaterLightViperxX', 'VictoriaGamerMoon202', 'Rawandrusi966',
                     'Oduondo90621', 'Vitalyaich7742', 'Hessgrod63259', 'Algevroom3099', 'Ellysbilik6534',
                     'Bastgolen710', 'Yunktane764', 'Kusezema83683', 'Garotbamer376', 'Lahozneyo4045', 'Ibeyhorka026',
                     'Jayanburtz417', 'Anidicoose4821', 'Rokewarga87381', 'Gluchtaver838', 'Mescebanas763',
                     'Macrowedl8413', 'Showsgolab1049', 'Danessiden70749', 'Jonjouzayr056'}
local RECEIVER_LIST = {'Xx_Aubr3yCircuitShad', 'AceHyperBl0ck', 'XxTurboSlim3StormyxX', 'StarStarryVenom2016',
                       'SkyBanePanda2010', 'LegendEpicPixelated', 'LionNovaPower200756', 'Micha3lCooki3Max',
                       'Builder_P0wer26', 'LegendFlame92', 'CyberStar200644', 'KayleeStormyRogue', 'Chlo3Cod392',
                       'ZOOM_Blaze2020', 'HannahR0ck3tGlitch', 'EthanLava93', 'XxChlo3Thund3rHyp3rx', 'Cooki3Chas3Cod3',
                       'XxMoonPlayzxX201449', 'XxInfernoThunderHype', 'Hunt3rGalaxyFlash200', 'LionZap200458',
                       'XxByteSkyxX11', 'Turb0Rift93', 'XxVortexFrostxX2014', 'XxWraithDragonxX20', 'Aqua_H3r02013',
                       'SkaterEchoTurbo2024Y', 'SkaterVortex17', 'PrismPowerDuck2022', 'ZapStream10YT',
                       'LoganThunderLion', 'MiaEagl358', 'AbigailBac0n2004', 'Tiger_Ace40', 'H3ro_CRAZ312',
                       'BlazeSlimeGlitch2002', 'Min3r_Primal38', 'BladeChaosMax', 'SilverBladeMiner2004', 'OrbitEch029',
                       'XxArrowUltraxX78'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
