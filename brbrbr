-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'EzraC00ki32019', 'Dawn_Haze89', 'Xx_Harp3rCraftThund3', 'ThunderKingDuck65', 'Rid3rAqua2015',
                     'BearRavenCrystal', 'reesejackson7660_ave', 'BLIZZARD_R0gue26', 'BlastT0xicC0de',
                     'MoonChase200662', 'EmmaBlock54', 'StarTurboGamer', 'AvaDancerBeast', 'AlphaFuryFlash201587',
                     'Amelia_GALAXY39', 'Flick_OMEGA2007', 'XxRavenGalaxyxX2020', 'Ven0m_Pulse2024', 'WillowByt3Gam3r',
                     'EthanToxicVenom', 'averymartin2619_elli', 'Al3xand3rLucky91', 'NovaDanc3rMagic72',
                     'Xxskylerthomas6855ha', 'XxN0raSparkBl0ckxX', 'dakotawhite1520_MORG', 'GRAYSON_Blast2014',
                     'AidenV0idBlade', 'JacksonCraft201214', 'XxBuilderFireGamerxX', 'Bl0ckDrag0nAlpha',
                     'BlizzardRift55', 'HyperRocketViperYT', 'MateoHero2021YT', 'Haze_BEAST52', 'Pow3rOrbitCircuit',
                     'SilverZoomBlizzard', 'Ace_HUNTER200781', 'XxGabrielBlastxX2002', 'StarH3r0Hyp3r',
                     'LukeChaseBuilder2002', 'OwenChill2015', 'GamerNeon2004', 'STAR_Skater87', 'emersonhall8188camer',
                     'VictoriaIc3Fir373', 'EllieZap22', 'HazelPixelatedDark20', 'HazelMasterJelly', 'Jack_MINER60',
                     'Oliv3rBlaz3Bl0ck', 'Qu33nBl0ckYT', 'XxGalaxy_AquaxX75', 'XxAsherLightDriftxX',
                     'AlphaBlizzardVoid201', 'ClawBuild3rStr3am', 'NightPandaArr0w20151', 'LightEchoBuilder2012',
                     'XxAquaPandaxX14', 'RavenShadowLucky2021', 'XxCookieToxicxX63', 'XxHaz3lFusionxX20127',
                     'Hunt3rV0idChas32022', 'AvaBuilderPanda2021', 'Fir3King96', 'FuryLavaEch0', 'LaylaSaberFlame',
                     'JackSaber13', 'XxW0lfHer0xX2018', 'Chloe_Dancer2024YT', 'Inf3rnoIc380', 'Jayd3nPix3lat3dChas3',
                     'DAWN_Eagle82', 'Om3gaCooki3201322', 'Flash_B3AST77', 'BeastSkyMoon2011', 'XxBlastRogueSilverxX',
                     'RiftKingPhoenix', 'DanielKing201017', '3m3rsonwalk3r41273ll', 'XxBlockLionRiftxX35',
                     'Blad3Fusi0n2017', 'CRAFT_Turbo2019', 'ELI_Cyber202282', 'Xx_Aur0raInfern0Wrai', 'Chl0eBearR0cket',
                     'HazeSonic87', 'XxAid3nOrbitxX2007', 'AceN0va2017', 'HannahBeastTiger', 'Chlo3_PANDA2010',
                     'CircuitTurbo27', 'rileysmith1653_kaiwh', 'Henry_Fury20', 'MichaelChaseHero95',
                     'JellyNe0nSt0rmy2004', 'peyt0nharris7147_HAR', 'XxCrazeCodexX2011', 'L3viHunt3r', 'OliviaBeastMax',
                     'Jacks0nSlime202196', 'Ph0enixTurb027YT', 'XxLiamSilverHunterxX', 'WillowBlastMystic',
                     'Owen_Power31', 'LightVenomPulse', 'loganwhite2856rileys', 'XxRavenGalaxyxX2009', 'IsaacArr0w2019',
                     'Julian_Night10', 'HazeFury76', 'PixelIceBlast2016', 'LuckyBac0n2009', 'cas3ywhit33965_morga',
                     'Ev3lynStr3am41', 'BeastPowerTiger2002', 'LionMasterRiftYT', 'Min3rSkyFlam3', 'CrazeFlameLava88',
                     'AlphaChillBlaze', 'StormyFrostIc357', '3LLIOTTHOMAS459_harp', 'XxMinerMysticxX18',
                     'RavenCraftNight', 'BladeSparkChaos', 'XxGrac3ZapShadowxX20', 'AlexanderBlizzardByt',
                     'PowerArrowAlpha', 'Cart3rDrift98', 'XxLukeChillxX2020', 'ArrowMystic19', 'ChaseMoonChill',
                     'CraftCraz3Tig3r2020', 'PlayzTurboCyber20203', 'Z3roChaosRock3t', 'DriftBuilderInfern02',
                     'LuckyM00n91', 'Amelia_Circuit96', 'LegendEagle40', 'BaconCraze2010YT', 'TigerArrowWraith',
                     'DANI3L_Build3r26', 'Paisl3yDrag0n2017', 'XxRileyRiftProxX', 'Ech0B3ast15', 'Fir3Vip3rC0d32003',
                     'HAZEL_Rift38', 'XxAubreyPandaStormxX', 'AidenStorm75', 'PrismBlockCraft', 'RiftRiderDancer10',
                     'RiftPanda202231', 'XxSophiaPrismKnightx', 'XxHazelIcexX2020', 'AddisonBlockIce',
                     'XxEzra_DancerxX20', 'SavannahShad0w37', 'XxW0lfGigaxX2010', 'StarBlazeRaven99', 'BeastCrystal59',
                     'HazeV0rtexRift', 'AriaRift26', 'Chlo3Cooki399', 'HannahEcho202226', 'Xxjordanharris7826_Q',
                     'ViperZapBac0n', 'CraftCookieToxic', 'OmegaQueen92', 'Scarl3tt_Byt3', 'LukeRavenHyper2023YT',
                     'PulseBuilder201690', 'JellyPowerFury2016_Y', 'Harp3rHunt3rKnightYT', 'BaneLava200527',
                     'SamuelZap66', 'BlazeShad0wBlade', 'RogueSaber2023YT', 'Jayden_Gh0st99', 'MichaelSlime202124',
                     'AubreyNeonMoon', 'PandaFirePrism12', 'MichaelStormyPulse', 'JellyLavaMystic2018', 'Zayd3nCraz394',
                     'XxL3viNightxX2016', 'StormyStealth2017', 'SavannahEagl362', 'JulianLightS0nic11',
                     'OliviaByteClaw', 'SkaterEagleBlast2014', 'Rav3n_ULTRA201064', 'Micha3lLuckyLava2015',
                     'Z0eSparkNe0n201985', 'CraftSonic60', 'Ac3CrystalCraft', 'XxMasonCodeAcexX',
                     'ToxicRogu3Mystic2022', 'kaiwalker1921harperw', 'Primal_Arr0w2009', 'XxGoldenPrismxX45',
                     'UltraBlade2024', 'Ph0enixQueen79', 'AbigailEpic202028', 'CookiePrism80', 'XxEagleGhostEchoxX55',
                     'Aid3nH3roDawn', 'C00kieClaw2013', 'HarperGhostCrystal', 'T0xicRider2008', 'ISAAC_Fusion2019',
                     'Al3xand3rP0w3r201195', 'LunaChaosAce', 'Gold3nKnightDuck', 'WILLIAM_Slime56', 'FlameV0idNe0n',
                     'KingFox55_YT', 'Xx_averyr0driguez943', 'ToxicRift21', 'Storm_Epic201321', 'EthanMagicPixelated',
                     'Layla_King2013', 'Xx_BUILD3RT0XICMIN3R', 'Hyp3rEchoStr3am', 'Fox_Flick2012', 'CyberS0nic2005',
                     'Bacon_Dawn46', 'DarkZap25', 'C0d3Fir3N30n2024', 'HannahViperPro', 'MateoFire202168',
                     'Cart3rHaz3Circuit', 'PulseLightSky', 'ZaydenBlast74', 'LukeStarryG0lden2011', 'LuckyMinerFr0st',
                     'BuilderGoldenKing', 'Rift_Rocket52', 'XxZayd3nLionCrystalx', 'Frost_Moon2014',
                     'Xx_PrimalZ00mBuilder', 'PulseThunderDawn', 'ClawHawk37', 'NOVA_Fusion91', 'Z00m_Flame2014',
                     'JulianSt0rmyKing', 'Pix3lat3dSlim3Puls32', 'av3rytaylor3002kaima', 'KingInf3rn0200779',
                     'ZapC0d3Shad0w', 'HawkQueen62', 'OliviaCha0s2016', 'XxPulseFrostBeastxX', 'LucasMysticSlim32008',
                     'Scarl3ttC00ki3J3llyY', 'Ban3Nova201438', 'Addison_BLADE93', 'XxP0wer_SILVERXX30',
                     'AM3LIAKING2003_YT', 'SparkOmegaBlade', 'Ne0nKnightSlime', 'KnightL3g3ndMagic', 'AubreyBearMax86',
                     'ChaosVoid98', 'Rogue_Saber200689', 'HawkSab3rNova2019', 'PowerHunterArrow95',
                     'RiderLavaFlick2006', 'al3xwhit33720harp3rj', 'Night_Vortex22', 'XXHAWK_HyperxX94',
                     'CircuitBlastPho3nix', 'AuroraStormLight2020', 'SparklyCookiePrimal', 'MysticSt0rmHer0',
                     'SebastianG0ldenSpark', 'Mason_Star2007', 'PrismCraz368', 'R0ck3tAc32022', 'JacksonShadowSab3r20',
                     'emersonwalker9978ell', 'WolfFrost67', 'NoraTiger46', 'ScarlettGolden2019', 'cameronjackson268_RE',
                     'quinnrobinson4167_re', 'harperlee3139emerson', 'GraceCrystal87', 'EliDuckZero', 'VoidAquaZap',
                     'StormySparklyPlayz', 'L3g3ndGiga25', 'James_TURBO2005', 'LunaCha0s46', 'XX_jami3martin2887ca',
                     'ElijahBearSonic', 'EMMA_Turbo202267', 'ChaosBeast17', 'SophiaZ3roPow3r96', 'DuckStorm201113',
                     'Fusion_STAR92', 'averytayl0r4831_EMER', 'XxDaniel_ChaosxX2005', 'R0gueKingC0de',
                     'IsaacNe0nShad0w', 'BrooklynCyberHero18', 'rileyth0mas4299_SKYL', 'Hunt3rH3r0202413',
                     'HeroThunderInferno51', 'AidenMoon202434', 'St3alth_Flam353', 'emersonlee4473jamiet',
                     'RileyBuilder202393', 'Elli3Slim3Cod3', 'BladeLionCyber', 'Daniel_Knight2016', 'S0phiaPrismChill',
                     'Jam3sSlim3Ghost', 'PrismVoid28', 'XxCookieCraftGhostxX', 'Fir3Puls357', 'VoidInferno2011YT',
                     'G0ld3n_F0x2015', 'dakotathomas7078_tay', 'XxBaneEpicThunderxX', 'ChloeLuckyBlock',
                     'JaydenGhost201990', 'Xx_GabrielDrag0nUltr', 'Skat3rFusion2008', 'MateoPandaMagic_YT',
                     'StarryV0rtexWraith90', 'XxOliviaBaneHer0xX', 'ClawEpicTiger2022', 'EagleEcho64',
                     'Xx_BlizzardInfernoPl', 'ArrowThunderGolden', 'LaylaV3n0mCraz3', 'GigaVen0mGalaxy',
                     'Dani3lBuild3r48', 'kairodriguez5004case', 'HazelInfernoRogue201', 'RiderTurbo44',
                     'XxL3viFusi0nEpicxX73', 'Will0wBlast2024', 'MoonDark202244', 'PixelatedStarryEcho2',
                     'MagicMiner2012YT', 'Turbo_Stream93', 'CircuitStarryTiger20', 'XxPrimalStormyxX2022',
                     'ElijahM00n200794YT', 'OrbitFusion76', 'Gh0stBuild3r2017', 'BlastHunterPanda83',
                     'NoahLightTiger2024', 'AceCodeBlade', 'XxF0x_P0WERXX2005', 'XxLoganFlashIcexX', 'WilliamFlashCode',
                     'WYATTFURYPULSE_YT', 'Dancer_Storm15', 'GraysonKingBlizzard', 'XxHannahRocketxX2007',
                     'Vortex_Spark2008', 'DancerOrbitEagle', 'VenomFlick2021', 'XxAvaDarkLi0nxX58', 'Lion_Drift2014',
                     'XxQu33nHyp3rFuryxX', 'ProTurboPhoenix20104', 'dakotal3wis65043llio', 'Julian_Moon69YT',
                     'LucasS0nic2021', 'Cyb3rTig3r2012_YT', 'AuroraHunterPrimal', 'DarkPlayzBuilder',
                     'XxMichaelNeonCrystal', 'HyperStarHer02022', 'SparkQueenCookie82', 'DragonMinerWraith',
                     'VoidSt3alth2020', 'GraysonOrbit201762', 'XxEchoBlastCyberxX44', 'Byt3Hyp3rPix3lat3d',
                     'S3bastian_Ultra20107', 'LIONCHILLDRIFT_YT', 'BaconGam3rGold3n2018', 'W0lf_VIP3R2020',
                     'SlimeAceJelly45', 'FusionOrbit62', 'XxGigaHazeSparklyxX', 'PrismStr3amDuck', 'Giga_Pixel202050',
                     'KingSt3althTurbo', 'averywhite8287_quinn', 'XxH3roWolfxX84', 'IsaacMasterRider2016',
                     'IceBlizzardAlpha', 'MasterQueenOrbit2013', 'XxPh0enixPr0xX2020', 'Charl0tt3KnightGlitc',
                     'ChaseOmega79', 'r33s3thomas6903jami3', 'AceBlade2002', 'Claw_FLASH2015', 'NinjaMagicH3ro_YT',
                     'Xx_CHL0ESPARKLYTURB0', 'Fury_QU33N2024', 'kaimartinez6936_came', 'Build3rSab3r202429',
                     'MINERRIFT2017_YT', 'Max_B3AR2011', 'Her0SilverSparkly202', 'XXCRAZE_MoonxX2021', 'Playz_Neon51',
                     'skylerr0driguez477_r', 'Oliv3rStarry71', 'UltraSkater82', 'LucasBlade56', 'GigaFoxQueen',
                     'BLADEVIPERFROST66_YT', 'Xxkairobinson7606av3', 'SparklyHer0200985', 'BLAST_Inf3rno2007',
                     'ChloeBlock46', 'SparkPh0enixPrism', 'XxEpic_ZapxX2015', 'BeastZeroCrystal', 'Fox_Beast26',
                     'ZapM00nHunter2006', 'SparkFuryChase', 'Grays0n_Flash2020', 'JacksonFlash200474',
                     'Blad3NightTurb0', 'H3nryEpicSpark2016', 'XxJulianWraithBuild3', 'Ava_SHADOW98',
                     'VictoriaPho3nixRav3n', 'XxFuryQueenPrismxX94', 'XxEzraN30nxX2006', 'Sophia_SPARK2024',
                     'FireGlitch52', 'L0GANWALK3R6034_m0rg', 'KnightChillUltra2011', 'OliverSparklyRiderYT',
                     'ALPHA_P0wer29YT', 'jamietayl0r2298skyle', 'ProHawkNight', 'Cart3rMagicN0va', 'FusionShadow201878',
                     'Turb0Builder36', 'XxPulseAcexX201024', 'BlastGamerBane', 'OmegaIceLucky', 'XxJulianLightBanexX',
                     'CarterGigaFury2002', 'Xx_LEGENDST0RMG0LDEN', 'Dani3lPlayzInf3rno', 'DanielMagicSonic2008',
                     'XxJamesHunterxX86', 'FlameStormyStarry', 'cam3r0nth0mps0n7493h', 'reesegarcia4035emers',
                     'XxJack_StormxX2011', 'Xx_EvelynVortexDrift', 'OliviaPrimalNight201', 'XxCrazeBytePixelxX20',
                     'EllaUltra16', 'TurboCodeChase', 'XXWYATT_Mast3rxX80', 'BearPh0enix2003', 'LightClawG0lden',
                     'AriaCyberPrimal', 'St3althHunt3r2006', 'Xx_MasonLightInf3rno', 'CraftHawk84', 'EmmaCraftEcho_YT',
                     'NOAH_Rider2023', 'PrimalMagicFire89', 'Duck_PRIMAL25', 'GamerShadowBlaze2019',
                     'HannahClawWolf_YT', 'Zer0Flash34', 'CraftOmega97', 'HawkBan3Knight', 'XX_B3arBlizzardPrism',
                     'Vortex_BEAR201227', 'averybrown9914_emers', 'Logan_STAR57', 'FuryFlashKing42',
                     'RileyHunter201854', 'm0rganhall3175_riley', 'ZoeProSparkly99', 'XxZero_WolfxX2002',
                     'Gabri3lAlphaSky2002', 'STORMY_Sparkly2014', 'GabrielV0rtexSpark84', 'XxTurbo_RocketxX2015',
                     'Infern0MinerCircuit2', 'M00nSkaterFr0st', 'BeastR0gue2019', 'StormySparklyDuck',
                     'Savannah_Night89', 'GalaxyM00nWraith', 'Sab3rCyb3rBlock', 'GalaxyHunt3r72', 'LavaWraithMagic35',
                     'CookieChaosNeon', 'Jayd3nAqua200263', 'H3nryEchoBacon70', 'HenryAceBeast2016', 'ZoeTurboBlast',
                     'Lava_Byt32014', 'XxSparkPixelLavaxX61', 'LavaBeastRift2002', 'PrismWraith40',
                     'NovaAceStealth2015', 'ClawKnightArr0w2002', 'XxCrystalZapSkyxXYT', 'XxMoonFoxPixelxX',
                     'FoxStormyArrow56', 'HenryGhost81', 'SebastianPixelatedHa', 'Pulse_Omega97', 'XxHazeMoonxX2021',
                     'V0rtexZer0Fr0st', 'Ice_Ultra53', 'Rock3tPix3lat3d2004', 'Craft_Omega62', 'OwenSkaterAce2005',
                     'GamerChaosGolden', 'GigaArrow200743', 'Queen_Drag0n2017', 'BuilderClawKnight',
                     'DANCER_Dawn201140', 'Nora_DRIFT2013', 'S3bastianZoom94', 'NovaDuckFrost', 'HenrySt0rm2021',
                     'Mia_Arrow2017', 'XxSkyCooki3ShadowxX', 'GlitchSaberVenom2014', 'RiderStormyHero2007',
                     'Ava_Ninja201350', 'Eli_Master2006', 'DriftIce56', 'Circuit_Silv3r30', 'SavannahEagle72',
                     'LuckyN30n2023', 'JackCraz360', 'FuryMaxCookie2002', 'XxBlizzardHunterEcho',
                     'HarperRiftInferno200', 'St0rmyLi0nByte', 'BladeEagleDrift', 'Ph03nixN0va45', 'HazePandaToxic76',
                     'SkaterLavaMoon2014', 'Gam3rStr3amZap', 'EliVortex72', 'Jackson_Prism93', 'DancerRavenChase',
                     'Ethan_Dark23', 'Jax0nFr0stDawn', 'XxPrimalDriftxX2018', 'XxFlashH3roxX2003', 'Ic3V3nomClaw2007',
                     'SparklyCodeToxic2021', 'Vip3r_MaxYT', 'PixelGhostKing', 'StormCod3Sonic', 'LiamAlpha58',
                     'XxHannahBan3xX2005_Y', 'Paisl3yAlphaRid3r201', 'Nova_Echo202384', 'ByteSparkly201153',
                     'Silv3rTig3r2023', 'Evelyn_Chill', 'FlamePixel53', 'OwenBac0nFire', 'AuroraStarry21',
                     'BlockStarry71', 'XxLiamInf3rnoxX2016', 'XxCraftOmegaMoonxX', 'NightGigaPhoenix',
                     'Micha3lPandaV3nom', 'SaberZeroDawn', 'PulsePowerCraft', 'OliviaSpark74', 'XxFox_Sab3rxX2015',
                     'XxH3roEchoxX200749', 'XxEchoCodexX63YT', 'FlickSparkLight2021', 'EliToxicDancer2020',
                     'XxEliSlimeEchoxX19', 'XxIc3_Inf3rnoxX2017', 'GigaG0lden2004', 'Cooki3ChaosSonic', 'F0xL3g3nd2012',
                     'Z3r0KingMax', 'MasonVoidEcho', 'Ice_Hyper75', 'PrismMoon58', 'Zayd3nBlaz3N3on32', 'Blast_Lucky26',
                     'SonicFrostHyper', 'CookiePixelated20045', 'QueenCrazeBlock2010', 'Fir3Om3gaRift201728',
                     'BAN3_J3lly54', 'XxOmegaTigerxX24', 'CodeStarryJelly', 'Byt3Mast3r39', 'EthanVoidPulse',
                     'BlizzardChase42', 'DawnMinerFusion31', 'Pr0Star2014', 'Ellie_Stealth44', 'OwenGlitch31',
                     'Xx_PhoenixRocketStor', 'LukeHunterBlock68', 'XxAmelia_EpicxX50', 'AuroraFir3Dawn',
                     'Addis0nBeast72', 'AmeliaMysticFusion66', 'DawnGalaxySkater2018', 'VoidTurbo91', 'Prism_HUNTER13',
                     'GlitchTiger41', 'Aurora_ROCKET40', 'XxByteDawnSaberxX', 'JaydenHawkLion2023', 'PixelCircuitLion',
                     'EvelynLuckyMiner34', 'Kayl33N30nMast3r', 'Om3gaProEagl3', 'XxBlockDriftHunterxX', 'NinjaNova79',
                     'JulianV0id201791', 'Turbo_COOKIE72', 'Vip3r_Epic2019', 'V0rtexNight2019', 'BrooklynSilverByte',
                     'PaisleyPowerChaos', 'JackMasterStarry2005', 'Aubrey_Ninja2009', 'StreamBeastEch0',
                     'Stream_Night57', 'Chase_Rogue42', 'XxDani3lFir3xX2019', 'XxAsh3rDarkxX2002', 'AlexanderPixelCode',
                     'NinjaPrismTurb0', 'XXFOXULTRAXX_YT', 'Xx_ShadowBeastVortex', 'DanielJellyFusi0nYT',
                     'DriftGam3rFlash', 'EllaToxicLion', 'StealthSkaterStormy', 'BlizzardSky41', 'H3r0Giga2007',
                     'Haz3Pix3l68', 'XxIsaacPowerNovaxX', 'EthanSt3alth68', 'PrismCyber29YT', 'Gamer_PH0ENIX85',
                     'HawkProSaber50', 'Bl0ckInfern02003', 'Cha0sHyp3rWraith', 'QueenAquaCha0s', 'XxByte_BLADEXX2003',
                     'FusionNinja28', 'Paisley_Shadow200662', 'CyberVenom82', 'XxZoom_Fir3xX2003', 'LoganSilver63',
                     'S0nicTiger2007', 'Zo3Pix3l36', 'XxRiftOrbitxX10', 'PowerLava201522', 'NeonInferno50',
                     'GamerSlimeRider2011', 'XxNoahOm3gaxX91', 'MichaelFire201256', 'HeroPulseRocket', 'XxIce_SKYXXYT',
                     'ZoomEpic2021_YT', 'BuilderDrag0n84', 'SaberPr0Duck', 'Ic3Slim3Silv3r2002', 'LunaSkaterFrost',
                     'XxBlockFusionFlashxX', 'WolfCraz373', 'Eagle_FURY34', 'Pow3rFir32014', 'Mystic_Raven38',
                     'Vict0ria_Master2024', 'BlastZapQueen2019', 'Chl0e_Dancer2023', 'Hero_Giga45YT', 'ByteStormIce',
                     'XxJaxonRiftFrostxX', 'XxEliPrimalRoguexX20', 'BrooklynnClawFlame', 'AubreyFlashStormy',
                     'Tig3r_Lava2021', 'BlizzardHaz3Craz3', 'GoldenChaseTurbo', 'EliFlickCooki3', 'XxSparklyFirexX2010',
                     'LoganCode2017YT', 'LoganStealthGalaxy', 'Evelyn_Blizzard70YT', 'SamuelBlaze201390',
                     'XxBlockGigaOrbitxX20', 'LiamFrostArrow', 'PixelTigerRogue2002', 'Arrow_Sky2017',
                     'Mat3oDuck2003YT', 'XXV0RTEX_Shad0wxX24', 'Xx_GlitchOrbitWraith', 'HannahDriftGhost42',
                     'Rid3rMysticStormy', 'Gam3r_Cyb3r48', 'Xx_BrooklynToxicCook', 'INFERNO_Saber2022',
                     'EzraPix3lat3d75', 'Sab3rSt3alth13', 'BaneCookieBlaze', 'MagicSlim32005', 'AbigailStarryGlitch',
                     'FlameSlime94', 'OmegaFrostEagle2024', 'Xx_JulianStealthStre', 'Ban3BaconClaw', 'Abigail_Pulse39',
                     'XxBan3StormSt3althxX', 'NinjaSilverMiner', 'Build3rEch02012', 'Aur0raHer031',
                     'XX_HawkStormPixelate', 'Primal_Flick2005', 'ElijahStarGolden', 'Harper_DRAGON18', 'ZapDawn44',
                     'PandaEpicJelly_YT', 'ClawRogueKing', 'VortexJellyBlade', 'Luk3NinjaSlim3', 'MinerHawk33',
                     'XxFusionThunderOmega', 'PaisleyArr0w51', 'Ech0Ninja54', 'OwenHawkStorm2005',
                     'Aubr3yIc3Hunt3r2002Y', 'NoahWolf201173', 'ShadowJelly28', 'XxGlitchFlam3ChillxX',
                     'EllaBuild3rBlock', 'XxCyber_ZapxX2013', 'GlitchBlazeSlime2024', 'BrooklynHaze2021',
                     'LucasWraithAlpha', 'Stream_Hunter97', 'XxDawnNeonxX46', 'Nora_Sky77', 'XxDrift_ArrowxX20224',
                     'Ezra_Stormy14', 'StormySparklyRogue', 'King_Aqua80', 'DuckBladeMystic96', 'Xx_AbigailSaberArrow',
                     'Turb0_Miner49', 'SlimeZapGhost2019', 'Ghost_Rogue47', 'XxS3bastian_N3onxX13', 'Mason_Blaze86',
                     'SonicRoguePro', 'Xx_BrooklynTurboCybe', 'BeastStarryPrism', 'Starry_Dancer201279',
                     'XxNoahPrismGamerxX20', 'BrooklynPowerKnight', 'FrostTurbo94', 'DawnHawkSlime', 'NightBlazePower',
                     'LukeNeonGalaxy', 'ArrowDriftHeroYT', 'Puls3Moon2002', 'AmeliaMoonHyper', 'Mat30Turb02005',
                     'Turbo_SPARK34', 'XxDawnToxicGam3rxXYT', 'LightThunderPixel200', 'RavenR0cketT0xic15',
                     'HawkNovaBlock', 'Pixel_Fire2021', 'Ev3lynF0xGlitch', 'Miner_Ice11', 'KayleeSaber64',
                     'XxToxicVort3xSkat3rx', 'PrismMin3rBan3', 'Xx_JacksonSilverBloc', 'XxOliv3r_Qu33nxX61',
                     'XxGigaPix3lat3dxX51', 'NinjaInferno2024_YT', 'OrbitPandaEpic', 'EthanStealthKnight20',
                     'Hazel_Ice36', 'AvaSt3althKing', 'Gam3rBan311', 'LegendSkater77', 'Ac3_Silv3r2011',
                     'ProFuryPrimal', 'XxKnight_ViperxX2016', 'ChloeDuckMax2012', 'Brooklyn_Haze60',
                     'XXHAZEL_OmegaxX20182', 'Ash3rKnightN3on', 'EthanSkaterFire54', 'Inf3rnoPow3r2016',
                     'Byt3Str3am2022', 'ByteW0lfFlame', 'Rogu3SkyZap', 'XxFlashV3n0mxX2003', 'KingStealthAqua2024',
                     'Isaac_Craz371', 'S0nicPix3l58', 'RileyPower200249', 'CodeQueenBlaze90', 'HawkDancerEch0',
                     'Pixel_PIXELATED20072', 'AsherEpic200889', 'MiaH3r0G0ld3n53', 'Samu3l_Chaos18', 'DuckStarry202414',
                     'HunterVoidPlayz', 'J3lly_Blaz32016', 'EthanFlameGamer2014', 'XxIcePixelatedVenomx',
                     'Sebastian_Ice200576', 'XxEvelynZoomBlizzard', 'RiftCyberZap2017', 'Void_Prism2020YT'}
local RECEIVER_LIST = {'SkyRogue202224', 'Xx_JaydenSlimeKnight', 'EagleFlameRaven', 'LegendZ00mViper39',
                       'JacksonBlaze2009_YT', 'KING_Prism69', 'HannahChillSky2002', 'ProGalaxyQu33n', 'Jax0nSlime2024',
                       'FlameGlitch200859', 'Xx_Chas3Pho3nixBacon', 'MAGIC_Pix3l202042', 'DarkCooki3Orbit',
                       'SamuelM00n2010', 'HannahC00kiePixel', 'EvelynRiderStar', 'SkaterStream201113',
                       'XxGabrielInfern0xXYT', 'Blast_STAR12', 'C00kie_STAR79', 'Infern0MaxSaber', 'EpicNinjaLava2013',
                       'LucasVort3xPrism', 'LaylaBlaz32004', 'Toxic_PRISM10', 'XxEzra_RiftxX10', 'XxZayd3nBlaz3Glitchx',
                       'HenryBlock200372', 'EvelynSaberAlpha', 'XxEagl3LightNightxX2', 'Asher_Z00m2024',
                       'NoraNightBan3', 'dakotalewis964camero', 'harpersmith9370logan', 'XxBlizzard_FirexX34',
                       'Fir3St3alth50', 'EchoTurboChill2004', 'AlphaRocketTiger', 'Hunt3rVort3x201848',
                       'RogueClawLight', 'Aurora_Fire200859', 'Thunder_ARR0W24', 'Fir3_P0W3RYT', 'CircuitPrimalVenom26',
                       'PrismBan3N30n2009', 'Chas3StarryFox'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชัน monitoring เห็ด
local function MonitorShrooms()
    while true do
        local success, error = pcall(function()
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print(
                    "⚠️ เห็ดเหลือน้อยกว่า 20 กำลังปิดเกม...")
                game:Shutdown()
                return
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดในการเช็คเห็ด: " ..
                     tostring(error))
        end

        wait(5) -- เช็คทุก 5 วินาที
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local coinsValue = LocalPlayer.Data.Coins.Value
        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        local validPartner = FindValidReceiver()
        if validPartner then
            SendTradeRequest(validPartner.Name)
        else
            -- ถ้าไม่มี partner ให้ปลดล็อค main sender
            isSenderMainActive = false
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม monitoring เห็ด
        coroutine.wrap(MonitorShrooms)()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
