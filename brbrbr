-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'Mate0BuilderSkater20', 'EthanPrimal45', 'XxDawn_STR3AMXX41', 'Moon_Flick2024',
                     'StealthIceOrbitYT', 'XxJaxonBaconxX85', 'Raven_Mystic201766', 'StealthWraith22', 'V0idBane2009',
                     'AlexanderMysticTiger', 'H3roEagl3Frost', 'LuckyCraft202343', 'XxRileySonicLightxX',
                     'Fr0stMax2015_YT', 'Asher_Light85', 'XxPaisleyPowerxX2006', 'Hunt3rAlpha31', 'FlickIceBlaze2018',
                     'StormDragonTurbo84', 'XxLunaBac0nxX11_YT', 'GigaSkyGlitch', 'LoganZero74', 'Henry_Fire31',
                     'VoidStealthBeast2022', 'GigaByt3202441', 'Am3liaStr3amDragon31', 'EllaPix3lat3dCrystal',
                     'XxChillSparklyxX2004', 'JacksonGlitch47', 'BearZeroMax', 'LukePixelatedGalaxy2',
                     'LunaFrostDancer20', 'ThunderChase47', 'CrystalC0de2004', 'XxJax0nRiftxX202249',
                     'XxDrift_SaberxX30', 'XxJellyDragonxX2023', 'IsabellaStream202195', 'TurboGlitchEcho36',
                     'HyperFury201891', 'JulianMagicBlock', 'AceEch0Bear2017', 'RiftArrowHyp3r60_YT', 'Claw_Arrow22',
                     'RocketPandaAce2023', 'Gabri3lQu33n75', 'XxMiaPixelM00nxX48', 'Chlo3Eagl352', 'XxSilverDarkxX77',
                     'FoxNightInf3rno35', 'Will0wHawkSt0rmy81', 'Hawk_Chaos98', 'XX_AddisonSkat3rBlaz', 'N30nL3g3nd81',
                     'NoahInf3rnoDuck2022Y', 'AquaSaber24', 'XxPaisleyDawnxX2012', 'HeroClawVortex98',
                     'LiamOrbitPhoenix', 'RileyFr0stMagic', 'BlazeRider202498', 'XXADDISON_PixelxX15Y', 'PixelByte56',
                     'PandaStarHyper', 'GalaxyPho3nixNinja', 'WilliamWraithCraze', 'AddisonV3nom33',
                     'XxIce_Gh0stxX2011', 'N30nChas3Claw', 'Xx_ScarlettCookieSto', 'DawnCrystal14', 'StormySky201746',
                     'Oliv3rH3r078', 'NoahDuckVip3r', 'ZeroCodeLion2010', 'HannahThunder42', 'MysticBuilder202067',
                     'Z03_Craz378', 'Fury_Lava2024', 'Knight_BYT32013', 'WolfUltra29', 'XxShadow_CircuitxX75',
                     'Gabri3lMagicChaos200', 'WillowSlim3Orbit', 'WillowBuild3rSpark', 'JacksonKingRogu3',
                     'ZapCrazeNinja', 'R0cketBlaze2008', 'Pixelated_T0XIC58', 'Crystal_BUILDER79', 'KayleeGalaxyMystic',
                     'ViperBearBeast2017', 'XxH3r0M00nxX2024', 'C0d3T0xic2011', 'Luke_Pulse48', 'PandaToxicAlpha',
                     'XxEllaDancerF0xxX', 'XxLoganOm3gaxX2020', 'Pulse_Hyper12', 'Br00klynnSkyBlade',
                     'XxNinjaGalaxyQueenxX', 'HannahDragonGamer', 'EpicBearStarry', 'Al3xand3rAc3Blizzard',
                     'FlickDragonDuck', 'BeastFox35', 'BearRift2003YT', 'XxGalaxyBlizzardxX76', 'Xx_Silv3rAlphaDrag0n',
                     'XxLuckyVoidxX33', 'Ril3yQu33n52', 'TurboGam3r201835', 'ZapNe0n201052', 'MysticOmega43',
                     'ArrowBlockFlick', 'LiamHer02018', 'ZeroGigaLight2012', 'HawkBlizzardCrystal2',
                     'XxZapStarryEchoxX', 'EzraStormy79', 'StormChaseStormy2005', 'NinjaT0xicPrimal',
                     'Ph03nixGam3rLight', 'BlazePandaGolden', 'ViperWolfDragon', 'Cod3Pix3lSt3alth',
                     'XxChaosPixelFlashxX2', 'S0nic_Infern030', 'XxSophiaPix3lOrbitxX', 'Ban3Fox82', 'XxH3nryPix3lxX31',
                     'UltraPrismArr0w', 'XXAQUA_Min3rxX50', 'XxZayden_M00NXX20054', 'Chas3Pix3lSkat3r2024',
                     'AbigailTurb065', 'Jam3sInf3rn0Epic', 'XxVictoriaDragonKnig', 'Hyper_CHASE200236',
                     'NinjaChasePanda', 'XxMaxDarkStarryxX', 'Str3am_Alpha2019', 'Ic3Haz3Blaz32005',
                     'RIDERALPHADANCER47_Y', 'LightCircuitSparkly2', 'SparkPho3nixKing71', 'XxPaisleyProFlamexX',
                     'MaxRogue55', 'KayleeS0nic73', 'XxWraithGalaxyHawkxX', 'Zero_Orbit200389', 'FlameDawn200698',
                     'XxBuilderClawxX2010', 'MinerCookie200237', 'XxEagle_CLAWXX2020', 'GigaStealth28',
                     'Pulse_TIGER2023', 'Puls3Om3gaGold3n2021', 'Kayl33_Duck201737', 'BlockPix3lat3dQu33n2',
                     'BuilderOrbit202489', 'LionHazeKnight2003', 'Tig3rLightHaz3', 'XxHazelUltraxX200357',
                     'XxRiftPrimalxX70', 'RileyBlock76', 'Jacks0nC0deR0gue', 'TigerLionBacon', 'PrismInfern0Rift',
                     'Byt3Flash18', 'Haz3Flam32004', 'XxC0deDawnxX2023', 'FlameInferno201721', 'ArrowInferno55_YT',
                     'ZoeSkaterCrystal', 'AlphaSky2018YT', 'XxEpicSlimeDarkxX', 'EchoIce41', 'BrooklynnBuild3rFox',
                     'SebastianByte47', 'SparkCode73', 'V0rtexSpark41_YT', 'EzraDark2010YT', 'Pho3nixJ3llyPix3lat3',
                     'Xx_SebastianRiftClaw', 'StormyPlayzOrbit2024', 'PrimalFlash23', 'XxLightByteFlamexX10',
                     'F0xHazeGamer', 'BeastToxicSlime', 'ToxicJellyEagle', 'BladeSt0rmyC0de', 'EliDancerGlitch2008',
                     'ZapDuckGlitch200649Y', 'Michael_Inferno2016Y', 'Gh0stMiner200740', 'MasonPandaVenomYT',
                     'PlayzWraithVoid80', 'BrooklynMoonGalaxy', 'BlockKnightCookie', 'Cart3rHunt3rZ3ro2018',
                     'Rogu3Blizzard2007', 'BrooklynnStorm2006YT', 'AuroraBearFusion56', 'XxHeroShadowVoidxX',
                     'S0phia_Night2019', 'GigaEagl384', 'Oliver_SONIC33', 'C00ki3PrimalChas3', 'MateoFrost50',
                     'SparklySt0rmyHer0', 'Xx_BlizzardSkyGlitch', 'GigaChillEpic2021_YT', 'BlizzardTurboFlame',
                     'JacksonEpic202191', 'QueenVortex68', 'CircuitTig3r96', 'ChillRiftFury_YT', 'FlameLightBlade2009',
                     'AriaRift10', 'GoldenLionGalaxy2020', 'BaconDawn201365', 'GamerFlick200838', 'RiftIceCircuit39',
                     'RocketQueenBeast', 'Sab3rDawnPix3l', 'EliSkyPuls32004', 'Zap_Wraith21', 'Toxic_Craz358',
                     'XxHannahDuckGalaxyxX', 'Fr0stHunter62', 'Luk3Block31', 'XxHawk_EchoxX2004', 'ZoeTurboHyper2007',
                     'JellyBlazeHunterYT', 'LionViperCookie', 'XxEagleDarkDancerxX2', 'HunterMaxWraith2005',
                     'Ech0Skat3rCircuit', 'DuckFlickJelly2013', 'BuilderQueenGhost201', 'HenryPulseZero',
                     'Xx_PixelatedBanePixe', 'IceKingP0wer2018', 'GalaxyCode63', 'HawkPlayzGalaxy',
                     'BlazeFlashRaven2016', 'StreamHawk37', 'VictoriaFlameVoid57', 'Her0LightViper',
                     'XxGh0stPrimalxX96', 'DriftGh0stPixelated', 'PixelatedQueenStormy', 'XxLavaBuilderSkaterx',
                     'Xx_KnightMoonPixelat', 'NoraFrostFoxYT', 'OmegaPlayzPixelated2', 'Turb0P0werStealth22',
                     'HeroMoonMiner2005', 'JamesNinjaZero96', 'LeviDriftRogue2017', 'XxDragonPix3lat3dRif',
                     'Dani3l_Orbit86', 'Ace_Chaos2008', 'HannahHawk69', 'RogueSkater39', 'MAX_Flame73',
                     'Pix3lSkyDark2007', 'XxTurb0NightxX202281', 'LegendDancerEagle', 'F0xBladeBlizzardYT',
                     'MasterLightChase', 'BuilderKing201773', 'GalaxyHunterCraze202', 'PandaFire200512',
                     'XxTurb0_FirexX56', 'AbigailBlaze96', 'F0xBac0n2023', 'CraftPixelNinja2024', 'PrimalTurbo200299',
                     'Hazel_Pr092', 'XxAceCookiePixelxX20', 'AidenStormCraft2003', 'EchoNovaStream2003',
                     'SkaterRiderFox', 'XxZaydenPixelatedxX8', 'GraceCraft201730', 'XxMas0nBearxX22',
                     'Addison_BUILD3R45', 'OmegaZeroTiger', 'Arr0wAlphaMaster', 'CHARL0TT3LIGHT_YT', 'Mas0nB3ar2004',
                     'HeroRiftBlade2003', 'LukeEagleMystic46', 'VictoriaAce43', 'JackN30n69', 'XxByte_RiftxX2003',
                     'Gh0stN0vaBac0n2004', 'XxPh0enixPlayzxX96', 'OwenOmegaC0de', 'Aur0raSkyPrism',
                     'SavannahMaster201354', 'Fire_Ultra87', 'STEALTHDUCKFURY_YT', 'MichaelAce19', 'EliR0gue22',
                     'St0rmy_Dancer2014', 'ChaseFoxDuck', 'CyberInfern0N0va', 'RiftDawnWraith_YT', 'S3bastianWolfRogu3',
                     'Xx_CharlotteCraftArr', 'Cart3rMaxB3ar2021', 'MateoBlizzardPulse20', 'WillowAc3Glitch',
                     'Jack_Stealth92', 'XxHer0SilverxX2009', 'XxLuckyGoldenxX2008', 'ZoomBlastKnight', 'N0ahW0lf2009',
                     'XxMin3rLavaxX2002', 'Saber_Blaze2021', 'XxPrismPixelatedxX15', 'HazeInferno97',
                     'KnightBuild3rRift', 'FrostLightThunder45', 'XxJames_FirexX2012', 'NinjaGoldenFusion',
                     'Haz3Star57', 'FoxToxicCraft', 'MysticSaberCookie200', 'Prism_Playz2015', 'Z00m_Aqua69',
                     'L0ganBlade2008', 'Jelly_C00kie2002', 'PulseRogue200237', 'QueenTurboNova2014', 'WyattZ3roByt3',
                     'Puls3Build3rRogu3YT', 'ZapSonic55', 'N3onV3nomSkat3r2023', 'WillowRiftUltra_YT',
                     'Chl0eChillOmega', 'LiamFusionBlaze43', 'Haz3lV0rt3x2002', 'ZapNinja43', 'OliviaOm3gaNight',
                     'Mast3rN3onClaw2011', 'HeroArrowBlast', 'XxFuryLegendxX2013', 'XxChaosPhoenixPowerx',
                     'CircuitAlphaDrift', 'HazelPhoenixStream', 'XxMaster_VortexxX13', 'XxEzraShadowGigaxX',
                     'JamesDuckFox_YT', 'BlastPix3lDawn', 'SebastianByte50', 'PixelF0xRift', 'LaylaMysticDawn',
                     'Hawk_GOLD3N11', 'ZeroLionGolden', 'James_Void42', 'Build3rFlickCraft200', 'DuckHeroNeon2020',
                     'SparkFlashGlitchYT', 'ChillBan3Ac32022', 'XxGrace_STARRYXX30', 'Xx_PrimalBaconMaster',
                     'XxFire_StormyxX20196', 'Prism_Bacon12', 'XxAuroraZapChaosxX', 'Ac3_Bacon62',
                     'AsherEch0Night201342', 'VictoriaLightRaven', 'Phoenix_BUILDER35', 'BeastBlizzardRocket',
                     'XxChas3_DragonxXYT', 'Grays0nSt0rmyOrbit20', 'AubreyVen0m62', 'Fusion_Ultra200924',
                     'St3althN3on2007', 'Cart3rShadowLava', 'XxInfernoHunterHyper', 'ProFoxLight2015', 'BlazeToxic14',
                     'GigaSparklyHer0', 'Gabri3lMystic51', 'XxStarLuckyxX201851', 'XxFoxPixelMagicxX',
                     'James_Ph0enix2004', 'NeonFlickGhost_YT', 'St0rm_St0rmy26', 'SilverT0xic43', 'Samu3lSparkLava',
                     'Charlott3EchoB3ast20', 'XxEllie_InfernoxX202', 'ViperTurbo200649', 'LukeSlime28',
                     'XxHer0_MagicxX2007', 'XxNinjaDuckVenomxX', 'Samu3l_Lucky58', 'XxAddis0nLi0nxX2006',
                     'Elli3Byt3H3r076', 'FusionSilver202268_Y', 'XxVenomZoomxX2013', 'Moon_Raven2016', 'N0raCyber2009',
                     'Samu3lH3r0V0id', 'Xx_StormyChillGalaxy', 'BuilderFrostClaw2022', 'DarkBlaze200527',
                     'Chill_IC32015', 'Dawn_Stream77', 'XxGlitchMaxPrimalxX6', 'LunaCooki3Hunt3r', 'XxMoonPlayzMaxxX',
                     'XxVictoriaViperPhoen', 'Slime_EAGLE30', 'XxHunterSt0rmyxX2018', 'StormySkyPro71', 'HawkLight57',
                     'ThunderTurb0Pixel', 'SophiaFury50', 'P0wer_Byte200494', 'LaylaGam3rFusion', 'BlizzardAc371',
                     'WolfThunderCode', 'Haz3Blad3OrbitYT', 'NinjaInf3rn0Fury', 'ThunderPixelDancer', 'HazePandaBear',
                     'XxMasonBytexX83', 'XxNightLegendxX2021', 'XxSparkly_BLOCKXX69', 'SkyStreamSonic2019',
                     'RiderNinja202164', 'MysticRavenM00n', 'Harp3rLion57', 'BLIZZARD_Fox201617', 'LegendOrbitLava',
                     'Pixelated_Block35', 'V0rtexGiga2021', 'Elli3_Zap20', 'DAWN_Aqua26', 'Z00mZapR0gue',
                     'XxBan3PrimalxX2019', 'Tig3rPro92', 'HyperFusionRider', 'StreamMinerGalaxy', 'BaconStr3am26',
                     'Ven0mHer0Eagle31', 'H3ro_Ban32018', 'XxLuckyDriftToxicxX2', 'SavannahDawn74',
                     'XxSkat3rEpicStr3amxX', 'XxCrystal_PrimalxX33', 'XxStormyFrostEchoxX', 'MasonThunderMaster',
                     'ArrowDuckSonic', 'XxDuckCyberBladexX', 'DawnUltra52', 'MateoCookie34', 'XxHaz3N0vaSt3althxX7',
                     'RiderNinjaF0x', 'Harp3r_Dark2004', 'XxNoahPix3lMaxxX', 'Dancer_Rift202273', 'Li0nFusi0n80',
                     'XxZoe_FlashxX2005', 'Rock3tEagl3Ac3', 'XxFlickChillxX200984', 'OliviaPho3nix95',
                     'XxKingChillxX2014', 'Mate0Panda50', 'XxSlime_PixelxX2009', 'AriaDragonRider', 'EliPix3lBlock',
                     'SkyLuckyStorm2003', 'XxN0ra_QueenxX2008', 'William_Dawn23', 'Xx_StormSparklyDrago',
                     'XxStarryGhostBuilder', 'XxSamu3lThund3rCod3x', 'MasterCrazePrism2010', 'UltraOm3ga2005',
                     'XxAbigailEpicProxX', 'PowerVoid201014', 'SaberViperFusionYT', 'LucasEchoBlast73',
                     'EagleSkyMaster_YT', 'Micha3lClawN3on20157', 'StormBearPixelYT', 'XxBaconSlimexX2020',
                     'XxMinerR0guexX2020', 'StealthBacon2018', 'CrystalFlickCyber201', 'N3onCrystalFusion',
                     'XxMagicArrowxX2014', 'WyattSilv3rSonic2011', 'Storm_Ultra46', 'R0gueLava2011',
                     'XxCraftPlayzSilv3rxX', 'XxPixelatedJellyxX94', 'XxCarterGigaFoxxX', 'Ic3Byt391',
                     'XxRileyMagicHawkxX42', 'CircuitZapOmega', 'LukeRogueChaos', 'SkyRogueTiger', 'XxGraceKnightxX_YT',
                     'PixelHawkStream48', 'XxBuilderHunterArrow', 'LuckyGoldenCode_YT', 'PandaLegendToxic',
                     'XxMin3r_Thund3rxX200', 'LiamNinjaChas362', 'Shad0w_Queen2008', 'Knight_N0va51',
                     'OmegaStar2002_YT', 'PandaEagl3T0xic', 'XxChlo3_EpicxX38', 'ElijahBuilder200240', 'ProMin3r_YT',
                     'Ne0n_Z00m61', 'DriftGlitch2023YT', 'XxStreamLuckySkyxX', 'EvelynFlameHer02009',
                     'XxEpic_DARKXX2023', 'JellyToxic200336', 'HazelDragon56', 'XxWillowHyperStormyx',
                     'XxSab3rZoomxX200659', 'Hyp3rEchoFlam359', 'EchoShadowSpark66', 'DanielPowerPanda',
                     'XxNovaOmegaxX2016', 'Ven0mR0cketV0rtex200', 'WraithInfernoVortex', 'StarClawGlitch2023',
                     'ClawQu33nSonic', 'XXNINJA_StarryxX2006', 'GalaxyPixelatedMax', 'KingSlimePixel41',
                     'GhostPixelated201786', 'Elijah_Stormy80', 'Pixelated_SLIME75', 'Sab3rFir3Craz3', 'Ic3Fr0st2003',
                     'Frost_Wraith52', 'Xx_BUILDERFROSTSONIC', 'XxFlashDarkxX2021', 'XxArrowStealthxX17',
                     'DriftHero202217', 'JackRavenArr0w2003', 'ScarlettRiftCyber', 'JamesHunterStar29', 'ClawSlim3Max',
                     'BearV0rtexPlayz22', 'Fr0st_Flash35', 'Owen_Ultra23', 'Addis0n_BUILDER20132', 'XxIsaacZoomStarxX',
                     'Cyber_Light74', 'XxJaydenMoonxX89', 'XxAm3liaGalaxyIc3xX', 'ChaseTurbo57', 'XxChillStarxX201984',
                     'GamerMaxKnight2018', 'BuilderCode201379', 'AceLegendShadow2015', 'EpicPix3lat3d95',
                     'ZapChaosHero_YT', 'LunaSkater200287', 'JaxonSparkGamer', 'BaneKnightSaber2007',
                     'XxOrbitZ00mxX2022', 'PaisleyEchoPanda', 'Micha3lRiftAqua2009', 'Chlo3St3althEcho',
                     'XxAddisonBeastGalaxy', 'PhoenixDragon201444', 'BlastStealth201399', 'DarkR0cket2011',
                     'Mate0_Master27', 'Xx_DriftLegendSkater', 'Claw_LION201697', 'ZapPower19', 'XxStarryKingJ3llyxX',
                     'AlphaNeonBlaze', 'Thund3rClawChill', 'Charl0tteBac0nDancer', 'Skat3r_Blaz318',
                     'GraysonUltra45_YT', 'XxOwenDragonSkaterxX', 'WILLOW_Aqua86', 'BeastHer0201144',
                     'JackOmegaBlade74', 'CrystalVoid72', 'EpicMoonDark2009', 'Power_Byte94', 'AlexanderCrazeBeast',
                     'XxPrismBuilderxX36_Y', 'PixelDuckEpic202231', 'Max_Light202267', 'XxLightOrbitxX202053',
                     'CodeGhost49', 'DragonOmegaLion', 'RiderArrow201512', 'AbigailGigaOrbitYT', 'BladeGoldenCode',
                     'XxMysticNovaxX31', 'XxDragonTigerxX44', 'Brooklynn_Playz78', 'N30nGh0st201833',
                     'Hunt3rPrismZ3ro30', 'LucasSkat3r94', 'XxOliviaShadowxX15', 'SPARKLY_Playz35', 'Ech0Starry35',
                     'VoidOrbitIce201579', 'XxChloeHawkPhoenixxX', 'TigerPowerPixelated', 'PrismEagle202322',
                     'Gamer_Stream200921', 'DANCER_Arrow2003', 'XxRaven_GlitchxX2019', 'XxBrooklynTurboxX70',
                     'ElijahW0lf64', 'Z00mV0rtexFlash', 'TigerZer0T0xic', 'OmegaInfernoRaven', 'XxPlayzFuryxX14',
                     'XxNinjaMagicxX64', 'EvelynBlockThunder20', 'GHOST_Spark201696', 'EliHawkZoom',
                     'XxPrism_POWERXXYT', 'XxSavannahMysticxX50', 'ThunderFlickUltra97', 'XxLavaLightSonicxX20',
                     'LuckyGhostPulse2024', 'Am3lia_Danc3r88', 'UltraFlameChill_YT', 'LeviFrost200324',
                     'ChillCrazePhoenix201', 'Levi_Ninja200621', 'XxClawNightxX84', 'HazelC0deEch0',
                     'XxStormyGam3rxX2004', 'DuckGoldenPrism', 'GalaxyCyberVoid2013', 'WraithGoldenFire2022',
                     'XxBlastByt3xX28', 'Z00m_CRAZE2022', 'StormMysticZero78', 'EchoOrbitCyber2015', 'Stormy_Stealth93',
                     'Xx_EvelynP0werSkater', 'PixelatedPro2015_YT', 'GhostDancerPulse', 'XxAlphaGhostxX49',
                     'ScarlettChaosBlastYT', 'Scarlett_Builder40', 'SaberBaconMaster50', 'XxStormSlimexX200748',
                     'FUSION_Blizzard20127', 'Al3xand3rKingRogu320', 'XxEagleSonicxX2006', 'XxVoidClawWolfxX',
                     'FusionNight201329', 'TURBO_Power201273', 'XxEthanCookieSkyxX', 'XxCarterBlockUltraxX',
                     'ZapRiderVen0m', 'CarterViperBacon2019', 'Vip3rWraithVoid2019', 'BladeTurbo44', 'JackFrost200886',
                     'WraithDragonAqua', 'MiaDriftH3ro2005', 'Epic_Lava200653', 'FuryFlame200355', 'MaxVort3x26',
                     'LuckyLightStream2023', 'XxZ0eFuryxX200838', 'MiaDanc3rEpic', 'PixelatedRift40',
                     'EllieWolfBlaze79', 'XxMiner_PrismxX20154', 'FusionPho3nixPrimal', 'Puls3Gam3rTurbo2005',
                     'XxRavenSilverFoxxX_Y', 'NightNe0n200938', 'XxEllie_DRIFTXX25', 'GoldenBeastCraft',
                     'XxBearQueenFlamexX', 'FrostMystic48', 'NightMaxBlaz3', 'XxLaylaNightxX2004',
                     'L3viCrystalBuild3r20', 'Dani3lStarryFlash201', 'RIFTDRIFT2002_YT', 'XxBearRavenxX42',
                     'FLAME_Cookie201965', 'TurboBaconThund3r', 'AceAquaSt0rmYT', 'StealthDriftMax', 'FOX_Nova2003',
                     'QueenChaseTiger2023', 'XxLoganSlim3xX78', 'XxIsab3lla_Fir3xX98', 'XxFlameNinjaxX30',
                     'XxQueen_WraithxX31', 'XxKayleeInfern0Drift', 'InfernoRocketZero91', 'Arr0wBlizzardGalaxy',
                     'PowerEchoZero2004', 'RavenF0xPh0enix2003', 'Gold3n_Frost12', 'ElijahIce25', 'LaylaSab3rPho3nix',
                     'XxStreamSkaterZeroxX', 'RavenEchoGalaxy2005', 'XxFlameCyberxX41', 'LaylaAlphaPower2004',
                     'Blaz3FoxFir3YT', 'RiderPrimalNeon', 'XxElijahBlazeKnightx', 'CrystalBearDark',
                     'OliverTigerAce2009', 'AvaPlayzGam3r2010', 'XxPaisleyStreamIcexX', 'XxWilliamFlickVen0mx',
                     'CyberRavenOmega', 'BlazeLi0nSky', 'Knight_V0rtex201966', 'KayleeOrbitEpic92', 'G0ldenTiger2020',
                     'Inferno_Blizzard69', 'Elli3DragonSpark', 'Build3rArr0w16', 'Pix3lN3onL3g3nd', 'N0ahBlaz312',
                     'XxSaberR0gueBuilderx', 'XxGalaxyS0nicxX14', 'BearProBane2020', 'P0werBearBlade2011',
                     'AvaTigerCyber', 'BuilderKing200472', 'EzraNightGlitch', 'XxRiftMasterFirexX_Y',
                     'XxP0werSkaterxX56', 'HarperPixelFusi0n', 'LuckySt0rmyInf3rn0', 'OrbitLightCod3',
                     'JacksonCircuitUltra2', 'Neon_Magic99', 'Jayden_St0rmy2008', 'XxT0xicCircuitxX2002',
                     'XxSky_L3G3NDXX2008', 'XxHarperGalaxyxX15', 'XxAmeliaCraftxX85', 'AbigailFlickAlpha',
                     'Sab3r_Light10', 'LavaPh0enixPulse', 'Slim3ShadowTig3r', 'GabrielArrowFox_YT', 'Shad0wFlash46',
                     'Aur0raTurb0Fr0st', 'Bl0ckRav3nMast3r', 'ThunderCraze201147', 'XxHyper_SPARKXX2008',
                     'Silv3r_SAB3R2003', 'Br00klynInfern075', 'DarkDancerCrystal73', 'XxHeroFrostPixelxXYT',
                     'GlitchGold3n2019', 'HazeAquaCraze', 'GraceLi0nT0xic2020', 'LavaFlickVortex',
                     'Al3xand3rFuryStr3am', 'XxEmmaBlad3Sab3rxX', 'DragonGhostPhoenix20', 'Gabri3lRift76',
                     'EthanCrystalBlad3201', 'BlazeFlickRider20104', 'Will0wSkater57', 'GraysonSkyLight',
                     'RoguePower64', 'RiftNinjaSpark2019', 'Fir3DarkKing', 'MagicSlimeHyper62', 'WillowOmegaStarry200',
                     'OliviaFlash67', 'Xx_JaydenNovaInferno', 'BladeBac0n2017', 'Prism_Blaz32023',
                     'XxDriftR0ck3tBuild3r', 'PixelR0cketC0de_YT', 'Dawn_SLIME93YT', 'Phoenix_Chase74',
                     'IsabellaBeastGolden3', 'ElijahPlayz201369', 'Shad0wNinjaR0gue', 'MysticPixel2005_YT',
                     'Gabri3lBacon2003', 'AddisonStormyZero', 'GhostChaos200595', 'HeroLionRider200365',
                     'BuilderDrift87', 'MasonSaber70', 'SamuelFrostTiger2003', 'Craft_Hawk2012YT', 'AidenFury2017YT',
                     'StormJ3llyPrism81', 'Micha3lN3on2020', 'GhostBacon201244', 'XxKingProxX39', 'Jelly_FLAME75',
                     'FuryBlazeStormy', 'LavaJellyChase', 'PulseJellyFox', 'JulianPixelStreamYT', 'StarryPr02019',
                     'RiderDawn83', 'Circuit_Aqua67', 'ZaydenSt0rm2004', 'EzraCraz3Max2023', 'SparklyCrystalNight',
                     'LiamInfernoOrbit2002', 'JacksonInferno201889', 'NeonFireSonic2006', 'AlphaTiger2011YT',
                     'Skat3r_Blad32005', 'Phoenix_Night2021', 'FuryCraftGam3r21', 'Xx_SparkFusionDanc3r',
                     'GhostNeonSilver', 'J3llyZ3r02024_YT', 'MagicRogueMystic2012', 'XxFlameNinjaxX94', 'AsherMaster39',
                     'Cha0sFlick54', 'NoraMagic2013YT', 'BeastAlphaVortex', 'GraceAceDrag0n', 'EagleQueen49',
                     'BlizzardV3nomHyp3r20', 'ChaosWraithHaze2024', 'AquaCyb3r32', 'Echo_FLICK202055',
                     'MoonKnightThund3r', 'SonicKnight201269', 'StormyHazeBane_YT', 'Puls3LavaCooki3',
                     'G0ldenInfern043', 'N3onZapPix3l', 'Fox_Blast61', 'CharlotteEchoPanda20', 'PrimalVenom44',
                     'CarterDuck2006YT', 'Xx_GalaxyFlashPixela', 'XxZeroMagicxX2013', 'Sonic_V3NOM2003',
                     'XxElijahZoomStormyxX', 'Ech0Ne0n2003', 'C00kieMaxZer02023', 'PixelatedShad0wRift',
                     'XxVictoriaFuryxX21_Y', 'EvelynAlphaSky77', 'XxAidenFlashxX2023', 'Sebastian_Byte49',
                     'Br00klynNight2015', 'XxAddis0nPr0FlamexX', 'GalaxyIceVoid', 'HunterPixelMagic2015',
                     'ChillSilverVoid', 'Z03_Arr0w2024', 'Dani3lBlad393', 'EthanFire202478', 'MysticTurboToxic71',
                     'Naibanks278', 'Stefaaarya9744', 'Kovesleiba86734', 'Egidimuti448', 'Oleshharig542',
                     'Seyarnegru85326', 'Pluthkunau69207', 'Piesmamo33991', 'Zhaobailo9541', 'Dokicnauta95595',
                     'Lankreny31463', 'Hiramaul74575', 'Becoroc47854', 'Riedkazan08334', 'Iretageoly33976',
                     'Albuminet062', 'Bahersieve81329', 'Blannayar2280', 'Pagethuwer7500', 'Unionmos751',
                     'Sibbyianno1505', 'Mendeengst1359', 'Bredladato06855', 'Oparahuss8573', 'Alisebente885',
                     'Halmelauck2062', 'Hederdrda7473', 'Bakajkalam784', 'Makkilosak74463', 'Arionpoot510',
                     'Tormakamps06913', 'Knerridzik355', 'Baneishaq0631', 'Zitohoger742'}
local RECEIVER_LIST = {'XxNoraGoldenxX14', 'Chloe_Stream19', 'Hyp3rOrbit2003', 'PrimalSky89', 'SparklyDarkPro_YT',
                       'Am3liaSt0rmyCha0s200', 'BlockLegendUltra2014', 'CraftCraze2004YT', 'Prism_TIGER2013',
                       'Rift_Flame80', 'XXGIGA_MinerxX2010', 'DragonThund3rVoid', 'SparklyMysticStormy5',
                       'OwenBlastMaster30', 'JamesRiderBuilder202', 'XxZapSparkPhoenixxX', 'Pix3lat3dCircuitNigh',
                       'Xx_HunterKingSparkly', 'XxMateoPixelSkaterxX', 'Cyb3rCircuit78', 'Ethan_Viper10',
                       'CYBER_Hero29', 'Mate0Pixel43', 'N0ahStreamC0de', 'ClawChillFlame', 'AbigailZoomSkater200',
                       'MateoRiftEpic2021', 'JackFlashCookie20158', 'Xx_TurboPowerThunder', 'C0d3Byt361', 'MiaStream23',
                       'Star_RIFT201486', 'KayleeStormyGhost', 'CART3R_Vip3r2004', 'LuckyPanda200733',
                       'St0rmyGam3rGh0st', 'XxPix3lKingLuckyxX76', 'XxNovaDawnxX202192', 'LavaByt3N3on64',
                       'HenryS0nic16', 'Cooki3Prism69_YT', 'Silv3rStarry2010'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
