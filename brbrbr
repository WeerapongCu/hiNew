-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'XxFlash_BearxX2009', 'NovaBlazeStar2024', 'MICHAELPIXEL2009_YT', 'OrbitVenomSonic2024',
                     'DriftChillStar2020', 'XxNoahFoxNightxX', 'Cart3rStormTurbo', 'Jelly_Lucky2014', 'NovaSonicCode32',
                     'Puls3Toxic82', 'WraithBeastPowerYT', 'OliviaDriftR0cket200', 'OliviaShad0wBuilder',
                     'Aur0raPuls3Playz', 'Rav3nVip3r94_YT', 'Build3rArrowSkat3r81', 'XxFlickUltraxX68', 'LIGHT_Rogue76',
                     'XxByteViperHeroxX', 'V0id_DANCER2021', 'XxFlameGoldenxX57', 'XxNeonEagleNinjaxX20',
                     'SonicKnight200348', 'BladePixelChill20065', 'St3althAc3Mystic', 'Samu3l_Sab3r2006',
                     'FoxGold3n2020', 'SonicPhoenixDrift200', 'Z3roJ3llyStr3am', 'KingOm3ga2016', 'XxPulseSkyLightxX',
                     'XxSebastianEpicxX79', 'SamuelNightZap79', 'XxCarter_SparkxX2023', 'FlameProQueen',
                     'GlitchArr0w81', 'Xx_BuilderKingPrimal', 'JacksonPulse77', 'ChloeLight36', 'MoonLionStealth',
                     'Dani3lQu33n2007', 'LeviNightBlizzard_YT', 'AmeliaZer0Magic2021', 'Bl0ckShad0wSt0rm',
                     'OliverThunderWolf20', 'Rav3nArrowStorm', 'Lucas_Alpha201572', 'ArrowEagle52', 'JaxonClawChas3',
                     'XxBane_WolfxX2015YT', 'LukePulse92', 'MYSTIC_Skater71', 'CodeShadow28', 'DanielDawn202329',
                     'NoraSparklyChase', 'XxPlayzSonicLionxX', 'XxPix3lat3dGigaxX202', 'XxPh03nixHaz3Flam3xX',
                     'PixelBaconGamer', 'VortexEagle93', 'Am3lia_Min3r2015', 'GamerSpark87', 'XxHaz3lSparkRiftxX',
                     'XX_EthanCyberStealth', 'XxFr0st_FURYXX2016', 'XxArrowEpicxX97', 'Hawk_CHAS32013', 'EchoVenomAce',
                     'St3alth_Claw71', 'H3roB3arZ3ro', 'Jack_Slim368', 'WolfPrismMagic', 'SkaterHawk74',
                     'XxIsabellaStarxX2014', 'EthanN3on26', 'Pulse_Magic30', 'HannahToxicGhost', 'StreamZoom201343',
                     'Jacks0nAquaR0cket201', 'KnightThund3rByt3', 'XxPlayzGigaxX2016', 'HenryPanda66',
                     'XxH3roPix3lBlizzardx', 'SkaterMoonFlick', 'DriftSt3alth201654', 'XxSamuelCircuitBlade',
                     'Haz3lSt3althBlaz3', 'OrbitBear97', 'XXWILLIAM_PrismxXYT', 'XxMysticMoonxX2013_Y',
                     'Cart3rChillMystic201', 'HeroDuck201019', 'DawnMast3rCooki3', 'Harp3rToxic2007', 'FlashNightSonic',
                     'ByteV0rtex2019', 'Mas0nZapBeast', 'XXHUNTER_Gh0stxX2003', 'GoldenTigerQueen', 'EthanLionZap2024',
                     'Mast3r_Ninja38', 'OrbitStormyStorm71', 'StealthSparklyStream', 'TurboMiner2024_YT',
                     'Xx_SavannahNeonDrago', 'DanielPixelated41', 'ArrowPhoenixCode2012', 'EchoPixelatedChill20',
                     'Fir3Pow3rStormy', 'XxEmmaNeonRoguexX201', 'W0lf_Infern02014', 'R0GUE_Silver89', 'H3ro_Blaz32005',
                     'ToxicShadowBacon', 'XxEchoSparklyPrimalx', 'BearW0lfP0wer', 'HunterPlayz201913', 'OwenGigaT0xic',
                     'LavaMoonBeast_YT', 'ZoomChaseBlaze48', 'CookieDawnNeon', 'Night_Bear201548',
                     'CHARLOTT3_Drift2004', 'XxPulseHer0xXYT', 'SonicVort3x2024', 'HyperHer028YT',
                     'Xx_Chlo3ZoomBlizzard', 'WyattZoomOrbit2009', 'PixelBlockPhoenix', 'M00nPrism25', 'JackBac0nMiner',
                     'ShadowBaneNova28', 'Lucky_Inferno200261', 'XxMat3oFusionSkyxX', 'XxCode_SkyxX2006',
                     'Ban3CraftEpic2012', 'MysticG0ldenFr0st', 'Lava_Raven65', 'CyberUltraStorm', 'Haz3RiftPanda2007',
                     'BlastGolden10', 'XxFlameStormxX80', 'LionRider201461', 'SilverPowerNeon43', 'QueenLegendWolf92',
                     'PrismStar2013YT', 'ISAAC_Knight55', 'ZoeCrystalSky78', 'XxChaseOrbitTurboxX', 'DuckRogueNight',
                     'SparkCrystal201689', 'DarkPrimalInf3rno', 'Xx_WraithTigerGalaxy', 'DawnMaxEpic', 'Rogue_Flame49',
                     'EllaFoxSky', 'XxBeastBladeTurboxX', 'XxSt3althIc3Str3amxX', 'ChloeLuckyPro2023',
                     'XxJamesUltraxXYT', 'BlizzardFlickThunder', 'XxC0deSkyxX2012', 'Rider_Thunder22',
                     'ChaseBlizzardVortex', 'MiaSlim327', 'Pulse_Fox86', 'Ne0nRift202219', 'XxJellyViperxX2012',
                     'FusionMagicChill', 'LUCKYGLITCHBEAST_YT', 'XxMiaAceWolfxX', 'XxHunterUltraxX39',
                     'VoidHeroGolden2020', 'GamerClawDrag0n', 'FlickByt3Pow3r', 'F0x_Skat3r53', 'BlazeBuilderSpark39',
                     'SaberFoxBuilder', 'Zayd3nThund3rRav3n', 'LukeCodeRogue', 'StealthStreamRocket2', 'Levi_F0X54',
                     'VortexClaw90', 'Bear_Miner80', 'XxFrost_GhostxXYT', 'Chlo3Rogu3Pix3lat3d', 'N0raChase58',
                     'Flam3Prism2007', 'RocketGamerLava2002', 'KINGZOOMSPARK2008_YT', 'LukeC0deRaven',
                     'KayleeCookieHaze2019', 'HannahPix3lPuls32015', 'BuilderHazeZero2023', 'Inf3rnoBlast94',
                     'LiamSonicFury2022', 'RavenCraze97', 'Haz3GalaxyB3ar78', 'XxLunaDancerVenomxX2', 'LightStormy64',
                     'Ash3rPho3nixCod32009', 'XxEcho_MysticxX27', 'Isabella_Inferno26', 'Saber_Turbo64',
                     'Xx_TurboBlizzardWrai', 'HarperVortexDark', 'LiamMoonTiger', 'OrbitVortexDragon200', 'NoraBearFox',
                     'LunaArrowTig3r', 'INFERNO_Shadow28', 'Grac3Frost2023', 'XxSamuelLavaThunderx',
                     'B3arSkat3rFlam370', 'EmmaVenomBear', 'ViperByteRider2002', 'XxOliverViperxX2009',
                     'BladeUltraPixel71', 'ProRift200585', 'Playz_Tiger47', 'EzraFoxBlaz32021YT', 'Arrow_Turbo2005YT',
                     'Xx_DancerUltraShadow', 'C0d3Fir3Orbit', 'XxHyperWraithKingxX2', 'XxNeonPixelZapxX12',
                     'XxBuilderMaxClawxX_Y', 'UltraGlitchRift2004', 'WRAITH_Ne0n56', 'Mas0nMinerPr02021',
                     'XxAsh3rGlitchZapxX', 'XxJamesStormyFirexX4', 'GhostThunderSonicYT', 'MaxB3arNinja',
                     'XxNoahDawnxX2020', 'Xx_WraithBladeGlitch', 'Toxic_Lion200273', 'XxRiderAquaxX2012',
                     'Samuel_Zoom47', 'C0deBac0n62', 'KingTig3r200583', 'JaxonDawnZoom', 'R0ck3tRiftBlad32015',
                     'XXCHASE_SkyxX2018', 'ChloeCyberMax', 'Toxic_Silv3r60', 'IsaacLuckyVip3r', 'Lava_Bacon97',
                     'LuckyPho3nix2016', 'Beast_SPARK2005', 'MichaelMagic201294', 'XxAvaNinjaxX86', 'Ven0mSparkly2018',
                     'XxDancerFlashPixelat', 'Pho3nix_Om3ga200368', 'DancerLight202118', 'XxHyperKnightMoonxX',
                     'Hyp3rChas377', 'PrismMysticRift2024', 'XxPandaStr3amxX20148', 'JackFlam3V0rt3x',
                     'Infern0_Ph0enix2012', 'MagicMin3r41', 'ZeroVortex31', 'ZapSkat3r2006YT', 'XxPixelCyberMysticxX',
                     'Fusion_Byte2015', 'NoraLegendMax2012', 'AquaHyperDuck201771', 'StarryLavaMaster73',
                     'Ash3rSparkly78', 'JellyCircuitDark', 'BlockStarFlame2019', 'XxCharlotteToxicGold',
                     'BuilderStarPlayz66', 'AidenZer0201090', 'HazelSparkly33', 'XxCraze_FuryxX2019', 'N0ahR0gueT0xic',
                     'Inferno_Builder50', 'PaisleyZeroThunder20', 'XxWyattArrowFlamexX2', 'Fusi0nThund3r2020',
                     'ToxicShadow201925', 'ZeroToxic2004', 'XxHyp3rChas3TurboxX', 'XxGalaxySlimexX20047',
                     'WolfPixelated41YT', 'Oliv3rBlizzard80', 'XxEliRoguexX16', 'Pix3lat3dHaz3Bacon',
                     'HazelGamerArrow2010', 'XxSkaterKnightJellyx', 'SamuelOrbitBlade', 'NinjaIceC0de2022',
                     'Bear_King200615', 'GraysonCraftPrism_YT', 'AlphaHawkZapYT', 'Grac3Silv3rCraft2012',
                     'JackJellyRocket', 'Zoom_Sonic2006', 'EllieLuckyAlpha20187', 'PrismNovaGlitch20213',
                     'FusionPrismBlad3', 'ArrowBladeBlaze2020', 'XxFuryRogueVoidxX', 'Gh0stT0xic2020',
                     'WraithJellyAlpha2011', 'SparkKingWolf2013', 'CodePrismSparkly', 'Xx_Br00klynnKnightRi',
                     'BeastC0deNinja', 'ZeroHyper2012_YT', 'AuroraHyper201032', 'WOLF_Build3r2020', 'Stormy_Dark18',
                     'Str3amB3ast21', 'DawnStormyPixel', 'H3roCrystalJ3lly', 'CharlotteClaw69', 'IceCraze201336',
                     'Rock3tHaz32023', 'ZapEcho11', 'Bl0ckM00n201152', 'Gh0stGlitchNinja', 'XxLukeTigerxX2018',
                     'AvaEpicGlitch', 'HazeVoid202436', 'GlitchBane46', 'Vip3r_PRIMAL2023', 'Knight_Lava2010YT',
                     'AcePulse40', 'GlitchThunderRift', 'XxUltraLavaViperxX', 'OwenChaosBlast201288',
                     'TigerLightBlast2012Y', 'HannahSkyUltra2019', 'Shadow_Str3am2007', 'Slim3WraithClaw',
                     'TurboVip3rSt3alth201', 'Void_VIPER12', 'XxGhostMoonxX2004', 'BlizzardRav3nV3nom',
                     'GhostGoldenClaw', 'XxPuls3PandaxX2007', 'LiamBlazeLucky2003', 'XxBlaz3_Rav3nxX90',
                     'Zayden_Raven200212', 'XxZeroZapxX2002', 'KingCyb3r2018YT', 'XxUltraSparkxX200684',
                     'Hunt3rGold3nIc3', 'Micha3lChas3Cyb3r201', 'Drag0nEagle89', 'MiaUltraVortex',
                     'ElijahStarToxic2009', 'BearLavaDancer2020', 'XxSonicWraithPrimalx', 'Pixel_Haze81',
                     'Xx_FlameThunderPrism', 'N0raOrbitSkater', 'Paisl3y_Z3ro12', 'DUCK_Byt32008', 'N0ahHazeLi0n71',
                     'XxHunterTigerVoidxX', 'XxFireBytexX2014', 'Ow3nDrag0n2015', 'Pow3rGold3nDawn56',
                     'XxBuilderTigerMaxxX2', 'XxQueenBeastCodexX29', 'XxKnight_PixelxXYT', 'LightSlimeClaw13',
                     'St0rmyClawSt0rm', 'ZoomWolf202312', 'TurboByt32010', 'CarterLegendCraze', 'SavannahSlimeGhost83',
                     'JaxonRock3tRift', 'XxCarterR0gueDawnxX', 'XxGraceChaseArrowxX', 'Rid3rGiga2009',
                     'XxGamerFusionxX20162', 'Slime_Bear2010', 'XxArrowThunderEchoxX', 'Samu3l_Fury2017',
                     'Circuit_ALPHA48', 'OliverCraftAqua2011', 'L0gan_KNIGHT2017', 'XxGlitchCodexX2003',
                     'Xx_Jayd3nMast3rCircu', 'WillowHawk17', 'Rock3tCyb3rFlick', 'XxArrow_FlashxX88',
                     'EvelynPlayzInferno', 'Panda_MYSTIC200710', 'IsabellaAlphaFire', 'Pix3lat3dChas386',
                     'XxFusionCraftBlaz3xX', 'Cod3Aqua201871', 'XxCircuit_RoguexX16', 'Bane_Queen201420',
                     'AlphaClawFrost', 'XxL0ganZ00mxX201323', 'XxFlickChillDawnxX', 'NoahKingSilv3r',
                     'HazeDarkCraft2005', 'N0ahR0cket2016_YT', 'BearByteMagic', 'EllaStreamBacon93',
                     'VortexPhoenixStormy6', 'Br00klynnHyp3r50', 'XxKingRav3nxX43', 'H3r0Silv3r48', 'XxPro_LightxXYT',
                     'Xx_Charlott3FoxFlash', 'LucasPrismSlime', 'OwenArrowPhoenix2024', 'StormyHyp3r2021',
                     'SavannahStorm70', 'HazeNeon36', 'C0d3EpicB3ar', 'PixelLegend75', 'MysticDawnQu33n',
                     'V0rtexRiftGamer', 'CyberSparklyMagic201', 'MaxOrbitG0lden2024', 'BearVortexDark',
                     'Xx_SebastianFlameEch', 'Her0Stream91', 'N0raViper201068', 'H3nryGlitch2019', 'SparkTurboDanc3r',
                     'Cooki3Hunt3r85', 'EAGLELEGEND2010_YT', 'LuckyFlashAqua2008', 'XxFlashVoidFirexX',
                     'HawkSparkKing2004', 'XxLionMoonEchoxX', 'MichaelHero75', 'XxGraceRocketAlphaxX',
                     'XxSamuel_C00kiexX201', 'LucasInfernoSkater20', 'XxBlock_DRAGONXX41', 'EthanBlastEch02024',
                     'Ph03nixSky2020', 'DawnBlockHaze2008', 'UltraSkat3r49', 'XxPhoenixVortexHunte', 'AidenV0id26',
                     'SparkSilverArrow2012', 'MasonCod325', 'XxElijahHunterxX24', 'AbigailFlameRaven',
                     'XxPro_UltraxX44', 'AubreyCraft202276', 'GabrielNe0n31', 'XxBrooklynnGhostxX81', 'CodeSparklyIce',
                     'ChaosLion25', 'StormSab3rBuild3r', 'W0lfBeast2003', 'MoonAlphaSonic2011', 'Hunt3rQu33n45',
                     'MysticSilv3rFlash', 'DancerSparkly68', 'HeroRiftCircuit48', 'XxEvelynP0werxX2020',
                     'AlphaChase2022', 'XxNinja_Ech0xX2012', 'HyperGigaZero', 'RileyChaseFrost', 'Stormy_FOX200947YT',
                     'Li0nLavaR0gu3', 'HannahM00nKing', 'Pix3lat3d_ARROW35', 'XxBearEchoDarkxX', 'CarterPr0201337',
                     'DawnHeroFury76', 'ALPHA_G0ld3nYT', 'EzraVortexLion63', 'XxBuilderFlashTurbox', 'WRAITH_Craze14',
                     'LunaV0rt3x2016', 'XxFlameDawnxX39', 'Aria_Z00m2004', 'Aid3n_Vip3r2024', 'Flam3Om3gaSkat3r',
                     'Xx_AidenCrystalTurbo', 'FuryClawBane', 'Rift_Aqua83', 'XxVictoriaBlockCodex', 'LightBac0n201524',
                     'HannahSlim320', 'DanielDragonClaw19', 'EvelynFire10', 'Chlo3BlizzardSt3alth', 'UltraGlitch86',
                     'Jayd3nVort3xToxic', 'VortexPhoenixLight81', 'StormArrow2006YT', 'PrismUltra202057',
                     'XxEzraBaconxX2014', 'TigerFlameAce2005', 'CodeMasterStealth', 'XxOwenPrismJellyxX',
                     'Gam3rFlam3Toxic', 'Blaz3BlizzardHyp3r', 'EpicProNeon', 'XxHunterKnightxX2007',
                     'LavaPix3lat3dWolf200', 'VoidBlaz3Mast3r2004', 'S3bastianHyp3rZap12', 'Craft_Code80',
                     'XxBlockThund3rKingxX', 'Pulse_Blade89', 'MysticZapCyb3r', 'EchoDancerAce_YT',
                     'TigerHyperBl0ck2021', 'XxHarperLavaxX2013', 'XxCraftStormVort3xxX', 'Charl0tt3B3ar77',
                     'EliBlad319', 'R0guePrimal66', 'AquaOrbitOmega2003', 'BuilderGamerChill201',
                     'CharlotteFlashWolf20', 'StealthBearPrimal202', 'EpicHazePixelated202', 'MiaBlockPower95',
                     'JulianHawkShad0w83', 'EchoNovaZero39', 'FuryBaconMoon', 'Infern0SparklyFury20',
                     'XxMysticTurboAlphaxX', 'Lion_Fury201172', 'Rav3nCyb3rAqua', 'QueenZoomVortex2023',
                     'XxLeviDuckxX202464', 'ALPHAKNIGHT201341_YT', 'LiamCyberIce', 'XxChas3Danc3rB3astxX',
                     'Bac0nFlam3F0x2011', 'WilliamC00ki328', 'Her0Orbit41', 'ShadowSaberMaster66Y',
                     'ZeroMoonGolden2007', 'LegendCrazePower', 'AquaPrimalInferno', 'BuilderShad0wEch0',
                     'LuckyPrimalDuck_YT', 'CookieSilverOrbit', 'KingMaster2012_YT', 'StreamAce201788',
                     'Panda_Eagl32022', 'Ultra_J3lly2010', 'AquaChaos73', 'LeviBlastHero72', 'Hyp3rOm3ga18',
                     'EthanBlade70', 'WolfRavenGamer', 'Zap_CRAZ3YT', 'TurboFlameMaster_YT', 'TigerCode2019YT',
                     'AddisonFlash38', 'Ellie_Byte2011', 'V0rtexHyperOrbit2007', 'ZeroEpicPower48',
                     'HunterG0lden2018YT', 'NeonStreamChill', 'BlastStormy98YT', 'F0xRiftHyper', 'Craze_Lava200254',
                     'XxElla_Min3rxX55', 'XxRaven_TigerxX91', 'FireRavenEcho2008', 'XxPr0BeastxX2003_YT',
                     'Prism_Aqua10', 'RiftTurb0Vip3r', 'XxEli_SilverxX43', 'JaxonFrost202482', 'SebastianStealthTurb',
                     'JulianRogueLegend201', 'Skat3r_MYSTIC69', 'BlazeSt0rmyC00kie', 'XxGigaRiftMaxxX2023',
                     'Ech0OrbitBlaze', 'XxAbigailMinerStealt', 'H3r0BlizzardEch0', 'Vort3xStarryUltra200',
                     'Drift_Skater2002YT', 'JackBlastCraz32009', 'GabrielDawnCraze', 'ZapHyp3rFox', 'HannahFoxArrow',
                     'XxAmeliaOrbitNinjaxX', 'BaneChillPixelated76', 'NovaPandaHawk', 'JaxonNinjaKnight2003',
                     'Grac3_Haz3200413', 'EmmaV3n0m37', 'XxLucky_VoidxX77', 'LuckyLavaLight', 'XxSlimeDancerIcexX',
                     'RiftCraft200733', 'Z0ePanda73', 'PulseDrag0n2006_YT', 'XxLucasStarxX2024', 'PlayzJelly201096',
                     'NovaB3arBlaz3', 'JAYD3N_B3ast2010', 'CookieRavenNinja', 'AquaRocketMax2018', 'GalaxyChillRider',
                     'Fury_Mystic27', 'EpicC0deM00n2008', 'XxDarkProFlashxX22', 'Raven_Ice200796', 'Galaxy_Phoenix59',
                     'XxZo3Min3rZ3roxX2018', 'Pix3l_Inf3rno41', 'XxOrbitMagicxX2016YT', 'Skat3rAlphaGhost',
                     'SophiaGalaxyWolf', 'Queen_Blizzard2007', 'CraftDuckSparkly', 'Venom_Queen70', 'MOONHERO2022_YT',
                     'FrostViper202420', 'StarCha0sGh0st', 'T0xicBlizzard10', 'CrazeOrbitInferno',
                     'Rock3tRogu3Gold3n201', 'HazeBeast70', 'KnightFlame40', 'Blaz3Alpha2006', 'RIFT_Beast47',
                     'BaneBladeHer0YT', 'XxBuilderHawkxX20185', 'Fire_Raven2014', 'BaconKnightBlaze',
                     'Thunder_Epic2015', 'XxOliviaPrimalxX2021', 'CookieChillMagic67', 'HenryToxic202277',
                     'Silv3rGlitchZoom2018', 'Xx_HunterBlizzardPow', 'Dani3lCraz316', 'FireStormy53',
                     'NinjaRocketJelly', 'Z3r0Bl0ckPrism', 'BearGh0stVen0m', 'XxStarPix3lxX2018', 'XxAvaCrystalxX33',
                     'XxVenomZapNinjaxX', 'PANDA_Light202288', 'V0idSilverFury', 'XxFusionTurboPixelxX',
                     'PrimalEch0Rift2023', 'DANI3L_T0xic2018', 'XxAubreyJellyxX2022', 'SlimeC0deIce',
                     'FusionMiner202039', 'XxArrow_ChillxX2007', 'LightFlashMoon2012', 'Will0w_Chill2007',
                     'XxQu33nMast3rxX20026', 'Ril3yPrimal200743', 'NeonStealth93', 'PandaPrismCyb3r62',
                     'NovaBlast201224', 'MysticChaosVortex', 'RiftIc3Glitch201859', 'XxBac0nPandaF0xxX200',
                     'XXSTORM_PlayzxX2007', 'GalaxyVoid65', 'ClawR0cket2004', 'HazelF0x52', 'CharlotteAceGolden',
                     'NoahAlpha86', 'JamesRocketHero_YT', 'B3astRiftMagic', 'XxNeonZapGigaxX', 'FoxMast3r2004',
                     'Pow3rFrostPro', 'VortexToxicEcho', 'CrazeInfernoCraft98', 'XxEagle_BladexX49',
                     'AddisonHeroHawk2002', 'XxWyatt_HeroxX29', 'LuckyL3g3ndTig3r', 'AsherNinjaDark33',
                     'XxSonicOrbitxX200748', 'XxAm3lia_WraithxX99', 'LucasDuckEagl32003', 'ZAP_Blad364',
                     'RogueStarryGiga', 'Ow3n_Circuit2004', 'XxSky_CyberxX70YT', 'Mateo_Ninja2013', 'IsaacFr0stDrift',
                     'MinerPrism78', 'IsaacZeroDawn2014', 'TurboBeastHunter', 'Xx_BlizzardTurb0Beas',
                     'Aubr3yCooki3V3nom', 'Build3rPrimal13', 'Jayd3nMin3rFrost2024', 'KnightBaneBear2021',
                     'GalaxyIceEagle59', 'XxShadowFoxxX82', 'ZoomGhost32', 'BrooklynQueenZero200',
                     'XxVortexBeastxX2006', 'LaylaFire202016', 'AlphaBuilderSky', 'XxStarryFrostFusionx',
                     'ZoomVort3xPuls3', 'EzraRoguePhoenix97', 'PaisleyStar63', 'RiftCodeClaw_YT', 'IsaacAqua202456',
                     'AddisonPixelGolden', 'JAMES_Bane201668', 'CHARLOTTE_Craft2021', 'GigaP0w3r45', 'AvaLuckyBeast72',
                     'BlizzardNeonEpic', 'Ghost_THUNDER89', 'WraithStar66', 'Pr0WraithGh0st2020', 'HazeZeroPower2002',
                     'TigerHeroGiga2020', 'Micha3lShadowSab3r10', 'WillowSilverCrystal7', 'MateoSky43',
                     'XxBl0ckWraithN0vaxX2', 'EpicN3onThund3r2015', 'PrismSonic202249', 'Ella_EAGLE11',
                     'XX_QueenVortexHunter', 'Xx_PaisleyWraithFusi', 'Ne0nC0de2024', 'ChaseSky48', 'Golden_Silver2006',
                     'Build3rDanc3rCrystal', 'XxJacksonWolfMysticx', 'MiaChillDuck', 'Ow3nClawPuls3',
                     'XxEthanPandaxX2002', 'VoidRocketRider2010', 'Elli3Gold3nWolf2011', 'XxIsabella_HeroxX19',
                     'LavaMaxDragon', 'BeastZer02006', 'WyattPh0enixByte', 'RogueBuilderJelly202', 'Fury_Omega79',
                     'MasterLionFire2004', 'Mate0Fire2019', 'XxSkater_ChillxX2003', 'DragonWraithStream',
                     'XxC0de_BuilderxX2003', 'WolfRock3t202312', 'Slim3GhostSparkly', 'HannahShad0w201029',
                     'XXAUBREY_StarxXYT', 'StreamFoxInferno2002', 'XxDanielStreamZeroxX', 'PrismSt0rmyCraze',
                     'ZoeLegendStealth', 'CookieViper83', 'Aubr3yBlockWolf2003', 'CrystalFr0stCyber71',
                     'XxBladeKnightxX2006', 'StormOm3gaFury', 'Xx_LucasAc3Pix3lat3d', 'ChaseGamerRift',
                     'AuroraChaos25_YT', 'PixelatedPrismAlpha', 'GoldenNinjaDrift', 'PandaDriftGlitch2006',
                     'LiamHaze24', 'EzraLucky202282', 'MagicVen0mFlick', 'Byte_Cyber48', 'Silv3rRiftStarry75',
                     'XxBlockRiderEpicxX', 'WilliamFlame2012YT', 'HazeGalaxy201288', 'Pix3lat3dStormyTurbo',
                     'St0rmGamerLucky2005', 'Hyper_Pixelated11', 'MiaGolden2023', 'XxSlimeEchoGigaxX', 'EliStarryFox80',
                     'GlitchBaneR0gue', 'FlashFlickSlime', 'SaberThunder92', 'Vort3xMin3r200564', 'XxJackCrystalxX83',
                     'MiaRogue2011', 'Blast_Tig3r2009', 'ShadowMinerAce', 'RileyCyber201382', 'ProEagl3Str3am2007',
                     'Tiger_Sonic2013', 'AlphaSkyEcho55', 'EpicFuryGolden', 'SilverBaneCraze2013', 'ClawGhost25',
                     'Jayden_BEAR38', 'StarCooki3Chas3', 'XxKingRocketThunderx', 'Qu33nZ3roRift', 'WilliamBacon2021',
                     'BaneMagicHero2020YT', 'DancerVoid74', 'Primal_ST0RM202147', 'T0xic_St0rm22', 'AidenHazeNe0n',
                     'HAZEL_Blaze64', 'XxLiamClawGoldenxX26', 'St0rmDawn200684', 'Xx_MAST3RSTR3AMROGU3',
                     'Mystic_Rift202085', 'Isab3llaLight201572', 'XxVenom_MASTERXXYT', 'HeroBear201191',
                     'Samuel_Chase68', 'XxChaosHeroxX2006', 'Golden_Wraith2016', 'Layla_N0va2013', 'MagicBlazeHero2014',
                     'LunaSparkDrift', 'AmeliaArrowVoid', 'Wolf_Sparkly69', 'MichaelPrism200928', 'AriaSab3r20',
                     'Alexander_Bear44YT', 'Zo3Flash2022'}
local RECEIVER_LIST = {'LuckyShad0wFusi0n200', 'Night_Fusi0n93', 'Turb0Ninja41', 'Blast_Pulse95', 'QueenBlizzardWolf',
                       'XxStorm_TurboxX2016', 'Haz3l_Ultra2009', 'Z00mSt0rmy2003_YT', 'FrostBlizzard201242',
                       'AlexanderMinerFlick', 'Isaac_Saber16', 'Qu33nSkat3rMystic201', 'Silv3rBuild3rChill',
                       'N0ahR0gueRift45', 'W0lf_Ace2010', 'Owen_SPARK40', 'IsaacZero53', 'XxVortex_DawnxX2012',
                       'Grays0nStarryBlade', 'IceSparklySaber', 'Fir3Qu33n60', 'Knight_Epic73', 'XxBuilderStormyxX31Y',
                       'LunaRiftHer065', 'RiftRogueBlock', 'CookieAlpha82', 'XxChl0ePrimalxX20117', 'AsherPlayzDragon',
                       'ZaydenAquaRaven2020', 'LunaInferno202070', 'AceEpicDrift2022', 'XxMax_DragonxX201369',
                       'GigaHawkLegend', 'OliverBlastLucky2004', 'Brooklynn_Sonic30', 'Arr0w_Mast3r2005',
                       'Gamer_Primal36', 'XxNovaSonicxX95', 'XxChaosRocketBanexX', 'F0xEagle53'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
