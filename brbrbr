-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {
    'AlphaDragon200696', 'XxEpic_DRIFTXX2003', 'EzraFireStream81',
    'XxEpicH3roPrimalxX20', 'JacksonCodeWolf', 'BaneDancerInfern0',
    'Circuit_Pixel2011YT', 'PaisleyDriftBeast201', 'FrostRift34',
    'MasonBlaze39', 'AddisonStr3amShadow', 'TurboH3roRid3r',
    'SilverStarryFlash201', 'XxProKingxX83_YT', 'AriaJellyPixel2006',
    'XxStarryPh03nixLucky', 'LeviSt0rmyShad0w', 'Bacon_INFERNO94YT',
    'FuryStarryVoid80', 'FireLucky21', 'CircuitGold3nToxic', 'BlizzardGiga80',
    'StormyFlameHawk', 'C00kieF0x30', 'AuroraGlitchB3ast200', 'ByteGlitch15',
    'XxWraithGigaxX43', 'AriaNeonFrost2002', 'Shad0wTurb0P0wer71',
    'OM3GA_Zoom18', 'Ic3B3ast92', 'ZapJ3lly2008_YT', 'FusionPrimal201810',
    'Harp3rWolf77YT', 'Pix3lat3dSlim32014YT', 'Luk3Ac377', 'GhostNeonBlast48',
    'S3bastianLucky2021', 'ZO3_Om3ga2014', 'BlizzardMagic79',
    'LightAceStorm2021', 'XxGabrielBladeCraftx', 'StarryRid3r2023',
    'Inferno_Ice201891', 'SkaterVortex91', 'ClawLionVip3r2024',
    'SebastianPandaFire59', 'Hero_Crystal201999', 'Mas0nW0lf2012',
    'XxTig3rZ3r0xX2013', 'James_Glitch84', 'MinerHazeDrift2023',
    'XxSamuelIceVoidxX201', 'RiftNova201441', 'Xx_ELLIEHYPERSPARKLY',
    'XxGraceBlizzardThund', 'Riley_SKY201013', 'WraithHer0Turb02022',
    'ThunderT0xicR0gue200', 'PixelCookie202434', 'XxJaxonSlimeHawkxX',
    'EzraStealthSilver83', 'Blast_Blaze54', 'PANDA_N0va2012', 'WilliamPuls347',
    'CraftRocket27', 'XxPix3lat3d_Ech0xX20', 'EllaDarkMasterYT',
    'XX_Hunt3rVort3xBlock', 'F0xStarryLight', 'V3n0mStar2003',
    'Sab3rBlock202470', 'LiamPanda_YT', 'ZoomStealth85', 'XxJayd3nByt3C00ki3xX',
    'MasterPixelatedPanda', 'IsaacBlockLion', 'XxH3roOm3gaxX2024',
    'Jack_Chill201195', 'NinjaBaconPanda', 'Chloe_Epic2008',
    'Scarl3ttBlizzard84', 'H3roCraftHunt3r', 'XxZeroRiderxX2013',
    'Dancer_Hunter45', 'HUNTER_C00kie2018', 'H3r0FlashG0ld3n',
    'DanielTiger20YT', 'FlashJellyRift', 'XxJ3llyRav3nxX28',
    'XxTurboCyberCircuitx', 'MasonPixelWraith12', 'Blad3Galaxy34',
    'KingPlayzByte', 'TurboZapBacon', 'XxJellyByteStarxX', 'AidenLightCha0s',
    'ZapLightNight2023', 'MasonJellyVoid88', 'XxRil3yInf3rnoCyb3rx',
    'XxMiner_Arr0wxX2011', 'FlameOrbitInferno', 'Eagle_Saber2012YT',
    'GalaxyPhoenixRider20', 'V0rtexChase2014', 'Turbo_RAVEN35',
    'ViperAceCode2018', 'NeonRiftZero2003', 'HazeChaseBane23', 'EliSt0rmy83',
    'XxZer0GamerxX2013', 'XxRavenSonicWolfxX', 'FuryRiftRocket',
    'GalaxyMasterF0x', 'XxEcho_ULTRAXX88', 'XxFlameQueenxX2006',
    'MateoArrowSpark', 'RAV3N_Fury49', 'XxJam3sV0rt3xFusi0nx',
    'XxHer0W0lfCrystalxX', 'Ril3y_SPARK2012', 'LucasCode16', 'Sky_Blast96',
    'XxJax0nR0gueBlizzard', 'DawnProGhost19', 'Inf3rn0Craz3Ac3', 'UltraZap48',
    'Aria_Magic96', 'VenomEagle64YT', 'XxPrismR0cketxX2008', 'IsaacByt3Lucky',
    'Xx_LavaCrystalDragon', 'BuilderBytePlayz2013', 'PulseFr0st67',
    'SaberGalaxy202339', 'Micha3l_Playz17', 'CarterStarry34',
    'Chl03GlitchSkat3r', 'Flick_OrbitYT', 'C0deS0nic2013',
    'SilverBeastFusi0n92', 'NinjaAlphaMoon', 'XxJellyAcexX2022YT',
    'XxFusi0nGamerFirexX', 'Pho3nixBlaz3Echo', 'Ban3L3g3ndLight20145',
    'Primal_Golden21', 'W0lfN0vaRift', 'GalaxyThunderChaseYT',
    'FlashTurbo63_YT', 'XxBeastRiftCircuitxX', 'AlphaInfern056',
    'RiftBlizzardRider202', 'Xx_KnightOrbitStarry', 'Build3rVoidFusion',
    'XxMysticSlimeWraithx', 'BrooklynnBeastKing', 'VictoriaShadowNight2',
    'JulianG0ldenZ00m', 'XxClawTurboBlockxX20', 'AlexanderToxicSky',
    'FuryBlizzardSky', 'HyperDuck2005YT', 'Samu3lRav3nCraft2002',
    'EllieRogueYT', 'Stealth_Ice202063', 'JamesQueenPower', 'AriaSkater95YT',
    'Lava_MINER94', 'FusionGiga2020', 'XxBaneLuckyxX99', 'JellyMinerBane2024',
    'BaneViper37', 'StealthPixelLava2021', 'XxVenomZeroxX2010', 'Mate0Her093',
    'Wraith_Haze74', 'ThunderNova200813', 'BrooklynPix3lat3dDan',
    'XxBane_DARKXX2015', 'XxC00kiePixelBlizzar', 'CyberBlastMax',
    'V0idEpicCrystal2020', 'HyperFireLight', 'Ril3yBaconJ3lly',
    'StormyEchoPlayz95', 'AquaChillHaz3', 'BlizzardHyp3r82', 'INFERNO_Lava2016',
    'Fir3Pix3lat3dCraz3', 'StreamPhoenixToxic', 'TurboBlaze200615',
    'Omega_Glitch200356', 'Ninja_Zoom2019YT', 'ShadowZapSpark',
    'HunterPh0enix2024', 'Build3rWolfMin3r', 'XxBeastAquaxX2009',
    'JackT0xic2009', 'UltraBlaz3Rift', 'AquaSt3alth201568',
    'XxCarterFoxFlashxX', 'SparkCha0sChase', 'S0phiaMaxMaster',
    'XxGalaxyZeroTurboxX2', 'StarEchoAqua2010', 'PaisleyPh0enixBaneYT',
    'OliverUltraChase2007', 'Craz3Lucky2003', 'RileyLucky201133',
    'MysticSparkChaos', 'Max_Rid3rYT', 'V3nomPandaZ3ro', 'XxEllaCrystalxX20126',
    'ThunderPhoenixByte20', 'Shad0wSparkEagle2012', 'DriftSaber65',
    'XxRock3t_NovaxX13', 'T0xicHyper2017', 'Blast_Echo38YT',
    'Xx_ZaydenDarkSparkly', 'CodePhoenixNight', 'EzraGamerPower',
    'Neon_Blast91', 'AvaZoomHyper2011', 'XxSlim3SparklyLavaxX',
    'NightByte200531', 'DragonHunterKing2002', 'LukeCyber18',
    'XxEagleFrostxX2022', 'L0ganC00kieFire', 'CodeVenom201327',
    'XxWraithDarkxX45', 'V0idCraftPrimal', 'JamesWolfChaos2020',
    'RiftTurboSlime96', 'AidenPixelOrbit2010', 'ByteQueen201961',
    'ScarlettHunterSky201', 'XxDanielPandaRiftxX2', 'BaneLegendBlizzard35',
    'AvaFireNinja_YT', 'Ultra_Eagle2003', 'EmmaBuilderByte44',
    'EmmaCrazeGalaxy', 'KingInfern0Flame2004', 'XxFlashDuckFusionxX2',
    'C0deM00nRift2004', 'Ven0m_R0gue2013', 'GraceRiderChase', 'B3astSpark54',
    'DarkBacon2020', 'XxPrismM00nxX2004', 'Ech0Skat3r2006', 'Chaos_IC3200662',
    'IsaacPulseShadow66', 'StarryGhostBlock2023', 'CraftDarkIce56_YT',
    'Rogu3_Wolf200933', 'Nora_Ghost80', 'LucasOrbitCraze49', 'OliviaBlizzard34',
    'Spark_Fury2022', 'BlizzardPulse18', 'AlexanderLightRift67',
    'XxSonicBanexX73', 'Ne0nZ00mRift2007', 'AquaFuryStarry', 'FlickRiftS0nic41',
    'PrimalCooki32018', 'XxLegendVenomxX2012', 'St0rmy_C00KIE2003',
    'OwenTiger2007YT', 'RocketDriftCrystal30', 'Tig3rPandaCrystal',
    'FlickKingCraft', 'Chase_Zoom17', 'CyberClaw200717', 'N30nSab3rFir3',
    'EAGLE_Ice200542', 'Aid3nCyb3r29', 'TigerHeroLegend93', 'XxEliTurb0xX2018',
    'Xx_AddisonChillStrea', 'ClawEagl3Hyp3r58', 'GalaxyFrost68',
    'SamuelCraft2021_YT', 'XxEzra_FlamexX2019', 'Ultra_Saber75',
    'Harper_Magic29', 'AubreyBuilderGlitch4', 'ThunderNinjaEcho',
    'Ultra_Bear2005', 'AriaAqua200826', 'FlashPrimalShadow',
    'Jayd3nPlayz202199', 'GalaxyZap44', 'EvelynWraithPlayz29',
    'LoganRogu3Glitch', 'XxStealthMoonxX38', 'AquaShad0wCircuit201',
    'St0rmDuckHyper2023', 'HyperToxicPhoenix201', 'WillowEagl392',
    'ThunderEch0Sparkly', 'XxVortexDriftxX2024', 'VictoriaPlayz2012YT',
    'VictoriaFusionStar', 'OrbitZer02012', 'Rogu3Echo27', 'HarperEpicR0gue19',
    'EvelynAlpha77_YT', 'BaconPix3lDragon', 'Arr0w_Fr0st63', 'EthanAc390',
    'SPARK_Knight57', 'H3nry_Fusi0n2010', 'EliThunderNight2002',
    'LIAMBUILD3R30_YT', 'ZapBuild3rDawn70', 'SaberDriftCraze2002Y',
    'MichaelR0cket45', 'Rogu3Toxic2021', 'Mason_Blad32014',
    'XxSparkBlastxX2024', 'XxMoonAquaGold3nxX', 'XxOrbitSkyFirexX',
    'RogueChaseSparkly201', 'XxPlayzDancerxX2012', 'AriaOrbitQu33n',
    'XxLavaSlimexX77', 'Puls3_Ph03nix61', 'PrismCyber37', 'Aubr3yDawn202143',
    'AlexanderLuckyR0gue', 'ElijahDancer24', 'Ace_Star79', 'PlayzMaster200586',
    'AquaHyperPlayzYT', 'GigaLi0n44', 'XxEagleNeonxX2015', 'Br00klynn_Rider22',
    'XxBuilderHeroFoxxX', 'RiftViperPro62', 'Void_Pulse26',
    'BrooklynBan3Skat3r', 'XxPrismCraftxX2017', 'Z0eCyber41',
    'UltraVen0mGlitch', 'GoldenLavaSky2019', 'W0lfKing2010', 'XxHer0StarxX44',
    'ChaseG0ldenSaber', 'SlimeLi0nNe0n', 'Haz3lL3g3nd44', 'OmegaRider89',
    'GraceDuckGamer', 'LoganVenom42', 'DanielFlashWraith201', 'OwenGhostBear',
    'Gabri3lSab3r32', 'Xx_MOONCIRCUITSTREAM', 'FlameStormy200613',
    'UltraStarStr3am2009', 'ZoeSaber97', 'BlastRock3tCraft2006',
    'Lucky_Saber16YT', 'XxJackMast3rxX2023', 'SkyZoomLegend201682',
    'XxEllaSkyxX83', 'Silver_C00kie41', 'Xx_Build3rPrismSpark',
    'Ic3GlitchFlam3', 'BaconMinerJelly2004', 'Bl0ckPh0enix2010',
    'XxChaseRiftxX2005', 'EthanDarkBlast', 'XxFire_KnightxX2017',
    'Pow3rCircuitFusion', 'XxAbigailGam3rxX80', 'AlphaLava66',
    'XxPhoenixChillCrysta', 'EllieVenomJelly', 'GraysonPanda2012',
    'MaxByteCookie2020', 'XxEchoBladexX53', 'FuryFlick_YT',
    'XxPandaNinjaClawxX', 'XxCircuitMaxxX2021', 'SebastianEpicStarry',
    'ZaydenMax54', 'EzraVen0m2023YT', 'XxFuryPlayzxX201124',
    'Ech0C00kieGamer2009', 'WilliamBuilderM00n20', 'MasterHer035',
    'SilverIce83', 'Ban3Flam353', 'HawkThunderUltra2024', 'UltraIceMiner2003',
    'StealthSkaterWolf200', 'NoahSparkGolden2018', 'PixelatedZoom48',
    'RileyHer020', 'XxJacksonOmegaFoxxX2', 'DawnFlick202039', 'ShadowCode37',
    'Kaylee_CRAFT89', 'Dani3lToxic202092', 'XxCarterPixelatedEpi',
    'JulianFireArrow_YT', 'LucasL3g3ndByt32014', 'Xx_CrystalStarryRogu',
    'SonicBlastSt3alth', 'XxZaydenNovaStarryxX', 'OwenBlaze75',
    'ZoomAquaLegend', 'XxBladeSlimeEchoxX20', 'XxGold3nRock3tRid3rx',
    'AquaSonic2023YT', 'ZeroSkaterBlast2024', 'HeroCircuitEpic2022',
    'P0w3rBlizzard2019', 'HawkEpicLava2023', 'Hunter_Sparkly83',
    'XxKayl33_TurboxX2020', 'ShadowEagleTiger', 'XxTurboMoonxXYT',
    'FlickBaconRift47', 'BlastHawkRift2024', 'DragonAc3200478',
    'XxCod3LightRid3rxX', 'Ev3lynGam3rJ3lly', 'Aurora_STR3AM98',
    'WolfCyberZoom', 'LukeFox2019_YT', 'BlizzardOrbit202267',
    'DarkRiftDancer2013', 'XxIceByteStormxX', 'WillowHero75',
    'GraceP0werLegend', 'AbigailBlizzardVenom', 'Xx_SavannahFlickBeas',
    'EllaBladeWolf98', 'XxSparklyDragonShado', 'FoxPixelKnight70_YT',
    'MateoLegendNinja2022', 'PhoenixSonicDuck', 'XxAidenArrowRiderxX',
    'SkaterSkyBlast2008', 'XxStormBuild3rFuryxX', 'BuilderLucky79',
    'XxPixelCrystalLuckyx', 'CodeFire52', 'XxRocketPowerxX99', 'Epic_Glitch68',
    'XxHawkIceVenomxX', 'XxFusionBlockxX2003', 'DriftArrowBlock2003',
    'LukeFr0st87', 'GalaxyPulseChaos2014', 'ClawThund3rSlim32021', 'UltraIce89',
    'Skater_Flick12', 'PaisleyVen0m82', 'XxHazeKingJellyxX202',
    'XxJulianPixelatedPan', 'SonicSkaterPrimal202', 'AceDragonMax2007',
    'CyberThunderLight14', 'LaylaSaberBuilder', 'AuroraSonicGhost2020',
    'ClawMasterRift2010', 'JellyDragonEagle', 'XxPrismLightV3n0mxX4',
    'Alpha_Turb0200233', 'XxArrowChaosOrbitxX2', 'Flam3_Turbo2012',
    'XxEthanByt3xX2013', 'XxPhoenixLightxX2010', 'Omega_Z00m2018',
    'Dragon_Dancer79', 'XXBEAR_HyperxX2012', 'SlimeCyber91', 'WolfCraze42',
    'Qu33nBuild3rLight', 'FrostByt3Eagl3', 'Scarl3ttFoxFlam3',
    'ThunderBlizzard20067', 'BrooklynnB3astV3nom', 'Grays0nDrag0n2016',
    'XxAquaBan3Fr0stxX', 'PandaZap29', 'Arr0wCrystal2002', 'PixelPrismDuck_YT',
    'NinjaToxicFox2003', 'ScarlettDuck10', 'F0xVen0m2008',
    'Xx_Fusi0nDawnThunder', 'Fusion_Ultra202027', 'LeviFusi0nDancer2019',
    'GoldenInferno81', 'DarkCrazeBeast', 'HazeViperQueen2019',
    'ToxicFoxSky2010', 'JaxonMiner12', 'StormGigaThunder', 'DriftKingHaze',
    'XxIsaacWolfxX2006', 'COD3_Spark76', 'GlitchC00kieRift',
    'Al3xand3rMin3rBuild3', 'V0rtexChasePixelated', 'XxRocket_PixelxX2004',
    'SavannahSkyStarry54', 'FlashRiftDragon2013Y', 'SkaterPandaVortex58',
    'AlphaVortexEcho', 'HyperLegendPanda81', 'XxGold3nRogu3Slim3xX',
    'H3roNovaNight', 'GabrielSparklyViper9', 'HarperStarry71', 'Duck_Pix3l42',
    'XxZayd3nVoidGam3rxX', 'Aur0raGlitch201340', 'Bl0ckFlickChase',
    'CookieSlimeVortex', 'Wraith_Circuit57', 'EchoBeastFire2002',
    'DanielStealthHunter2', 'Chase_Master200323', 'Ghost_Ic32003',
    'ScarlettStormy2024', 'BlazeWolfGiga2022', 'Block_FLAME2005',
    'KingHazeHunter2012', 'XxViperMasterStealth', 'PulseEchoHaze',
    'XxOmegaOrbitxX201518', 'QueenFusionFireYT', 'XxPrismUltraxX28',
    'SkaterLegendT0xicYT', 'XxThunderPulsePowerx', 'XxNinjaSilverxX2021',
    'Cyb3rF0x70', 'XxAuroraGhostxX19', 'XxPulseWolfxX2006YT', 'CyberDriftRaven',
    'MagicGlitchEpic2016', 'XxHawkToxicxX90', 'UltraVoidRav3n201088',
    'Jam3sSilv3r73', 'AlphaJellyMagic', 'Crystal_Claw41', 'BaneFlick200610',
    'Rav3nVip3rCircuit', 'Aqua_Ech019', 'Xx_SavannahPrimalZoo',
    'MysticRavenFlash92', 'SparklyMysticNova', 'Ash3rKnightBuild3r',
    'AriaStorm200948', 'EzraFury64_YT', 'ElijahV0rt3xLight',
    'HunterGalaxyPower', 'SparklyPix3lZap', 'XxRift_FusionxX48',
    'BrooklynTigerChase20', 'XxStarryR0gu3xX20094', 'SkaterR0gue2015',
    'RogueClaw200447', 'Pr0CircuitDuck2014', 'Al3xand3rMast3r18',
    'XxSkyBaconxX2003', 'OliverStarryDawn', 'Luk3Blaz3Chas3',
    'NightEchoSt3alth2008', 'StreamStarryPandaYT', 'LuckyOm3ga2014_YT',
    'Aurora_Chaos85', 'GlitchGhostKnight98', 'BuilderStormFlash',
    'SaberGigaBuilder2009', 'XxHarperPandaxX13', 'CrazePulsePrimal55',
    'SparklyGiga55_YT', 'Blad3Mast3r30', 'XxOliviaPrismxX98', 'SamuelStormy84',
    'XxEchoPhoenixFoxxX', 'Drag0n_Sky200387', 'OliviaBlizzard92',
    'OwenDarkBlaze2003', 'Xx_CarterPixelatedMa', 'BearStreamZer0_YT',
    'MateoGalaxyNinja2010', 'XxStarry_H3roxX2023', 'MagicSparklyPrism202',
    'Flam3Cooki3Turbo_YT', 'JaydenPixelZoom2007', 'Playz_Galaxy2012',
    'Miner_Zero200738', 'FuryBeastFox50', 'MichaelDawn39', 'Pixelated_Blade98',
    'XxTurboShadowKnightx', 'CrazeEchoPixelated', 'Xx_AbigailGh0stDrift',
    'CookieGhost35', 'StealthCraft88', 'Zo3_MOON2009', 'HenryGoldenLucky',
    'EliH3r071', 'BearSaberZ00mYT', 'Slim3_Fox92', 'XxMagicBladexX94',
    'ViperOrbitFire_YT', 'LavaVenomLight', 'Blad3Crystal11', 'Aubr3yInf3rno47',
    'ZoomByt32019', 'INFERNO_Playz202489', 'Jam3s_CHAS32012', 'PRONOVA_YT',
    'WilliamNeon19', 'AceRift96', 'WraithFlickStream', 'Grac3Li0n2003',
    'StealthStormyStarry2', 'TurboCrystalOrbit200', 'ChillPixelBlock2018',
    'XxStormThunderEpicxX', 'Cyb3rSt0rm2006', 'GAM3RFLICK_YT',
    'SparkNinjaMoon2020', 'Z3r0W0lf2021', 'Bane_Flash61',
    'Xx_EvelynLegendPixel', 'Pow3rCraft2002', 'MaxStormyVoid2021',
    'BladeGalaxy92', 'Mat3oCraftDanc3r', 'HeroChillAlpha18',
    'GlitchRiftRocket2024', 'St3althPanda2019', 'XxSonic_STREAMXX52',
    'Xx_GabrielCodeMystic', 'XxGolden_RiderxX2019', 'IsaacNightStream',
    'ChaseZoomSpark42', 'OmegaPrimalLava93', 'OwenP0werFr0st',
    'AbigailFlam32017', 'XxMichaelDancerGhost', 'HazeStarry40',
    'Omega_Bear2008', 'SparkMast3r201028', 'XxRileyPulseBladexX',
    'Luk3_Blizzard2003', 'XxSkaterNinjaBaconxX', 'LunaStealth68YT',
    'XxStormyBuilderBanex', 'XxMaxLavaxX200355', 'RiftFlash27',
    'XxS0nicMagicxX2017', 'DuckOmega43', 'Z0eSkaterM00n2006',
    'XxFrostPlayzRiftxX', 'Samu3lNightTurbo', 'PandaFireIceYT',
    'Z0eFusi0nLegend', 'InfernoSlime95', 'EpicBlastArrow201724',
    'SkyGhostCraft2015', 'XxPrimalGoldenCookie', 'LionAlpha200725',
    'LionChase67', 'XxBearAlphaDawnxX', 'SonicRogu363', 'S3bastianRav3n53',
    'KayleeDragonBlock98', 'Pulse_Flick2018', 'NinjaSlime2012_YT',
    'XxNinjaPixelxX53', 'PixelatedHaze34', 'LionFlash25', 'GalaxyByt350',
    'H3RO_Storm2015YT', 'XxGamerPixelatedBliz', 'SonicPlayzThunder',
    'Flash_Ech014', 'BlazeGhostAce2019', 'Xx_VenomInfernoSilve',
    'Willow_TURBO64', 'Pho3nixCraz3Mystic', 'RiderStormy98', 'ZapQueen11YT',
    'PhoenixTurboNinja', 'XxFuryRock3txX', 'OliviaClawRid3r2003',
    'AbigailW0lf2024', 'Asher_Slime200339', 'LightSilv3rFir3',
    'GhostBladeStealth202', 'XxLaylaBaconShadowxX', 'MysticJ3lly2007',
    'St3alth_Hawk2006', 'DragonZeroSpark25', 'ViperEagle12',
    'XxBane_StarryxX20', 'Samu3lC00ki32016', 'Charl0ttePixelFlame2',
    'Pho3nixDanc3r2005', 'Hunt3rSky67', 'XxThunderOmegaGalaxy', 'Aid3nStarry97',
    'Xx_BeastCyberSparkly', 'CIRCUIT_Gold3n2012', 'CookieProVortex',
    'RiftMoonBacon40', 'ZapPrimalChill', 'ToxicClawGlitch', 'B3astBlockInf3rno',
    'GalaxySparkRocket', 'XxCrystalIcexX38', 'Blast_Tiger94',
    'AsherGigaFlash2020', 'AuroraSky91_YT', 'LukeMystic202346', 'Ne0nFlick87',
    'ChaseRiderWolf2006', 'AvaHunt3rPix3l', 'XxZoeZeroxX200530',
    'MichaelGh0st201393', 'Sebastian_Rift62', 'Xx_LUCKYTHUNDERSTREA',
    'DuckDriftQueen', 'KayleeGamerLegend200', 'XxWill0wSparkFlashxX',
    'EpicNinja200238', 'Cod3GlitchN3on88', 'BeastBlastRift71',
    'ULTRA_Cooki3201664', 'L0ganWraithTurb0', 'RiderShadow2014_YT',
    'ZeroDuckRocket', 'Hunter_ST0RM200243', 'LoganBearFlick_YT',
    'AquaVen0mNinja', 'N0ra_Thunder45', 'Cooki3B3ast35', 'NightInfern0M00n',
    'GhostNovaCraz3', 'Ech0PixelSkater', 'Xx_DarkFusionSparkly',
    'LAVA_Phoenix11', 'XxLaylaThunderxX58', 'GoldenLionHaze41',
    'Bl0ckMaxPixel2005', 'LionTig3r2006YT', 'JaydenGamerRaven2014',
    'EagleFusi0nIce', 'KingZapHero2007', 'FrostSab3rPix3lat3d',
    'AidenSonicPixelated2', 'R0gueCraze2002', 'LucasEpic25',
    'XxEch0Shad0wBac0nxXY', 'BaneFlame2004YT', 'XxAsherMaxxX31',
    'ZapHunt3rFusion', 'EmmaLionDuck2013', 'LucasLightHawk2009',
    'XxLightRogueBaconxX', 'PrimalF0x2023', 'XxCookieUltraxX2009',
    'AvaFlam3Turbo', 'ByteCrazeStream', 'Carter_THUNDER201029',
    'JamesPixelatedTurbo', 'XxEliTigerxX85', 'Al3xand3rStarry2022',
    'SaberVenom200476', 'XxRavenLightxX2017', 'BeastGalaxyHero2022',
    'AvaRiftHero12', 'GamerSky201025', 'BlizzardMoon63', 'EmmaEpic59YT',
    'Kayl33Crystal59', 'ProBaneStormy', 'Xx_Vort3xNightBuild3', 'Hyp3rTurb073',
    'BaneGigaBlade_YT', 'FoxLavaAce', 'Craz3V0rt3x200336', 'KayleeLucky43',
    'SonicSparklyChill', 'Ow3nDriftCircuit2006', 'Luna_Dancer62',
    'Drag0n_Rav3n2005', 'ProWolfChillYT', 'Scarl3ttPuls328', 'ChaseAqua201647',
    'KnightInferno200612', 'Bacon_L3g3nd12', 'PlayzWolfPrism66',
    'XxGoldenCircuitBanex', 'BuilderHawkLegend201', 'ZaydenInfernoSkater2',
    'Wyatt_Sonic33', 'WraithVenomLegendYT', 'JaxonGhost200691', 'CodeBaneMagic',
    'Giga_Pulse69', 'XxHenryMasterxX46', 'XxR0gueZapKnightxX20', 'OwenShad0w32',
    'ChaseGalaxy75', 'FireCraft200645', 'Mas0nCraze19', 'LucasVoidViper2004',
    'Gabri3lMagicUltra202', 'EmmaMaxFlash2012', 'Cooki3Thund3rRock3t',
    'Elli3_Z3ro2022', 'XxKnightSab3rEpicxX', 'Blad3Orbit87', 'S0phiaW0lfClaw',
    'Dragon_MAGIC68', 'Z3roRiftPro', 'LegendWolfBane40', 'JulianSaber201956',
    'Chlo3MaxShadow', 'XxBearBlastTurb0xX', 'XxAquaDarkFlashxX',
    'HunterBlastTurbo25', 'SaberHyperRift76', 'XxV3nom_Tig3rxX',
    'N0vaNinjaRaven', 'PrimalVenomStorm', 'Cooki3_Echo2019YT',
    'XxBlastBuild3rFir3xX', 'Li0nPh03nixRift20062', 'XxJulianDriftH3r0xX',
    'XxW0lfGlitchClawxX20', 'Orbit_ULTRA71', 'XxLegendGalaxyJellyx',
    'InfernoSpark202151', 'NightBlazeLava', 'Ech0Fr0st47', 'Z0eKingC0de2014',
    'OliverVen0mCrystal', 'AvaHyperBane', 'GalaxyZ3r098', 'Galaxy_Glitch81',
    'CrazeAceRift2020', 'BlastFusi0n54', 'XxLight_OmegaxX2011',
    'XxMasterBearxX200934', 'StealthMaxKing', 'LightRiftKnight_YT',
    'DawnTigerSlime_YT', 'HannahC00ki325', 'XxNeonEchoRavenxX',
    'NoahVortexKnight', 'AsherWraithNight2003', 'XxRocketGamerxX20035',
    'LunaZeroEpic86', 'BrooklynWolfClaw2012', 'IceInfern0Bac0n2011',
    'FoxSonicFrost2003', 'Xx_SparklySaberOmega', 'WillowChill2005YT',
    'PixelKingAqua2022', 'XxS0nic_Skat3rxX82', 'NightProDragon99',
    'Lion_Star23', 'XxCraftRocketxX2021', 'EzraBlizzardCooki3', 'DriftVoid93',
    'RocketThunder91', 'GoldenMagicInferno80', 'XXNOVA_L3g3ndxX26',
    'HyperPixel53', 'Grac3Tig3rThund3r55', 'Pix3lat3d_Turbo2002', 'AceMoon41',
    'ZaydenFoxZoom', 'BaconKingH3ro2017', 'Mat30_B3ast2007',
    'XxJackBuild3rAc3xX', 'Turbo_Skat3r93', 'Blad3Puls3Knight2015',
    'XxDriftChaosxX2020_Y', 'AbigailFlameToxic', 'FlameSilverHunter',
    'Danc3rS0nic2013', 'CrazeQueenLight26', 'St3althCircuitLion',
    'XxJellySkaterxX20095', 'XxBlizzardQueenBlaze', 'VenomBlaze75',
    'XxAsherGamerxX2002', 'NoahSparkly202020', 'OliviaBuild3rNinja',
    'LavaTurboRocket', 'XxRiderChaseBuilderx', 'KnightEcho96',
    'JulianStealthLi0n', 'XxTurb0BearxX64', 'FlashChillVortex2005',
    'EchoSkater201593', 'HannahChillGh0st2015', 'EzraTurb0Qu33n',
    'Min3rHawkZap2014', 'CharlotteThunderMax', 'MagicHaze56', 'DuckPuls392',
    'HunterSparkFury24', 'AceSlimeHunter', 'XxMasterVortexxX2005',
    'H3r0G0ld3n2016_YT', 'SavannahAlpha201398', 'IsaacGlitchRogue34',
    'NeonUltra202159', 'XXEMMA_FrostxX12', 'Al3xand3rStar202373', 'GraceDuck80',
    'LukeClaw201039', 'XxLightFuryxX20', 'WraithBlaz3Qu33n2016',
    'SparklyArrow2019_YT', 'HazeCraftUltra51', 'Dani3lMin3r2024', 'Bear_Duck84',
    'Gold3nFoxKnight', 'JamesCookie35', 'EliHawkVortex', 'Harp3rStormyFlash',
    'SparklyPrimalFire200', 'N0vaBeastRift2021', 'Circuit_Knight67',
    'NoraStealth202241', 'XxClawLavaVoidxX', 'M00nSlimeR0gue', 'Bear_Phoenix10',
    'XxHazelBuilderCraftx', 'EzraDawn201882', 'XxOliver_CraftxX54',
    'Xx_CyberGlitchGalaxy', 'Gabri3lEchoRift2006', 'N0raDarkDrift',
    'PowerFusionPrimal', 'Rid3rBlast56', 'ViperNeonWolf', 'Fusi0nN0vaCraft',
    'FlashMoonChase2022YT', 'OwenAquaStarry2019', 'Slim3Z3r02006_YT',
    'FlameMagicMaster', 'OrbitPhoenixUltra', 'XxFlameDuckHyperxX20',
    'Ava_AQUA19', 'GraceDragonBacon2012', 'CircuitDriftMast3r',
    'GabrielBlade201846', 'ClawPowerShadow', 'BlockLion200615',
    'St0rmy_Mast3r90', 'LUKECYBER2004_YT', 'Blad3Thund3r2006',
    'XxWolfPlayzxX2018', 'SebastianCyber68YT', 'Pr0PixelT0xic2022',
    'LeviMaster62', 'XxChl0e_PrimalxX87', 'JamesR0cketIce', 'CRAZE_Max17',
    'Nova_Slime2002', 'WraithSaber53', 'ProBlastNova2019', 'Min3rAlphaGiga',
    'ArrowCyb3rBuild3r200', 'XxDriftPrimalThunder', 'HUNTER_Master202216',
    'JulianBladeGolden201', 'XxBladeStreamxX2008', 'ChaseSilverBuilder20',
    'XxAid3nZ3r0xX2005', 'Gh0stCraftPix3l', 'XxRogu3Fir3xX2009',
    'JulianVip3rCooki3YT', 'SparklyLegend79', 'Turb0Circuit201317',
    'CyberLionAlpha', 'EzraDawnSlime28', 'Arrow_Mystic78', 'LukeDark65',
    'M00nPrismByte2002', 'XxMysticHeroxX2002', 'Aubr3y_Min3r35',
    'EzraQueenTurbo54', 'Xx_StarryBlazeDragon', 'EagleBac0n64',
    'XxPrimal_TurboxX2005', 'GamerHeroMystic2006', 'BearVenomBlade',
    'CharlotteSkater66YT', 'XxSkat3rRiftxX53', 'Her0Bear2016',
    'Fr0stBlizzardAc32013', 'JellyRogue201538', 'EliHunterRider2008',
    'KayleeBearShadow', 'IsaacDragonBeast', 'AmeliaCha0sCraft', 'ProVoid73',
    'SkyPixelatedJelly44', 'XxQu33nV0idxX77', 'Chl0e_Mystic202026',
    'XxZ3roPix3lBlockxXYT', 'GigaFusi0nC00kie', 'DawnStr3am38', 'Bac0nKingN30n',
    'Circuit_Alpha13', 'Turbo_FLASH97', 'PrismSilver201971',
    'LukeIceEcho2016YT', 'Pix3lPlayz2006', 'Build3r_F0x21', 'Thunder_Giga61',
    'VictoriaStormyFox', 'ScarlettCraze68', 'DanielTiger2009YT',
    'Rift_Wolf2015YT', 'XxHazelFrostxX2018', 'Ven0mFlickStealth',
    'Code_Lion201136', 'OwenZap201536', 'XxF0xBuilderxX2014',
    'LoganHawkDanc3r13', 'WillowWolfGolden2009', 'XxPulse_LightxX20206',
    'FoxKnightChase10', 'CART3R_Moon11', 'XxBeastZoomRiderxX',
    'XxPlayzRid3rStormxX', 'StarArrowMiner2017', 'XxSkat3rProxX2019',
    'AmeliaFlashArr0w', 'DuckSlime200650', 'MysticPrismCraft85', 'Ech0W0lf65',
    'HER0_Knight40', 'Xx_CircuitBaconSt3al', 'N0raBeast2012_YT',
    'S0phia_Magic64', 'XxOrbitPlayzxX2019', 'XxLukeGhostMagicxX20',
    'XxByte_CraftxX2024', 'Xx_CharlotteVoidStea', 'ChaseFuryBuilder2010',
    'XxLeviJellyKnightxX', 'ProInfernoEpic', 'P0wer_St0rm56',
    'RiderZeroSkater20181', 'Shad0w_Ph0enix2022', 'Mat3oBlastRift',
    'XxScarl3ttArrowChaos', 'JacksonChillShadow49', 'XxFlashZoomxX61',
    'GabrielMasterFlame_Y', 'DancerAlphaMaster', 'XxByt3_SkyxX2016',
    'SophiaClawLight2010', 'HeroMinerNinja2022', 'Turbo_Omega48',
    'ScarlettByte2015', 'Pow3rB3arFlash', 'ALPHA_V0id2016', 'Samu3lDawnH3ro',
    'HENRYGAMERSONIC_YT', 'XxStealthVenomxX_YT', 'XxChillMagicxX2021',
    'XxBr00klyn_Cyb3rxX16', 'ChillSonicTurbo', 'ZoomBuilderKing2008',
    'W0lf_Fury83', 'Rogue_Giga2011', 'DuckIce22', 'XxZoomPixelxX2023',
    'LeviNovaBlock97', 'FLICK_Craft2006', 'XxRil3yVoidAquaxX',
    'Charl0tteFireFusi0n', 'OrbitMagic202438', 'AuroraStarryPanda201',
    'MasonQueen200353', 'Cookie_Zap55', 'AlphaMasterBlastYT',
    'ProBlastL3g3nd2016', 'ChaseAlpha47_YT', 'CircuitViper83', 'ChillOrbitIc3',
    'JulianFoxQueen', 'Fire_Slime202123', 'B3arDawnGam3r', 'PowerGhostRider_YT',
    'Paisl3yShad0wFury202', 'DriftAqua83', 'OmegaZapSky33YT', 'Li0n_STAR2016',
    'XxOwenEaglexX69', 'XxChaseInfern0Circui', 'Rock3tNinjaZap',
    'XxSlim3Hyp3rStarxX', 'EaglePixelArrow_YT', 'ViperCrazeEcho',
    'XXHYPER_KnightxX2011', 'SophiaDuck91', 'DarkSab3r42', 'L3viPix3lat3d42',
    'Dani3lGold3n37', 'PixelatedPlayzLucky', 'Grac3AquaSab3r',
    'SkaterChillT0xicYT', 'St0rmyZ00mBlizzard70', 'CookieDawn93',
    'AddisonThunderShadow', 'PulseCookieSlime', 'XxVictoria_FROSTXX73',
    'Zer0WraithGlitch2023', 'Grace_Toxic93', 'Power_MOON2006YT', 'Ech0Night80',
    'ZapKingEagle', 'ThunderSlimeBear', 'AvaRogu3Night14',
    'XxViperRiftDuckxX57', 'RiderMagicVenom', 'XxDuckStarNovaxX',
    'BeastInferno68', 'XxMoonEchoxX2006', 'LucasUltraWolf',
    'EagleTurboSparkly200', 'GlitchLava66', 'Jaxon_H3RO200658', 'Nova_Vort3x86',
    'PlayzLuckyCrystal', 'PhoenixGigaEpic20236', 'ViperSt0rm2009',
    'TIGER_Aqua2009', 'JulianLegendPrimal20', 'Circuit_Orbit50',
    'XxIsaacBuilderxX56', 'XxW0lfDarkTurb0xX', 'XxGh0stStealthxX2021',
    'OliviaGlitch11', 'AuroraPlayzNeon', 'DancerRogue46', 'HunterPrism201160',
    'AuroraStarryClaw', 'Ev3lynDark49', 'XxAm3liaAlphaThund3r',
    'XxGigaTurboxX58', 'PixelatedMoon2002_YT', 'FlickSonic2005', 'M00n_R0gue12',
    'XxGraceZeroRiftxX200', 'MinerProHawk200462YT', 'N0AH_P0wer2016',
    'MysticMaster2021_YT', 'MagicEagleZ00m2023', 'IsaacMysticQueen2020',
    'Lucas_Glitch49', 'Toxic_Ic375', 'AsherDrift201089', 'Skater_Chaos2016',
    'Turbo_Skater201635', 'LunaPandaArrowYT', 'CyberLegendOrbit2017',
    'XxHazelToxicxX88', 'XxBearSparkLionxX75', 'NoahAce79',
    'XxStar_RiderxX2018', 'Grace_Slime48', 'Ph0enixLight94', 'GraceZap200475',
    'MASTER_Starry13', 'Cyb3rZapPix3lat3d200', 'DanielAlphaBlade',
    'Xx_Pix3lat3dDriftByt', 'AidenMasterRocket', 'CIRCUIT_Cooki32005',
    'Dani3lPh03nixAc32006', 'PhoenixCrystalByte20', 'ToxicZoomCyb3r2013',
    'L3viL3g3nd2006', 'RiderStarryHero_YT', 'AmeliaRiftRocket35',
    'BladeMaxGhostYT', 'Samu3lLucky62', 'JellyCircuitChaos200',
    'Ril3yBaconStar', 'BlastPhoenix201216', 'W0lfClaw41', 'KnightLionStealth',
    'BlastStormSilv3r', 'Am3liaCooki3Wraith', 'M00nDawn62', 'JackChase201886',
    'Bl0ckCraftEagle', 'XxSophiaCyberxX24', 'KnightHyp3rCooki3YT',
    'B3ar_Craz32010', 'EagleCookieIce2005', 'ChaseHero88',
    'HenryStormySparklyYT', 'XxAmeliaVoidGalaxyxX', 'Xx_HenryPrimalGalaxy',
    'HannahFusionThunder', 'G0lden_Ph0enix60', 'CraftBuild3rVoid',
    'VictoriaMasterInfern', 'Hunt3rDawnFr0st2002', 'XXHERO_FuryxX2009',
    'SkyRaven86', 'CrystalFireQueen85', 'XxEllieF0xxX2018', 'OwenPulse44',
    'SaberLuckyAce', 'Orbit_Legend68', 'StormRiderPixelated', 'ZeroLavaInferno',
    'Samu3lSkyPix3l2020', 'XxSkaterProFlamexX', 'XxKnight_ZapxX55',
    'Scarl3ttHawk51', 'Alpha_Ic3202066', 'MoonNight202288', 'BlastS0nic38',
    'EmmaBlaze69', 'AvaStream55', 'Levi_FOX76', 'Pixel_Sparkly81',
    'XxCraftIc3GhostxX', 'Li0nSparklyHaze', 'MOON_Magic93',
    'Xx_BeastStealthFlash', 'Daniel_Sky200976', 'Gold3nMoon28',
    'Mystic_Gold3n2024YT', 'LoganMoonThunder2012', 'PhoenixViperPro',
    'Fusion_Turbo60', 'ViperSilverVenom', 'Cyb3rStr3amDark2008',
    'Elli3ProSkat3r', 'XxDarkSt0rmxX26', 'XxPandaNe0nxX45', 'Samu3lBlock2005',
    'HunterV0id98', 'XxHeroAlphaJellyxX20', 'XxAuroraSparkxX2017',
    'Cyb3rHawkYT', 'SparkLava2017_YT', 'V0rtexBane2012', 'T0XIC_Ice2014',
    'C0de_VIPER2007', 'Cha0sEpicJelly', 'GamerZeroShadow', 'Fr0st_Byte39',
    'Void_GAM3R2015', 'Micha3lCraz395', 'Li0nG0ldenAqua', 'XxSlimeFuryMasterxX',
    'FuryPowerStarry', 'RiftStreamHero2005', 'SlimeRogueFire2012',
    'XxLunaIcexX61', 'Ven0m_Builder2006', 'Moon_Pho3nix2010', 'Pho3nixCooki311',
    'FlashTigerZoom', 'SkyProTurbo2023', 'ElijahSt0rm16', 'TurboBlast200512',
    'EmmaStarryStream', 'L0ganOrbit201915', 'XxJaxonSparklyBytexX',
    'WyattDawnFr0st', 'Z03St3alth_YT', 'Vort3xCrystalStarry',
    'EvelynHyperThunder25', 'XxSavannahKingSlim3x', 'Turbo_Byte61',
    'WillowCrystal201655', 'NovaChas32024', 'WilliamEch0Fire',
    'Bacon_Blast2006', 'Cyb3r_Fir390', 'AlphaStealthMoon', 'MagicWraith200593',
    'XxSaber_ViperxX2011', 'JacksonGhost44', 'FuryNightStar89',
    'Jacks0nLightV0id', 'HunterPulsePlayz2012', 'XxDani3lStormEagl3xX',
    'JacksonMagic85', 'LukeOmegaV0rtex2005', 'Viper_SHADOW59',
    'PulseStormHaze2017', 'XxAm3liaSilv3rxXYT'
}
local RECEIVER_LIST = {
    'LucasHawk201424', 'RileyGamer200775', 'GlitchGold3nChill',
    'ChasePlayzSonic2023', 'CharlotteMagicRogue2', 'Rogu3_Star52',
    'Phoenix_Turbo200378', 'HazeJellyPixel2005', 'Byte_C0DE2021',
    'NeonMaxInferno82', 'XxP0werPandaxX2014', 'Min3rZ3r0Sky',
    'GoldenEpicDawn2002', 'NightGoldenBlizzard', 'JaxonOmegaIce',
    'XxChaseEaglexX84', 'Ac3_Epic2019', 'Blad3Orbit2010', 'Cart3rDarkFury38',
    'Gold3nPow3rSparkly', 'JaydenViperBuilder76', 'CyberCircuit201687',
    'N0vaFireByte', 'XxQu33n_PlayzxX2018', 'EpicMaxStormy2016',
    'Riley_Saber56YT', 'DanielStarWolf', 'Ethan_Turb072', 'CrazeSkyWraith2009',
    'EagleQueenKing2020_Y', 'J3llyAlphaL3g3nd', 'Blast_Turbo80',
    'FlickBuilderAce', 'DuckVenom30', 'Rav3n_FURY2008', 'ZapDark22',
    'FusionChaos200388', 'ZeroShadow61', 'StreamRogue42', 'DawnFlickClaw',
    'SkyNinjaStar2021', 'Al3xand3r_Epic201866', 'XxVict0riaDarkBytexX',
    'AddisonEagl3Blad3201', 'Vip3rSkyGold3n2017', 'HunterBlizzardHaze71',
    'GhostEagl328', 'Ech0SaberHawk', 'DriftFusi0n62', 'Zayd3nGhost13',
    'ZapRogueKnight2005', 'XxEagle_Drag0nxX2022', 'LucasGamerSlime',
    'XxMiaAquaGalaxyxX', 'BladeBacon2019', 'Gabri3lFlickOrbit200',
    'Flash_BACON2004', 'XxStarryVenomxX_YT', 'ChaseFlame201079',
    'XxGabrielGamerStream', 'BlockQueenPrimal', 'SavannahLionPro2024'
}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
