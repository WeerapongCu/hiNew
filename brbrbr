-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'XxEthan_HeroxX2009', 'GamerW0lfEch0', 'L3VI_Fox2019', 'Kayl33Pho3nix201331', 'F0xTurb0Fr0st',
                     'BlockChaosHunter46', 'DuckEpic44', 'CraftLegendStream201', 'Cod3Flam32017YT', 'Her0Thunder201616',
                     'Xx_Build3rGold3nEpic', 'WraithBuilderRift200', 'C00kieHawkClaw', 'XxLayla_MaxxX2004',
                     'XxZoeProxX68', 'BlastEch0Aqua', 'XxChloeBeastxX92', 'SaberArrowCraft', 'Ice_STARRY87',
                     'StormyCraftSilver201', 'StarLightInferno2022', 'MagicInf3rno56', 'HarperTiger32YT',
                     'NightStealthV0id', 'SparklyDrift52', 'InfernoRiftGalaxy65', 'St3althRock3tCircuit',
                     'Gam3rMin3rThund3r200', 'MateoAce77', 'Drift_MAGIC2013', 'BeastCodeStream', 'PhoenixRogueVoid',
                     'GigaThunderKing2023', 'BaneSkaterGh0st2014', 'VortexGalaxyAlpha31', 'XxAlphaStarxX2016',
                     'XxOliv3rTig3rWraithx', 'HawkFlashRogue201262', 'XXISAAC_ZeroxX2021', 'AquaC00ki3Arr0w',
                     'St3althFir32018', 'XxAubreyPrimalxX2012', 'DragonGold3n2003', 'JaxonJellyLion42',
                     'Jackson_GIGA78', 'BearEch0Blade2014', 'BrooklynnBeastZero20', 'GraceToxicNight',
                     'Blaz3WraithCyb3r', 'Harp3rPow3rStormy', 'MasterZoomHunter', 'Luk3Byt3Blad3',
                     'XxTurboStormyRiderxX', 'FoxEchoThunder', 'XxInf3rnoAquaTig3rxX', 'ZoeZoomWraith',
                     'Ellie_G0lden2016', 'XxTurboVoidxX47', 'DawnKingDancer2020', 'FLICK_Code', 'DuckBlade28',
                     'XxSamuelJellyNightxX', 'Fusi0nSkyN0va2011', 'Thund3rPuls3Wraith', 'DancerFury48',
                     'Xx_BaconStealthRaven', 'Al3xand3rEpicAlpha25', 'Prism_Frost2004', 'EchoPhoenixEagle',
                     'MoonBuilderSonic', 'ThunderKing201714', 'HeroSkyPrimalYT', 'KnightNovaBear',
                     'XxMichaelLionFlashxX', 'AlphaThunder86', 'JackCircuitEpic', 'XxAvaFuryRiftxX2024',
                     'XxZoomStarNovaxX', 'XxStormInfernoxX2016', 'JackB3astLucky', 'XxGraysonInfernoxX16',
                     'XxBear_BytexX201790', 'XxMasterDarkxX46', 'HyperBuilderFlame48', 'PixelatedPandaTiger2',
                     'Al3xand3r_Inf3rn085', 'OwenAquaStorm', 'SavannahEch0Flash', 'XxJulian_CLAWXX97',
                     'GigaPowerFusion', 'XxArr0w_MAXXX65', 'CircuitBlastSab3r201', 'XxJaxonSkat3rxX2017',
                     'Hyp3rNovaSlim3', 'ElijahAquaHer0_YT', 'Harp3rRift202381', 'XxHaz3lArrowCod3xX',
                     'Xx_Kayl33CircuitFlam', 'Rift_Silver86', 'VoidStarryBlast', 'Lava_M00n2007', 'Hunt3rOrbitTig3rYT',
                     'Jam3sCod3Glitch2009', 'XxArr0wS0nicxX_YT', 'Aur0raHazeGalaxy', 'HyperShad0w2006',
                     'CarterShad0wHer02002', 'GracePlayzMax', 'AidenMaxSlime', 'GraceBuilder30', 'XxMoonGhostxX2004',
                     'FoxBuilder201648', 'SavannahLuckySonic62', 'ChloeWolf76', 'RogueKingOrbit', 'Stealth_Alpha98',
                     'DanielSparkBane2009Y', 'XxPrismCod3xX2009', 'AddisonEpic25', 'Golden_BYTE2023', 'MoonAqua38',
                     'Emma_Eagle55', 'GRAYSON_Moon2005', 'Pix3lat3dVoid64', 'Arr0wEpic2013', 'PrismBladeCircuit',
                     'JulianDrift60', 'XxEmmaBlizzardStormx', 'XxSab3rFlam3xXYT', 'XxHunterBlockxX2022',
                     'NoraChillVortex', 'XxJacksonGalaxyPanda', 'MoonJellyGiga2024', 'Bac0nCircuitV0id2024',
                     'ClawMaxHunter2013', 'AmeliaLegend20', 'EllaDuckFrost', 'Ven0m_Li0n2024', 'Blaz3OrbitGold3nYT',
                     'Gam3rNightBacon', 'Nora_Craft39', 'TurboGolden2020YT', 'Inf3rnoSlim32009', 'XxGamerIcePrimalxX',
                     'ZaydenBlazeByte', 'M00nOrbitStarry', 'NinjaPrimal59', 'EpicG0ldenFlash', 'V0idThunder61',
                     'CraftNinja2019_YT', 'GigaHunterCha0s', 'KingMaxFox2021', 'NoraIc32006', 'Mia_Pulse2023',
                     'PixelFlameHawk2023', 'XxZaydenFusi0nSt0rmy', 'LightG0ldenHyper2023', 'BrooklynnSlim3Turbo2',
                     'OliviaAquaStar2005', 'XxL3g3ndGh0stxX', 'XxMiaKnightxX2017', 'Luke_Void201797', 'EllaDawnInf3rno',
                     'Puls3Blad32010', 'Hyp3rZ3ro49YT', 'EzraTig3rDawn', 'SKAT3R_Fox2012', 'NightFrostDragon2022',
                     'Xx_BlizzardStarNinja', 'Flame_RAVEN201477', 'LiamBlade34', 'Xx_ArrowBuild3rMin3r', 'EliPix3l87',
                     'Jacks0nH3r0Build3r', 'BrooklynMaxLion2005', 'MateoOmegaGolden', 'Abigail_ICE87',
                     'SavannahMast3rHawk16', 'GamerPulseSlime2022', 'Gold3nDarkHunt3r', 'AbigailSlimeHer0',
                     'OwenStreamAqua', 'CarterF0xFlame2002', 'WillowStealthRider20', 'LeviPixelated24', 'Knight_Rift88',
                     'LunaOmega67', 'QueenBlast200829', 'SebastianKnightPh0en', 'Al3xand3rDrift80', 'Qu33n_Min3r2021',
                     'EchoStormyEpic12', 'SkaterBlazeBac0n', 'Duck_Galaxy42', 'BuilderPanda78', 'AriaIceHer0',
                     'H3nryH3ro26', 'EzraNeon90', 'XxPixelUltraFrostxX', 'SavannahVoid20', 'V3nomLava2010',
                     'Turb0_V0rt3x54', 'Inf3rnoPlayz24', 'Cha0sFury2022', 'HenryR0cket97', 'Elli3Cooki3Duck',
                     'Mas0nPr0_YT', 'EllaGam3rByt32008', 'JacksonThund3rCircui', 'SABER_Flick65', 'RiderCrystal202188',
                     'ZoeZeroBlast', 'AidenW0lfRider', 'XxGlitchStealthPlayz', 'GalaxyChill21', 'FlashBlastJ3lly',
                     'HeroDarkEcho45', 'Olivia_Hyper36', 'XxBlazeZoomChaosxX', 'OliviaSonicNight', 'H3r0Build3r85',
                     'F0xOmegaFlash', 'St0rmyFr0stOm3ga20', 'XxSkyPandaxX2009', 'Xx_CrystalJ3llyNight', 'UltraCooki386',
                     'B3astH3ro26', 'NINJASHADOWST3ALTH_Y', 'Gold3nSkyMin3r26', 'EchoN3onBlizzard',
                     'ThunderProBlizzard', 'J3llyUltra2020', 'BlastEpicR0ck3t2011', 'AvaViperNova', 'RiftV0idFusi0n',
                     'Xx_MagicBuilderLight', 'WilliamLegendZero', 'FlashGalaxyPlayz', 'AddisonAlpha46',
                     'HazelCraft200479', 'NoraWraith48', 'Grac3DriftDawn2016', 'Pix3lat3dRid3rB3ar',
                     'DarkSparklyBuild3r', 'TurboSkyBan3', 'XxHunterGigaxX46', 'Xx_LaylaDragonPixela',
                     'XxOliverMagicFoxxX', 'Puls3Pix3lEch0200221', 'Mystic_Blad339', 'HazePr0R0gue',
                     'StarryGoldenDrift', 'XxZ0e_PIXELXX2020', 'Jacks0nSt0rm69', 'ChaosAlphaSparkly',
                     'Aubr3yCooki32018_YT', 'Ghost_Alpha2021YT', 'W0lfN30nEpic', 'SPARK_Blaz3YT',
                     'Xx_PowerArrowCircuit', 'Ac3Orbit24', 'BeastSaberOrbit2020', 'XxRiftT0xicxX201457',
                     'XxCyberClawxX43', 'XxNovaChaosxX2020', 'J3llyRift54', 'Min3rOrbitPrism', 'AbigailG0lden2011',
                     'Elli3Blaz333', 'Harp3rByt374', 'TurboJelly95', 'ThunderKnightRift', 'XxTurboToxicCyberxX',
                     'VortexRocketRift38', 'StreamHer0Ice', 'XxPandaCyberxX200963', 'Xx_WilliamStormyHype',
                     'Zo3Fox2010', 'Ne0nRift2003', 'FlashBlastIce', 'WyattLuckyRogue', 'TigerGhostSaber65',
                     'Evelyn_STORMY2021', 'MiaInf3rn0Light', 'HannahFuryTurbo2004', 'Zo3Chill2011',
                     'StealthPhoenixRift58', 'Glitch_COOKIE99', 'Moon_Pixel68', 'ZapGalaxyZ3ro201167',
                     'Elli3Panda2011YT', 'XxPulseBlizzardLionx', 'KnightDragonWolf2012', 'SamuelHunterTurb0',
                     'XxRocketGhostTigerxX', 'XXMIA_RavenxX2017', 'MateoHazeGhost', 'VictoriaPhoenixMagic',
                     'XxLavaPandaSilverxX2', 'VictoriaDancerStorm', 'HunterPower62', 'ViperRiftSpark',
                     'BytePandaNight201556', 'BrooklynZapStorm2002', 'DragonCircuit32', 'XxZaydenChillVoidxX',
                     'MinerLightFusi0n', 'Oliver_STORMY55', 'XxSophiaZapxX2018', 'KayleeWolfSpark', 'StreamClawOrbit61',
                     'BaneR0cket34', 'Spark_Rider90', 'KingBuilderEagle2007', 'HawkOrbitNight2022', 'BaneZapGalaxy2010',
                     'Jacks0n_Flame64', 'LuckyVenomCraze2004', 'XxStormDriftxX2021', 'Inf3rnoZoom11',
                     'PHO3NIX_Wolf2003', 'XxCarterBeastStormxX', 'Arr0wInf3rn043', 'EvelynVen0m2019',
                     'L0ganR0cketC00kie', 'OrbitFusionHawk2016', 'ThunderCraze39', 'UltraMax201818',
                     'Skat3rSt0rmy201477', 'DancerMoon62', 'OmegaCircuit2018_YT', 'PrismNinjaFox', 'FoxFusionCrystal',
                     'Xx_BR00KLYNNLAVAW0LF', 'Michael_Hawk201436', 'NoahCod3Dragon', 'KingPh0enixGamer',
                     'GamerLionSonic', 'PaisleyNinjaCookie', 'AbigailStreamIce', 'BuilderHer013', 'JackFlashTig3r',
                     'AidenC0de2002', 'L3viEpicLight2019', 'BlizzardJ3lly2011', 'Hannah_Flame73', 'Dani3lGhostMast3r',
                     'WillowHaz3200619', 'LucasZero201655', 'JulianDancer31', 'MiaAquaStarry201576', 'PrismSkaterVenom',
                     'XXDARK_GhostxX2017', 'XxSonic_EaglexX74', 'FlashNightHeroYT', 'SophiaStormyPulse',
                     'Charlott3Mast3r78', 'Cha0sVen0m201617', 'NeonPulseBuilder2008', 'Hunter_Hawk85', 'LukePr0201086',
                     'StormLucky201199', 'GhostToxicBane2014', 'JaxonWolfCraze2007', 'Playz_Blast25',
                     'FlashTigerHaze2024', 'Zer0R0cketEch0', 'L3viEagl32018', 'OrbitAquaIce2019',
                     'PlayzCircuitPixel200', 'EvelynLucky2023', 'Ella_AC377', 'T0xicPandaEagle', 'ElijahTig3r2006',
                     'VictoriaHero21', 'XXRIFT_DancerxX82', 'XxNoahSonicxX64', 'BuilderBaneCircuit20',
                     'XxPhoenixOrbitxX2010', 'ProZap59', 'XxHenry_DragonxX2016', 'FlickPowerStorm', 'MiaOrbitZap200969',
                     'Pix3lat3dTig3r2019', 'Ril3yKnight2019', 'MasterWolfLava82', 'Cart3r_Glitch2006',
                     'DanielStormyOmega', 'HyperChase59', 'XxStarGamerxX2003', 'Z00mDancerSparkly',
                     'XxZapNinjaDragonxX20', 'GamerArrowZoom54', 'HeroZapNova75', 'Lucas_Code79', 'SavannahSky202027',
                     'KingPhoenix201992', 'XxJam3s_LionxX2010', 'XxIsab3llaPr0xX2006', 'BlizzardViperR0gue20',
                     'GABRIELBUILDERMOON_Y', 'Build3rStormyH3ro202', 'GamerSparkRocket', 'BuilderFrostLion',
                     'XxPow3rFlam3xXYT', 'Light_Lucky202363', 'XxUltraLightxX2019', 'StarrySlimeTurbo2017',
                     'AddisonPixelated43', 'St0rmy_King31', 'AceFuryLegend2021', 'Zoom_Hyper72', 'AubreyChaosFlame',
                     'King_Bane10', 'CodeNovaNeon', 'HazeViperSt0rmy', 'NightV3n0m2016', 'ToxicLionEagle2014',
                     'Chlo3_Shadow25', 'LaylaZapMagic', 'XxS3bastianMagicxX_Y', 'Ghost_Blaze68', 'LavaGlitchHyper',
                     'LegendAquaRaven2014', 'Slim3StormyRift2010', 'Mast3rLavaFlam32022', 'MagicEchoSilver',
                     'C00kieEch0Blast2010', 'M00nKingCha0s', 'XxClawAlphaQueenxX20', 'XxAidenPixelSonicxX2',
                     'BlizzardGalaxyLava', 'LukeNova63', 'IsabellaMysticCode', 'PrimalRiftB3ar2017',
                     'XxGamerZapZ00mxXYT', 'XXSTAR_Fusi0nxX2004', 'Hawk_Cyb3r2009', 'ChloeStormy2005',
                     'NinjaNe0nPixel2011', 'Jam3sBlaz32009YT', 'XxLunaVen0mxX2014', 'EmmaDuckStealth2005',
                     'GigaOmegaBacon', 'GoldenLava43_YT', 'SkyMagicRift94', 'Viper_PRO82', 'EliGamerRaven',
                     'Max_Flame86', 'StarryLegendLava', 'SkyFusi0n51', 'ByteChillGolden25', 'XxFlashHyperxX74',
                     'XxDragonBlastChaosxX', 'XxBr00klynn_LavaxX62', 'StealthCrazeAqua', 'LavaMinerNinja71',
                     'HeroDriftHaze2018', 'Fire_Duck2003', 'Giga_Blade18', 'XxDarkFusionSlimexX', 'SONIC_Toxic39',
                     'PixelSparklyZap', 'Li0n_V0rtex99', 'LegendF0x2024YT', 'V0RTEX_Sparkly2015', 'Power_Circuit2021',
                     'LukeShad0w2012YT', 'ArrowStarryNova', 'BrooklynnBeastMaster', 'XxLiamRogueFlamexX47',
                     'LucasThunderCraze', 'TurboHyp3r2023', 'XxAubreySkaterOmegax', 'PrismWolfHawk',
                     'Charlott3DriftFir3', 'VictoriaUltraCraft20', 'AlphaLavaSilver', 'StormVenomVoid42',
                     'CircuitFire49', 'XxUltraDawnxX37', 'ZapSlime202248', 'DuckFury201835', 'StreamMiner78',
                     'Om3gaDriftFlam319', 'MinerNova84', 'CarterJellyMiner2007', 'BlockCraz3Arrow20YT',
                     'RileyNovaWraith', 'Saber_Legend2010', 'InfernoNeonCraze2024', 'Xx_ElliePixelPhoenix',
                     'M00nFusi0nMiner', 'AlphaRogueNinja20233', 'XxLavaBlizzardDawnxX', 'Jayd3nRock3t2008',
                     'VOID_Golden2020', 'RiftViperFox', 'Grac3Tig3rNova', 'NoraViperNight57', 'Ban3Craz3P0w3r',
                     'XxCircuitBaconRock3t', 'Xx_Mast3rCyb3rCrysta', 'DanielZoom73', 'GigaBytePhoenix',
                     'BeastHawk2023YT', 'XxCircuitVortexShado', 'WillowNinja200273', 'OmegaChaseSonic',
                     'SamuelMysticStream10', 'JACKSON_Claw2013', 'CraftCrazeInferno', 'Charlott3Drift78',
                     'KAYLEE_Magic86', 'Knight_Hyp3r67', 'LegendBuilder18', 'Sky_Z3RO40', 'KnightPandaMax2020',
                     'Z0ePr055_YT', 'XxSab3r_BlastxX2006Y', 'Xx_ArrowGold3nCrysta', 'BaneSilverP0wer2024',
                     'HarperJellyHyper2011', 'MichaelDarkDrift', 'SkyHeroAlpha', 'XxBladeStarryW0lfxX',
                     'Harp3rPix3lat3dCraz3', 'LucasBacon201698', 'AriaEagle33', 'CrystalPlayz2024_YT', 'FoxHunt3rLucky',
                     'EpicOrbitHero2015', 'PlayzAceTurb0', 'LeviBladeNe0n48', 'Xx_FusionSilverViper',
                     'PulseDriftNight2015', 'CarterEch0200898', 'AidenRift2012YT', 'PlayzGiga2015_YT',
                     'XxHazeRavenxX44', 'OliviaUltra202187', 'AuroraSkaterZero2018', 'Alexander_SHADOW46',
                     'XxOliv3rTurboSonicxX', 'Lava_Inf3rno2023', 'VoidLightFusion_YT', 'NovaKnightV3nom', 'NovaRav3n83',
                     'Kayl33PlayzRav3n', 'L0GAN_Ice2015', 'AquaGam3r44', 'Al3xand3rRock3tRogu3', 'Lion_Hyper21',
                     'LavaCyb3r56', 'OrbitLionChaos37', 'XxOwen_SaberxXYT', 'LaylaGlitchPanda2021',
                     'XxTurb0Silv3rxX2019', 'XxGraysonKnightBlock', 'LegendPrism200813', 'EzraPrism50', 'Ace_VORTEX58',
                     'HunterRiderDawn35', 'CrazeWolf2008YT', 'ToxicNovaWolf', 'CyberLuckyStorm2004',
                     'AidenPhoenix2017_YT', 'ChaseFox202070', 'Fusi0nSilv3rYT', 'DriftBuild3rVoid', 'LavaPanda200332',
                     'HazePrimalBuilderYT', 'DawnBearIce2017', 'HyperDawnRift', 'KingFusionEagle2015',
                     'HannahStreamMoon_YT', 'GraysonPix3lNight201', 'InfernoPixel19', 'ThunderShad0w2022',
                     'S0phia_Skater2021', 'WillowSonicNinja2016', 'WraithTurb0Giga', 'Haze_Chill48',
                     'Pix3lat3dPrimalCraft', 'SavannahBaneVoid2021', 'JaydenClaw201431', 'FUSI0N_Flash56',
                     'CookieLightPower56', 'SilverDuckPanda', 'DriftVip3rStormy2016', 'ChaseNinja79',
                     'MichaelStormy201624', 'JellyZoom77', 'AddisonVenomGalaxy', 'HazelBlade201335',
                     'XxNovaGoldenLuckyxX', 'King_Pix3lat3d2004', 'RileyFrost18', 'Savannah_Code37',
                     'EllaShad0wBeast2021', 'PhoenixMaxChase', 'CraftRocketPlayz2023', 'EliPix3lat3dEcho',
                     'IceFuryChaos', 'XxFlickTurboxX14', 'Inf3rnoGold3n201379', 'GhostRiftStorm2003',
                     'XxGraceSaberxX2014', 'J3llyCircuit70', 'StormBlizzard2002_YT', 'ChloeBlizzardStream',
                     'FuryPixelatedSilver2', 'LionSilverGiga', 'AsherGlitch2023_YT', 'FrostRiftToxic2015',
                     'Lava_LEGEND2017YT', 'KayleeBlazeMystic', 'XxChillLionCookiexX', 'Thund3r_V0rt3x201986',
                     'MagicBladeMystic', 'Flam3_Craz32016', 'XxJaxon_DriftxX2020', 'IceAceNight83',
                     'XxAlexanderBlastPowe', 'Grac3BlastBuild3r', 'ZoeMystic200881', 'XxEcho_Vip3rxX201620',
                     'SilverSparklyBear', 'AvaHunterPrism', 'MichaelBlaze2021YT', 'St3althVoid63', 'AddisonMiner201830',
                     'XxSlimeUltraxX33', 'PrimalByt3Orbit', 'N0ra_Master2017', 'Skater_Arrow30', 'XxKingCrystalSparkxX',
                     'Build3rBlaz312', 'NoahGamer2016_YT', 'XxGamerMagicxX2022', 'Zo3Byt3Prism', 'KnightChaosOrbit',
                     'MysticZ3roCod3', 'Arr0wCha0sDancer2012', 'GhostBaconLion', 'FLAME_Pixel201565',
                     'EliMinerGalaxy202260', 'AquaStormMoon', 'LiamBearSaber', 'Nora_TURBO', 'XxClawSaberxX2017',
                     'LoganOrbitVortex', 'GABRIEL_Moon2010', 'Oliver_Pixelated56', 'H3nryMagic2016_YT', 'CrazeLegend32',
                     'SonicShadowGlitch', 'RocketDancerVenom202', 'STEALTH_Fox2016', 'Aurora_Haz32003', 'Vort3x_Star52',
                     'N3on_SLIM3', 'DuckEcho51', 'SparkAce59', 'EllaRogueKnight', 'MoonOmega96', 'XxGoldenWolfMoonxX20',
                     'XXPAISLEYTIGERARR0WX', 'SlimeBearCircuit', 'MichaelBeastAce2006', 'Xx_ThunderC00kieGh0s',
                     'Pho3nixDanc3r2014YT', 'FrostRiftHaze2009', 'Ech0P0werSpark', 'Asher_Max11', 'Aurora_Wolf98',
                     'ElijahAlphaZ00m', 'S0phiaC0deG0lden', 'Her0LightFlame200383', 'BrooklynCircuitSonic',
                     'CraftV0rt3x200867', 'JaxonFuryFlam32012', 'DarkClawDragonYT', 'EllieThunder14',
                     'JamesBuilder83_YT', 'MiaGamerShadow', 'GlitchVortexPhoenix9', 'Jelly_Bl0ck2020',
                     'XxPhoenixSlimexX2018', 'Fury_Blast46', 'DawnPixelatedPulse20', 'T0xic_Hawk2023',
                     'SlimeBlastInferno', 'Cooki3Vort3x30', 'OmegaClaw2020', 'HyperFlick2011', 'OliverRocket200617',
                     'TigerCrazeLight2008', 'XxSaberShadowxX2023', 'Kayl33Puls318', 'EagleBuilder11', 'VenomDuck68',
                     'JackStarryBlade', 'XxNightPandaLegendxX', 'GabrielSt0rm2006', 'EliDarkChaos88',
                     'Haileelnikn01885', 'Sherbggfq37125', 'Sandieagjgs75436', 'Abbyeioppk59630', 'Clorispfqvr74111',
                     'Trixioxrdi28190', 'Lexietirhp08449', 'Geniaaioci49171', 'Orallegkbxj98195', 'Brinyqegzv11444',
                     'Jankatwoah18339', 'Fredftdxc76466', 'Linneaavyjb43522', 'Danicelgjag60588', 'Franniploux78454',
                     'Imeldatznci76127', 'Mandygyghj18113', 'Onidapmbyx08426', 'Shaynedhvmk81482', 'Lauridzztv56152',
                     'Starzqafe17572', 'Wynnyqgpru65726', 'Odessantkjy00263', 'Grierxfjms30265', 'Debeeweyjw53596',
                     'Genniejcfiy40307', 'Nikehqudt59543', 'Noemitdvlu45437', 'Marneymsjfk81289', 'Farrarehda51542',
                     'Devandkkfn57180', 'Lynnetjxtcg13974', 'Tanyaukbut51095', 'Velmavcrid41625', 'Dedrakrlwe19295',
                     'Denysepunib43269', 'Kivaogd88213', 'Denycclpd81549', 'Dolleyxnwpv11318', 'Abbeyxtbhm94867',
                     'WilliamToxicHero', 'B3arThund3r2004', 'Cart3rZ00m2014_YT', 'JaydenTurboPulse28',
                     'MasterCodeGiga2011', 'R0gue_Viper2020', 'StarMax201992_YT', 'ElijahAce202495',
                     'XxMiaBuilderBeastxX', 'LoganAc3King', 'XxZ00m_ST0RMXX2015', 'Xx_AlexanderStormBui',
                     'FoxPandaStormy', 'AubreyZapNinja', 'Xx_ShadowSparklyStar', 'AmeliaEagle99', 'PixelatedMasterEpic',
                     'SamuelDrift48', 'Viper_Raven78', 'FrostFir3Wraith2013', 'EvelynZeroAqua', 'XxDawnV0idZ3r0xX',
                     'AvaChill29', 'LuckyF0x97', 'HazeIceVoid2013', 'Block_Stealth2010', 'JaydenLionSparkly',
                     'Primal_Crystal202287', 'JaydenStarAlpha2011', 'AuroraSparkFlick2012', 'JulianPixelStream',
                     'XxSparkStarxX2015', 'XxAriaStormOrbitxX', 'LightSkyBacon', 'SKATER_Pixel78YT', 'FUSION_Hero32',
                     'XxFlash_ROCKETXX68', 'Magic_Build3r61', 'LiamBladeCode50', 'XxLuckyRiftRiderxX',
                     'Luna_AQUA2006YT', 'Kaylee_Blast2018YT', 'FURY_Puls32021', 'EgyptBearSore', 'BearKingHelpful',
                     'JellyStealInexpensiv', 'MatchBegotMotionless', 'LuckyFurnitureSwum', 'MysteriousMonkeySwim',
                     'RoseLaidCheerful', 'OrangeThinkEasy', 'ElatedLighterSwung', 'MushyFurnitureBegan',
                     'TrainWereCharming', 'SweptGuitarSmiling', 'CrowdBroughtDefiant', 'SillyChurchBuilt',
                     'GhostSwornSmiling', 'AshamedCandleTell', 'DriveEgyptNasty', 'SuperNotebookLay', 'CalmOceanBear',
                     'SpotlessHelicopterBr', 'AdorableFranceLaid', 'HiddenWindowCrowded', 'SweepRocketCourageou',
                     'TalentedRaincoatFall', 'StankHelicopterAsham', 'GrievingOceanGrind', 'BloodyWindowBreed',
                     'CuriousChurchArisen', 'AnnoyingLizardDid', 'EyeBeganGlamorous', 'HearOxygenBad', 'HomelyWireBuy',
                     'PreciousDressStink', 'SworeCrayonAlert', 'DaughterStankSpotles', 'BreedQueenPanicky',
                     'HaveCrowdPoor', 'BuiltLondonFriendly', 'ZebraKneelAnxious', 'OpenAnimalBeat',
                     'DweltFamilyAgreeable', 'HeardEveningExcited', 'AgreeableNightBegun', 'Mat3o_STR3AM2005',
                     'InfernoRogueCookie20', 'Ethan_Hyper2016YT', 'RiftChase81', 'Logan_MASTER200345',
                     'AvaToxicOrbit_YT', 'AvaGlitch28', 'XxByteRiftStreamxX', 'H3nry_Hawk2007', 'AquaVoidTiger2024',
                     'HideLibraryCheerful', 'HyperOmegaEpic', 'JackalHeldGentle', 'HungryCrayonFought',
                     'EliShadowCookie2005', 'HitOysterNaughty', 'LondonHaveJoyous', 'UltraBaconSpark', 'MasonRiftB3ar',
                     'FireCookieNight2017', 'CircuitFireSpark2015', 'XxSlimeBytexX2004', 'StarBlastLion2013',
                     'CombativeScooterSwee', 'ShampooDrankAnxious', 'LionFedEnthusiastic', 'ExpensiveInsuranceSt',
                     'Spark_Mast3r56', 'MysticSkyCyber2020', 'HeroPowerCrystal2016', 'Harper_Giga57',
                     'Bl0ckHyperSilver', 'StruckNeedleOutstand', 'SwungOceanBetter', 'RussiaBendCruel',
                     'AlertHelmetFought', 'DrivenChinaSelfish', 'SweptTentAttractive', 'SwungOceanStrange',
                     'SweptLunchFunny', 'HungOrangeGrumpy', 'LeatherStealUnusual', 'ManchesterHurtDistin',
                     'GrowGoldThoughtless', 'CandleThoughtFilthy', 'YachtHeardCondemned', 'XxBrooklynnMaxTurbox',
                     'GraysonLight2002_YT', 'GloriousHairAwoken', 'RainbowSweepGrotesqu', 'UnusualTelevisionSwa',
                     'TelephoneBringSore', 'CartoonDroveDelightf', 'BurntDaughterCondemn', 'TentBornStupid',
                     'InnocentOilKnelt', 'StoleCrowdHomeless', 'NiceNeedleSworn', 'FeelDeathBewildered',
                     'DogTearAnnoying', 'DeterminedRiverStole', 'FeedDiamondWitty', 'ArisenAnswerBrave',
                     'RocketStickCrazy', 'HappyCandleSworn', 'BlueNotebookStrive', 'BeganKangarooVivacio',
                     'ObedientRocketTell', 'MysteriousBeardTeach', 'AwakeBreakfastTense', 'EncouragingNeedleAbi',
                     'ToreDreamLovely', 'ScaryPortugalBrought', 'BroughtMorningRich', 'BranchStuckCharming',
                     'WallSwearHappy', 'DweltDaughterNaughty', 'MagazineSwingAgreeab', 'FallZebraCruel',
                     'AnnoyedQueenGrown', 'HungLionPoised', 'BurnGrassLong', 'CartoonBendBlushing', 'BreedEveningDizzy',
                     'HilariousDogSwam', 'AwakeYakUpset', 'ElegantEngineStrive', 'TelevisionFoughtOutr',
                     'HearElephantRich', 'KeepEngineBrainy', 'GorgeousRoomHidden'}
local RECEIVER_LIST = {'ChloeZapThunder', 'Will0wMaster68', 'LightFlam32002', 'DarkPhoenixRider2003',
                       'SkyBaneKnight2023', 'XxLavaBuilderThunder', 'AceLionPro', 'Light_Lava2002', 'Vip3rSab3rPix3l',
                       'Pixel_Pulse84', 'Vort3xZapStar', 'Fire_F0x2010', 'PulseNe0n39', 'XxAddisonCrazePrimal',
                       'Ella_Knight45', 'XxAur0raZapxX2008', 'GalaxySonicKnight201', 'XXSTEALTHBLADEMOONXX',
                       'SaberClawHunterYT', 'Craze_Rocket18', 'N0vaCircuitZer0', 'HunterEpicGalaxy_YT', 'EliByt3ZoomYT',
                       'CodeCircuit91', 'XxT0xicRav3nxX', 'Skat3rZapHyp3r', 'KingByt392', 'Cod3Night2003',
                       'JackGigaSky83', 'BeastTurb096', 'GamerJellyDragon87', 'RileyMinerOmega', 'BrooklynGalaxySilv3r',
                       'PlayzRocket34', 'XxC0d3Z3r0xX', 'JaydenAceBuilder2002', 'EyeHurtUpset', 'InsectDoClever',
                       'LavaHawkF0x', 'Thund3r_St0rmy2003', 'ManchesterFoughtFrai', 'StunkWhaleBrainy'}


-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
