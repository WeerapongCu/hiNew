-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'XxZ3roB3astxX2015', 'StormGamerPulseYT', 'BeastC0de25', 'XxScarlettByteDriftx', 'L3viChaosGiga',
                     'SebastianBacon17YT', 'Zo3Shadow201648', 'TigerV0rtexSaber', 'Bear_Shadow87',
                     'GoldenShadowBear2009', 'Ne0nClawC00kie_YT', 'Magic_ZERO2006', 'DarkGamerRift2003',
                     'CircuitBearBlade', 'XxVortexToxicxX86', 'XxLegendPhoenixSteal', 'Aubrey_STAR44',
                     'XxRiftHunt3rHaz3xX', 'B3arPho3nixSt3alth', 'CookieToxic48', 'Str3am_Circuit201689',
                     'XxJaydenHeroxX2019', 'SparkMaxTig3r33', 'AvaPix3lat3dFlick200', 'SilverSparklySonic',
                     'GoldenFoxPhoenix', 'XxGh0stHer0xX2012', 'XxLuckyLionBlad3xX20', 'CircuitPho3nixB3ast',
                     'RileyLightVenom2022', 'Xx_BlastBlizzardJell', 'XXHAZE_BanexX2021', 'XxRiftTurboNinjaxX20',
                     'L0ganOm3ga2023', 'ZoomTig3rFlick2013', 'XxCyberHunterPixelxX', 'EmmaBlastR0gueYT',
                     'PixelBacon201396', 'Chl0eBuilder2007', 'PixelFrostHyper20045', 'LucasNinja201371',
                     'ECHOEPIC78_YT', 'CrazePrism201280', 'JulianDuckRaven41', 'AlphaSilverPrism',
                     'PowerGalaxySaber2024', 'Addis0nEch0Alpha25', 'Gh0stGalaxyBlad3', 'FuryMin3r2011',
                     'MichaelSonicQueen', 'BR00KLYN_Cyber25', 'Om3ga_Ultra2004YT', 'Fir3_PrismYT',
                     'XxPrimalCookiexX2017', 'Blade_Rider72', 'AvaPh0enix97', 'Gam3r_Frost2022', 'PandaZ00m2021',
                     'PrimalSilverNova55', 'XxAidenSonicxXYT', 'RileyCode33', 'P0w3rSkyZ00m', 'PulseRocket200934',
                     'Stormy_Hunter201056', 'JulianDanc3r2012', 'BearG0lden18', 'Flam3Build3r2023_YT',
                     'CodeVenomRocket', 'LoganWolfBlade', 'XxLayla_ViperxX62', 'CodeStarryRocket2019', 'LunaSlim379',
                     'BlazeRogueFury2002', 'BaconPrimalTurbo', 'DriftSparkBlaze', 'AuroraCircuit200525',
                     'RileyLi0nMaster2012', 'AvaStarKnight2022', 'Void_Max59', 'Grays0nFusi0nHunter', 'Blaz3ToxicNova',
                     'JAMES_Ninja200583', 'HenryC0de72', 'XxOliverBlockHeroxX', 'AceMinerInferno13', 'EllaZoom15',
                     'LionTig3rUltra14', 'LionWolfBlizzard', 'CrystalWraith62', 'AsherStarStealth37',
                     'OmegaInfernoNeon61', 'XxHannahSaberxX2004', 'ZoomZapDawn85', 'StealthCookiePixelat',
                     'ChaseStormHyper2021', 'F0xB3ar10', 'Night_Byte93', 'HazeRiftPro2005', 'ROGU3_Turbo23',
                     'GamerGigaAceYT', 'XxTurb0DarkxX2018', 'XxRav3nChillxX62YT', 'Crystal_TIGER201732',
                     'XxPixelatedCrazeStor', 'Hannah_Duck200353', 'MichaelJelly63', 'T0xic_Pixel2017',
                     'Xx_FlickPh0enixShad0', 'StreamWraithBlade201', 'MysticSlim3Gam3r', 'KingEagleChase',
                     'Fir3_Turbo202224', 'XxClawStealthxX39', 'GraysonHazeAce82', 'Fir3Circuit39', 'XxEliBeastxX201683',
                     'MasonPandaMax', 'ShadowRiderNeon19', 'WilliamNovaTurbo2008', 'LukePixelatedAceYT', 'Rift_Blade17',
                     'GamerEpicSpark', 'MagicBuilder30', 'Samu3lWraithZap74', 'Panda_Epic91', 'Viper_Panda13',
                     'HunterKnight200432', 'St3althDrift77', 'EzraStealth201048', 'XxInfern0MaxxX_YT',
                     'AvaHaz3Giga2005', 'XxMasterHunterxX2005', 'LucasBan3Fir3', 'R0gue_NE0N2018', 'Aur0raDrag0n2003',
                     'AlphaG0ldenInfern0', 'Xx_BlizzardGlitchSpa', 'StarryFusionRav3n', 'GraceLight82',
                     'ScarlettNovaAlpha', 'GhostVortexVenom', 'XxBuilderCyberStarry', 'Fusi0n_Cyber201075',
                     'XxEllaBladexX78', 'PrismGalaxyRider2013', 'DancerPhoenix60', 'Ph0enixPulseQueen',
                     'Blaz3NinjaFusion', 'Al3xand3rOm3gaHawk', 'ElijahBlizzardBlaze', 'MichaelHyperPanda202',
                     'XxLiamMinerFusionxX', 'PixelProNight', 'WILLOW_Stormy64', 'FlickCyberDuck2022',
                     'ChillFlickSt3alth', 'SlimeAquaFlash2009', 'XxVoidGam3rxX2019', 'XxB3arInf3rn0ChillxX',
                     'SonicGamerHawk200648', 'NovaStormyShadow2006', 'XxOmegaInfern0xX20', 'PHOENIX_Queen50',
                     'Venom_Builder2003', 'Z3ro_Dark83', 'WillowStarGalaxy', 'Shad0wOm3ga2012', 'XxHaz3lLuckyxX16',
                     'XxJaxonFuryBytexX201', 'Cyb3rB3astBlock', 'Am3liaN3on2021', 'Bacon_Prism2011', 'Hawk_Moon64',
                     'XxNoahEchoPhoenixxX4', 'Vort3xEpicH3ro57', 'XxBlastBuilderPixela', 'CodeHaze25', 'DawnBaconClaw',
                     'XxBlad3_CrystalxX200', 'ToxicPlayzWolf2011', 'EvelynIceEagle2023', 'XxSilverVenomMagicxX',
                     'GalaxyS0nicZ00m', 'CarterLegendDawn', 'Byt3_Pho3nix2002', 'WilliamWolfStarryYT', 'Henry_HERO29',
                     'LucasP0wer54', 'ClawDragonStormy2011', 'Starry_Duck201182YT', 'Xx_Qu33nInf3rnoBuild',
                     'XXCARTER_ShadowxXYT', 'ZaydenDragon56', 'PaisleyNovaCraft', 'STORM_Pixel41', 'ViperBlockFire2007',
                     'AquaHer0Crystal', 'XxOliverOmegaGlitchx', 'MoonNeonVenom61', 'GigaCodeKing', 'Her0_Tiger2005',
                     'XxAsh3rZ3roIc3xX', 'BlazeMagicEpic2019', 'CodeNightLegend2002', 'XxAsherDarkxX200951',
                     'XxN0ahBlizzardxX77', 'William_Build3r16', 'Light_PANDA200816', 'XxLucky_SlimexX2004',
                     'Sab3rPuls324', 'JaydenViperCraft', 'Flash_Chaos97', 'DriftGalaxyHawk2006', 'Savannah_THUNDER86',
                     'Haz3Rav3n2003', 'MiaBuilderShadow2024', 'THUND3R_Puls383', 'ZOOM_Cooki32018', 'GlitchBladeGhost',
                     'XxStarry_RavenxX2010', 'AddisonRavenDark2015', 'UltraChillS0nicYT', 'XxArrowPandaxX2024',
                     'AmeliaMagic91', 'XxGabri3lBaconSparkl', 'XxEllaPrimalTurboxX', 'DarkZ00mHyper',
                     'Gam3rWraith200927', 'F0xBear48', 'DragonZapEagl3', 'Alpha_Primal97', 'Craz3Mystic201927',
                     'GhostDuckStream', 'ZaydenPrimalCookie20', 'Harp3rLight50', 'Flame_Saber200340',
                     'ArrowLuckyHaze75', 'RileyFlickStarry2013', 'XxLaylaBearDarkxX', 'XxAuroraBlazeStarxX',
                     'HazelCode21', 'WraithLucky99', 'Blad3Chas3200647', 'Dani3lStormAlphaYT', 'XxRiftC0deP0werxX',
                     'Crystal_Ven0m69', 'GalaxyRavenSonic2021', 'AlphaBac0nMaster', 'GigaSkat3r81',
                     'BlazeMysticGhost_YT', 'XxElli3Tig3rxX2023', 'JulianToxicPro', 'Flick_Flame42',
                     'Thund3r_ULTRA2020', 'XxOm3gaRogu3xX87', 'NinjaPixelBlaze49', 'XxSt0rmyOmegaxX11',
                     'ClawRavenViper', 'NoahStream58', 'StreamAlpha201873', 'ARROW_Flick2021', 'XxAce_RiftxX2024',
                     'XxBaneShadowGoldenxX', 'Hannah_Night201918', 'CrystalVoid56', 'KingHunterSaber40',
                     'FusionRocketHaze', 'Master_Chaos201972', 'OrbitBearRaven2003', 'Br00klynTurb0Alpha',
                     'PlayzRiderQueen_YT', 'EzraBlaz323', 'Sab3rKingRift2015', 'N0raChase11', 'AddisonGamer28',
                     'XxStealthTurboxX2022', 'JACKSON_Dark77', 'ZoeVoid2003_YT', 'Dani3l_Sky32', 'LionRoguePro2020',
                     'Blaz3Haz32024', 'SparkSilverFlick80', 'XxPaisl3y_RiftxX2022', 'XxBlast_Pix3lxX2017',
                     'F0xHazeDrift76', 'Gam3rOrbit48', 'ViperThunderCraft201', 'HarperInferno46', 'WillowBlast201184',
                     'PrismAqua55', 'XxVenomGlitchxX2023Y', 'BlazeDark46YT', 'AlphaOrbit18', 'XxWillow_UltraxX90',
                     'LoganFlashFrost', 'XxBaconRiderxX2009', 'ZoomCrystalMystic200', 'BaconBlaz349',
                     'Rav3n_C00ki32022', 'XxDancerIceViperxX', 'BeastQueenInferno201', 'Bl0ck_Ph0enix2006',
                     'Storm_Beast202446', 'NightWraithTiger', 'Aid3nAc3Sky2019', 'XxByteBanexX2002', 'Giga_S0NIC2020',
                     'DancerStorm16', 'XxBeastShadowBlastxX', 'L0ganChillHunter2009', 'BlastPixelGhost',
                     'Ultra_BLAD32007', 'Cart3rSparkly60', 'R0cket_ST0RMY75', 'Xx_SKATERFUSI0NSTREA', 'Chase_BACON2019',
                     'AceSilver66', 'XxHawkTigerxX2004', 'Eagl3EchoChaos29', 'XXVIP3RZAPXX_YT', 'DuckBuilderEcho2024',
                     'AvaQueenTiger', 'Hero_Rider2009YT', 'Rocket_Hawk52', 'XxMaster_TurboxX79', 'PixelSonicRocket2019',
                     'Ech0Gh0st201493', 'H3ro_Haz314', 'XxSavannahBeastNe0nx', 'Am3liaCraz32010', 'Noah_NIGHT202016',
                     'St0rmyStealthWraith', 'ZoomBlastBlad32016', 'Xx_ScarlettFlameEcho', 'WolfSkater2004YT',
                     'AidenSkaterBane20156', 'DancerPhoenix2016_YT', 'Infern0_Craze98', 'ViperCrazeOrbit2007',
                     'Jayd3nToxicVort3x200', 'ToxicRiftSaber', 'Xx_ADDISONSTARRYCODE', 'Mat3oRiftPuls32008',
                     'StarMaxSonic', 'EchoStealth32', 'Samu3lH3roCooki3', 'Ph03nix_Fusi0n200268', 'XxAlphaHeroxX66',
                     'Z3roBuild3r31', 'XxLuckyRavenCodexX', 'XxJacksonPlayzWraith', 'VenomChaseStealth',
                     'XxFuryStealthxX2006', 'XxUltraAcexX2009', 'XxNeonCrystalxX_YT', 'Playz_Sparkly200833',
                     'XxJacksonPlayzToxicx', 'Ic3CrystalSpark', 'Zayd3nSkyCrystal2010', 'Max_Pixelated200974',
                     'XxCookieRiftBuilderx', 'RocketInferno200546', 'XxSaberGoldenxX58', 'XxVenomFlameSlimexX',
                     'KingBac0nPulse', 'CrystalVen0m2007', 'PlayzHyper31', 'XxChillSparkPandaxX', 'Claw_Eagle20',
                     'XxOwenNightxX60', 'Li0nS0nicCrystal2011', 'Turbo_Cyber2005YT', 'EPIC_Aqua78',
                     'CrazePixelatedLion', 'Pixelated_Aqua2006', 'XxElijahSonicSkaterx', 'InfernoMinerBear',
                     'F0xBane2012', 'ClawLuckyGold3n', 'PrimalM00nSky', 'FuryChas3King2022', 'XxAlphaHeroPixelated',
                     'Pixelated_Rocket56', 'V3n0mGam3rL3g3nd', 'ZaydenShadow45', 'Al3xand3rPix3lat3d74',
                     'FrostStormPix3lat3d9', 'NinjaRavenChase', 'XxNeon_CodexX2024', 'SonicStormyUltra2002',
                     'Jayd3nStormyZ3ro', 'INF3RNO_Echo2003', 'NoahMagicByte61', 'SlimeBladeDuck2007',
                     'Xx_Blad3StormyGlitch', 'BuilderOrbit200496', 'OliviaAlphaGolden', 'HawkV0rtexCircuit',
                     'XxIsaacZoomSilverxX', 'LunaFr0st50', 'KingRock3t96', 'EzraInfernoOmega2008', 'NinjaDarkEcho2015',
                     'BlazeBuilderWraith42', 'Xx_PixelatedPixelCod', 'XxChillBeastxX36', 'SamuelBladeShadow_YT',
                     'XxFuryRocketxX2014', 'StormyMaster19', 'BladeDriftSlime', 'JackHazeMiner69', 'Galaxy_Flam3YT',
                     'J3llyLionFlash', 'Xx_PhoenixPlayzLight', 'Tiger_Panda201327', 'XxLukeSparklyxX61',
                     'Dragon_HAZE20', 'ProZapBlast2022', 'EthanThunder41', 'XxChloeSilverxX75', 'Chl0eCrystal37',
                     'H3r0V3n0mEpic', 'ShadowWolfPixel2014', 'RocketFireFusion2024', 'XxEllie_SkaterxX2019',
                     'LeviCookieSpark91', 'QueenStarry75', 'L0ganPrismNinja', 'XxIceFlameInfernoxX2',
                     'Skater_Toxic202173', 'HunterByteHaze2020', 'CrystalHero201148', 'EagleBuilderHunter',
                     'EzraInfernoSky2008', 'XXMASTER_ViperxX67', 'ProCookieAquaYT', 'XxCart3rFlickxX2003',
                     'L0ganHyperR0cket', 'Eagl3CrystalPow3r', 'WyattShadow83', 'XxBlast_ClawxX88', 'Claw_Max54',
                     'XxIsaacOrbitxX_YT', 'GlitchShad0w2012', 'Paisl3yDanc3rFox', 'NoahMasterDrift2011',
                     'XxTigerTurboxX2023', 'SamuelHunterIce', 'Code_Zap2008', 'SebastianMaxPixel92', 'OrbitMasterVoid',
                     'XxT0xicPix3lxX2008', 'AmeliaStreamR0cket', 'XxRiderSlimexX15', 'XxCart3rEch0WraithxX',
                     'Flick_VEN0M2017', 'LukeStarOmega22', 'Chill_Ninja47', 'FlameLightSparkly202',
                     'XxPow3rGlitchxX2015', 'OliverByte200299', 'XxTigerStormxX76', 'HannahStarDuck', 'WyattNova30',
                     'GlitchVenom22', 'XxMasonCookiexX2019', 'WolfHero30_YT', 'ChillPho3nixHaz3', 'HenryEpicWolf2014',
                     'WILL0W_Wraith65', 'XxBlastViperLuckyxX', 'ZoeThunder2011YT', 'Gh0stLi0nPrimal2023',
                     'TurboEchoQu33n', 'St3althDanc3rDark201', 'Xx_JaxonThund3rL3g3n', 'XxAqua_CookiexX2015',
                     'FlickVen0m2002', 'Xx_LegendRavenStream', 'ShadowToxic46', 'XxClawEchoxX45', 'DancerStar201340',
                     'NightBaneCyber201436', 'QueenTurb0Glitch', 'Phoenix_TIGER20', 'PhoenixPulseIce40',
                     'XxGraceAlphaxX88', 'GraceStreamKnight', 'Silv3rWraith201225', 'JellyGalaxyShadow',
                     'XxNoahPhoenixxX2013', 'W0lfCraz32012', 'XxGamerFusi0nBuilder', 'XxStarry_VoidxX2014',
                     'XxDawnHunterSonicxX2', 'FlickCookieMoon', 'ViperEch0Mystic2011', 'MagicKingAqua',
                     'BlastSkat3rH3ro2022', 'N0vaMasterFusi0n', 'Ven0m_Hyper13', 'AmeliaP0werSt0rm', 'Om3ga_Chaos2024',
                     'XxPho3nixMin3rArrowx', 'EmmaFire201068', 'XX_GalaxySparklyPris', 'Dawn_Zap200699',
                     'Xx_AsherSaberCircuit', 'XxCookieVenomxXYT', 'XxEagl3MaxxX78', 'XxHazelRogueHawkxX',
                     'InfernoBlizzardSky20', 'XxWilliamBlizzardSka', 'H3roDarkJ3lly2011', 'Ril3yH3ro200544',
                     'SparklyV0idZ00m', 'FrostH3roMagic', 'XxSamuelQueenDriftxX', 'XxShad0wNe0nAquaxX19',
                     'V3nomPuls370', 'OliviaTig3rStarry', 'Om3ga_HAZ379', 'GABRIELNINJAECH0_YT', 'Z3ro_Claw2004',
                     'Skater_Turbo2022', 'StormMoonChas3_YT', 'S3bastian_NIGHT26', 'HeroRogue201721',
                     'FlashSilverVen0m', 'PandaSkaterPro87', 'Puls3Fir331', 'SkaterKing34', 'Build3rChill19_YT',
                     'IsaacPr0Raven', 'PixelRogue201830', 'LavaStarryHyper2017', 'WillowPow3r201692', 'DancerShad0wIce',
                     'XxJulianR0gu3HawkxX', 'OwenChill201051', 'DuckG0ld3nV0id2022', 'Dancer_Thunder2018YT',
                     'Aubr3yTig3r2022', 'XxAsherArr0wxX2010', 'PixelGoldenNova', 'ZeroFrostPrism2010',
                     'Pix3lat3dZ00mLightYT', 'XxMiaUltraEchoxX', 'XxScarl3ttWraithSkat', 'FLICK_Dawn15',
                     'XxPandaToxicxX15', 'XxPrimalCod3ToxicxX2', 'XxEzraSkyxX88', 'SparklyBane98', 'Grace_Echo30',
                     'VenomThunderPulse', 'Fir3Wraith2016', 'Xx_EvelynMasterLegen', 'Shad0wPh03nixSkat3r',
                     'MoonDuckDarkYT', 'Jacks0nOmegaSlime', 'Hyp3rBuild3r26', 'XxZoomLionMagicxX201', 'Min3rTig3rLi0n',
                     'StealthBlastPhoenix2', 'FlashEagleCrystal200', 'BlastAlphaQu33n', 'DanielChaseR0cket',
                     'BlastKnightStealth20', 'EliLegendStorm', 'XxVictoriaGhostxX42', 'XxEchoBladePixelxX10',
                     'Bear_Cha0s2009', 'PlayzChill202219', 'Xx_PULSEDARKPIXELATE', 'VoidBeastPlayzYT',
                     'Will0w_Primal200686', 'GalaxyR0cket97', 'LiamCraz3Sky', 'Chl03_Star2016', 'Zayd3nSonic31',
                     'Chloe_FIRE200670YT', 'XxAvaOmegaProxX2006', 'ChillKnightBuilder', 'HenryFlame12',
                     'XxSparklyEpicxX33', 'AlphaCircuitMin3r201', 'Flam3NinjaQu33n', 'St0rmyStarry2024', 'MinerZoomPro',
                     'SilverRiftC0de11', 'NeonOmegaMystic2002', 'ByteRift74', 'AceSonic83', 'ChillSaberMystic',
                     'ChloeStream71', 'NinjaPrimalN0va2024', 'XxG0ldenBlazeBanexX2', 'Sparkly_Nova202391',
                     'BrooklynFlickBlock', 'Cyb3rStar2008', 'EllieFlash201284', 'QueenBlizzardFury201',
                     'UltraNightBear', 'ClawLightBacon', 'Fusion_NOVA41', 'DanielFlick2009', 'Ash3rEcho200685',
                     'Ril3yStr3amMast3r201', 'AriaByt32012', 'C00kieSt0rm2005', 'XxRiftTurboFlashxX98',
                     'GigaStormyMoon', 'L3vi_WRAITH2006', 'XxRiderWraithxX28', 'Lucas_Blizzard16', 'MoonB3arDragon68',
                     'MaxGhostLucky2013', 'SaberLavaPro22', 'RiftKingStr3am2002', 'AceVoidEcho2006',
                     'XxRocketHeroMaxxX201', 'MateoPrismSilver', 'Lava_Dancer41', 'EvelynTiger29', 'LightPrimal76',
                     'Xx_JellySilverCrysta', 'AsherWraithOmega', 'OwenIce17', 'WraithVen0mW0lf', 'BACON_Turbo200242',
                     'Al3xand3rPrimalStorm', 'Pixel_ROCKET201239', 'Inf3rn0_King2006', 'Carter_Duck65',
                     'StormyHunterBane', 'XxDawnMagicxX2005', 'XxWyattRav3nxX13', 'XxZayden_DriftxX74',
                     'Mia_Shad0w200997', 'StarryNightSpark2005', 'XxJackPandaVenomxX20', 'WraithSparkPulse',
                     'Xx_LucasBlastCrystal', 'BrooklynNovaFlick202', 'CYBER_Fr0st2023', 'Stream_Flash78',
                     'KayleeDriftStream201', 'HunterRiftMiner2014', 'ChloeWolfKnight', 'DRIFT_T0xic56',
                     'XxFuryHeroGoldenxX20', 'HeroSparklyOmega2003', 'WraithMoonGhost', 'NoahGamer201021',
                     'EzraMasterSilver', 'HunterChaosDancer', 'SkyLegendC00kie2011', 'XxAsherVoidStealthxX',
                     'Fire_N0VA39', 'BuilderSparkBacon79', 'CircuitChill17', 'HunterCrazeStealth82',
                     'Grac3Blizzard201184', 'Samuel_Duck200458', 'Danc3r_BACON2021', 'EmmaFirePrimal2008',
                     'Chas3Gam3rHawk2006', 'CircuitStormy80', 'LukeSaber2002YT', 'Xx_BANEPIXELATEDFLAM', 'BlastFlame96',
                     'UltraMagicBeast', 'NeonStealth200569', 'AriaPanda202279', 'XxAvaLightxX200650', 'ELI_Legend45',
                     'Samu3lRiftClaw201565', 'RileyMasterPixel2019', 'PandaStormSonic19', 'N0ah_Playz2019',
                     'SkyRogue2023', 'BEAST_S0nic2023', 'RavenAceKing', 'MasonVip3rNova', 'Xx_StealthThunderSka',
                     'HenryArrow201852', 'Primal_J3lly2022', 'HarperCrystalStar202', 'GraysonStarryByt382',
                     'AriaToxicLight2004', 'Xx_CrazeGhostCircuit', 'SilverGhostStarry35', 'Jayd3nWraith79',
                     'XxL0ganStreamDrag0nx', 'RileyHawk54', 'ZapSilverDragon', 'Ace_Frost84', 'Aid3nSonic2004',
                     'GhostBladePhoenix', 'CarterBeastHawk2017', 'Star_Starry201640', 'EvelynNinjaViper2007',
                     'GlitchPuls32013', 'Pow3rInf3rno67', 'TurboByt3Spark2020', 'Xx_L3g3ndGlitchP0w3r',
                     'SparkMaxArrow15', 'XxLuckyDanc3rxX46', 'Stormy_Code35', 'EliPhoenixNeon', 'XxGamerGoldenBlizzar',
                     'AlexanderDark51', 'PIXELLION2012_YT', 'WilliamJelly2011YT', 'HYPER_Light202295', 'LegendRocket78',
                     'DancerSkyFrost', 'SkaterCrystal32', 'PrimalFrostChill', 'Jam3sJ3llyHaz3', 'EzraFrostCode201285',
                     'GigaRock3tNova', 'HunterVortex2014YT', 'Build3r_AQUA17', 'Elli3Gam3r84', 'Fury_Rocket2008',
                     'Jax0nPix3lMast3r', 'XxLeviBuilderHawkxX2', 'Ghost_Skat3r2020', 'HyperFr0stClaw', 'OwenDarkZer0',
                     'HunterStarry200411', 'Circuit_Hunter2005', 'XxAubr3y_Vort3xxX200', 'JacksonArrowBuilder2',
                     'XxPrimalCha0sxX2014', 'XxVip3rBuild3rxX28', 'FurySparkly12', 'XxEzraVortexxX2006',
                     'EllaSonicChill44', 'CyberPr02019', 'Hyp3rDrift201984', 'TigerPandaHunter99', 'HenrySparkly200564',
                     'Duck_KNIGHT66', 'LavaNeonCrystal2012', 'XxLeviStormPrimalxX2', 'StarryLionBuild3r',
                     'AriaTurboLight2007', 'FireFurySky2013', 'GraceRiderInferno201', 'LukeGalaxy202110',
                     'GracePandaArr0w', 'BlizzardNe0nR0cket20', 'BlockDawnNight84', 'XxSophiaGlitchInfern',
                     'XxZ0eHer0SlimexX', 'XxOliviaFusionxX2004', 'Xx_Paisl3yFir3Sparkl', 'Gabri3lBlock89',
                     'XXBL0CK_C0dexX2018', 'XxBaconOrbitxX73', 'Glitch_Ghost2014YT', 'CraftGalaxyMiner69',
                     'PrimalVenomSky', 'AuroraFurySky', 'AbigailSparkHyperYT', 'XxShadow_GigaxX2005', 'Cha0sMin3rS0nic',
                     'Grays0nLegendRift47', 'T0xicPr0Mystic', 'DriftClaw47', 'KayleeQueenT0xic', 'MysticSkyPixel22',
                     'BrooklynGam3r81', 'XxGalaxyH3r0xX202375', 'AddisonEchoPanda', 'Pixel_CHILL2003YT',
                     'StarryThund3r2022', 'BaneGhostAce2005', 'GoldenVortex200726', 'RavenGlitchWraith',
                     'OwenCrazeVenom10', 'XxJaxon_ProxX2018', 'St3althGalaxy50', 'SophiaFuryPix3l18', 'WraithL3g3nd24',
                     'Beast_Chaos46', 'StealthMagic42', 'XxGraceMoonxX2002', 'EchoInfernoPower2006',
                     'BuilderThunder202177', 'XxLiamAquaClawxX', 'MaxLava83', 'T0xic_Magic56', 'Rav3nSilv3rGam3r2012',
                     'V0rtexR0cketGamer', 'LOGAN_Drift200823', 'LucasStarCyb3r', 'FlameFusionStormy', 'MaxEch0Eagl3',
                     'EliInf3rn02009', 'PrismPixelatedV0id', 'CrystalL3g3ndStarry2', 'Xx_DancerMasterChase',
                     'CrazeRiderSilver', 'XxZayd3nPho3nixBlock', 'N0ahHunterWraith', 'Skat3rMin3r65',
                     'XxMat3oRid3rxX2020', 'XxGrays0nSaberPixelx', 'SaberCookie202149', 'EllaRock3tPlayz',
                     'Min3rRift56', 'XxChaseSparklyxX2005', 'XXCHASE_SkyxX2018', 'Bear_Hawk200791', 'C0deBac0n62',
                     'Zer0Ech0P0wer', 'JaxonDawnZoom', 'KingTig3r200583', 'MichaelMagic201294', 'ChloeCyberMax',
                     'Samuel_Zoom47', 'Beast_SPARK2005', 'W0LF_Lucky2015', 'Xx_WraithBladeGlitch', 'Ven0mSparkly2018',
                     'XxLaylaStormyGhostxX', 'Grac3Frost2023', 'Om3ga_N3on2013', 'PlayzClawChill', 'XxNightR0guexX2015',
                     'INFERNO_Shadow28', 'LuckyPho3nix2016', 'UltraToxicOrbit2016', 'GhostThunderSonicYT',
                     'R0ck3tRiftBlad32015', 'GamerGiga2005_YT', 'Cliosjhtm14459', 'Janetnkexw93144', 'Nolaniwxk89402',
                     'Codylpxnj64616', 'Holliuouwn60878', 'Lusabawqq26316', 'Bessywxeft78027', 'Gussiebsjok26617',
                     'Leelajahwu36191', 'Floristrpsl83428', 'Shalnaswcjq28236', 'Mollewvld22450', 'Jewelybunp43189',
                     'Lenapretf89139', 'Elsaqspuy80558', 'Margoyvfmc68746', 'Ilyseefywe79727', 'Meggycvpai66320',
                     'Milziewvmvh19693', 'Tandyeynpl58245'}
local RECEIVER_LIST = {'LiamPix3lClaw', 'HunterBac0nBane', 'VortexUltraHawk39', 'CodeCircuit50', 'Her0Cha0sRider',
                       'Thund3rEpicHunt3r', 'BaneDrift200644', 'ScarlettMaster53', 'HazelJellyEagle', 'B3ar_EAGL32017',
                       'VortexToxic29', 'Zayd3nLionStar', 'WraithFireMaster', 'XxVortexSlimePhoenix', 'Infern0Hunter21',
                       'SophiaChaosOmega2020', 'CrystalSkaterFlame59', 'DawnRiftCookie2024', 'Rid3rEagl3201890',
                       'Om3gaSparkly2017', 'Luk3BlastBlad3201741', 'Tig3rSkyDragon', 'XxHunt3rDawnHaz3xX',
                       'GalaxyFr0st200338', 'BladeCookie68', 'Br00klynnFusi0nS0nic', 'St0rmy_Blaze2024', 'MinerEpic61',
                       'HyperFlick15', 'XxPix3lat3dFusionMax', 'LionAc32014', 'Echo_Pixel2015YT', 'Sab3rGlitchClaw',
                       'Layla_Ac319', 'XxHaz3lFlickAlphaxX', 'Rid3r_Lava82', 'PixelOmegaHaze2009', 'LiamBaneBacon2013',
                       'Bl0ck_Bane202487', 'AlphaLight200762'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
