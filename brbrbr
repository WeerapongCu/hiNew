-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'DarkRiftFlick2002', 'Ow3nLi0n2024', 'HunterHyperDragon', 'GigaSab3rGhost', 'LukeMagicCraft2017',
                     'BeastPowerGalaxy_YT', 'CyberMystic50', 'XxGhostHyperSkyxX', 'CraftSilverChill', 'DawnEagle72',
                     'RiftHunt3r96', 'GigaAc3Fusion2018', 'PixelFireFlame2018', 'MichaelC0deInfern020', 'LUCKY_Haz386',
                     'Blaze_Tiger2013YT', 'CookieArrowGamer', 'XxSebastianCircuitBa', 'XxFr0stSparklyC00kie',
                     'AsherV0rtex92', 'ScarlettDuckPrimalYT', 'Rogue_Pixelated2016', 'SKY_N3on2019YT',
                     'LucasBuild3r2018', 'XxEllaAquaxX46', 'HazelSlimeKnight', 'XxPrimalMaxxX2013',
                     'WilliamBlast200465', 'DancerFox86', 'Eagl3ChaosDuck', 'HeroNeonStar32', 'XxElliePowerFlashxX2',
                     'HyperSparkMagic', 'RiftFrostCooki3', 'MoonStealth62', 'T0xicEagleChill71', 'LaylaBlastNinja2016',
                     'XxNovaCraftPandaxX', 'Build3rVoidPix3l2009', 'LightUltraCrystal26', 'B3arQu33n2011',
                     'XxRiftH3roxX2011', 'StormyStarryWraith76', 'Fusi0nFr0st66', 'Grays0nStarChill', 'Paisl3yGalaxy64',
                     'StealthRiftPanda', 'VoidPandaWolf98', 'Jelly_Silver10YT', 'VoidSkyIce', 'FlameZero54',
                     'FireGolden47', 'MagicL3g3nd2005', 'LeviChaseStorm17', 'HarperFire62', 'Eli_Dragon88',
                     'Fire_Li0n23', 'CraftFireEcho2016', 'BeastSparkPrism', 'ClawCrazeStarry2019', 'OmegaLightHaze',
                     'PrimalEchoKnight58', 'LunaFurySparkly', 'Jayd3nZapVort3x', 'XxAmeliaMasterxX92',
                     'GabrielBlazePulse200', 'XX_BrooklynnPixelCyb', 'XxMagicR0gu3xX2017', 'HeroEagle39',
                     'XxHarperM00nxX15', 'XxBlastHyperMasterxX', 'KNIGHT_Fire67', 'Block_QUEEN40', 'Gh0stZer02012',
                     'XX_CrystalSparkCircu', 'DuckSkater46', 'XxSky_VenomxX66', 'XxKayleePrimalxX2011',
                     'Silv3rBlad3Om3ga', 'Ic3_Primal2024', 'Hunt3rDanc3rL3g3nd20', 'MichaelKingBeast_YT',
                     'G0lden_FURY33', 'XxJackM00nxX2014', 'HunterBaneShadow2018', 'Z3roNightPix3l', 'ZoomSkyVenom',
                     'Min3rEagl3Playz2005', 'EthanFlame88', 'StarChase61', 'DriftSaber2023YT', 'XxToxicLightFuryxX',
                     'FrostChaos2016YT', 'Michael_Crystal32', 'RiftMoonFox31', 'VoidMagic43', 'XxHannahPandaxX2002',
                     'Hyp3r_FUSION201013', 'SkaterV0rtex68', 'JacksonPandaCookie20', 'NeonFlick55', 'XxChillBeastxX27',
                     'AsherBaneVenom2022', 'XxWolfTurboxX2018', 'Toxic_Gamer202467', 'Isabella_St0rm2014',
                     'EllaPro38YT', 'BearStorm84', 'SlimeMoonRift2012', 'LucasBearBlast48', 'GlitchJellyGiga2016',
                     'GlitchFir3V3n0m', 'Ph0enixMaster37', 'ToxicLuckySkater', 'HawkSilv3rNinja', 'VenomSlimeWraith',
                     'Infern0Turb0Light', 'StormSkaterGlitch200', 'BlazeOrbit2019_YT', 'Gam3r_Pho3nix10',
                     'B3astFr0stF0x', 'BaconVortexEcho', 'AidenIce11', 'KnightZeroEcho2012', 'XxPaisl3y_LAVAXX88',
                     'EliCyberBacon', 'OliverShad0w2005', 'XxAid3nPrimalxX2003', 'XxEliBuilderxX2023', 'Build3r_WOLF20',
                     'XxStormMaxxX51', 'HyperSaberAlpha', 'RileyCyber200785', 'M00nR0cketGlitch', 'LightSilverFox',
                     'Gabri3lSkyEagl3', 'RiftProGhost_YT', 'TurboEagl32024_YT', 'PowerPhoenixDark',
                     'Vict0riaSt0rmPrism20', 'OliviaFoxLight2002', 'ZoomArrow200270', 'Micha3lRid3rZap',
                     'HeroDarkJelly', 'FlickDriftNinja_YT', 'ArrowGalaxyEcho2014', 'XxHannahFirexX2005',
                     'SlimeBladeStar22', 'LavaGoldenFusion', 'ScarlettWraithBear', 'Echo_NIGHT2013YT',
                     'XxHawkCraftxX73', 'S3bastianSt0rmS0nic2', 'VortexPixelGalaxy200', 'XxHazeAquaLionxX',
                     'AubreyNinja2014YT', 'Aubr3yHawkWolf95', 'CraftLionStorm', 'Liam_BEAST20', 'XxGraceG0ldenStarxX2',
                     'Zoom_Slim381', 'FlickSaberHer0', 'XxGhost_N3onxX70', 'HenryBladePh0enix', 'Flam3Blast34',
                     'Pho3nixSkat3r62', 'MiaBlizzardChase51', 'EPIC_Om3ga37', 'AquaLion38', 'ElijahBlockGhost2023',
                     'ChloeThunderUltra', 'R0ck3t_Ultra17', 'Duck_Skater201638', 'Xx_CharlotteFusionGo',
                     'Min3r_Gh0st2010YT', 'Cha0sF0xEagle', 'XxPanda_WraithxX75', 'Zero_Legend2020',
                     'XxFlickBlizzardxX40', 'AubreyPandaPixel2024', 'XxW0lfR0cketxX2012', 'PIXEL_Hyper71',
                     'Zayden_Cyber46', 'XxCraze_TURBOXX41', 'G0ldenBlizzardP0wer', 'XxPhoenixCrystalPris',
                     'Moon_SILVER200618', 'Zer0LavaBac0n', 'CodeDark27YT', 'BUILD3R_Craft84', 'PowerChillBear',
                     'AidenChaos75', 'SparklyC0d328', 'LucasHer0C00kie', 'VoidStormy201669', 'ChaseBeastDawnYT',
                     'SkyWraithPro2024', 'BrooklynnFuryMystic2', 'Daniel_Starry15', 'XxLiamBaneUltraxX200',
                     'XxLuckyHer0xX47', 'Ban3StormySab3r', 'CrazeLionBear2009', 'BlastSky2012YT',
                     'XxDriftDarkP0werxX20', 'H3roUltraRock3t', 'AvaTig3rRock3t', 'Viper_N0va80', 'Z3r0_PR02020',
                     'XxMate0SilverxX87', 'MichaelEpic13', 'RiftUltra201123', 'WraithThunder78', 'PulseHazeCrystal',
                     'Elli3Gam3rFir3', 'ByteBaneStormy2010', 'Bac0nOmega90', 'AriaCrazeMaster', 'ByteCodeBacon',
                     'PixelEpic201970', 'TurboFlick200759', 'Br00klynStr3am42', 'FlameLuckyVortex2014',
                     'XxSilver_GhostxX42', 'Addis0nPix3lat3d95', 'LegendJellyIce', 'Slim3King_YT', 'Hawk_Flash25',
                     'FlashFrostWraith2008', 'Her0Craze2007', 'Grays0nFuryZer0', 'ChillStar22', 'CraftBlock31',
                     'Glitch_Mystic58', 'SaberSkater45', 'Fr0stJellyPr0', 'Mat30M00n2012', 'EllieNeon27',
                     'Xx_DragonOrbitStealt', 'Bear_Bacon2006', 'JamesEagleInferno200', 'JaxonRid3r57',
                     'Xx_GraysonThunderLig', 'StormyEagleGalaxy', 'FlameR0cketM00n', 'ProBaconZap2002',
                     'ChaosCrystal35', 'LavaPrism201790', 'LionPixelDark2012', 'N0raFlickRift', 'HunterOmegaTurbo38',
                     'XX_Turb0QueenBuilder', 'HenryGiga54', 'SparkDancer53', 'XxEvelynStarCodexX54', 'DarkDrift69',
                     'XxLightArrowSaberxX', 'Xx_BuilderTurboVorte', 'CyberFusi0nLi0n', 'Ac3Toxic93', 'Mas0nFlam393',
                     'NINJA_Skat3r201668', 'XxZayden_ZapxX46', 'XxSophia_CircuitxX67', 'ClawSaber202458',
                     'PowerAce2011_YT', 'XxKnight_J3llyxX2005', 'Ash3rHunt3rCraz3', 'Epic_Rogue28', 'NoraAcePro',
                     'SilverG0lden25', 'Addis0nPandaSky', 'DawnFlameOmega2022', 'IsabellaHawkNight202',
                     'JulianSilver37', 'LuckyGigaArrow99', 'czxczxbbbbbfc', 'AbigailViperTurb0201',
                     'XxPaisleyBlazeAlphax', 'Xx_PaisleyStarryMyst', 'AlphaBlast31', 'WillowVoidFire',
                     'Grays0nOmega200558', 'SCARLETT_Ninja72', 'CyberBaconLava', 'CarterAlphaLucky18', 'GhostMoonLucky',
                     'Byte_Light68', 'Isab3llaMysticPlayz8', 'DUCK_Zoom42', 'XxPixelPandaxX2015', 'ZapByt3Craz3',
                     'KnightHawkCraze2013', 'Rid3rBlaz3T0xic31', 'Xx_AlphaStarryCookie', 'Willow_Bane2005',
                     'KnightZapPixel', 'CharlotteBlastStorm2', 'LeviDragonDark2015', 'BrooklynWolfBlock',
                     'LuckyPix3lat3d29', 'BuilderWolfNeon26', 'OwenChaos49', 'HannahLionPixel2022',
                     'Rid3rPix3lat3dCyb3r', 'XxTurbo_WOLFXX202197', 'PrimalChase64', 'MagicShadowBacon',
                     'MichaelZeroStarYT', 'WilliamWolf201084', 'Ice_Alpha38', 'XxGamerSkaterAlphaxX', 'XxFr0stAcexX91',
                     'W0lfV0id2023', 'XxQueenCyberEaglexX', 'DancerRiderStorm', 'XxOliverPrismxX2022',
                     'OwenPixelatedToxic20', 'L3G3ND_Rid3r28', 'XxSebastianPrismxXYT', 'XxLightEpicFlashxX',
                     'XX_TigerBlizzardDawn', 'P0WER_Max2024', 'Xx_LegendPowerBuilde', 'SILVER_Mystic86',
                     'QueenCodeCraze2014', 'Bear_Toxic59', 'HannahUltraZap', 'MagicRiftLucky2016', 'XxSamuelBytexX2018',
                     'Blade_Flick34', 'R0gueInfern058', 'WillowThunder92', 'CodeWolfTurbo2024', 'XxBeastPixelxX78',
                     'XxChaosMysticxX98', 'WyattClawInferno', 'JacksonHawkWraith200', 'BuilderKingLucky56',
                     'AddisonTiger49', 'XxBeastPlayzMagicxXY', 'XxSebastianMysticMin', 'SonicUltraVortex2005',
                     'KnightToxic96', 'Magic_Wolf2004', 'Br00klynnCha0sGh0st', 'Thunder_Craft90', 'JaxonCodeSpark49',
                     'FlameBeast201738', 'Crystal_Inf3rn02011', 'NoahMagicWolf2014', 'JaxonStar49', 'HannahChill61',
                     'XxBac0n_S0nicxX20168', 'EthanHunt3rCyb3r', 'Elli3Z3roBacon', 'Xx_CraftSparklyJelly',
                     'XxOliverMagicClawxX', 'NeonChaos201469', 'XxStealthLuckyxX2016', 'EZRABUILDERACE_YT',
                     'OwenChaos93', 'N3on_Night2007YT', 'XxAid3nDuckStr3amxX', 'ChaosCraftHawk', 'V3n0mSparklyFr0st',
                     'MasterStealthKing200', 'AceNightStar2021', 'Grac3Pix3lat3d50', 'Eli_Ace200261', 'XxEmmaViperxX85',
                     'Xx_InfernoFuryCrysta', 'HazeChill53', 'EmmaInf3rn02023', 'XxWilliam_TigerxX202',
                     'RogueLucky201181', 'BlazeSparkly11', 'XxBaneBuilderOrbitxX', 'EllaSlime200488',
                     'Michael_Sky200410', 'NeonRavenFlick', 'Jacks0nMax200566', 'WolfPrismClaw2006YT',
                     'Xx_SparklyVortexMagi', 'ChaseFlickSkater', 'Gabri3l_Thund3r15', 'FusionClaw44', 'Ril3yPix3lSlim3',
                     'DancerDarkShad0w', 'SophiaMasterViper200', 'XxPixel_PandaxX77', 'Vort3xBan3Danc3rYT',
                     'ScarlettAceMaster_YT', 'PaisleyNinja67', 'HannahDancerSkater', 'EllaBlockRift2005',
                     'ElijahLavaFire80', 'AsherZoom80', 'XX_FusionBuilderSkat', 'XXSAMUEL_RiderxX2016',
                     'XxM00nBac0nPix3lxX', 'S3bastianLucky19', 'Charl0tteHaze2008', 'HenryPhoenix2006YT', 'ELLIE_Max25',
                     'ScarlettCrazeLucky16', 'Arr0wThund3r2020', 'StealthPro51', 'PrismFlickFury_YT', 'CyberVoid79',
                     'Night_CHAOS47', 'Jack_Glitch82', 'StarryQu33n38', 'Xx_MysticChaosCooki3', 'Cart3rPuls32002',
                     'MiaTigerPulse', 'DriftStarrySpark', 'VenomPixelLava2003', 'HenryGhostAce201832',
                     'OliverByteToxic2013', 'SPARK_Li0n84', 'BlockLucky2024', 'FlashHunterBear2015', 'StormNovaNeon',
                     'EzraRid3rMaxYT', 'XxLoganSparklyVoidxX', 'W0lf_Stream2020', 'MICHAELINFERNO2010_Y',
                     'EagleBeast201619', 'Pro_Fusion2006YT', 'ZoomCircuitPulse', 'Tig3rFrost85', 'XxNightGamerSonicxX',
                     'ChaseMaxBane2013', 'GracePlayzF0x', 'XxSophiaMysticVip3rx', 'Ban3Dark2024YT', 'XxInfernoZeroxX72',
                     'StarryBeast2013_YT', 'NinjaStarryGhost11', 'OrbitMoonByteYT', 'XxLuckyStormxX2020',
                     'Raven_Glitch202048', 'C00kieWraithFire', 'LeviIceEcho2021', 'EvelynFuryWolf',
                     'WyattBuild3rEcho68', 'RileyBaconRift2009', 'XxPrimalHyp3rxX77', 'R0cket_Mystic2013',
                     'XxDawnNeonxX87', 'MiaSkyRogueYT', 'Jack_Wraith2003', 'XxWolfAquaxX2010', 'RILEY_Ace67',
                     'ZapBl0ck27', 'GhostSkaterBear23', 'BlizzardSonic60_YT', 'XxLoganClawxX202156', 'LavaFlameShadow',
                     'Zer0Raven2005', 'XxPandaPlayzP0werxX', 'TurboChillSparkly21Y', 'ZapDawn62', 'BaneViperFlick2007',
                     'AubreyHyperDrift_YT', 'XxCarterSaberxX2008', 'XxHannahBytexX55', 'StarryBlad3Blaz353',
                     'R0gu3P0w3r200860', 'Circuit_Giga96', 'BaconTurboPow3r', 'SkaterStealthCircuit', 'PRO_Vip3r2019',
                     'PlayzB3arZ3ro77', 'XxSebastianMoonxX34', 'Gold3nB3astGlitch', 'MinerAlpha201934', 'Byte_F0x2002',
                     'Rift_V0id85', 'AlexanderNeonPlayz', 'RiftZap200931', 'DUCK_Jelly93', 'BuilderBaneStealth_Y',
                     'ChaosSkaterCircuit', 'HunterCrystalLavaYT', 'BlockSonicMaster2024', 'Power_THUNDER57',
                     'ChaseCookie200354', 'XxGraysonBearMysticx', 'GraceDrift44', 'NeonDuckHunter2013',
                     'Brooklyn_HERO2015', 'B3arN3onLion', 'EchoAqua200969', 'XxSamuelIcexXYT', 'Xx_MasterNinjaShadow',
                     'WilliamStarBacon2019', 'AidenLuckyLegend74', 'T0XIC_Infern077', 'RocketZoomIce',
                     'ZapVip3rSparkly', 'Elijah_Pixel96', 'RileyPixel95', 'PixelatedCrazeNeon', 'EliGh0st61',
                     'Mystic_Pixel200471', 'MaxGold3nEcho2018', 'XxMasonBlizzardBanex', 'LightChillByte11_YT',
                     'SilverFlickShadow', 'ZapPrimal84', 'AlexanderTurbo14', 'FlashB3arB3ast', 'XxCod3GlitchxX64',
                     'BrooklynNightRift202', 'J3LLY_Dark2011', 'JackQueenVoid2006', 'SparkFlash68',
                     'BaconPhoenixNightYT', 'Mate0_Dancer94', 'LionHazeDawn34', 'XxSebastianDriftPowe', 'FlickChill50',
                     'IsaacWolfInferno2004', 'GLITCH_Eagl326', 'HeroFrostOrbit2008', 'IsaacWraithLion',
                     'XxEagl3Build3rHaz3xX', 'AmeliaStorm202337', 'PrimalFire20', 'EagleNeonStealth2005',
                     'EthanIceZer0', 'HazePr0Fury2008', 'XxScarlettPlayzPanda', 'BlazeFlamePulse2012',
                     'AvaRocketCode2016', 'Arrow_FLAM32022', 'Danc3rSky2016', 'HawkBlaz3Flick', 'XxLiam_WraithxX20051',
                     'PrismZer0Her0', 'LiamPandaEpic2003', 'Zo3Z3ro2013', 'F0xMax2005', 'MysticSlimeCyberYT',
                     'Ace_Legend52', 'XxUltraRav3nxXYT', 'Qu33nSparkly71', 'PixelCrazeVoid11', 'ScarlettHaze57',
                     'AquaBaconStealth2016', 'Tig3rMagic200914', 'RiftSilverTurbo2021', 'EpicFox200637',
                     'TigerStormyHero2020', 'CookieAquaSilver2011', 'DarkRiderJelly', 'Chl03_Ech067', 'RiftBuilderF0x',
                     'N0vaSlime2005', 'SlimeCrystalPulse200', 'Li0nHawkSkat3r', 'SaberTurb0Rift2020',
                     'XxLuckyMagicKingxX', 'DawnDragonCyber2017Y', 'XxRileyLegendGhostxX', 'XxFusion_NEONXX82',
                     'XxNoahEagleAquaxX24', 'HazelAlphaThunder', 'BaneStealth58', 'Ow3nTurbo200724YT',
                     'Silv3r_MAGIC2016', 'CrystalMoonHaze', 'GalaxyEagleMoon', 'N0ra_Shad0w2008', 'XxFireBuilderxX60',
                     'IsaacQueen19', 'SaberEpic20', 'AbigailFoxCircuit', 'LightVen0mLucky', 'ZeroByteRift2012',
                     'PulseBlastGhost2013', 'OmegaPhoenixQueen', 'Playz_GAMER94', 'XXDAWN_StarryxX2003',
                     'Charl0ttePandaShad0w', 'XxH3nryOrbitxX2007', 'XxGh0st_ST0RMYXX2003', 'CrystalPow3r54',
                     'XxThunderMoonxX2006', 'Nova_Epic2019', 'Hawk_Slim32017', 'StormNight200685', 'LucasBlizzardJelly',
                     'Thund3r_Turbo2011', 'N0raBuilderT0xic2022', 'Jayd3nB3ast2007', 'DarkProPrimal2020',
                     'PrimalMasterCraze201', 'SavannahCrazeZoom', 'Str3amDuck201384', 'Dani3lNightRift', 'Duck_TOXIC94',
                     'XxLionNightGalaxyxX', 'SamuelSpark91', 'L0ganSparklyZap2023', 'Stream_PRO55', 'EchoViperMax2014',
                     'AquaPandaFury33', 'GoldenFlashHero2018', 'Pix3lSkat3rFox2007', 'Silv3rSpark50',
                     'SavannahCircuit30', 'DawnStarArrow', 'XxEllieDawnxX47', 'Ban3Om3gaDrift2018',
                     'XxBlad3FlickStarryxX', 'SparklyPower2005YT', 'AidenP0werSpark', 'XxMagic_BladexX2004',
                     'JulianGlitchStormy', 'DawnGhost44', 'V0id_Alpha2016', 'BlizzardUltraPuls3', 'V3nom_Build3r42',
                     'AsherCrystal20', 'NovaCodeNeon', 'LeviToxicPlayz', 'AriaPixelated72', 'MasterSkyLion2012',
                     'SparklyBlaze37', 'XxLegend_SparklyxX69', 'XxSlimeFlashDarkxX', 'Stormy_FUSION17', 'Lucas_SKY2011',
                     'NoraRiftUltra2005', 'GraysonDawnQueen80', 'XXSPARKLY_ZapxX2007', 'ClawChillOrbit2023',
                     'CrystalPower202076', 'XxDriftLavaSkaterxX', 'Dawn_Aqua59', 'XxStarZoomxX200910',
                     'EagleEchoMax2006', 'JACK_Magic24', 'ChaosFoxJelly', 'XxSilverDuckRocketxX', 'EzraFirePixel69',
                     'ZeroUltraPixel2008', 'Mate0W0lf84', 'AsherStormNova', 'AriaSparkChas3', 'CircuitLuckyVortex20',
                     'Power_Dancer202473', 'FrostCircuitOrbit201', 'CarterEpicCircuit200', 'Hazel_Stormy69',
                     'Chl03F0xN0va', 'TurboAqua201243', 'Frost_Arrow76', 'VICT0RIA_Fire51', 'InfernoDawnKnight',
                     'XxRil3yArr0wxX2018', 'Skater_Frost29', 'ScarlettFlame55', 'Circuit_Zoom63', 'DuckNinja202166',
                     'BaconGoldenBeast', 'Ultra_Ph0enix89', 'Wraith_Eagle200650', 'ChillGam3rMin3r2015',
                     'FrostBaneDuck', 'AlexanderFusionMaxYT', 'XxBuilderZoomxX2017', 'XxH3nryVort3xChillxX',
                     'POW3RSONIC2002_YT', 'TurboFlickLight', 'PlayzChas3Fox', 'Grayson_Aqua72', 'Aubrey_Ninja202164',
                     'AquaDark201128', 'Ph0enix_Blaze36YT', 'Samu3lLightBlast', 'Jackson_Skater18',
                     'Xx_Fr0stAlphaBlizzar', 'Starry_Blade17', 'XxGabri3lZ3roInf3rno', 'Li0nP0wer22',
                     'W0lfInfern0ChaseYT', 'S0phiaByte75', 'DancerFlameFuryYT', 'XxNightBearxX2024', 'Om3gaBlockFlick',
                     'Shad0wPr0201852', 'Inf3rnoArrowBuild3r2', 'AriaFir3Hunt3r', 'JacksonGlitch201162',
                     'XxRavenHawkxX2012', 'Jacks0n_SABER31', 'HannahArrowGhost74', 'Byte_TOXIC49',
                     'HeroMagicOmega2004_Y', 'XxVenomAcexX2021', 'XxEthanProTig3rxX', 'Vort3xInf3rnoDawn200',
                     'PaisleyPrimalStealth', 'BuilderCodeKing2023', 'FlashHawk201433', 'Am3liaSkat3rPix3lat3',
                     'WyattPandaIc32005', 'XxFlick_DRIFTXX60', 'Qu33nBl0ck2019YT', 'FoxVoidRaven', 'NovaFusion200250',
                     'XxPr0Rav3nxX91', 'OliviaBuilderPower20', 'HunterVoid94_YT', 'CRYSTAL_Skat3r14',
                     'MasterSaberStorm90', 'ScarlettDriftToxic20', 'XxPulseTigerxX92', 'Build3rCod3Dragon201',
                     'GabrielEagle60', 'Pix3lH3ro200980', 'Danc3rN3onFlash', 'XxPowerBytexX24', 'ToxicChas32002',
                     'DarkEpic202250', 'XxStormyThund3rxX19', 'LionCrystal40', 'Pr0_Alpha2009', 'AlexanderByteFire',
                     'XxPixelatedNinjaWrai', 'CraftDragonClaw10', 'Mat3oPrimalDrift', 'AceZeroMoon2006', 'BearNight56',
                     'ChaseBlastEagle2018', 'N0ahSt3alth2019', 'XxPixelBeastMasterxX', 'ZeroHawkCrystal2003',
                     'HawkEpic56', 'SaberF0xAqua', 'XXMOON_N3onxX63', 'AquaMagicStar', 'Ic3Nova201338',
                     'S3bastianM00n2023', 'Chase_THUNDER16', 'XxBaneInfern0xX_YT', 'Pix3lBuild3rGh0st', 'NeonDuck12_YT',
                     'RiftMoonLava2020', 'XxAva_B3astxX2017', 'WilliamMoonSaberYT', 'StormyBaneHyper65',
                     'Slime_Li0n202435', 'Zoom_BYTE2014YT', 'GabrielGhostCookie20', 'LukeByteArr0w2020',
                     'JaydenVen0m49', 'Hyp3rChaos2008_YT', 'Ellie_GHOST92', 'XxLukeSonicGoldenxX', 'PandaPulseHawk',
                     'GhostN3onSparkly', 'Code_Drift11', 'MoonLava23', 'Mia_TIGER2022', 'RiftPro202482',
                     'RocketTurboBacon2008', 'St0rmyEch0Arr0w', 'FireHyperQueen', 'XxSparkQueenxX2015',
                     'Jayd3nFrostMystic', 'Xx_PulseFlameCircuit', 'PandaLavaBlock', 'SlimePlayzOmega',
                     'TigerC0deSpark32', 'LegendLucky23', 'Elli3DawnFrost2011', 'BANESTREAMULTRA_YT',
                     'XxDani3lHyp3rAc3xX', 'XxCod3FlashxX2018', 'XxInferno_BearxX2024', 'N3onMin3rNova2012',
                     'Power_Sky2021', 'BLAZE_Thunder200751', 'XxFlickStealthStormy', 'CrystalProBlock2024',
                     'DuckEpicPower', 'Pho3nixArrowJ3lly', 'JacksonVortex2005YT', 'XxPaisleyCookieVoidx',
                     'ChillCyb3rEpic2010', 'LavaGhostCyber', 'Oliv3rTurboDuck2016', 'RiftRav3nH3r0', 'BeastMoonCode',
                     'Chas3FrostUltra', 'FireBlastBlock2019', 'HazelStarryDrift2002', 'Legend_Echo14', 'Min3r_Fusion64',
                     'DarkFlick15', 'DancerOrbit2020YT', 'MiaHunterAlpha2010', 'ChasePrismVoid', 'XxOmega_DarkxX2019',
                     'FuryMagic201845', 'XxChl03Mast3rxX2005', 'Pro_Fox82', 'DancerWolfWraith2007', 'XxByt3DarkxX48',
                     'XxFrostCrazeHeroxX', 'BearDragonEchoYT', 'RocketLegendGamer', 'Cha0sWraithMagic',
                     'XxSophiaGalaxyFuryxX', 'RocketBacon2019', 'Blad3_Moon2019', 'RocketInfernoMoon', 'CraftSt0rmy38',
                     'BlastEpicMaster', 'XxHunt3rEagl3xX48', 'HyperDarkMagic2023', 'XxPixelVortexCookiex',
                     'DragonSkaterPower', 'XxIceDawnxX46', 'XxCraftPixelxX71', 'Am3liaBaconStormy45',
                     'AlexanderDrift25', 'XxGabrielFireSonicxX', 'LucasWolfBacon70', 'AuroraHawkBlock', 'L3viRid3rH3r0',
                     'DriftBeastGolden2016', 'Jack_Blizzard2007YT', 'XxLaylaNightFusionxX', 'ClawMax201368',
                     'PhoenixGhost82', 'L3g3ndBlock64', 'Panda_Shadow201231', 'Cyb3rAc32010', 'Cart3rEchoDark',
                     'AuroraMaxBlade2003', 'LegendOrbit201461', 'ScarlettPixelatedByt', 'NoraNeon202357',
                     'AvaOrbitDark', 'XxAidenSkyVenomxX', 'XxTurboClawSilverxX2', 'MiaThunderNight79', 'AuroraFury56',
                     'MasonSkat3r67', 'XxBrooklynFusionDrag', 'EliF0xEpic', 'Vip3r_Turbo2008', 'XxStarry_NIGHTXX2012',
                     'Thunder_Playz200572', 'GabrielDuck202285', 'Z03St3althEch0', 'Will0wN0va45', 'DragonToxic62',
                     'Xx_CircuitPandaFlame', 'WRAITH_Block56', 'Oliv3rRock3tAqua2010', 'NoahWolfBane36',
                     'Claw_Epic2019YT', 'BladeNinjaCrystalYT', 'XxIsaacBaconStarxX29', 'XxAlexander_HyperxX3',
                     'ShadowStreamFrostYT', 'PulseRogueEpic', 'Danc3rChillBlizzard', 'Turbo_Lava58', 'SavannahNinja24',
                     'FrostStreamVenom2020', 'XxHunterHeroVoidxX20', 'XxMate0SparkC00kiexX', 'DuckAcePanda2023',
                     'Gam3r_Drift32', 'Void_Fox201153', 'FusionMast3rNova', 'Pablosadye03182', 'Gleekrall6628',
                     'Mawerleeds73459', 'Dropwydra095', 'Askinoneil278', 'Panerhetue482', 'Pemakatke3970',
                     'Moxiedelfi8295', 'Caveyleong7504', 'Landupoli5298', 'Tosiluman247', 'Jurascobey974',
                     'Secktower52514', 'Gazalpalas21161', 'Pikogihan81936', 'Sireharam51104', 'Aloradavio766',
                     'Maganepper846', 'Leddaastry66003', 'Elipita40179'}
local RECEIVER_LIST = {'BlazeCraftBeast2013', 'PixelShadowHawk', 'PrismHazeSaber', 'L3viCraftPuls3', 'BlazeOrbitNight',
                       'XxHarperNovaxX2004', 'Ultra_Night68', 'LukeClawHaze42', 'JellyDancerVen0m91', 'StarG0lden28',
                       'LuckyGlitchDrift11', 'Ban3_Blad321', 'XxStealthFusionxX51', 'XxLuckyPrimalxX2009',
                       'HazeIceLegend', 'Bane_G0lden202337', 'St3althRiftFlam3', 'XxAubrey_PLAYZXX2002',
                       'WilliamSilverTiger95', 'Playz_Craze94', 'AriaRiftKing2008', 'Ninja_Lucky67', 'Ph0enixDark2013',
                       'HenryViper201661', 'StormyChill201889', 'NovaDarkMiner2019', 'Gold3n_V3nom2016',
                       'XxJ3llyRav3nxX2016YT', 'SilverBuilderZ00m', 'IceAlphaLight26', 'RogueLightMagic2017',
                       'Crystal_Eagl32009', 'Vip3rJ3llyVoid', 'W0lfLuckySlime', 'RiftFlick2020', 'ArrowDawnMaster',
                       'GraceCrystalSky', 'NeonSparkBeast2013', 'Chill_St3alth2020', 'ByteMaster71',
                       'ThunderG0ldenBac0n', 'HazelStormyGolden200'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
