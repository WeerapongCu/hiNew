-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'Flash_Arrow84', 'GhostBuild3rDrift200', 'XxElijahRiftNightxX8', 'Bac0nBeastKing',
                     'Vict0ria_CRYSTAL2005', 'NoraZeroGolden200239', 'Xx_ZoomHunterCircuit', 'FlameN0vaV0rtex',
                     'MagicArrowTurbo2004', 'XxJulianPho3nixxX85', 'PrismSilver202453', 'GigaUltraZap',
                     'Ph03nixS0nicN30n', 'XxEllieDriftxX73', 'XxW0lfMasterxX2010YT', 'EliEagle201895',
                     'RileyBlazeCode2014', 'Rid3rG0ld3n92', 'XxHawkGigaxX201434', 'JackLucky201774', 'MagicHeroEpic',
                     'PulseHawk20YT', 'OliverDarkChaos2007', 'HarperGalaxyDuck33', 'SavannahPh0enix2013',
                     'JaxonVip3r_YT', 'SKY_Pulse26', 'MasonBladeHawk2022', 'Thund3rCooki32012', 'SilverDriftZer0',
                     'ZoeFire201097', 'DawnByt337', 'S0nicDarkFlash', 'ArrowShadowSpark', 'ElijahArrowStealth75',
                     'Aur0raDancer90', 'XxOrbitDawnxX15', 'XxCraftViperxX2005', 'XxFuryEch0xX200612', 'SophiaTig3rRift',
                     'LUCAS_Flam396', 'Hunt3rBacon59', 'V0rtexChaseQueen53', 'XxMat30Turb0xX28', 'WraithBuilderBeast',
                     'ZeroStarrySpark2014', 'XxPixel_GlitchxX41', 'ZoeQueenAqua', 'XxKingRock3tSonicxX2', 'FurySlime25',
                     'BlazeZoomRocket', 'ZaydenRiftPh0enix', 'XxLaylaStormIc3xX77', 'OrbitRavenQueen2021',
                     'XxJacksonPrimalPower', 'GlitchSab3r39', 'L0gan_Primal2004', 'ROGU3_Silv3r2023',
                     'RiderBladeBear2018', 'PrismChaosDark2007', 'Cod3Fir3Cyb3r2005', 'MagicLionDuck',
                     'XxFlick_FusionxX2010', 'R0ck3tMystic2017', 'NovaCrystal2007_YT', 'BuilderCraftPower',
                     'P0werEch0Pixel22', 'Arr0w_Sky2013', 'XxJaydenSaberStormxX', 'XxThunderOmegaHawkxX',
                     'Cha0sSt0rmyMystic200', 'XxJacksonH3roxX2003', 'XxAquaCircuitStarxX2', 'NinjaDrag0nFire2007',
                     'XxKingL3g3ndxX42', 'Craft_C0de2023', 'GigaInf3rnoB3ast', 'JellySaberPixel97', 'DarkBlast35YT',
                     'L3viPuls3Echo', 'Stream_Nova2022', 'Vort3xVoid2017', 'LegendViperBear20083', 'VoidFlameSky2013',
                     'XxHazelBlastxX38', 'ElijahIc3Orbit', 'XxLuckyNovaxX37', 'XxGamer_BearxX200248', 'Jacks0nAc3V3n0m',
                     'Gabriel_Wraith15', 'Brooklyn_Dragon27YT', 'XxLukeHunterDrag0nxX', 'ST3ALTH_Lion2005',
                     'BlastBac0nHazeYT', 'Mystic_Cookie2014', 'HunterHazeNe0n2003', 'XxLeviSonicxX2004',
                     'GabrielBuilder98', 'PrimalTig3r202199', 'JacksonTurbo86', 'LiamHunterStream',
                     'XxS3bastianSkat3rC0d', 'FireDragonBacon46', 'XxToxicFrostxX34', 'PixelBlade201717',
                     'LuckyMysticCookie201', 'AmeliaSonicStealth', 'GlitchRiftSky_YT', 'XxTigerDrag0nV0idxX',
                     'BladePlayz2008YT', 'WyattCookie2011YT', 'LoganVoidNight2023', 'OliverCircuitRocket8',
                     'HenryByteSaber2021', 'StarLuckyDancer2016', 'ChillMin3r200555', 'Vort3xHunt3rMystic',
                     'LoganFoxSaber202157', 'Aur0raTurb0Flame82', 'Prism_Hunt3r2015', 'LightBaneBlaze2008',
                     'PulseLuckyLegend2019', 'XxBrooklynnThunderCh', 'FlashPlayzIce57', 'EliCookie201962',
                     'XxAbigailRiftDuckxX', 'CyberCrazeStealth', 'Builder_Cookie44', 'Pow3rLavaFlick2021',
                     'CookieSilverChaos', 'PixelatedByteFlame20', 'HarperKnightMagic', 'ScarlettCraftSilver2',
                     'PowerBacon2014', 'XxGabrielStealthPh0e', 'Build3rRogu3YT', 'Inferno_Arrow200520',
                     'Xx_Danc3rFlickVort3x', 'ZoomClawGiga2008', 'CharlotteRavenAlpha', 'LionPandaCircuit',
                     'EaglePixel65', 'GamerP0werClaw', 'CookieStormFlame', 'B3astAlphaToxic', 'Shad0wCrystal2024',
                     'Mat3o_Om3ga78', 'SparklyBlizzardBacon', 'MysticTiger63', 'XxLuke_DawnxX2010', 'JackNovaBlastYT',
                     'ChaosMasterZap', 'XxCrystalHawkInferno', 'OmegaSilverDark', 'RiderBlizzardKnight1',
                     'PandaFlashArr0wYT', 'Haz3Puls392', 'Xx_ScarlettStealthAq', 'TigerUltraVortex36',
                     'GlitchR0gueChill', 'FuryLavaBlast', 'JulianCode42', 'XxFireEch0xX2018', 'XxJulianDawnxX2005',
                     'XxPixelUltraNeonxX41', 'AriaStarrySkater2014', 'FlameBlazeSky2007', 'BlockDawnWraith2014',
                     'Blaz3SparkOm3ga', 'Oliv3r_Min3r56', 'HannahPix3lPuls395', 'XxRiderLavaToxicxX',
                     'SparklyStormyShadow', 'XxPlayzEchoxX22', 'SophiaGalaxyCraft202', 'DuckShadow200893',
                     'Mystic_BUILDER10', 'ZaydenCircuitC0de', 'MagicPrimal14', 'XxSophia_ZoomxX2009', 'FlickBan3Epic',
                     'BaconKingJelly2004', 'PIXEL_Blast200217', 'Rocket_Omega57', 'SonicEpicBear13', 'Arr0wMaxBlast',
                     'XxBlade_ViperxX2010', 'FusionPix3l68', 'XxRoguePixelWolfxX', 'XxAlphaChillProxX',
                     'XxDuckRogu3GigaxX', 'ChillHazeDancer', 'Al3xand3rJ3lly2007YT', 'XXHEROBUILDERXX12_YT',
                     'OliverFlash200369', 'Flam3Dark93', 'PandaAquaH3ro2017', 'RileyLi0n2008', 'Eagl3Shad0wDawn',
                     'Silv3rPix3lPlayz', 'Omega_Saber88', 'Chl0eRift13', 'PaisleyNinjaMaster_Y', 'XxSaberPixelxX2010',
                     'HazeTurboJelly', 'SebastianMystic18', 'Fusi0n_TURB02012', 'MichaelWolf200314', 'Rock3tCraz321',
                     'XxCookieTigerxX70', 'XxSilv3r_Blad3xX2016', 'St0rm_Duck70', 'Br00klynnSky95', 'LegendSkyTiger',
                     'EthanZ3roDark38', 'JacksonMaxFrost12', 'ChillIcePower37', 'DawnCrystalNight', 'Julian_NE0N78',
                     'Hyp3rNight2016', 'C0dePr0Sky', 'EzraRavenPulse', 'BlastTig3rChas3', 'FoxPrismChill201525',
                     'GigaVortex43', 'StarMinerFlash', 'XxGlitch_Sab3rxX2004', 'Ech0PixelatedCrystal',
                     'SkaterCrazeHunter200', 'EliSt0rmyLi0n', 'Xx_StealthPrimalByte', 'CrystalCha0sGlitch20',
                     'Gam3rFusion2017', 'FlameUltra200493', 'Inferno_Galaxy43', 'XXLEVI_VenomxX26',
                     'Mystic_Golden2016YT', 'AUBREY_Ghost2020', 'ShadowPowerThunder', 'NoraHero38', 'Vip3rR0gu32024',
                     'DragonJ3lly2014', 'XxAlexanderFirePrism', 'LightSparklyPix3l', 'SparklyRavenBlade201',
                     'JulianSilverHyper200', 'Knight_PULS32006', 'StealthPandaTurb0', 'HenryQueenFlash',
                     'SophiaPowerHawk2009', 'BladeDancerPulseYT', 'HeroLight201231', 'XxJaxonStormxX2002',
                     'Blad3Rogu330', 'SparkSkyBlast2005', 'XxHunter_Ne0nxX2014', 'LunaHer0Miner2017',
                     'XxJacksonClawRoguexX', 'Xx_Ph0enixWraithPand', 'AuroraEpic201917', 'JamesZoomDancer28',
                     'Thund3rB3astHunt3r', 'RiftSilver94', 'FlickZ00m2012', 'OmegaDarkWraithYT', 'SavannahDrift200722',
                     'JacksonStarCrystal', 'XxPixel_HunterxX96', 'EzraFir3Tig3r', 'AidenN0vaCyber', 'NovaKnightLion',
                     'ArrowStealth201010', 'MoonPandaThunder', 'BearCrazeQueen2022', 'SonicLuckyPlayz',
                     'Ban3Pix3lat3dBlaz320', 'Mat3oVoidPho3nix2017', 'Dani3lPho3nixRift200', 'AuroraHyp3r22',
                     'Rift_Builder200895', 'FlickPrism2011', 'Scarlett_Flame2021', 'XxMaxHer0xX2019',
                     'XxCharlott3EchoxX94', 'MysticVoid2002_YT', 'LionVoidNight60', 'Fir3Slim3Night2011',
                     'Her0_HAWK202366', 'BuilderViper42', 'HannahMin3rHaz3', 'Blaz3Pix3l202359', 'ViperPulseFr0st2003',
                     'Logan_Orbit62', 'ZaydenBeast18', 'C00kieOrbitCraze', 'AlphaJ3llySpark', 'AidenZoomThunder2016',
                     'GraceVoidPro', 'XxG0lden_SaberxX2007', 'DuckKnightZeroYT', 'NinjaHawkB3ast', 'G0ldenV0id200251',
                     'JackHaze200674', 'Micha3lEpicBlad3', 'Turb0BaneZ00m2008', 'PhoenixBytePro',
                     'XxDarkMinerFoxxX2010', 'XX_BrooklynStormTurb', 'HazelMysticMaster202', 'XxEllaClawSonicxX202',
                     'Logan_Rift52', 'LAVA_Gold3n2013', 'Blad3_ZOOM2021', 'GoldenEchoAlpha2002', 'Spark_MYSTIC200599',
                     'CRAFT_Toxic2022', 'XxFireWraithSparklyx', 'OMEGADRAGON2021_YT', 'Br00klynnNinjaM00n20',
                     'HawkChase200227', 'Jackson_B3ar2004', 'XxDani3lRock3txX41', 'XxIceCrystalxX2017',
                     'B3astWraith2002', 'Zo3FrostHaz381', 'L0gan_Thund3r22', 'UltraMaxPhoenix', 'MasonNeonFlame2017',
                     'Aid3n_Crystal2020', 'OrbitCircuitBlade201', 'FURY_Miner76', 'XxJaxonNightxX2015',
                     'AlexanderPrism18', 'EllieToxicPixel', 'Venom_Tiger79', 'GhostBuild3rH3ro', 'CyberMaxPlayz',
                     'Cod3PlayzSpark', 'AlphaShadowFury65', 'ByteCrystalBacon_YT', 'Dawn_Craz32022',
                     'XX_Danc3rOrbitCircui', 'Silv3rFuryChaos', 'ASHER_Dark63', 'Ac3OrbitSparkly93', 'GigaStarNova28',
                     'Grac3SparklyDawn', 'EllieNinjaDancer87', 'JulianEagl3St0rmy', 'DragonRaven31', 'BytePr0Blade',
                     'ZapHer0Silver', 'BuilderChaosCode2014', 'BrooklynDark38', 'XXSILVER_ProxX2013', 'Ezra_Blaze82',
                     'R0gueW0lfArr0w2016', 'WyattUltraRift2018', 'BlockFusionGalaxy', 'XxBlaze_EpicxX2017',
                     'LegendHawkCode18', 'XxAddisonFlamexX2015', 'XxWillowPandaPlayzxX', 'StealthMagic82',
                     'Logan_Turbo80', 'GhostCircuitFlick', 'PhoenixDark83', 'C00kie_Tiger2011', 'DragonCraze53',
                     'AidenMagicShadow_YT', 'XxSavannahSkaterOmeg', 'XxGalaxyHunterJellyx', 'AlphaPhoenixOmega',
                     'ZapHunt3r2017', 'Mate0Jelly10', 'Magic_Viper59', 'Blaz3H3roPanda2020YT', 'MichaelGhost200849',
                     'NoahBuilder65', 'J3lly_Fusi0n26', 'RiftW0lfMaster2019', 'Eagle_Hyper201859',
                     'PrimalLuckyArrow2017', 'XxStarryAc3xX2011', 'R0cket_T0xic45', 'Ril3yThund3rDark78',
                     'V0idCraftRift2014', 'CircuitPlayzQu33n', 'AlphaZeroByte2006', 'AidenDawn22', 'Bl0ckStarryG0lden',
                     'StarLightInferno2015', 'XxFusi0nChillSt3alth', 'Scarl3ttDragonTurbo', 'AubreyHyper11',
                     'JamesProThunder', 'HazelBl0ckCha0s20094', 'EagleStormy38', 'Ph0enix_Pixelated54',
                     'XxMia_NightxX2024', 'UltraGigaBane2011', 'FlashNovaDuck82_YT', 'XxMysticMasterxX2007',
                     'BeastArrowRocket', 'XxBrooklynEchoNinjax', 'TurboZeroGolden37', 'XxZeroMoonxX2015',
                     'LukeFuryEch02021', 'SophiaRiftHunter2002', 'SavannahGh0st64', 'Cha0sOmegaZer0',
                     'BrooklynnClawAce2002', 'XxCodeKnightxX34', 'StormyDancer2012', 'AriaFusi0nBlast33',
                     'DriftPixelAlpha39', 'Addis0nEch0SkaterYT', 'Pix3lNightFusion', 'XxZer0_BAC0NXX2012',
                     'LucasNinjaCyber', 'XxT0xicBuild3rFir3xX', 'Bear_Dancer200961', 'PrimalNovaFlash',
                     'EzraV0rt3x2010', 'BytePlayz31', 'AsherBlizzard94', 'BladeEpicChill', 'LuckyRogue201412YT',
                     'MichaelN0vaJelly2011', 'XxL3viMoonxX17', 'StarryPandaTurb02019', 'WraithHazeLucky43',
                     'AquaVortex19', 'BlizzardMin3r69', 'Jayden_Ice30', 'NinjaFlickSonic88_YT', 'GoldenRocketKing',
                     'ZERO_Stream2010', 'LegendInfern0M00n202', 'RavenGhostArrow2011', 'ProN3on2002',
                     'Chlo3FlickHawk2020', 'XxEllaGhostxX27', 'JamesCraftNight', 'Ava_Her077', 'Dani3l_Orbit26',
                     'WolfCode73_YT', 'TurboAce202035', 'Xx_ScarlettBaneFusio', 'BeastCircuitStarry', 'AbigailBeast74',
                     'EllieKnightMystic', 'BlastCrystalHawk2015', 'XxTigerEpicxX2013', 'XxJacksonBytexX2015',
                     'XxOliviaMaxFlashxX', 'Xx_GoldenDragonPower', 'Galaxy_Thund3r10', 'XxNoahFlamePixelxX16',
                     'ZapLuckyWraith', 'ChloeIceOrbit91', 'Jam3sQu33nAc3', 'Charlott3BlizzardKni', 'MinerBac0n63',
                     'XxJellyGhostGamerxX', 'LaylaRogu3YT', 'FuryCyberBlade', 'GigaHer0Bane2006', 'Samu3lThund3r80',
                     'XxNinja_SkyxX2006', 'Z3ro_Nova2024', 'AlphaNightClaw2017YT', 'Lucky_Silver2019YT',
                     'DanielSaber202332', 'FlashAc3Echo2019', 'ElijahZapVen0m', 'Bacon_Turbo69', 'SavannahFusionBane60',
                     'FuryAlphaHawk', 'Haz3lN3onPro', 'TurboGam3rRock3t', 'FlameWraithCraft', 'Arrow_BUILD3R2004',
                     'AbigailCyberMoon14', 'FlickCrystalZoom', 'SkyGhostFusion', 'Slim3_Craz32016',
                     'Xx_SEBASTIANNINJALEG', 'Mast3r_Spark2016', 'XxOliverEch0Blizzard', 'AmeliaPlayzPrimal20',
                     'Fr0stBuilderHaze', 'Haz3_VOID2008', 'CookieMasterVortex', 'OrbitMiner54', 'XxJulianFrostxX2005',
                     'P0werStar27', 'Build3rSt3althFox', 'HannahEagl3Vort3x', 'XxLuckyL3g3ndxX2018', 'Hyp3r_Chaos2016',
                     'GraysonZap88', 'St3althGalaxyMast3r', 'ShadowMoonSonic45_YT', 'FlameBlizzardCyber20',
                     'JacksonBearWolf', 'Zo3RiftLava2020', 'XXCHAS3CHILLXX_YT', 'HazelStealthVortex_Y',
                     'StreamEch0Saber51', 'MoonSilverCircuit', 'StarrySkat3rOrbit', 'JacksonIce97', 'MasterChaos62_YT',
                     'LionStormy202352', 'BrooklynnByt32020', 'StreamEchoTurbo2007', 'HyperFireDawn', 'XxDuckAlphaxX17',
                     'WILLOW_Chaos85', 'ChloeSilverFrost2008', 'R0ck3tV3n0m67', 'Viper_Zero25', 'SkyGlitchClaw2022',
                     'LeviBacon49', 'XxChaosFlickLionxX44', 'XxIc3Fir3LavaxX', 'VenomPulseAqua', 'IsaacFireEagle',
                     'Rock3tChaosBuild3r', 'XxZoeRocketWolfxX', 'XxBeastPlayzBlastxX', 'Mystic_Alpha2021YT',
                     'XxN0vaLuckyxX71', 'PLAYZ_Gam3r72', 'Xx_CRAZEKNIGHTWRAITH', 'LunaBl0ckStar', 'EzraBl0ck201241',
                     'Ven0mDuckEpic', 'R0cketNightThunder', 'XxAvaFireKnightxX', 'Xx_Jax0nT0xicThunder',
                     'BlazeDarkRift', 'Z3roBuild3rBacon', 'Echo_Pro60', 'Vort3xPho3nix79', 'BYT3_Ic32009',
                     'HannahCrystalDawn200', 'Playz_Craz3201448', 'XxEagle_RavenxX2022', 'Ech0Bane2011YT',
                     'FoxInf3rno2014', 'MasterAlphaHaze67', 'XxRiftBac0nxX76', 'LOGAN_Sky27', 'MinerRavenAlpha20178',
                     'ZeroSonic201068', 'BuilderStreamZap', 'MysticUltraDawn20118', 'Ic3StormyDrift2011',
                     'Duck_Craft200226', 'PrimalHyperInferno20', 'XxViperPhoenixxX17', 'XxHunterDawnBlizzard',
                     'Xx_PhoenixCraftCircu', 'PowerFoxDancer', 'Legend_Omega201225', 'EliHunt3rStar',
                     'AidenLegendBlast2011', 'StreamV0rtexNe0n38', 'Victoria_Star34', 'MaxEpicCraze2012',
                     'DanielNinjaArr0w', 'XxStar_BaconxX13', 'Grays0nBlade66', 'ByteR0cketC00kie', 'FlickByteNe0n',
                     'Oliv3rOm3ga20', 'ZaydenR0cketOmega', 'Byte_Blaze201083', 'Blizzard_Dancer20111',
                     'EzraGlitchJ3lly20196', 'WolfDanc3rPuls3', 'XxPaisleyCookieStarx', 'MiaArrow90', 'Rift_Night84',
                     'R0cketGh0stRift', 'BlazeQueen2019YT', 'NoahHazeDark', 'EpicTurboBlade2004', 'XxHenryGoldenxX66',
                     'GraysonPlayzHero2010', 'LavaDancerDuck2016', 'SparklySaber92', 'QueenChillFrost',
                     'PlayzRogueDrift', 'XxPower_BlizzardxX59', 'Neon_Blizzard2005', 'CraftViper50',
                     'MinerMagicQueen73', 'LegendZap2018_YT', 'DancerPro202425', 'Ech0PixelatedC0de',
                     'SilverRiftGamer2005', 'BlastFuryBlade', 'PixelCrystal33_YT', 'V0rtexPrimal2012',
                     'XxPanda_MINERXX2015', 'Charlott3J3llyWraith', 'Willow_Giga2024YT', 'PulseVenom201892',
                     'RocketKingToxic2005', 'XxStarry_StormxX70', 'RogueArrowOrbit', 'EagleBane2020YT', 'HawkDark41',
                     'XxEmmaStreamxX86', 'AbigailGh0st2017YT', 'HazelCodeKnight', 'XXHANNAH_Gh0stxX70',
                     'SCARLETT_Sonic2022', 'ZoomDarkAce2012', 'XxIsaacGh0stxX85', 'C00kieKnightHer034',
                     'AlexanderNinja2022_Y', 'UltraR0gu32020', 'Addis0nLegendBlade', 'XxLucasEagleProxX',
                     'HannahSonic202041', 'HawkFireViper', 'XxBlast_PANDAXX2011', 'AlphaDragonKing94', 'MaxBlock40',
                     'FusionPhoenix51YT', 'GlitchMaxOmega201264', 'HawkPrimal89', 'Infern0MasterAqua',
                     'XxStormMoonxXYT', 'XxVortexBuilderBlade', 'ScarlettChase2018', 'Pixelated_Viper43',
                     'GamerAceAlpha2009', 'DawnBan3Ic3', 'VictoriaJ3lly200989', 'SkaterAlphaBlade',
                     'XxRavenBlastArrowxX', 'GlitchPuls3Turbo', 'NoahSkat3rGam3r', 'StarryCrystalAce', 'XxJackDuckxX11',
                     'XxSlimeBearCyberxX', 'SavannahProStealth54', 'Inferno_Drift201128', 'Vort3xVoidOm3ga',
                     'XxWillow_ORBITXX70', 'Pix3lSab3r2017', 'LionMast3r2010', 'Hazel_GALAXY69', 'HyperZ00mJelly2003',
                     'XxStreamWolfEpicxX_Y', 'EvelynZoomHyper2006', 'XxLionFlashBlizzardx', 'Puls3Fr0stCraz3',
                     'AuroraCookieLion', 'Z3roGam3r202315', 'UltraBlazePrism93', 'XxCircuitDragonxX10',
                     'EvelynCraftBlade2019', 'Ban3Byt3Wraith', 'Br00klynChillPrism44', 'MateoGamerGhost',
                     'NoraFlashChaos', 'Pix3lPix3lat3dFlam3', 'XxSkaterPandaCookiex', 'StormyIceStorm',
                     'XxPowerProGalaxyxX', 'FlickPixelated74', 'XxElla_BlockxXYT', 'SamuelDancerBuilder',
                     'XxZ00mDriftP0werxX20', 'HawkFlam32013', 'FuryBacon14', 'AlphaLegendEch0', 'Mast3rPix3lDanc3r201',
                     'AbigailV3nomOrbit', 'ZoomGlitchChaos20126', 'SlimeNinjaCha0s2003', 'XxHarper_DRAG0NXX202',
                     'EpicPhoenixPanda63', 'LaylaDarkPixelated45', 'PrimalFuryEagle2024', 'Miner_Duck2017',
                     'CrazeFlashAqua_YT', 'EagleOmega34', 'VoidWolfJelly', 'DriftAcePrism_YT', 'PrismRavenMiner19YT',
                     'XXSKY_SkaterxX202464', 'Turbo_Haze202068', 'CircuitBuilder99', 'MichaelQueenChill',
                     'GlitchEagleLight2018', 'Her0Fusi0nN0va', 'BLAZE_C0de2008', 'AquaLegendFrostYT', 'Pr0PandaLi0n',
                     'Addis0n_NINJA2014', 'XxGhostDragonxX2023', 'ZeroArrowStar45', 'ZaydenChaseCookie200',
                     'WraithTigerChill2021', 'XxClaw_DragonxX2003', 'AquaPixelChaos2013', 'EthanEpicM00n',
                     'BaneRavenBlade2010', 'HunterBuilder201289', 'CraftSilv3rAqua', 'XxNinjaOmegaxX16',
                     'XxJack_StealthxX44', 'ProPulseSaber201516', 'RiftIc3J3lly87', 'XxDragonIcexX2005',
                     'Z3roGold3nPanda', 'CyberStarryHaze2014', 'StormPix3lPlayz13', 'JamesChillP0wer46',
                     'XxPrismNovaBlizzardx', 'KingVip3rB3ast2008', 'C00kieDrag0n201819', 'Builder_Arr0w90',
                     'SkyByteGamer', 'XxEthan_PhoenixxX83', 'LukeNinjaBac0nYT', 'XxMysticCraftF0xxX',
                     'LOGAN_Rift200487', 'FlashDuckDrift2023', 'MateoBlazeBuilder84Y', 'Queen_Claw11',
                     'XxFire_SkaterxX2022', 'DriftBlad3Zap2023', 'NightGam3rZoom', 'BeastThunder202013',
                     'EzraKingBlast2012', 'BlizzardByteAqua', 'LuckyThund3r71', 'XxBac0n_Z3r0xX', 'AddisonBeastRocket',
                     'St0rmyUltraP0w3r19', 'BaconLion62', 'G0ldenNightRift', 'ASH3R_St0rm2016', 'VortexMagicZoom',
                     'Xx_JamesThunderVenom', 'DanielStormyAqua2021', 'AquaKnightCraft2006', 'IsaacSlime81',
                     'PlayzVort3xByt32010', 'StealthLucky96', 'SkyPro2008YT', 'Cod3Ic3Ghost', 'LaylaBlast11',
                     'Xx_Pho3nixOrbitBlizz', 'Zer0StarryDrag0n2018', 'BearRiderStormy10', 'IsaacGlitchNinja',
                     'FuryZ3ro97', 'RiftV0rtex84', 'Giga_Star50', 'Micha3lTig3r2003', 'ProChill200417',
                     'RocketHawkChase54', 'VoidSkaterMaster', 'Zero_ROGUE2010', 'HazeBlizzardSpark', 'L3g3nd_Fury46',
                     'Am3liaOrbitGalaxy', 'FlameHeroLion17', 'XxGam3rSt0rmyCircuit', 'Danc3rShadow55',
                     'V0idMasterSt0rmy83', 'XxDani3lVip3rxXYT', 'Turb0Rid3rV0rt3x2023', 'DriftEch098',
                     'DanielPowerShadow201', 'N0raDawnTurb0', 'Primal_Block200680', 'Ash3rDanc3r67',
                     'AmeliaKnightDrag0n', 'AidenEchoCookie_YT', 'BANE_Night62', 'JackHunterEch0', 'CraftBladeKingYT',
                     'NinjaLionFury', 'GlitchGh0stMin3r', 'XxPuls3_Fir3xX200536', 'EpicHazePixel2006', 'Zero_Turbo22',
                     'HazeGlitchMaster', 'StreamRift74YT', 'CyberShadowDuck', 'EllaStr3am42', 'HawkOmegaKing',
                     'Cooki3_Prism2012', 'ChloeSonic37', 'DancerRiderMaster88', 'FusionProPrimal', 'Chlo3Build3rSonic',
                     'EmmaDancerDrift66', 'Li0nRiftAlpha2014', 'XxMaxLavaFirexX', 'XxAbigailNightxX31', 'LoganGlitch95',
                     'Luk3Rid3r30', 'Samu3lSt3althN3on', 'NeonRogueByte2021', 'ChaseHyper91YT', 'XxR0gu3_Li0nxX2024',
                     'AidenUltraGhost2021', 'Xx_Micha3lS0nicHyp3r', 'XxPuls3NightxX2016', 'JacksonDrift2022YT',
                     'XxHannahDarkClawxX', 'PrismHer0Bac0n12', 'Stormy_Saber22', 'PlayzCrazeBeast87', 'JackCraft200891',
                     'BaneStormNova2019', 'RocketOrbitMystic', 'ZoeLegendMaster2004', 'XxRiftBladePixelxX',
                     'NinjaPho3nix2013', 'GAM3R_King2005', 'Oliver_Craze85', 'BuilderTigerBlade', 'OwenGalaxy19',
                     'GigaCookie2016YT', 'LuckyN3onBan3', 'CookieFoxSaber', 'PaisleyFusionBlazeYT', 'Haze_Gh0st2012',
                     'AubreyPhoenixStream4', 'XxLunaBac0nxX2004', 'SkaterChaseRift2010', 'XxEmma_PANDAXX201153',
                     'OrbitZapIce2011', 'JamesBaneRocket2012', 'HenryDancerOrbit', 'CrystalGoldenDawn',
                     'ZoomDancerChase12', 'EthanGhostSaber54', 'XxVoidEpicxX_YT', 'XXCODEMASTERXX2024_Y',
                     'GhostUltraSparkly200', 'LucasNovaSky2006', 'Vort3xFuryPanda', 'SparklyLionBlast99',
                     'Fr0stNinjaViper76', 'Build3rB3ar36', 'XxStealthKnightPower', 'Lava_Cyb3r2011', 'BaneInfern0Queen',
                     'Drag0nTurb0Max', 'Elli3Build3rAqua', 'SparklySkater27', 'Om3gaSky2002', 'XxMaxLionxX2019_YT',
                     'Zo3Om3gaFir332', 'XxHarperThunderHunte', 'XxJayd3nWraithSt3alt', 'XxTigerEaglexX2005',
                     'Bedawkajus118', 'Esolamuff5654', 'Essejevon752', 'Zekasafram05131', 'Rudrhiott6560',
                     'Kobykirby5065', 'Shaulurtez03358', 'Tarkaharff3468', 'Murgotweh63715', 'Ghaorplis717',
                     'Zalamaize637', 'Polononda047', 'Peersriste0983', 'Zahmnepal93668', 'Crushkwame939',
                     'Noijanay28586', 'Dalkafayma7153', 'Stunzveis4445', 'Hoitgoula8671', 'Greakbredy40848',
                     'Aliajbugni307', 'Iranvanyo429', 'Crociseth1079', 'Aviahash57889', 'Violewilke1115'}
local RECEIVER_LIST = {'AceStarVoid81', 'FusionPix3lat3dRav3n', 'OliverPowerClaw', 'AubreyBac0nOmega',
                       'BearEchoBlade2007', 'XxBrooklyn_HunterxX2', 'XxOmegaHeroxX2015YT', 'Puls3H3ro68',
                       'S0nicRav3nEch0', 'EllieAlphaFlame', 'Ava_GH0ST2005', 'L0gan_Wraith76', 'Fr0stFuryShad0w',
                       'BlizzardZap75', 'StormyZero201280', 'GIGA_Turbo200466', 'LiamFoxAlpha2023',
                       'Shad0wGalaxyBuilder', 'DancerMagicAlpha', 'TurboVip3r88', 'XxRiderLightPrimalxX',
                       'Silv3rV3n0m2019', 'ShadowVip3r2015', 'ElijahLegendToxic80', 'MasterEpicPhoenix200',
                       'Stream_Starry201676', 'MysticToxicGhost2008', 'XxPrimal_SHADOWXX91', 'XxDragonMoonxX2012',
                       'PixelatedHeroAqua', 'XxCrazeNinjaBytexX20', 'Inf3rnoDawnSilv3r200', 'XXGLITCH_MagicxX2014',
                       'Lion_L3g3nd200834', 'XxAm3liaMaxxX34', 'Silv3r_Puls32008', 'DarkSt0rmyCyber', 'SkyRiderPrism',
                       'ELI_Dragon202219', 'XxPowerNeonxXYT', 'XxLavaCraftFlamexX', 'XxClawOrbitxX52'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
