-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'XxKingFir3xX200524', 'SaberPixel76', 'AlexanderSaberVoid55', 'BaconPandaLight90',
                     'XxByte_ChillxX2009', 'Storm_Fir399YT', 'XxStream_PixelxX38', 'N3ONRIFT34_YT',
                     'CookieHawkVoid2009', 'AlphaByte26', 'Galaxy_Dancer29', 'DragonCyberDancer', 'XxSparkRiftDarkxX',
                     'Viper_Chaos202021', 'HyperVortexGalaxy200', 'HunterS0nicJelly', 'LukeCookieRift82',
                     'JamesBearFury', 'SLIME_Turbo2003', 'RiftShadowSpark71', 'XxBlockKnightEchoxX',
                     'Fir3Hyp3rSparkly_YT', 'XxLuckyNightxX2021', 'Eli_Blizzard18', 'XxSt0rmNinjaxX_YT', 'WyattBane57',
                     'DuckEagl32006', 'XxHazeDarkHyperxX', 'AvaIc32006_YT', 'XxRileyBladexX97', 'XxAlexanderStarrySha',
                     'KnightEpicGolden', 'XxWraithCircuitHerox', 'XxBlastGoldenxX74', 'LavaTig3rPuls32020',
                     'N0ahStr3amDrag0n', 'G0ldenN0vaStar', 'EzraBladeNova', 'CrystalGigaThund3r', 'St0rmyEagle71',
                     'XxGh0stOrbitxX65', 'XxChlo3LuckyProxX', 'RocketPro2022YT', 'CharlotteByteRaven20',
                     'VortexRogueDark', 'BlastFoxIce2008', 'IsaacBlast44', 'XxGabrielFrostEaglex',
                     'XxRavenGalaxyFlickxX', 'FlickAquaDark', 'VortexUltraPhoenix20', 'Light_Shadow2018', 'FoxAlphaAce',
                     'Cart3rBlizzardFr0st2', 'SparkStormyVoid78', 'MiaChas395', 'Xx_FlamePixelatedLio',
                     'ZoomPow3rLion97', 'XxLi0n_BytexX2006', 'DragonNova200534', 'Turbo_Rift200245', 'SparkEch0Beast',
                     'WraithShadowHawk', 'InfernoPhoenix85', 'SparkSonic78', 'Flick_Ninja15', 'NinjaSonicCrystal52',
                     'XxBlizzardWolfxX2013', 'HenryTigerStealth90', 'FR0ST_Haze75', 'XxEpic_BLADEXX2014',
                     'Bl0ckPrimal39', 'PixelatedCookie20172', 'XxZ3roMoonxX2024', 'BlizzardQu33nDark',
                     'WraithFlickRiftYT', 'PandaBaneBuilder_YT', 'WRAITH_Rocket52', 'MagicEpicPulse2019',
                     'FusionZapMoon', 'XxPixelTurboHyperxX', 'EagleChase2005YT', 'XxCyb3rGlitchxX31', 'WilliamAqua46',
                     'XxEthanLionIcexX', 'EliWolfZero2008', 'Light_Silver202349', 'SilverViperCrystal',
                     'InfernoProDrift', 'IsabellaLionMax29', 'XXSEBASTIAN_LavaxX78', 'JellyBlast201111', 'ZapMoon14',
                     'JacksonTurboFox2008', 'Xx_Gh0stBlizzardWrai', 'AbigailCrystalRocket', 'XxArrow_HawkxX2002',
                     'ToxicAce34', 'Br00klynS0nic2004', 'Pixel_Chill72', 'JACK_Hyper52', 'ArrowFrostPanda',
                     'DriftPulsePanda20073', 'Prism_Craze27', 'FlashBaconPrimal2005', 'James_Galaxy49',
                     'XxMiaRocketxX2021', 'MysticSonicBlock2012', 'Starry_Primal38', 'OliviaSkaterGamer200',
                     'Elli3_HYP3R2002', 'XXTIGERCRAFTXX74_YT', 'SparklyUltra56', 'TigerThunder28', 'MagicRiftDawn2006',
                     'LucasDawnByte', 'Cyb3rVip3rFlam3', 'EchoVenom29', 'XxLeviLionGlitchxX20', 'Echo_Flam32004',
                     'GoldenFoxCrystal2018', 'RavenWraith2006YT', 'TURB0VIPERR0GUE_YT', 'Om3ga_Cyb3r200376',
                     'XxCharlotteCyberWrai', 'EliDrift201749', 'MasonPrimalRift32', 'Venom_Pixel200740',
                     'Circuit_H3r021', 'Vict0riaCyb3rNinja31', 'XxRiftEaglexX201847', 'EagleTurb0Blizzard',
                     'XxN0vaM00nxX2007', 'LionVip3r94', 'ChaosMax66_YT', 'ZoomLegend2008YT', 'LionRocketPanda2003',
                     'Raven_Flame77', 'XxFlickNeonPlayzxX', 'WyattPandaLion2003', 'PrimalMinerNova',
                     'Isab3llaB3ast200664', 'XxRileySparklyxX2004', 'BlockMast3r58', 'XxAceP0werRiftxX26',
                     'AlphaNightEcho35', 'Aid3n_Light200574', 'WolfBladeBear', 'AmeliaTigerZoom20083', 'Sparkly_DARK73',
                     'JACKSON_Build3r51', 'Rid3rT0xicCircuit', 'ZapPrimal43', 'PowerBuilder200687', 'LegendMasterHaze',
                     'XxEmmaStealthxX2016', 'AquaArr0wZ3r0', 'SPARK_Beast202133', 'XxCircuit_ChaosxX75',
                     'XxZoeMaxxX201559', 'ZoeRocketFlash2005', 'JellySonic2011', 'XxAvaRiftxX83_YT', 'Chaos_PRISM33',
                     'Henry_Echo36', 'WraithOmega11', 'XxBaconEpicxX11', 'ElliePulse201676', 'EthanFlameHyper',
                     'MinerHawkClaw', 'XxInfernoMysticxX40', 'RiftBlockBeast2021', 'StormyFrostSab3r2021',
                     'MichaelOmega25', 'ScarlettOmega66', 'StormyFusionFrost30', 'Jack_V3n0m2004', 'VoidBlock14',
                     'WilliamHyperWraith', 'ChloePrimal59', 'Xx_KayleeThunderNeon', 'XxZoom_EAGLEXX2004',
                     'LeviEagle2003YT', 'Xx_SavannahArr0wSt0r', 'CircuitCraz3Ban3', 'XxChloeBlastxX47',
                     'BeastDancerDawn', 'DarkLavaFox2015', 'Ech0GigaThunder', 'XxAubreyThunderMagic', 'LiamBlaz3Vort3x',
                     'R0cketBuilderClaw', 'HarperChaosLegend202', 'XxHenryZoomxX2016', 'Qu33nMast3r55',
                     'WraithSonicKnight', 'XxEvelynNeonGoldenxX', 'OrbitFurySt0rm2013', 'SparklyCircuitZoomYT',
                     'XxDawnPrismBuild3rxX', 'FuryShad0wAce', 'Ech0_C00kie2019', 'Golden_Omega2011',
                     'XXWILL0W_AcexX2005', 'Playz_Danc3r23', 'IsaacAlpha91', 'Byt3Shad0wUltra24', 'Bear_Sonic2005',
                     'ThunderLuckyStorm201', 'JaydenStealth2003', 'Hyper_Bane88', 'VOID_Byte201876',
                     'Blaz3Thund3r2023YT', 'MiaCyberAlpha', 'Fir3_TURB02007', 'WilliamMoonCooki3', 'XXPRO_VenomxX2021',
                     'HannahStormyLion', 'PandaPlayzGolden', 'BlizzardFusi0n18', 'Ac3_V3nom200724', 'Panda_Raven56',
                     'NovaZapCyb3r', 'IsaacZer0Blade', 'TigerBane2013YT', 'CircuitUltraEpic2020',
                     'XxRocketDriftFlamexX', 'GhostCraft48', 'PhoenixByteUltra2019', 'Her0_DRAG0N80', 'Vict0riaGiga14',
                     'DarkSilv3r2006', 'JulianGoldenPixelYT', 'XxPlayzAquaLegendxX', 'Giga_Pro201945',
                     'RileyHunter85YT', 'Ac3BlizzardFir3', 'EchoSab3rArrow2019', 'ScarlettHero96', 'LiamShad0wTiger',
                     'KingEch0Sky2010', 'RiftZoom68', 'NIGHT_Rocket11', 'EchoNightOm3ga', 'SophiaBeastStream202',
                     'Om3gaAc3200894', 'Jacks0nCircuitPh0eni', 'CircuitHero28_YT', 'Hannah_Fury16',
                     'XxEpicPh0enixxX2023', 'Xx_Charlott3Tig3rVip', 'Dragon_Flick2005', 'LoganWraithStream',
                     'MagicGiga82', 'SkyPrimalDancer', 'EmmaThunderFlash', 'Light_Zoom201362', 'AidenNeonPhoenix',
                     'SilverGlitchSky', 'StormGold3nBlizzard', 'NinjaSaber22', 'JellyStormyDancer',
                     'XXEPIC_Pix3lxX2014', 'XxThunderArr0wxX2002', 'XxLayla_RiftxX89', 'WraithHunter73', 'WolfFlick64',
                     'Mate0Ultra19', 'AriaMagicEpic', 'PaisleyVenomSkaterYT', 'XxOliviaGhostBlockxX', 'LUKE_Epic80',
                     'V0idMax99', 'Am3liaJ3llyFlam32022', 'WilliamBear201570', 'Str3amRav3n2012YT', 'S0nicChas3Danc3r',
                     'ChillStormRiftYT', 'AquaTigerBane2019', 'PlayzJellyZap2011', 'CrazeZap44', 'XxW0lfByt3xX2019',
                     'InfernoSlimePrimal', 'XxPow3rBlizzardxX_YT', 'R0cketUltraTurb0_YT', 'GraceStreamBacon',
                     'MoonVip3rHyp3r2023', 'BladeHyperHaze2010', 'WilliamSlime81', 'AubreyStealthWolf',
                     'XxUltraSt0rmLuckyxX2', 'EchoCraft201996', 'EagleCircuitNinja21', 'F0x_Beast202397', 'DawnNeon85',
                     'RileyFirePixel_YT', 'Will0w_N30N2007', 'VortexCookieDuck98', 'Rift_Turb019YT',
                     'PixelatedSlimeFury', 'HazelFusion201141', 'UltraHunterPrism2022', 'LightBearSparkly2017',
                     'GhostQueen201914', 'MasonCraze78', 'Z3r0EpicV3n0m', 'SILV3RNINJA201433_YT',
                     'XxAddis0nV0rtexxX200', 'DawnNinjaL3g3nd', 'ShadowTurbo29', 'FlameEchoVortex',
                     'ZoomPixelatedLionYT', 'MaxStealthVoid', 'XxRogu3_Ban3xX26', 'XxMateoRiderxX2009',
                     'Victoria_Wraith58', 'TurboBan32010_YT', 'GamerBlazeCircuit201', 'StormGold3nL3g3nd',
                     'C0deHunterViper', 'C0deFusi0n94', 'XxChloeLuckyxX73', 'Xx_GabrielDragonHero', 'Z3r0PrimalSpark',
                     'Blaz3Puls3Aqua2008', 'GalaxyChaseHer0', 'XxFlickAquaxX_YT', 'XxOrbitSkyMaxxX', 'HawkC00kieN0va',
                     'RiftCyber2012_YT', 'AquaStr3am201647', 'XxNoahRiftToxicxX', 'Vict0riaDrag0n2010',
                     'LightNinjaRaven27', 'ThunderFury2023YT', 'XxAc3GigaxX2003', 'Night_R0ck3t35',
                     'LuckyPrimalTig3r2022', 'XxBladeBuilderxX19', 'HenrySkyLight2015', 'XxWolfEpicxX99',
                     'XxRiftSparklyRiderxX', 'Chaos_Ace76', 'XxBuilderFoxPixelxX', 'BaneBlockDuck',
                     'XxZoomProBuilderxX20', 'HenryEcho54', 'Pow3rChas390', 'Chas3_Bacon2020', 'Gam3rZoom66',
                     'LunaClawPanda2022', 'DanielNovaFrost39', 'XxBrooklynGamerSteal', 'XxEvelynHawkxX2010',
                     'Sophia_Sonic23', 'XxSamuelDarkBlastxX2', 'Z3roToxic51', 'AquaPow3rPix3lat3d', 'AvaByt345',
                     'VenomFlame20', 'ClawPhoenixRift2022', 'J3llySab3r200725', 'HunterGamer201583', 'Max_Bacon38',
                     'Scarl3ttDragonStar', 'XxGamerPrimalxX62', 'GAM3R_Rav3n2017', 'Ril3yFir3H3ro73', 'Cyb3rClaw83YT',
                     'SaberFoxZoom2008', 'Rift_Beast51', 'CyberOrbitLegend', 'XxHunterInfernoFirex',
                     'Samu3lGalaxySilv3r', 'EliCha0sR0gue', 'ASHER_Magic200562', 'Kayl33_Playz52', 'Omega_Jelly59',
                     'EthanKnight200889', 'MiaNight43', 'RiftTigerStar2007', 'EliRogue13', 'R0gu3Blad32020',
                     'ToxicBeastShadow', 'KnightRaven63', 'XxCraftDuckPrismxX', 'GigaMagicCod3', 'ChillVenomNinja2006',
                     'XXNOVA_SkyxX2003', 'XxPow3rNovaUltraxX', 'Vip3rPro2021', 'XxMichaelWraithxX72',
                     'XxAceStealthBlizzard', 'PixelPandaF0x2021', 'WolfFireGolden2002', 'XxCraze_OrbitxX90',
                     'WillowLuckyCyber2007', 'AsherStream61', 'HazelGiga33', 'AsherQueen51YT', 'Ninja_FROST92YT',
                     'FrostToxic50', 'LuckyPrismDawn2010', 'XxScarlettEchoxX2009', 'JackHeroWraith40', 'NoahViper46',
                     'AquaV0rtex2004', 'HannahCod3Vip3rYT', 'Knight_Zero2011', 'CharlotteGhostWolf', 'MoonHaz32013',
                     'Aurora_Stealth12', 'Jam3sIc32017_YT', 'XxPaisleyIcexX95YT', 'CircuitH3r0_YT', 'L3g3nd_Ban376',
                     'StarBlockViper49', 'Kayl33H3roRogu3', 'RiderLegend200874', 'EmmaMinerQueen2002',
                     'NovaGoldenPixel40', 'HawkZero2004YT', 'AlphaDarkLucky', 'Viper_Bane77', 'XxGh0st_FlickxX',
                     'Xx_AidenInfernoUltra', 'StarryBuild3r96', 'Cyb3rFusion46', 'Br00klynnSparkly2023',
                     'AsherFlash201168', 'XxFireAquaxX200644', 'StreamSaberSilver', 'LavaLionTiger',
                     'LionDawnRogue200590', 'AubreyBeastFrost25', 'GalaxyStreamArr0w', 'XxMaxNeonxX2016',
                     'NovaN3onDrift67', 'RiftThunderBuilder28', 'XxSlimeAcexX46', 'SAMUEL_Tiger26', 'Chloe_HYPER53',
                     'Pho3nixSparklyOrbit', 'Phoenix_Arrow49', 'SamuelStarryOmega94', 'Gold3nProGalaxy',
                     'AriaToxic202357', 'Ril3yV3nom2021', 'V3nomGold3nPrimal200', 'Ech0G0lden58', 'ByteWraith53',
                     'AmeliaNinja2007YT', 'MIA_Neon69', 'Xx_Ech0Ph0enixLegend', 'ZapNightW0lf28', 'Ash3r_Shadow2011',
                     'GlitchEchoSky95', 'ThunderViperCyber202', 'XxHazelInfernoRavenx', 'HenryArrowFire',
                     'CraftGamer201966', 'KingMinerMoon59', 'LavaGamerBuilder2008', 'AlphaLight2005YT',
                     'XxHyperClawBearxX84', 'CraftGhost29YT', 'XxChl0eViperxX2010', 'AubreyWraithKnight20',
                     'CookieZap200293', 'ByteUltra66', 'XxAriaRiftBeastxX202', 'MagicMystic202381', 'Qu33nGh0st2002',
                     'XxEpicAcexX11', 'Jacks0nSparklyPulse', 'SkyWolf201883', 'GigaDawnV3nom2005',
                     'HazelSilverStealth20', 'JellyRogueHawk2011', 'SkyBlaz380', 'H3r0Orbit2018', 'Vict0riaPixel200982',
                     'LavaGamer202122', 'Amelia_FUSION46', 'William_Slime22', 'EpicN30n41', 'ViperNovaKing74',
                     'XxEthanBlad3BlastxX2', 'VenomSpark39YT', 'BearPrismNinja', 'AceHazePhoenix', 'Isab3llaEagl3Flash',
                     'OmegaEchoDark38', 'DancerGhostPanda', 'Jayd3nFr0stYT', 'XxCraftGigaRiftxX70',
                     'XxCrystalArr0wxX2014', 'BuilderCookiePanda', 'BrooklynnBearDrift', 'Slim3Shad0w71',
                     'Gold3nRogu32014', 'Xx_BlockInfernoRogue', 'XxToxicFuryxX2016', 'LionDragonFusion2020',
                     'Ic3Vort3xCod3', 'BuilderNova73', 'XxHannahPixelxX20117', 'XxRil3yMaxHaz3xX', 'SonicAceToxic32',
                     'XX_Mas0nPuls3Pix3lat', 'Zayd3nFr0stHunt3r202', 'XxAquaUltraFlickxX', 'XxMas0nGamerxX202268',
                     'ChaseChaosViper2013', 'SparklySpark2024YT', 'PrismLightHunt3r', 'TurboKnightFury2020',
                     'EmmaToxic30', 'Star_V0rtex2015', 'L3g3ndThund3rCod346', 'XxChaseNightxX24', 'Fusi0nBlastSkater62',
                     'BlockMagicMoon', 'LoganFlickFlash', 'XxJellyChaseHyperxX', 'Aid3nEcho12YT', 'FusionBuilderBlock',
                     'XXELI_G0ldenxX2012', 'LoganTiger2015', 'Zayd3nStr3amDark', 'XxTurboBuilderDancer',
                     'NoraLuckyDuck', 'XxPixelSt0rmHawkxX73', 'BlizzardRiftNinjaYT', 'BlockGold3nSilv3r',
                     'GlitchSkyDragon', 'XxCircuitStealthxX39', 'FrostStarryToxic', 'Eagl3NightJ3lly', 'P0werClaw11',
                     'ShadowB3astAqua', 'Logan_Rift95', 'FlashBuilder201570', 'Br00klynnBlastRift',
                     'ThunderSilverCode97', 'BlizzardDawnStormy20', 'Xx_MysticPulseBlizza', 'ZapDark202453',
                     'KnightThunderCookie2', 'KnightBlizzardUltra2', 'XX_MichaelNightBlock', 'FuryZeroMiner2022',
                     'Jax0nMasterHyper2014', 'UltraShadowL3g3nd', 'HazelVortex202255', 'XxChillLegendW0lfxX',
                     'XxFrostStormxX22', 'XxEpicRocketEchoxX20', 'WilliamHawk2009YT', 'DriftFir3Fr0st', 'Echo_SKY87',
                     'Gold3nLionPrimal2004', 'Rogu3Dawn40', 'Arr0wUltraWraith', 'XxMichaelPandaxX2019',
                     'AquaPho3nixHyp3r62', 'TIGER_Thunder2002YT', 'Grays0nBeastLava2007', 'GraceRogueToxic2023',
                     'MaxZoomHaze2023YT', 'Ac3SparkPuls32019', 'AlexanderOmega32', 'XxBlastViperStormyxX',
                     'XxSab3rCyb3rV3nomxX', 'Cyb3r_Ultra79', 'XxBearNinjaVortexxX', 'XxChillKnightCircuit',
                     'Pixelated_SKATER34', 'ZeroLion2006YT', 'EllaWolfSt3alth', 'XxAqua_ZapxX76', 'XxLucky_StarryxX32',
                     'Skat3rSonicCooki3', 'AcePandaMaster', 'LionRiftFlick', 'Vict0riaTurb0200755', 'XxStar_BearxX2019',
                     'XxMason_VenomxX2010', 'EvelynLegendGlitch', 'ByteAceSparkly', 'XXETHAN_PandaxX2009',
                     'PixelatedMax2014', 'XxFusionGamerxX82', 'Fury_Stormy2004YT', 'CIRCUIT_Her0202212',
                     'LuckyEchoBlizzard202', 'CraftPhoenixBlade', 'BlockBaneCraft2012', 'FireCrystalVenom70',
                     'Pulse_Inferno18', 'XxAquaGh0stxXYT', 'BlockFir3200966', 'Panda_Ghost88', 'Ev3lynBlizzardNinja',
                     'ShadowRift202390YT', 'AquaUltraFury52', 'Ac3Blast2022', 'Shad0wArr0wOm3ga', 'XxByteEchoxX26',
                     'RocketLionToxic', 'ArrowStorm200932', 'StarLegendThunder45', 'MagicRiderEcho202249',
                     'MichaelMysticN0va201', 'DragonLightGolden200', 'PixelTurbo2004_YT', 'XX_BrooklynnHawkWrai',
                     'XxRock3t_AC3XXYT', 'PixelRiftFlick2008', 'XxWillowSkyxX78', 'GalaxyMax2017YT', 'Pr0Cyb3rByt3',
                     'Xx_ThunderDancerChao', 'Bac0nHawkBlad3', 'Claw_Rogue2008', 'XxPrimalArrowxX2022Y',
                     'UltraRogue201432', 'AidenViperMaster', 'Glitch_Cyber13', 'LukeBane2004_YT', 'XxTigerHunterxX2016',
                     'XxDawnClawJellyxX', 'XxPulseStarryxX40', 'Ne0nG0lden67', 'MinerLegend17', 'SparklyPlayzFury2021',
                     'LegendBlizzard202023', 'Lucky_H3ro70', 'Carter_ALPHA39', 'OliverByteBane99',
                     'Xx_DRAGONTHUNDEROMEG', 'XxFr0stZ00mxX38', 'JaxonCodeFox', 'XxWraithIc3Cod3xX',
                     'PixelWolfFlash201526', 'ThunderOmega60', 'GigaL3g3ndSpark', 'DarkZap87', 'XxWraithLavaxX17',
                     'Xx_AMELIASTREAMWRAIT', 'RiderAceCode2020', 'WillowBlaze2007YT', 'ZoomCyb3rFury', 'H3nry_Night65',
                     'DriftMystic39', 'Aubr3y_Epic41', 'CHILL_Pulse2023', 'SparkGalaxyAqua2008', 'Hunt3rCyb3rClaw',
                     'StreamOmega64', 'Hyp3rZap2002', 'DancerViperMagic2020', 'Ph0enixBl0ckWraith', 'IceAceArrow',
                     'XXOLIV3RB3ARXX_YT', 'Vort3x_Mast3r2022', 'SilverStealth201562', 'Stormy_Spark202142',
                     'B3arH3r02017', 'Addison_Master16', 'MoonMin3r2008', 'Danc3rCraft13', 'Bl0ckHer02015',
                     'Scarl3ttSky200671', 'AL3XAND3R_Puls388', 'AsherCraftKing82', 'NightSilver65', 'BearNe0nArr0w64',
                     'XxAsherQueenxX2009', 'AvaCraftSlime2019_YT', 'XxPowerNovaMoonxX', 'Chas3PrismMast3r2019',
                     'BuilderV0rtex82', 'Br00klynnCraft73', 'VoidAlpha54_YT', 'Cyb3rSkat3r201043', 'ByteChaseEpic2003',
                     'Flick_Tiger2010', 'Danc3rPandaL3g3nd', 'FlameEchoGolden2006', 'SkaterCircuitM00n',
                     'L0ganStarry11', 'MaxKnight61', 'GabrielEpicWolf_YT', 'XxHarperFuryGamerxX2', 'EliSparkVen0m',
                     'Xx_CyberMysticCircui', 'Night_Spark83', 'XxChloeCookieRavenxX', 'P0werV0id94', 'LavaLionGalaxy',
                     'ZO3_Galaxy84', 'XxJaxon_FlamexX2004', 'DawnPrimalSky_YT', 'MoonCircuit26_YT', 'LukeCrystal61',
                     'XxHyper_ZapxX82', 'ScarlettDawnRocket', 'SamuelMysticEpic2021', 'Rid3r_Moon2022',
                     'GhostBaconPixel', 'Pixel_Playz67', 'Rocket_Spark60', 'Blaz3Prism23', 'Hannah_N30n36',
                     'XXLEVI_PandaxX90', 'XxRiderBlizzardFlame', 'XxArrow_ZEROXXYT', 'XxLucasFusionSaberxX',
                     'JellyLegend79', 'Gabri3lPuls3Build3r', 'LaylaSt3althAlpha', 'NoahViperBlock2024',
                     'MoonVenomFusion', 'XxDancerTurboSkaterx', 'GlitchSparkFlash', 'EzraChas3Wolf', 'KingQu33nBacon34',
                     'XxDuckBlastxX94', 'L3viPix3lMystic', 'MoonBaneSlime2003', 'IsaacZoomFrost',
                     'XxPrimalStreamN0vaxX', 'Cart3rSparkFlash', 'GigaWolfEcho2012', 'XxKnight_Slim3xX2012',
                     'Flam3StarryPrism', 'VoidLionSonic201183', 'Chill_Bac0n48', 'KayleePulse76',
                     'GigaFrostPixelatedYT', 'StarryShadowGhost88', 'TurboHyperFlick2005', 'GhostHyp3r54',
                     'ClawRiftPix3l', 'Epic_V0rtex2006', 'ArrowPuls3202297', 'FrostTigerMiner69', 'StealthArrowSkater',
                     'BlockClawRav3n2009', 'HeroLightCraze', 'EllaFoxLight201894', 'XxBuilderAquaxX37',
                     'RocketHazePanda', 'XxDuckRoguexX83', 'Sebastian_STEALTH56', 'King_Crystal92', 'Aubr3yToxicClaw',
                     'PrimalEchoMoon37', 'XxStreamBaconxX2010', 'Owen_Ninja87', 'BladeBlazePrism2017', 'XxAvaB3astxX10',
                     'KnightSparklyCyber20', 'HyperGalaxyEcho20038', 'L3g3ndCrystalCod3201', 'Aur0raCrystalBl0ck',
                     'HazeStarry200771', 'Her0Fr0stR0cket', 'CyberGalaxy94', 'AriaAlphaDark', 'ElijahPlayzTiger25',
                     'Hyp3rGigaBlaz3200784', 'CodeNova201741', 'Inferno_Neon25', 'XxKing_CyberxX2002',
                     'LaylaStr3amPlayzYT', 'KayleeMoonGalaxy', 'GhostByt3Fox2014', 'QueenKingPr02009',
                     'XxJellyShad0wxX2002', 'ThunderBlockStormy', 'EllaH3r029', 'Dragon_Flick201746',
                     'LukeChaseByte2006', 'XxLunaStr3amxX2015', 'GraysonEpicRider2020', 'NoahEpic48', 'Fusi0nDuck21',
                     'St0rmyBladeCyber', 'XxDawnQu33nGam3rxX', 'QueenCyber2006_YT', 'Cookie_Hyper96',
                     'OliviaFlashBlizzard', 'ThunderGiga81', 'WilliamLion82', 'ViperCookieRift2020', 'Sky_Zap201723',
                     'XxMaxStormxX10', 'XxLi0nHyperxX2006YT', 'WilliamDawn2020YT', 'Om3gaCircuitIc3', 'Mia_M00n201435',
                     'LoganEagle42', 'Xx_GraysonVortexZero', 'L0ganBl0ckFr0st2021', 'XxSophiaKnightSonicx',
                     'DragonHunterSpark52', 'ZoeUltraHawk', 'XxBan3CraftxX2002', 'WraithInf3rnoBacon',
                     'Grays0nStreamDuck202', 'Fr0stT0xic69', 'RiftIc3Wraith2018', 'DriftThunderBear2023',
                     'EllaCraftSilv3r', 'Star_BLADE67', 'EpicIc3Pix3lat3d', 'Saber_Builder201491', 'GigaDarkFury2004',
                     'ClawGhostShadow34', 'GlitchH3roHunt3r', 'Cyb3rRiftFir3', 'SkyGamerWraith83', 'XxCyber_MinerxX44',
                     'OliviaThunderSilver', 'XxZ00mStreamxX2018', 'Xx_SebastianBanePuls', 'GlitchUltraFire2004',
                     'Xx_G0ldenInfern0Craf', 'XxEllieNovaPrimalxX', 'ScarlettPanda88', 'XxGlitchOmegaxX2014',
                     'Julian_Thund3r2023', 'ChillSt0rmy2019', 'FoxStormy68', 'NovaPhoenix201861', 'BlizzardMoonAce',
                     'XxTurb0Pr0xX50', 'XxWillowBytexX12', 'GigaFoxHawk2004', 'PixelKnightEcho2015',
                     'XxPaisl3yHyp3rxX22', 'XxShadowNovaxX2005', 'Lion_Sab3r2017', 'N0ahGam3r42', 'Zero_Panda54',
                     'MoonOmegaLava92', 'BlastKnightTiger41', 'GhostSaberDancer2007', 'V0id_Hyper55',
                     'XxPrismStormMasterxX', 'StormRocketGhost2008', 'EllieRiftMiner2013', 'FlickOrbit2003',
                     'EvelynStarryEpicYT', 'Z03Pix3l2016', 'AriaRocketHero2007', 'ZOE_Neon93', 'Starry_Saber94',
                     'Chl0e_Viper2019', 'XxGalaxy_BaconxX18', 'L3viZoomKing', 'AsherAquaRift74', 'N0ahJellyFlash',
                     'XxCraftChaosV3nomxX', 'Ph0enixViper200562', 'JaxonTigerRaven', 'NightLucky42', 'PrismPlayz52',
                     'NoahMagicFury2023', 'BrooklynPulse201071', 'CharlotteViperSpark', 'HeroPixelRavenYT',
                     'Chill_Shadow201384', 'XxBaneRogueToxicxX', 'XxPaisleyCrazeChaosx', 'R0gueV0idLava',
                     'WraithRid3rYT', 'Craz3CrystalDark', 'StarryRocketWolf', 'LucasZoom201997', 'XxKayleeEpicxX86',
                     'V3nomAquaRogu3', 'BaneRiftInfern0', 'Epic_Block94', 'Pixel_Haze29', 'SophiaCircuitTiger',
                     'JulianFlameRider', 'Rid3rChaos2015', 'AvaNeonBear2014', 'HeroBlockCookieYT', 'WillowEchoPuls3',
                     'LiamHer090_YT', 'XxDarkPixelatedPulse', 'Skat3rPho3nixByt3200', 'XxRid3rLightxX2011',
                     'Hyp3rCha0sFlash2009', 'OliverVoidByte2007', 'XxRiftMoonViperxX', 'Craz3_Hyp3r94', 'N30n_St0rmy27',
                     'AvaNight82', 'ISAAC_Pix3l2005', 'StarSonicMagic36', 'SlimeBlaze201892', 'LucasFox201653',
                     'LavaPlayzNeon', 'S0phiaN30n2018', 'SparkRoguePhoenix', 'PrimalLightDawn2003', 'XxProVenomPlayzxX',
                     'MaxUltraTurbo', 'Gold3nSparkly2008', 'KingTurboDragon2004', 'RiderSlime200932',
                     'Xx_HazelStreamLegend', 'Sab3rDragonBacon', 'SparklyChillFox_YT', 'EmmaBlizzardStr3am20',
                     'Tiger_Void23', 'XxWolfPixelPandaxX', 'EliStealthStream2014', 'Eagl3Circuit64',
                     'XxTigerFlamePrimalxX', 'SilverN0va2023', 'ViperSt0rmyG0lden85', 'LionInfernoFrost2024',
                     'WraithEpicMagic', 'Xx_EagleRiderCircuit', 'Lion_STREAM200777', 'Pr0_Rift201758',
                     'GraceRiderHyper55', 'RogueIceBane', 'AbigailStormPrimal33', 'EllieNe0nOmega', 'Cart3rFuryBlast',
                     'XxWraith_NOVAXX87', 'Alpha_POWER27', 'F0xJelly2013', 'Shadow_Omega84', 'ZaydenDarkStarry2011',
                     'XxTurboMoonChillxX', 'PandaPix3lat3dZap', 'XxBac0nMagicPlayzxX', 'TurboLightFusion2010',
                     'V0rt3x_Z00m79', 'AmeliaBlastRift2012', 'NovaOrbit90', 'G0ldenFr0st2003', 'RiderSilverDrift',
                     'AuroraPrismNinja2024', 'Xx_PixelGlitchStealt', 'Neon_Dancer23', 'Infern0Chill2002',
                     'St3althDriftInf3rno', 'Xx_SAVANNAHV3NOML3G3', 'SKATER_Master95', 'RiderCodeSpark',
                     'RogueNovaOmega', 'F0xSkat3r2021', 'MiaPow3r2007', 'GalaxyChaseRaven2010', 'ZaydenMagicPower',
                     'DanielMinerTurbo', 'WillowBuild3r2024', 'LeviFlameNova2023', 'DanielStormPrism2006',
                     'Xx_Build3rPrismNinja', 'LegendByteDawn', 'Haz3_Spark2018', 'BlastTiger2002YT',
                     'LoganVip3rMystic2017', 'Ril3yMoon98', 'Scarlett_Fr0st2020', 'FrostChaos200772',
                     'GamerEch0Galaxy2008', 'EchoQueen17', 'Vip3rLavaHawk', 'Xx_St3althDrag0nMagi', 'FireRift17',
                     'Will0wJ3lly201838', 'AriaDuckWolf', 'LucasFireLava', 'GalaxyLuckyEpic2022', 'Al3xand3rFlick2011',
                     'Chaos_Zoom23', 'Qu33nGhostByt32004', 'HawkB3arMax', 'XxEpicVenomCircuitxX', 'N0vaDark201174',
                     'WraithFrost66', 'Night_Silver201587', 'HawkHazeNinja', 'XxAce_StarxX98', 'XxCraz3B3arxX2002',
                     'Chaos_Vortex32', 'BaneEpicClawYT', 'MinerAquaHyperYT', 'QueenHeroCraze', 'Her0CircuitBlade',
                     'XxGlitchPrismFirexX', 'XxChaosDawnVenomxX_Y', 'MaxMagic201493', 'Rogu3DarkLucky',
                     'EchoGalaxySonic2003', 'XxDrag0nUltraxX2018', 'Chl0e_Ph0enix2005', 'MysticEagle202370',
                     'HawkDuckJ3lly', 'AlphaPr0202179', 'MinerStormy201772', 'XxDanielMinerNightxX',
                     'LoganGigaHyper2003', 'CircuitCyberGamer_YT', 'XxVortex_ClawxX93', 'HannahZ00m44', 'Logan_Min3r18',
                     'EzraUltraInferno', 'LaylaGh0st55', 'MaxDragonVenom63', 'SebastianKnight20087', 'CircuitCodeFlash',
                     'XxChaseGhostSkaterxX', 'Jacks0nQueen201732', 'SparklyEagl32008YT', 'GamerVenomFlame',
                     'HunterRiftSky83', 'Hawk_Night202455', 'JamesLightUltra23', 'XxStream_DuckxX2007', 'Vip3rBlaz398',
                     'Pix3lCyb3rDuck', 'HazeW0lfVen0m2009', 'GalaxyTigerStar20062', 'HunterEch054', 'H3nryRid3r13',
                     'Stealth_ECH02021', 'GamerCircuitMystic20', 'XxAquaZapWolfxX', 'XxMateoNightxX49',
                     'XxCraz3Vort3xxX2015', 'BaneLuckyEch0', 'Build3rCraz3Fox2004', 'AriaF0xTurb0', 'Dark_CHASE200387',
                     'EchoSaberPlayz_YT', 'Byt3FlashBlock', 'FrostGalaxyBlaz3', 'HawkPrism201457', 'SaberMiner200671',
                     'Haz3_Fusion2013', 'Ac3PrimalFlam320', 'WilliamCyb3r200636', 'HazelV0idDark2023',
                     'AddisonVip3r2003', 'NinjaSonicJelly52', 'XxThunderOrbitStormx', 'XxSparklyFlickSilv3r',
                     'Rid3rZ3r0Li0n', 'HenryRaven75YT', 'Gabriel_Spark39', 'CyberFire201965', 'XxDuckV3nomGold3nxX',
                     'LightCyb3rTurbo', 'BeastStarryAlpha2010', 'XxFir3Pho3nixGlitchx', 'ZapNightGalaxy',
                     'XxGhostVoidxX2023', 'AURORA_Stream26', 'LionCraftZ3ro', 'Vortex_Chill2010', 'XxLucasBl0ckMaxxX'}
local RECEIVER_LIST = {'XxEllieSlimeHeroxX', 'ScarlettTurb0Shad0w', 'CodeGigaSkater2003', 'OliverRavenRider43',
                       'KnightIceSkater', 'StormHazeGiga2024', 'RogueRocket84', 'XxDancerGoldenxX2008', 'TigerFlameFox',
                       'PulseBuilderNe0n2017', 'WraithSparklyTurb0', 'PulseSparklyAlpha200', 'XxSilverNinjaDancerx',
                       'POWER_Bane19', 'XxSparkStormyxX90', 'HyperEpicBlade70', 'Fr0stGalaxyNinja', 'GLITCH_N30n64',
                       'P0werPixelChill', 'JackChaosBuilder2014', 'Slime_Stream2021YT', 'XxBlazeRiderxX89',
                       'OmegaSkyLi0n2024', 'XxEzraHazeMysticxX_Y', 'GalaxyNightArrow2009', 'Hunt3rRav3nThund3r',
                       'EchoStream201382', 'HawkFire200783', 'Ghost_Pixel201776', 'XxWilliam_Tig3rxX200',
                       'ProStar201063', 'AmeliaPr0Silver', 'JulianRider74YT', 'BlazeEagleLegend', 'SkyGh0st33',
                       'XxMinerToxicBanexX20', 'Chaos_Block94YT', 'PlayzStarryVoid37', 'Spark_Bacon2018',
                       'VICTORIA_Thund3r2020', 'GlitchRoguePanda', 'BYT3_Aqua83', 'PlayzHyperQueen20076', 'Z0eDark99',
                       'JellyZoomHyper2002', 'Craze_Bear201084', 'MysticNight30', 'MagicVoid84', 'Xx_EzraDragonPix3lat',
                       'StarryHyp3r85', 'LuckyPrism2017YT', 'MysticPro200398'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
