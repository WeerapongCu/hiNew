-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'SkaterRiftSpark_YT', 'Max_Moon2006YT', 'JaydenMagic2020', 'XX_PixelatedHer0Mast',
                     'XxSpark_BytexX2014', 'CraftArrowBacon81YT', 'XxStr3am_PRIMALXXYT', 'Ne0n_F0x2016',
                     'Eagl3King2011', 'V0rtexSparklyAce', 'XxWolfEpicDuckxX2018', 'NinjaSkater202076',
                     'ClawBlastVoid2008', 'ShadowTurboKnight200', 'BearGalaxyRogue', 'Silv3rOm3ga2020',
                     'Jacks0nBlastKnight_Y', 'WilliamToxic72', 'Infern0_Builder2007', 'XxToxicTurboIcexX_YT',
                     'ViperCookieBacon2004', 'XxWillowLavaMasterxX', 'GalaxyGlitch48', 'XxJacksonFoxxX2007',
                     'SavannahRiftFire2020', 'HunterMinerPro2008', 'XxLegend_ACEXX75', 'SparklyBlaze14',
                     'XxChlo3Flam3xX201319', 'RiderChill202040', 'OliviaSparkAlpha41', 'AlphaV3nomPix3l',
                     'EllaMinerCraft96', 'ZapSkyAlpha', 'NinjaIceV0id', 'LiamUltraBl0ck', 'Jackson_Zoom35',
                     'PRISM_Sky80', 'ELI_Star94', 'RileySaber24', 'XxWilliamT0xicxX2006', 'Playz_Beast10',
                     'Mate0Her0Hunter', 'EthanAce200254', 'HawkOrbitPix3l20', 'PlayzBlade86', 'AceBeast30_YT',
                     'SamuelFrostWraith', 'IcePixelHer0', 'XxNinja_ICEXX13', 'Mas0nStreamStar', 'P0werFuryDancer2012',
                     'XxThunderAquaxXYT', 'XxJulian_MYSTICXX45', 'EthanCode201513', 'XxJellyRiftxX2002YT',
                     'St3althBaconCod3', 'XxGraysonRogueMagicx', 'Gam3rKnight201968', 'WillowInfernoGalaxy2',
                     'AbigailKnightStream', 'LegendStar2005_YT', 'XxMasterClawEaglexX2', 'PowerFlickMaster2004',
                     'FUSIONECHO2007_YT', 'StreamMagicBlock2008', 'RocketNovaClaw', 'FlickGalaxyHero',
                     'IsaacIcePower_YT', 'ArrowGlitch201968', 'XxMaxSilverxX25', 'KingZoomMoon97',
                     'XxCrazeCrystalFoxxX', 'Dragon_Flick200673', 'Hunt3rSab3r201461', 'DuckRiftNight80',
                     'EZRA_Cyber50', 'Ech0ZapDuck', 'XxDragon_StormxX2003', 'BlockPow3rYT', 'XxCrazePrimalFusionx',
                     'Hero_Galaxy66', 'LAVA_Zero95', 'SaberHawkStealth', 'Byte_Echo24', 'StarryCircuit75',
                     'XxProEchoSonicxX2021', 'WraithMysticShadow34', 'GalaxyMin3rOm3ga2008', 'ABIGAIL_Fusion33',
                     'LegendKnight201580', 'Ninja_Nova91', 'XxJaydenBlizzardxX73', 'XxStr3am_L3g3ndxX201',
                     'BlockHyperKnight2010', 'Liam_Drag0n2007', 'V0rtex_Zap2017', 'NoahStreamMoon2014',
                     'Fury_Eagle202146', 'BearToxicArrow201080', 'XxGrace_DriftxX2008', 'Xx_SavannahC00kieC0d',
                     'XxR0ck3tFlam3xX16', 'AvaN0vaC0de', 'CircuitFlameToxic', 'Arr0wR0gu3Rav3n2004', 'Arr0wZapGam3r',
                     'Aubr3yTurboClaw2010', 'MiaSaber38', 'H3nryRock3tGold3n', 'XxIsabellaStealthEpi',
                     'JacksonBlizzard20186', 'MichaelOrbitTigerYT', 'XxAceRavenSkyxX', 'W0lf_Dancer94', 'Z00mIceAce',
                     'AidenHeroHawk', 'StarryDragonPhoenix2', 'NoahAlphaStar73', 'Craz3Rid3rCrystal',
                     'IsabellaOmegaCyber20', 'IsaacAce54', 'Craz3_ECHO50', 'Orbit_H3ro64', 'Rock3t_Ghost2002',
                     'S3bastianCod3Mystic2', 'AubreyFox49', 'CodeGalaxy200990', 'XxHawkIceEaglexX',
                     'HazelStealthMaster25', 'Z00mPixelated56', 'Rid3rNovaGalaxy', 'Xx_GabrielV0idMystic',
                     'GraysonNinjaPower56', 'RiftVortexCraft2017', 'StealthChaosPower38', 'Epic_Ic3201615',
                     'Star_Pulse57', 'XxAid3nRav3nLavaxX', 'BuilderJellyEpic2021', 'LukeBlastBlaze79',
                     'XxCrazeClawxX2022', 'CraftDanc3r2011YT', 'Vort3xWolfVoid', 'XxWraithStr3amxX2011',
                     'CraftLegendMoon', 'XxJam3sMaxSkyxX2017Y', 'Bl0ckFuryBac0n2002', 'PaisleyS0nic2016',
                     'HunterHyperChaseYT', 'Micha3lR0gu3Crystal7', 'Z0E_Skater2013', 'Build3r_H3ro45', 'Her0AcePlayz',
                     'OliviaVenomOrbit', 'ProEcho2013YT', 'G0ldenN0va2004YT', 'KingCrystalPixel2023', 'Blaze_Zoom26',
                     'Z0eInfern0St0rmy', 'Ninja_Turbo2015', 'Z3roSt3althSilv3r201', 'Blade_Circuit95', 'GALAXY_Bl0ck36',
                     'CraftVortexFlame2013', 'L0ganLi0n2010', 'XxGraysonUltraZ3roxX', 'ElijahLegendFr0st202',
                     'William_Rogue17', 'ViperLuckyNinja26', 'XxGoldenChaosxX57', 'HyperAce46', 'StormGiga86',
                     'Queen_Aqua97', 'HarperBearHawk2004', 'WillowGold3nStar', 'KnightBane202031', 'DancerMax65',
                     'CarterByteSilver2003', 'Chlo3Mystic2020YT', 'ArrowRavenGalaxy', 'RiftTurboEpic2002',
                     'Haz3lKnight54', 'AL3XAND3RALPHAZOOM20', 'XxLucasFlamexX43', 'LegendRiderBac0n2024',
                     'ZoeWraithVortex2022', 'Pix3lIc3Glitch2021', 'XxBlockPowerxX65', 'ArrowPandaMaster2014',
                     'Chl0eCraftBac0n2010', 'AuroraFox88', 'FUSION_Crystal87', 'Chlo3_Byt383', 'G0ldenJellyPlayz',
                     'Cooki3Danc3r2012', 'Alpha_Miner39', 'XxTurb0FuryCyberxX20', 'William_Skat3r22',
                     'JaydenDrag0nP0wer', 'PrismGolden48', 'CircuitGlitchMiner', 'XxEagleBac0nxX2005',
                     'Jayd3nVip3rStormy', 'Hero_Bacon2005', 'SavannahFr0st90', 'LeviSilverOrbit2011', 'ChloeDragon68',
                     'Oliver_Cookie77', 'LeviC0deBlaze', 'FusionTurboWraith79', 'V0idIc32005', 'Ic3_Sky201644',
                     'ClawNinjaByte', 'XxChas3StarryWolfxX', 'RiftBlizzardJ3lly201', 'EllaPlayzBan32015',
                     'NovaB3ar200764', 'Thund3rStormyToxic', 'C0deMagic2006', 'QueenFuryFrost200528',
                     'XxSonic_Sab3rxX23', 'XxHyperFlamexX84', 'Flam3_Inf3rno14', 'HazelBaconStorm2007',
                     'LEGEND_Turbo32', 'XxCharl0tteFuryRiftx', 'VenomRider200835', 'Ven0mDuck81', 'CircuitW0lf87',
                     'DancerHeroPower', 'StreamPulseBlock', 'HANNAHLIGHT2024_YT', 'HarperPlayz42', 'Thund3rCraz3Lucky',
                     'XxPuls3MoonxX2012', 'MichaelGamerGh0st89', 'XxMaxPrimalNovaxX', 'MysticBan3Aqua',
                     'XXHERO_HawkxX2021', 'SparklyV0idBlast2011', 'Elli3_Puls320', 'King_Light2013YT', 'AvaWraith56',
                     'PixelatedNovaChill', 'DancerFlameByte', 'RoguePixel84', 'JellyClawPhoenix',
                     'Aubr3yHyp3rG0ld3n201', 'SebastianGalaxyHaze2', 'S0nicStream2016', 'Gabri3lN30nYT', 'EmmaProLion',
                     'LiamByteDawn2009', 'TurboBuilderGhost200', 'FrostZ3roStorm', 'Alpha_Giga201563',
                     'XxJaydenVoidCraftxX2', 'XxStreamRogueDriftxX', 'Str3amChas3Om3ga2012', 'XxEagleWraithxX20074',
                     'DancerBuilderEpic', 'AmeliaFusionDuck2002', 'Hyp3rGold3n17', 'HawkByteCyber', 'DriftGoldenMagic',
                     'GoldenMysticFlash', 'GabrielCraftTiger200', 'BaneTurbo200561', 'ZOE_Craze200622',
                     'Galaxy_Dark2018', 'PowerPanda200425', 'Moon_Phoenix61', 'Claw_Frost92', 'XxSonicJ3llyDragonxX',
                     'FusionViperEagle', 'XxBearDarkxX2004', 'SebastianF0x2004', 'Thunder_Byte78', 'Jax0nThunderEagle',
                     'S3bastianPrismToxic', 'Drag0n_Cha0s29', 'CraftBaneChaos20', 'ToxicDancerChaos2003',
                     'Xx_C00KI3SPARKL3G3ND', 'Bac0nSlim32019', 'XxAlphaViperUltraxX', 'XxOliv3rRock3tAlphax',
                     'Riley_Blade201558', 'XxCodePixelatedPrima', 'XxMasterBlockProxX', 'ZoomPhoenixToxic_YT',
                     'EllaNinjaWraith', 'ByteDrift50', 'XxAiden_DawnxX60', 'KingGam3rFlash', 'XxDarkFoxQueenxX',
                     'JackEpicQueen_YT', 'SavannahByt334', 'FusionBlock61', 'LiamH3roFlam32010', 'EpicSparkTurbo_YT',
                     'GraceWraithKnight200', 'ROCKET_Lucky49', 'ByteDriftGamerYT', 'R0gu3EpicHawk2004_YT',
                     'BladeDuckMagic', 'ClawMystic201769', 'EliPixelatedInferno2', 'Ev3lynFlam3Pow3r', 'SilverBlast49',
                     'HannahFlickRaven2016', 'Ne0nW0lf14', 'StarMysticPanda', 'Blaz3DuckBan3', 'V0idShad0wFlash',
                     'HarperGhostBeastYT', 'Omega_Pixelated75', 'EthanPixelated31', 'EagleChillWraith2023',
                     'SKATER_Pulse80', 'Skat3rMoonBuild3r', 'Xx_PHO3NIXSPARKLYKIN', 'V3nomFoxIc32024',
                     'R0gueC00kieInfern020', 'GlitchCod3Ghost', 'V3nomProBan3', 'AriaWraithTurbo', 'LegendZoom12',
                     'Gam3rGiga20', 'JaydenPixelatedS0nic', 'EmmaSlim3Rock3t', 'CodeBuilder73', 'XxJamesClawNightxX20',
                     'GhostArrowFlash2008', 'NightGam3rGiga2024', 'N0raEch0Bane', 'AlexanderBane78',
                     'JackNovaMiner200519', 'StormyThunder200836', 'ClawNinjaWolf', 'BlizzardStarry51',
                     'Rav3n_Turbo2022', 'XxDuckStealthxX19', 'Flam3_Ghost97', 'B3astB3arRav3n2011', 'LoganHazeWraithYT',
                     'XxL3viLightFrostxX', 'Hunt3rR0ck3tStar', 'XxWolfClawxX55', 'XxHaz3ArrowxX2024',
                     'RiftBlizzardSparkly2', 'WillowFrost201992', 'XxElla_EpicxX2017', 'GhostStarry2005_YT',
                     'SilverJellyBeastYT', 'Xx_Br00klynnBlazeAqu', 'GabrielMasterGolden2', 'Echo_Ace2009YT',
                     'Vort3xStormy26', 'Claw_Raven78', 'XxSonicFlashxX2009', 'Chlo3_GHOST2023', 'Galaxy_Playz200552',
                     'Rift_Arr0w2016', 'Oliver_Chill17', 'Knight_V0rtex2022', 'SparklyG0ldenHunter',
                     'Elli3Inf3rnoTurbo80', 'FirePixelBane2020', 'VenomPrismNova2006', 'CodeVoidArrow',
                     'XxOrbitArr0wxX201087', 'XxHenryStormNeonxX', 'MysticFlickChaos', 'T0xicSky202028', 'Ace_Void25',
                     'MoonHyperIce72', 'ZapLucky202271', 'SaberBacon2007', 'XxSophiaSaberxX2014', 'PaisleyDuckFire74',
                     'CircuitZoomDawn94', 'XxLukeBytexX2006YT', 'Xx_BuilderBaconLucky', 'XxEvelynDragonOmegax',
                     'LionNeonStar2007YT', 'Qu33nN0vaV0rt3x2011', 'ClawUltraChill2022', 'CraftBlizzard54',
                     'XxJulian_V0rtexxX200', 'ZapFlickClaw', 'UltraInfernoMaster_Y', 'XxCraze_FoxxX79',
                     'XxShadowGlitchFlamex', 'SebastianInfern0V0id', 'EagleSkyHyper', 'XxPixelFuryMoonxX200',
                     'XxEzra_MAST3RXX13', 'OliviaShadowHawk23', 'XxSt0rmFlashxX2010', 'Br00klynnSlimeByte',
                     'Xx_SebastianStormyVo', 'Stream_Ne0n50', 'Flick_Glitch13', 'Cooki3Z3roZoomYT', 'ArrowLegendBlock',
                     'XxZapFuryZeroxX', 'Haz3Craz341', 'NeonMoonPulse2017', 'BaneFrostLegend', 'Aid3nN3on98',
                     'CarterLightStream201', 'XxToxicRavenxX2024', 'JulianStormyViper', 'AbigailNe0n80',
                     'Silv3rB3astPlayz2011', 'Tig3rChillL3g3nd', 'Mas0nP0werBeast', 'BaneArr0w2014YT', 'GraceStreamZap',
                     'JamesBearVoid', 'Jaxon_Ninja58', 'XxQueenBlastxX83', 'XxCraftNightxX2010', 'SkyCookieMystic52',
                     'SavannahNe0n42', 'CrazeHero17_YT', 'XxBeastFuryxX53', 'XxCraz3CraftxX_YT', 'NoraToxicSlime2003',
                     'FlickAce97', 'BrooklynHaz3Wraith20', 'N0raPixelCrystal', 'JulianNinjaBac0n',
                     'XxJacksonBaconxX2008', 'BaneStorm39', 'WolfToxicTiger', 'GalaxyPandaChaos2002', 'Haz3Str3am60',
                     'StarFoxCookie201614', 'ZoeKnightBlock2021', 'HunterGhostAce', 'Jam3sOrbitUltra16',
                     'J3LLY_H3ro2002', 'SophiaPandaCraze', 'Blaz3CraftVoid', 'Duck_Pixel65', 'HeroSkaterBlizzard20',
                     'EthanBlad3Craft', 'AriaNeon200597', 'XxPhoenixPixelKingxX', 'HunterRiftSkater2011', 'Ac3Wolf2017',
                     'ScarlettEagle2005', 'JaxonV3nomPix3lYT', 'Pix3lBan3Nova35', 'SparklyOrbitStormy17',
                     'Gh0stPulseStealth', 'XxMateoKingFusionxX', 'XxCircuitWolfBlizzar', 'AlphaHer0200341',
                     'RiftBuilderDragon201', 'GoldenBlastBlock87', 'Flick_VOID52', 'MysticSilverPower',
                     'GigaSlim3Arrow', 'XxRileyCyberLavaxX20', 'RiftHyperNova39', 'PixelatedBlade200430',
                     'XxByteEagleIcexX2024', 'ScarlettArrow22', 'WOLFGHOST74_YT', 'XxCircuit_GlitchxX75',
                     'EliFlickPlayz', 'NightRocket42', 'XxDuckSparklyDriftxX', 'OliviaSaber32', 'VictoriaAce43',
                     'S3bastianLightBlad35', 'MinerInferno44', 'XxEv3lynBan3FoxxX202', 'MinerLionPlayz2015',
                     'MysticGold3nPrimal20', 'CraftQueenGhost', 'LavaBaconMagic2006', 'EllieSkyCraft46',
                     'CraftChaseDrift56', 'XxStar_PowerxX201452', 'AriaSparklyPrism2020', 'XxJaydenZer0FuryxX',
                     'HazeR0cket201613', 'XxBladeOmegaCyberxX', 'XxAsherUltraxX2021', 'P0werIce2024_YT',
                     'EpicLion201674', 'Brooklynn_RIDER2003Y', 'HunterAlphaCrystal20', 'Cooki3AquaSab3r',
                     'HazeBearStealth2024', 'DarkDawnZ00m', 'Paisl3yDawnAlpha2003', 'PulseHazeArr0w', 'NinjaInfernoMax',
                     'XxFlickHyperxX86', 'XxPrimalLionxX79', 'Charlott3Chas32024', 'Turbo_Haze97', 'Pix3lKing36',
                     'MaxStealthLegend57', 'Gold3n_Haz342', 'FoxPrimalTiger', 'PulseSilverChill2010', 'EliEpicArrowYT',
                     'Paisl3yFox19', 'XxFlashVoidxX201243', 'StormyStarry202145', 'DanielJellyBacon59', 'FoxRaven39',
                     'XxElla_N0vaxX2006', 'XxCrazeShadowxX40', 'AubreyOmegaRocket58', 'StarryLi0n86', 'FireAceNova21',
                     'Sab3rEagl3201312', 'RiftRocket2008YT', 'LucasByte40', 'SavannahDuckWolf2022', 'EchoDarkTiger',
                     'NeonEchoVoid2014', 'Elli3_Zoom2023', 'OliviaBlizzardArr0w2', 'JulianEpic201015',
                     'Xx_SparklySaberPlayz', 'AidenMax2005YT', 'AriaShadowGamer', 'EliMagicGh0st',
                     'Xx_GraysonJ3llyRid3r', 'PhoenixSparkly76', 'XxKingSparklyPixelxX', 'Ava_Her02021',
                     'Lucky_V0id2014', 'XxPulseBlastxX34', 'LightSparkShadow', 'Amelia_ULTRA67', 'XxShad0wPr0xX88',
                     'LEVI_Glitch2015YT', 'LegendN0vaClaw', 'Orbit_Cyber2016', 'JulianT0xic201341', 'KayleeKingPro',
                     'BaconRaven202332', 'LavaMaster201942', 'JackCyberZap2008', 'Toxic_Craft200880',
                     'XxHarperFoxBeastxX', 'HazelCircuit59', 'Slime_Lion68', 'ChillRaven93', 'MateoBeastGlitch',
                     'Savannah_Build3r2005', 'PrismBaneNova', 'Z03R0ck3tLucky', 'Vip3rFoxCooki32003', 'IceByte201036',
                     'C0deZer0202013', 'XxBan3LightxX2015', 'XxMichaelUltraxX_YT', 'Fusi0nRift2015',
                     'Haz3lStr3am200497', 'SparkSonicEcho85', 'Code_Zap16', 'HawkGlitchCrystal78', 'LavaPrismWraith',
                     'OrbitMasterDrag0n', 'Elli3CraftZap', 'SparkFusionRogu323', 'XxAsh3rTig3rxX2018',
                     'XxN3onGhostxX2018', 'Craz3Flick57', 'XxEaglePulseChillxX', 'Mas0nCyberEch0',
                     'XxHawkBladeSaberxX20', 'Xx_JacksonNinjaQu33n', 'EchoChillZap', 'UltraV0idMagic2012_Y',
                     'CrazeTigerChaos2010', 'Z3ro_Blad329', 'MagicPix3l99', 'LionCrazeStorm', 'XxHunter_AquaxX20056',
                     'XxBaconBuild3rLightx', 'Chlo3Aqua45', 'PixelHawk10', 'XxPlayzSt0rmyFlashxX', 'DanielFireNight',
                     'XxHeroPhoenixTurboxX', 'M00nHyperAlpha', 'OmegaRiderUltra', 'AidenDuckClaw', 'Aria_Gam3r12',
                     'VortexWraithCraft200', 'MoonL3g3ndStar', 'OwenCyberHero2024', 'XxHazel_QueenxX2021',
                     'Beast_Zap88', 'DuckUltra201577', 'Star_Ninja43YT', 'PulsePlayz48', 'Moon_Tiger2007',
                     'HazelLegendCraze', 'XxRavenPrismxX_YT', 'Ghost_Venom78', 'XxZapBaneClawxX',
                     'XxDanielT0xicPh0enix', 'XxEmmaSkaterStealthx', 'Alpha_Glitch57', 'TigerFusionRiftYT',
                     'HyperDancerPixelated', 'Craz3Cod3Mystic', 'Samu3lChas390', 'SkaterStarryFlick',
                     'XxJam3sZapOm3gaxX', 'XxFusion_GlitchxX25', 'Mystic_V0id2006', 'XxStealthPixelatedSt',
                     'Zayd3nOrbitPix3lat3d', 'LiamT0xic2021', 'XxOrbitBlockVoidxX', 'XxZ3roInf3rnoSonicxX',
                     'XxWraithLavaGlitchxX', 'MagicRavenChase', 'Zayd3nTurb0Arr0w63', 'OrbitDarkShad0w',
                     'QueenCircuitBac0n54', 'LucasGoldenBlade', 'Xx_Harp3rV3nomBuild3', 'RiftB3astStar', 'V0id_RIFT20',
                     'XxJaydenZapProxX2010', 'AuroraCraft200854', 'BuilderBaneFlick2015', 'Gamer_Flame30',
                     'GlitchOrbitOmega', 'Jack_Lion34', 'XxOliverPrismHeroxX', 'MasterWraith2011YT',
                     'SophiaCrystal2012YT', 'XxByteRiftxX2005YT', 'StormBeastInferno', 'DriftAce67', 'PixelHawkHero10',
                     'WraithVoidVenom2002', 'Puls3Hawk2009', 'NoahNightDragon50', 'BladeGolden20',
                     'FlashOmegaDragon2016', 'B3astStormy17', 'N3onLight44', 'Venom_Ghost91', 'HannahRock3t22',
                     'XxPow3rOrbitxX_YT', 'ChillEpicPh0enix2010', 'XxStarryJellyxX30', 'XxRid3rAquaNightxX',
                     'LunaGold3nAlpha97', 'L3g3ndBlaz330', 'BlazeWraithHyper2016', 'Claw_Flick202358',
                     'XxKnightToxicWolfxX', 'BLASTPROLAVA_YT', 'ProPrismDawn', 'LightThunderFlame', 'Jacks0nSt0rmy22',
                     'XxEliArrowxX2005', 'SilverFusion201788', 'SavannahDark200216', 'EliDragonCraze',
                     'XxAquaVoidNovaxX', 'Micha3lW0lf64', 'DarkLightZer034', 'GamerStarry31', 'XxGigaDawnxX85',
                     'Thund3rCooki3Wolf', 'L3viBlizzardRift2013', 'Haz3Vip3r60', 'Xx_DawnPixelatedVort',
                     'CHAOS_Ac32014', 'MinerC0deZap', 'FlashLavaAqua60', 'BuilderBacon28', 'TurboGlitchGolden68',
                     'Jacks0nGalaxyRift', 'XXAQUA_SparkxX33', 'NightZeroAqua', 'XxMia_BUILDERXX2023',
                     'CraftSkaterCookie200', 'XxFlameGoldenxX2008', 'SparkBac0nR0gue21', 'ChaosHawkShadow2023',
                     'XxWilliamShad0wChas3', 'DuckOrbit200669', 'DuckL3g3nd51', 'Flash_ROGU32024', 'VoidOrbit2006YT',
                     'ArrowBuilder201749', 'Thund3rBlad3Max', 'Magic_PHO3NIX57', 'XxN0ahPlayzxX2018', 'Danc3rN3on2010',
                     'XXC0DE_StealthxX36', 'DuckF0xDrag0n', 'XxBlaze_FrostxX2004', 'S0NIC_Turb077', 'LionDarkCrystalYT',
                     'JacksonJ3llyPro70', 'GoldenSlimeChaos', 'SamuelViperDawn', 'VenomMoon16', 'Cyber_Vortex2015',
                     'EchoStarry18', 'FLAME_Bane201665', 'IsaacBladeNight2006', 'XxSt3althDuckxX2011',
                     'Xx_LightMasterSkater', 'HannahSlimeAlpha', 'Xx_Hunt3rZ3roPho3nix', 'XxRil3y_Blad3xX2013',
                     'PrismRock3t50', 'Panda_Aqua2022YT', 'C0deTigerWraith60', 'GalaxyBlast27', 'EllieBeastZoom2023',
                     'CarterCrystalClaw202', 'ChloeLegendNinja', 'BlockB3astHunt3r2012', 'XxStarryNinjaxX2017',
                     'ThunderHazeRift', 'Dark_Queen202136', 'FrostMasterBlaze', 'CLAW_Pro66', 'MasonGhostSonic2024',
                     'NightAqua200564', 'EthanRavenStarry69', 'Flame_Void2005YT', 'ChillPow3rDawn',
                     'XxWraith_BladexX2010', 'Drag0nKnightLegend34', 'HyperChillPixelated2', 'Fire_CYBER20',
                     'CookieDuckDawn2015', 'ChillWolfZap26', 'XxZeroBuilderLightxX', 'XxDriftSkyHeroxX',
                     'Levi_ACE2005YT', 'OW3N_Knight2017', 'Haz3Primal80', 'BlazeW0lf201798', 'XxN0vaShad0wFr0stxX',
                     'SkaterCodeChase', 'CrazeBlock200559', 'XxStormySlim3xX2013', 'BaconDragonFir317',
                     'XxHunt3rLionxX2023', 'BANE_Stealth202115', 'WillowAceToxicYT', 'Pho3nix_Rid3r2009',
                     'WillowMast3rFox52', 'XxQu33nOm3gaxX2010', 'Br00klyn_Ech02003', 'Z3roPandaPlayz',
                     'PlayzLegendZer02005', 'NeonFireRider', 'AceGhost35', 'LionNeon200462', 'XxZoe_HawkxX11',
                     'Xx_Paisl3yPho3nixH3r', 'Z0eMax2008', 'RileyCrystalBlaze200', 'ZeroDarkEcho2024',
                     'XxArrowNightxX202412', 'Xx_SavannahGlitchSil', 'Victoria_CODE11', 'Gabriel_W0lf2002',
                     'SilverStealthSpark', 'Haz3lAc3Stormy2018', 'EzraCraftFuryYT', 'FrostVenomStream2013',
                     'XxPh03nixSab3rEch0xX', 'Viper_Knight13', 'Bl0ckHawkKnight', 'Shad0wPlayzZ3r0', 'ChillZer0Dancer',
                     'N3on_Pix3l200372', 'PixelOmegaFlick2010', 'Ech0_Sparkly96', 'XxWilliam_BaconxX46',
                     'V0rtexBl0ckIce2020', 'XxChloeRiderxX202049', 'ChaseFr0stBlaze', 'Craft_DRIFT35',
                     'H3r0Blizzard2004', 'CrazeGoldenCyber', 'JackPrismDragon', 'LaylaSlime2016YT', 'NoraRogu387',
                     'R0cketPanda96', 'Hawk_Spark11', 'Daniel_Hyper2016', 'XxKayl33L3g3ndxX2023', 'PandaCooki3Blast',
                     'DancerPulseCraft', 'Zer0FlashBuilder58', 'OmegaEpic55', 'LuckyCraze200534', 'LucasToxicBear2014',
                     'XxEzraBlastxX2002', 'StormLuckyAce'}
local RECEIVER_LIST = {'OliviaSaberCraze16', 'Hawk_CIRCUIT2014', 'SparklyGigaSlime', 'Aid3nStarryDanc3r',
                       'TOXIC_Chase201280', 'Ne0nDawnFlick', 'JackVoidJ3lly2007', 'FlameZ00mViper', 'Cyb3rCircuitLion',
                       'Omega_ACE52', 'XxSpark_UltraxX2021', 'NightFlameGamer24', 'ClawOmegaSaberYT',
                       'Pix3lat3dDragon2013', 'PixelRavenGlitch70', 'XxFire_Ne0nxX2015', 'XxFlam3GigaxX2014',
                       'LoganPixelDawn2006', 'ZapInfern0201729', 'Willow_Echo85', 'Al3xand3rTig3rThund3',
                       'OrbitRiderEcho2003', 'Haz3Starry2008YT', 'HenryByteEagle200580', 'VortexZeroLegend',
                       'OliviaHawkViper', 'L0ganCraz3Alpha', 'BlazeVoidCraze2008', 'XxGrays0n_HER0XX2008',
                       'EmmaBlizzardPrism200', 'ZeroPixelEcho2012', 'RiftCodePulse', 'XxGigaRav3nBlastxX',
                       'PandaToxicN3on46', 'XxViperLegendHawkxX', 'Elli3Puls352YT', 'PixelatedRiftC0de',
                       'DanielRift201075'}


-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
