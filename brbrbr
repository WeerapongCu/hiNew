-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'AmeliaDragon2018YT', 'Aqua_Vortex83', 'NeonTigerFusion2023', 'PlayzViper91',
                     'Xx_RocketStormyStrea', 'Noah_SKY23', 'OmegaShadow2018_YT', 'Mat3oLionPow3r2023', 'SaberGamerPr0',
                     'SkyBlaz355', 'BrooklynnLuckySkat3r', 'XxJaxonRocketEpicxX2', 'XxAcePixelatedTigerx',
                     'Rift_Viper201125', 'Shadow_Saber63', 'XxHenrySaberxX2024', 'Br00klynSparkSab3r',
                     'XxIsabellaToxicxX38', 'WilliamLucky37', 'LukeFlashClaw2022', 'MateoSkaterKing2023',
                     'RiftStreamDuck2003', 'Xx_AddisonLuckySteal', 'XxAlphaChaseTurboxX', 'JulianDragon54',
                     'Stealth_S0nic93', 'Ril3yStarEcho99', 'Pow3r_Eagl32002', 'XxPaisley_Pr0xX2012',
                     'JacksonProVortex14', 'F0xAquaStream', 'N0raInfern0Ace54', 'Brooklyn_Galaxy99',
                     'GraceBlizzardPulse20', 'Chas3ZapThund3r', 'OwenR0cketMax', 'EPIC_Crystal201644',
                     'AsherZapTurb02005', 'SlimeViperV0id2014', 'XxGoldenChaosxX77', 'Magic_Code43', 'SparkZap19',
                     'HeroLava35YT', 'LiamMaxSt0rm2014', 'BaneCraze200518', 'IcePrimalGolden2009', 'CraftRid3r88',
                     'EliCyber66', 'HunterMoonCrystal200', 'Fir3Pix3lLion63', 'Hero_Rift201586', 'ChillRocket51',
                     'StormyRocketBlazeYT', 'RogueCraft47', 'ROCK3T_Blaz32022', 'XxFire_CircuitxX36', 'Craz3_Epic64',
                     'Z00mSlime201873', 'PixelLuckyHero57', 'Xx_CircuitDriftBlizz', 'WILL0W_Epic38',
                     'XxFlickHawkxX2009', 'XxH3r0_WraithxX2024', 'ChillZapBan32023', 'Xx_SparklyInfernoLio',
                     'MagicFlick59', 'SamuelCraze2022YT', 'V0idIceWraith11', 'XxLaylaWraithCyb3rxX',
                     'XxJacks0n_Fr0stxX200', 'AidenCodeRocket', 'Ven0m_Her089', 'ZaydenStarFlame22',
                     'SebastianHer02007', 'DanielRiftEagle2005', 'XxEthan_PandaxX62', 'Ow3nV3nomInf3rno80',
                     'OMEGA_Chill91', 'XxZ3roSab3rMin3rxX20', 'AidenRavenPr0', 'AidenStormyMoon2020', 'NoahWolfStr3am',
                     'XxLukePlayzStealthxX', 'ChaseHazeQueen', 'RiftBane2023YT', 'N0vaW0lf2015', 'UltraCookieLion22',
                     'ArrowRift65', 'CyberCrazeRider2022', 'LiamT0xic24YT', 'FuryPixelBuilder77_Y', 'DawnBuild3r201856',
                     'FlashCraft50', 'SophiaCookieWolf2019', 'BaconNova86', 'CodePixelated2017_YT',
                     'XxHaze_BuilderxX2003', 'Zero_Shadow2009', 'Xx_MagicP0werBuilder', 'LaylaFlashLava',
                     'XxChlo3KingDragonxX2', 'XxScarl3ttPix3lHyp3r', 'BrooklynInf3rnoVoid', 'Xx_AlexanderKingMine',
                     'SkaterThunderZap', 'SkyBlade200991', 'Luk3L3g3ndKnight', 'Neon_Hunter66', 'XxLukeFlameBanexX',
                     'FireZapMax', 'CircuitPandaZap2003', 'James_Ninja200381', 'Craft_Magic66', 'XxAbigailShadowWrait',
                     'Wraith_VOID202160', 'StreamInfernoMaster2', 'GhostSt3althQu33n', 'N0ahC00kie13',
                     'Kayl33AquaToxic', 'XxSamuelGlitchxX46', 'FuryKingDragon', 'XxChloeStealthxX38', 'Z3r0MysticGh0st',
                     'XxFuryEaglexX2020', 'LightZ00m201274_YT', 'Duck_Light200483', 'StealthSonic201916',
                     'LunaCyber200597', 'AvaGoldenBane_YT', 'EthanFlick49', 'CircuitCookieEpic', 'NightWraithPrismYT',
                     'ScarlettCircuit86', 'XxIsaacChaseT0xicxX', 'LuckySlim3Block', 'PulseQueen22',
                     'XxPulse_SkaterxX2021', 'FoxNeon200541', 'XxAvaMin3rxX2013', 'Ban3_Ultra2015', 'XxPixelTurb0xXYT',
                     'Scarl3ttMysticBuild3', 'J3llyMast3r200412', 'PLAYZNIGHT70_YT', 'XxProNovaCyberxX',
                     'H3roPrimalSparkly57', 'RogueJellyAqua', 'Elijah_Star202489', 'ScarlettSpark2005',
                     'XxUltraLegendStormxX', 'PaisleyOmegaFlash', 'Tig3rVoid62', 'PrimalT0xic202059', 'Cod3_Stormy66',
                     'FlashSlimeRift201181', 'HannahB3ast2003YT', 'FireLuckyBlast', 'Cyb3rPanda71', 'GraceHero31',
                     'Fox_SONIC2015', 'XxViperSt0rmyG0ldenx', 'LaylaH3ro45', 'XxChloeZapHyperxX', 'Ash3rV0rt3x43',
                     'NeonLightLava', 'Sky_Echo30', 'Lucky_Rid3r2018', 'V0id_Starry201888', 'XxDuck_ArrowxX37',
                     'TigerMysticPanda84', 'Xx_SebastianMagicBui', 'LucasGalaxy200926', 'AddisonFlickFlash',
                     'Inferno_Blast97', 'DriftChillZ00m2004', 'HeroPower200637', 'Cha0sSaber2008', 'EliHazeSpark',
                     'Pow3r_Flick2015', 'Ph03nixBlizzard2002', 'PixelatedNovaVortex', 'EzraNova84', 'XxLevi_BANEXX2009',
                     'NoahPlayz45YT', 'XxEchoInfernoxX2022', 'Craz3Pho3nix10', 'UltraFlick201617', 'F0xStream2011',
                     'NoahKingWolf76', 'Tig3rHaz3Z3ro', 'Stormy_Inf3rno201770', 'XxLucasZeroxX2016', 'EmmaRaven89',
                     'GabrielPrismViper201', 'XxToxicGamerAcexX200', 'FoxBeastTiger39', 'CookieHyperNight2023',
                     'BuilderLavaStorm2024', 'VenomCyberAce2014', 'HannahSlime32', 'Fir3Ninja2002', 'XxZoeArrowGigaxX',
                     'LucasViper49', 'ZoePlayzFrost', 'CyberDawnToxic2014', 'BaconGalaxyCooki3', 'Paisl3yCooki3Primal',
                     'Xx_DriftCrystalGhost', 'Infern0Aqua83', 'BuilderRocket32', 'MinerCrystalOmega201',
                     'Xx_JamesCha0sThunder', 'SparkMin3rLion', 'LUKE_Power2009', 'XxArrow_ToxicxX2004',
                     'XxIc3_CrystalxX2005', 'SamuelGalaxyClaw26', 'F0x_Puls377', 'J3llyLavaByt32006', 'UltraPow3rBlast',
                     'LukeCrazeRift42', 'Flash_Code202380', 'Block_Venom2006', 'GalaxyKnightKing_YT',
                     'Charl0tt3_Puls323', 'ViperEagleCyber', 'Code_Storm77', 'F0xR0cketStream2014',
                     'XxKingZeroBuilderxX', 'GoldenStarFlame2006', 'IceSlime56', 'GlitchHunt3r68', 'N0vaHawkW0lf10',
                     'XxVoidCyberBuilderxX', 'ChaosBlockRider', 'AlexanderSkyHawk14', 'XxZapPandaCraftxX201',
                     'KayleeBeastEagle_YT', 'AriaLegendMoon14', 'XxSt3althPix3lBuild3', 'EpicMin3r88',
                     'RiftCraft200520', 'QueenVenom57YT', 'Xx_BuilderLightPlayz', 'AubreyFlick86', 'Jacks0n_Her098',
                     'SkaterStormMystic202', 'HunterSparklyHaze200', 'PrimalQueenFlick72', 'PlayzPulseChaos',
                     'Aur0raBearC00kie', 'EliFury41', 'EchoLight201638', 'Cod3Rift2019', 'C0deV0rtex65',
                     'CyberBanePanda2011', 'XxJaxonEpicxX69', 'MysticRiftPanda_YT', 'EllaCraftByte81',
                     'Pix3lat3dAlphaFusi0n', 'Mat30Vip3rChas3', 'Mat30Dark2007', 'QueenShadowStorm79',
                     'S3bastianLight78', 'AidenBaconGhost', 'Ev3lynEpicMin3r49', 'AuroraPandaMax36',
                     'Cyb3rAquaArrow2014', 'V3nomStormyZ3ro20158', 'DuckFuryDark', 'VictoriaMoon43',
                     'Am3liaEagl3Dragon', 'W0lfBlaze200869', 'XXJACK_Rogu3xX2007', 'EpicPrimalAlpha75',
                     'XxSilver_FirexX20209', 'Ic3_Vip3r40', 'ZoeCodeZoom2008', 'KnightChas3B3ast',
                     'BlizzardPrimalPixel', 'GamerT0xic82', 'EmmaBuilderCircuit20', 'XxH3roLionB3astxXYT',
                     'SkyVenomByte', 'BlockWraith90YT', 'NightFlickQu33n', 'XxMagic_HunterxX10', 'CraftNinjaByte201838',
                     'ThunderUltra200895', 'Xx_LaylaGoldenDragon', 'N0ahR0cketP0wer', 'XxStarryHeroxX2005',
                     'Moon_Thunder200697', 'XxFlame_DuckxX2006', 'ZeroCrazeTigerYT', 'HannahSt0rmy2009_YT',
                     'Blizzard_St0rm2021', 'Ash3rPandaSab3r2022', 'EagleBaconArrow_YT', 'SkaterSparklyFusi0n',
                     'IsaacMoonPixel91', 'HenryUltraPlayz2004', 'AddisonFlash202090', 'ByteGoldenSpark',
                     'SkyTigerHunter', 'Z3roBlaz324', 'PrimalGam3rSt0rmy', 'AlexanderEpic67', 'Ac3N3on2012',
                     'Mate0_Fury99', 'XxZer0St0rmPixelxX', 'EagleHeroZap', 'XxSophiaNightSab3rxX',
                     'XxLavaStarVortexxX47', 'XxN0ahV0idSab3rxX', 'XxRileyMasterxX96_YT', 'Aqua_Zero2009',
                     'HazelZ00mSt0rmyYT', 'XxUltraVoidxX2010', 'Scarlett_Stormy2005', 'AquaEagle13', 'POW3R_Slim362',
                     'XxMoonBuilderxX2017', 'CraftHawkSlim318', 'DawnAqua63', 'PrismEagl314', 'ScarlettPowerRaven20',
                     'XxFlickDriftHunterxX', 'Luk3EchoEagl3', 'Tig3r_SPARKLY201320', 'XXSONICCRYSTALXX_YT',
                     'CodeGolden50', 'Kayl33Pho3nix2002', 'LavaStormyChase79', 'Code_Queen2021', 'XxGraceStealthxX34',
                     'AidenFuryStarry2019', 'DragonBlizzardCooki3', 'XxEllaRavenRiftxX66', 'XxVoid_St3althxX2021',
                     'UltraChillCha0s', 'Elli3Blaz3Flick', 'L3viStarry200936', 'H3roCrystal33', 'Pix3lat3dWolf82',
                     'T0xicLegend40', 'Elli3Ban3202454', 'XxRileyPrismxX2012', 'CrazeSilverWolf', 'AceBlock17',
                     'Qu33nFlickEcho2023', 'Gabri3lSparkly2002', 'Blast_INF3RNO2017', 'XxAlphaBladexX201795',
                     'Bane_Cookie200260', 'Thunder_Flash2016', 'Neon_Starry97', 'ArrowWraith95', 'XxPaisleyPrimalxX50',
                     'WilliamCrazeOrbit51', 'EpicVenomAce', 'Blast_Zoom2021', 'XxGiga_Turb0xX2006', 'CraftSaber85YT',
                     'XxJayd3nFrostxX2018', 'Playz_Pixelated20096', 'ChaosPhoenixQueen', 'StarryWraithPulse',
                     'Ice_Pixel201643', 'Chl03V3n0m2012', 'Pixelated_Builder98', 'JaxonGalaxySilver58',
                     'AvaGalaxyPrism', 'XxKnight_Tig3rxX2013', 'Pho3nixRogu32022', 'EliBaconWraith92',
                     'BlizzardSparkCraze', 'XxEv3lyn_Rogu3xX68', 'Ph0enix_Pixel15', 'Rid3rPix3lat3d2009YT',
                     'XX_SamuelMysticChill', 'HyperPrimalFire88', 'Slim3Inf3rnoArrow91', 'LionKnightRiftYT',
                     'Z00m_Wraith2009', 'GoldenQueenToxic', 'SaberHer095YT', 'DriftStreamTiger35',
                     'Zayd3nSkat3rAc32023', 'Craz3_St0rmy2007', 'XxEliDragonxX2021', 'L0ganHer0Stream',
                     'XxCharl0tteLightTurb', 'FlashStreamCircuit20', 'XxDanielAceNinjaxX20', 'LucasCraftCrystal',
                     'Craft_Playz85', 'PixelatedMystic71', 'St3althDrift2014', 'HannahClawDancer', 'OrbitArrowFox2008',
                     'XxCircuitStreamLucky', 'Chas3FusionStar', 'Xx_PhoenixBuilderNeo', 'EliRift15_YT',
                     'StreamP0werNinja', 'Haze_NOVA44', 'Sebastian_Legend52', 'CookieNovaPulse_YT', 'N3onMin3r46',
                     'XxH3r0Build3rxX20121', 'WolfKnightMiner', 'XxLegendEpicxX2017', 'ArrowChill85', 'HeroRaven202241',
                     'StarVenom202349', 'CyberHazeBl0ck', 'XxBlast_ClawxX2007', 'TurboDawn200533', 'FlameTurboVortex',
                     'S0nicLavaBlizzard', 'XxNovaHyp3rLavaxX', 'XxHyper_SPARKLYXX90', 'XxSaberLegendxX96YT',
                     'C0d3C00ki3W0lf', 'Pr0Arr0wWraith', 'Drag0nWraithVip3r201', 'GlitchClawStormy',
                     'DancerQueen201165', 'XX_StreamOrbitSkater', 'VortexEcho97', 'RogueCraftDuck_YT',
                     'XxChas3_UltraxX2011', 'Br00klynRiderBlizzar', 'L3viMoonSab3rYT', 'LukeDancerFlame80',
                     'XxGoldenMasterxX_YT', 'N3on_St3alth2023', 'ProRiftMagic2013', 'NinjaN0va41',
                     'XxNovaThunderxX2020', 'NovaGalaxyMoonYT', 'HenryFrostSkyYT', 'XxJulianViperxX20214',
                     'Eli_Circuit50', 'FoxMysticCrystal', 'XxChillProxX18', 'XxPaisleyTurboOmegax',
                     'AmeliaOrbitMax2018', 'PowerJellyGolden', 'JackZeroArrow_YT', 'Jayd3nRiftKnight47',
                     'XxGh0stFirexX2002', 'HeroHaze201027', 'IsaacDuckN30n', 'Fr0stV0id88', 'Zo3ChillAqua',
                     'NoahPandaSaber55', 'EthanCookieLava2005', 'DarkDuckNeon2024', 'NinjaMoonChas348',
                     'Vip3r_Rock3t2019', 'CHA0S_Infern097', 'FusionSkyPix3l', 'Block_Void201139',
                     'XxZ3roNightOrbitxX_Y', 'MysticShadowDrift10', 'EthanM00nBlad32002', 'AvaH3roGam3r',
                     'Qu33n_Rift201829', 'Flam3L3g3nd43', 'Eagle_Turb017', 'EzraVoidSaber32', 'V0idN0va2019',
                     'Willow_SABER200479', 'EllieCrystalPanda201', 'XxHazelKingxX36', 'BeastFr0st78_YT',
                     'Samu3lN30n2003', 'XxIceZapxX22', 'BlastGalaxySkyYT', 'XxCharlotteNightxX66', 'StreamRider49_YT',
                     'Fusi0nStealth80', 'IceCircuitPixelated2', 'XxSilverCircuitxX29', 'WillowLucky28',
                     'XxMiaRocketxX2016', 'ArrowDarkVoid2019', 'Luna_Circuit31', 'ClawSilverRocket', 'XxNightBaconxXYT',
                     'ChaseTigerVortex', 'Echo_Circuit200975', 'MoonBladeBlast_YT', 'AsherCraftHyper2005',
                     'XxRift_MaxxX38', 'XxAquaBac0nxX66', 'XxEchoClawAquaxX', 'Pix3l_H3RO2024', 'EchoMoonByte',
                     'N3onHunt3rBlizzard', 'NightFirePlayz2024', 'JackBlock63', 'AceLuckyRift93', 'LaylaByteRaven2005',
                     'OliviaMystic52', 'Zayd3nCrystalDanc3r', 'Zo3_Om3ga45', 'Slim3DuckCooki371',
                     'XxHunterGigaShadowxX', 'L3g3ndChill201968', 'HazeBeast200644', 'P0werPr0Hunter2017',
                     'Pix3lat3dOm3ga2015_Y', 'Cyb3rFir3Build3r67', 'StreamBlizzard62', 'XxWraith_CircuitxX22',
                     'SkaterGamer200465', 'XxLiam_NightxX37', 'XxDrag0nV0rt3xxX2006', 'Pix3lat3dHyp3rShadow',
                     'NoahHyper201893', 'StormCraze44', 'ZaydenGoldenGamer202', 'ThunderGigaMax50', 'Chas3LavaCyb3r',
                     'OwenT0xicMystic53', 'FlickHer013', 'DragonSlimeKnight', 'HenryVenomStealth', 'Haz3Sab3rAc3',
                     'XxLion_FOXXX2004', 'Thund3rSparkClaw', 'ThunderPower201995', 'AddisonDrift57',
                     'EliBuilderPandaYT', 'EvelynRiderEpic', 'MaxSky2009', 'Galaxy_Chill69', 'SkaterByte50',
                     'XxJaydenHeroVenomxX', 'Henry_Star56', 'Xx_CrystalTigerDance', 'AuroraFlame11YT',
                     'MoonVenomBear2011', 'DarkLuckyPulse', 'AddisonPro30', 'Gam3r_Build3r2011', 'LavaMinerGamer',
                     'XxSkater_StormyxX59', 'XxCyberJellyBlizzard', 'RileyEcho201564', 'XxPh03nixCraz3Rav3nx',
                     'EliChill200424', 'DancerBaconVortex', 'LoganSlim32022', 'ChillVenom200333', 'TurboChillPower',
                     'XxMichaelBeastPlayzx', 'DuckPhoenix79', 'ArrowSparklyAqua', 'H3nry_Z3RO35', 'VIP3R_V3nom2005',
                     'JACKS0N_Bac0n2022', 'XxQueenChillSparklyx', 'DawnH3roStr3am_YT', 'ChaosSilverStormy',
                     'XxLiamDuckSparkxX', 'Xx_CircuitT0xicBlade', 'Vip3rCircuitPh03nix', 'Jam3sGigaPrism',
                     'AmeliaStarryZoom96', 'Chas3Rid3rW0lf', 'FuryMaxH3ro', 'XxSaber_NightxX52', 'LaylaKnightZero2006',
                     'NoahDancer50', 'CyberR0gue63', 'LucasHunterThunder', 'EmmaAc3Storm', 'XxHunt3rBan3xX_YT',
                     'Daniel_Rider72', 'Aubr3yAlphaWraith', 'FoxMaxPix3l', 'QueenM00n200680', 'AmeliaPrismFox',
                     'Z0eOrbit2002', 'DuckHyper200226', 'DawnZero61', 'Fusi0nBuilder2007_YT', 'WyattAlphaChillYT',
                     'Emma_FLASH13', 'XxCraftPlayzxX71_YT', 'NovaVortex48', 'Xx_CHASECIRCUITLEGEN',
                     'EvelynCircuitAlpha', 'Zoom_Ghost49', 'XxSkyHeroxX2019', 'Cart3rRock3t53', 'Xx_WilliamRavenStrea',
                     'HenryZ00mBlizzard202', 'XxLunaBlazeR0guexX', 'PhoenixDancerChase27', 'Luk3Bacon78',
                     'Kayl33RiftDark', 'ViperZoomBlast2015', 'GAMER_Zero2024', 'VoidBlizzardCooki320',
                     'William_Om3ga2024', 'XxHeroAceEpicxX', 'Aid3nSt3althFury', 'JackBuild3rBlast', 'MasonTiger_YT',
                     'Fr0stF0xAqua45', 'Isaac_Neon97', 'PaisleyFlameStealth', 'XxMate0_C00KIEXX2022',
                     'Xx_PandaWraithVortex', 'EllieShadowMagic', 'XxAur0raMysticxX2004', 'HeroDawnFlick',
                     'Slime_Golden33', 'Kayl33_Cooki32020', 'KnightLavaMystic_YT', 'Circuit_Golden2004',
                     'CrystalFusion201645', 'PrismBuilderArrow200', 'DANC3R_Ninja2008', 'Gabri3lRiftPho3nix',
                     'WraithBaconHero77', 'ElijahBeastRift', 'St0rmyNinja15', 'R0cketZer02002', 'FoxHero200475',
                     'TigerHazeSt0rm', 'JackLionB3ar', 'NoahFir3Ban3', 'XxHaz3lStormxX2008', 'EpicStormPrism2022YT',
                     'XxGlitch_SonicxX2008', 'ZeroDuck91', 'XxLoganMoonStreamxX', 'HenryAquaRider72',
                     'IsabellaFlameCraze20', 'Lava_Tiger60', 'GalaxySkat3rFury', 'JacksonAqua84', 'AmeliaPandaOmega41',
                     'MinerZoomSparkly2023', 'ChaseS0nicRift', 'BlazeFireCyber', 'XxCarterThunderViper',
                     'HunterRiftCrystalYT', 'L3viGlitchGalaxy', 'ArrowB3ar2008', 'XxBlizzardOrbitxX84',
                     'EchoStreamFusion78', 'Build3rCraz3Fr0stYT', 'N0ahSparkM00n200733', 'Jayd3n_Rav3n2002',
                     'XxPrismPrimalMagicxX', 'LukeStormRogue', 'SlimeShadowSilver200', 'L3vi_Circuit32', 'F0xDawn95',
                     'BlastZapCircuit2014', 'ArrowPandaFire', 'ZapBaneRift68', 'TurboMin3rFlash2016', 'EzraTurb0Epic',
                     'PlayzLuckyPix3lat3d2', 'XxC0deArr0wF0xxX', 'SophiaSkat3r96', 'RiftGam3r82', 'ZaydenAlphaV0id',
                     'PrismHyper202498', 'SparklyKingEchoYT', 'Harp3rStarryV3nom', 'LucasMystic68', 'XxSt0rmMagicxX62',
                     'Craze_Bane66', 'Xx_KnightHunterPrism', 'ECHO_Magic201132', 'XxSkat3rC0d3xX2009',
                     'Om3gaClawGold3n', 'VictoriaPuls3Rav3n', 'DriftWraith33', 'DriftW0lf41YT', 'FrostRav3n2006',
                     'PandaFlick2014YT', 'HeroCyber202284', 'EliRocketVortex', 'OwenPixelatedBacon',
                     'XxKayleeLuckyxX20054', 'Xx_VictoriaCookieWol', 'XxClawBladeBlastxX83', 'IsabellaCyberGamer',
                     'Byt3Cooki3St3alth200', 'FoxEchoPix3lat3d', 'FlickB3astBlizzard', 'XxCyberBeastDragonxX',
                     'SaberGalaxyPixelated', 'GoldenHyperBear_YT', 'XxPrismPandaStr3amxX', 'Zero_Sky53',
                     'Al3xand3rInf3rn0King', 'XxPlayzRiderGigaxX20', 'ViperPlayzRider20081', 'IsabellaZeroCookieYT',
                     'EvelynKingFr0st61', 'ByteLionMaster14', 'SparklyBlazeShad0w', 'Circuit_Dancer52',
                     'Jack_VENOM2013', 'XxEllieCookiexX_YT', 'IsaacArrowKing2013', 'Her0V0rtexWraith', 'Zer0Claw2020',
                     'LunaZoom73', 'W0lfZer02009', 'DawnSlime200877', 'XxBlastFlickVen0mxX', 'Xx_BlizzardM00nSteal',
                     'Aur0raMast3r27', 'FusionBuilderSonic20', 'WILLOW_Prism200331', 'Jayd3nT0xicRid3r',
                     'ZapRid3rEagl351', 'MiaDancerCraze2017', 'CarterEaglePro2005', 'Skater_C0de56YT',
                     'FusionInfernoNeon73', 'Haz3l_Inf3rno24', 'SparkMaster97', 'BuilderChill201479',
                     'Moon_Thunder25YT', 'RileySaberNinja2019', 'XxAmeliaCraftDuckxX', 'WyattChaseStormy2009',
                     'ECH0_Blizzard2011', 'Am3lia_Om3ga59', 'G0ld3nN30n82', 'ZapVoidEcho2007', 'XxPanda_SlimexX2007',
                     'Puls3SparklyBl0ck', 'Fir3BlizzardPandaYT', 'XxAriaDarkNinjaxX202', 'AlphaStarryB3ar63',
                     'Jacks0nMagicSky2002', 'XxNoahRiftLightxX202', 'Savannah_Wraith93', 'CrystalAce202087',
                     'JaxonByte200686', 'XxSonicNightHyp3rxX', 'XxRaven_FlashxX2022', 'HazelGamerBeast',
                     'ThunderDrag0nNinjaYT', 'LoganMiner90', 'HeroOmegaTurbo2015', 'LionGamerFury2012',
                     'Xx_ScarlettCrystalLu', 'LavaAc373', 'XxCraftTurboxX44', 'StarryHyperLegend', 'LuckyV3nom19',
                     'Her0RavenHazeYT', 'Vict0riaDarkShad0w', 'AlexanderPixelMagic2', 'Oliv3rLi0nPix3l',
                     'BladeLion2024YT', 'JaxonIceStealth', 'NoraEcho58', 'XxOliv3rFuryxX36', 'AvaNeon53',
                     'BearPhoenixDark', 'S3bastianDragon2020', 'J3llyNightAqua', 'LukeQueenMystic20038',
                     'EmmaArr0wDark', 'Hawk_Zoom50', 'SkyBaneSpark59', 'Rock3t_STAR33', 'LavaFlickMaster', 'LeviZ00m25',
                     'OwenOmega2017', 'Rogu3Rid3r22', 'Drift_Dragon61', 'PlayzEchoVenom2008', 'XxPandaCyberEchoxX',
                     'HyperVoidBane', 'OliviaRiftPlayz2010', 'DawnGamerCraze', 'LuckySparkly90', 'FlickAlphaHero',
                     'C00kie_HYPER202067', 'ToxicRocketBlast77', 'GraceBlade89', 'XX_HunterInfern0Craf', 'BLADE_Rift60',
                     'SavannahGalaxyWolf20', 'Skat3rFlash92', 'BearDark96', 'PlayzVoidFox2020', 'WolfPuls3St3alth',
                     'RocketViper74', 'Craz3Flam3Ultra20088', 'RileyStream91', 'Sparkly_Stream63', 'AquaAlphaZap2012',
                     'XxHazelGhostxX2008', 'GlitchG0ld3n91', 'CarterTurboSpark', 'S0phiaBan3Sky',
                     'Xx_Jacks0nPh0enixHyp', 'FrostPuls3Stormy2015', 'StealthQueen48', 'CharlotteLavaStorm20',
                     'XxHawkCookiexX10', 'EpicTurboRogue2019', 'LucasCyberLight97', 'AriaChillBlad32003',
                     'StormyCyb3r2012', 'JulianH3roVort3x2005', 'XxTurbo_OrbitxX16', 'HazeToxic201315',
                     'XX_HyperStealthNight', 'GalaxyPixel2013_YT', 'BearChase16YT', 'FlameDrag0n23',
                     'NinjaDawnFusion29', 'TurboBaneVoid', 'Jacks0nBeastClaw', 'AlexanderGamerMoon20',
                     'Xx_Shad0wCha0sStarry'}
local RECEIVER_LIST = {'LEGEND_Epic43', 'BlastTurb0202432', 'ChasePrimal47', 'HunterFusionEpic23', 'ORBIT_L3g3nd23',
                       'XxBaneFlickxX2016', 'Sparkly_Chaos201514', 'Block_Lion92', 'LightArr0wDrag0n',
                       'SebastianBlade86', 'XxNinjaTurboxX201496', 'LuckyGiga202119', 'Eagle_Stormy10',
                       'XxFusion_DriftxX88', 'ViperMax50', 'Micha3lByt3Gold3n', 'MoonSkat3rNight', 'Gh0stBac0nUltra',
                       'PixelUltraPrimalYT', 'MagicChaosDrift', 'Xx_CIRCUITSPARKLYHUN', 'Xx_AubreyZoomBuilder',
                       'CarterDragon39', 'Ph0enixSparklyOrbit', 'Ash3rPix3lStar2012', 'MagicT0xicPulse74',
                       'JaxonShadowPixel42', 'HazeBearBl0ck', 'CrystalInfernoSaber2', 'CraftMaxFlick2012',
                       'StormyLegendStar2011', 'PowerCrystal82', 'XxEzra_PRIMALXX77', 'BrooklynEcho90',
                       'EmmaN3onCyb3r200891', 'GRAYSONVOIDBLADE_YT', 'OrbitFuryPhoenix2015', 'NIGHT_Lucky53',
                       'NoraLuckySparkly2021', 'XxSonicBaconxX2002'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
