-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'Zo3J3lly2006', 'VICT0RIA_Stream66', 'Hyp3rCrystalVoid', 'Jacks0nQueenGamer', 'Ash3rDark14',
                     'SaberRiftChaos98', 'XxBlastMaxFirexX2021', 'WilliamSkat3rMystic2', 'Ev3lynMoon66',
                     'AlexanderTurboRift74', 'EllieFireNeon', 'Rav3nStormyShadow', 'FrostZeroPixel42',
                     'XxGamerEagleR0cketxX', 'Br00klynnN30nGh0st', 'XxByteHeroMoonxX', 'OrbitBaneSilver',
                     'Abigail_F0x94', 'Rav3nUltraTig3r', 'ArrowHawkBlock2021', 'R0gu3Tig3rPix3l', 'MateoBearDragon',
                     'Hyper_Crystal201437', 'OliviaInf3rno2002', 'BlockHyper81', 'MiaThunderMaster2009',
                     'Ven0mLavaPh0enix2010', 'AlphaToxicMiner80', 'PlayzNeonSpark', 'Flam3Pix3lFox',
                     'EzraPowerFusion76', 'SonicRogueQueen', 'XxPaisleyBlazeFrostx', 'PixelatedNova19',
                     'JackInfern0Fury', 'J3llyLight81', 'HeroDawnHawk', 'OrbitToxic42', 'EthanRavenFlash2002',
                     'Xx_HannahHunt3rBlast', 'AbigailP0werCrystal', 'EliEagl3201821', 'Knight_Lucky51', 'V3nomLight64',
                     'StarPix3lByt3', 'WraithCodeSaber', 'LoganStar201169', 'ElijahR0gue2007', 'ElijahRiderBear2020',
                     'Julian_Echo201688', 'XxJax0n_Ph0enixxX', 'STR3AM_Rift2017', 'Ellie_VORTEX75', 'FuryFusionPower',
                     'BrooklynNinjaDark200', 'Puls3AquaBuild3r', 'Isabella_St0rm2024', 'XxDuck_FlamexX201369',
                     'Chl0e_Arr0w201446', 'XxSlimeThunderxX84', 'CraftRavenPixel', 'Chlo3_Ic379', 'Silv3rGhost26',
                     'CyberEagleBlock60', 'JaydenKnight90_YT', 'JaydenChaosStealth', 'GraceSkyBlaze2010',
                     'AsherFrostLucky', 'OrbitRiftDrag0n', 'AbigailGhost50', 'EpicProCyber73', 'Venom_Craft10',
                     'Raven_Master2023', 'XxMichael_TurboxX', 'AvaSilverPulse', 'GabrielBl0ckFlash_YT',
                     'CharlotteThunderSlim', 'MaxSlimeBl0ck', 'CrazeCraftBlade', 'XxNovaDriftxX54',
                     'XxOwenBlizzardClawxX', 'GraceDawnDancer', 'FlashRiderNeon2015', 'RiftZapQueen_YT',
                     'XX_T0xicBladeBuilder', 'MysticPh03nixFlash20', 'Xx_StarryDancerBlaze', 'BuilderFirePulse2003',
                     'SparklyIce45', 'SkaterIceNova200834', 'Om3gaGalaxyGlitch', 'WraithHeroZero2010_Y', 'HawkF0x74',
                     'XxLoganThunderBlastx', 'Elli3_Playz2003', 'Cha0sSilverLi0n', 'PowerMasterThunder',
                     'XxAsherProxX2018', 'FlickMiner2009', 'Pho3nix_Zap2024YT', 'W0LF_EagleYT', 'WillowIceLava',
                     'Her0_Z00m2005', 'NoahSkat3rThund3r202', 'PulseMaxRift2002YT', 'Addis0nRift16',
                     'XxBuilderHazeBlockxX', 'Z00mInfern0Pulse', 'XxKingEchoBytexX2022', 'ViperBac0nKing',
                     'RocketCrazeBeast87', 'OmegaMagicToxic', 'R0gu3Ac3Night76', 'StreamFusi0nHawk88',
                     'St3althS0nicP0w3r', 'Xx_SkaterFusionCyber', 'XxHazelCircuitxXYT', 'Am3liaBlad3Tig3r92',
                     'GalaxyHunt3rEcho', 'PAISL3Y_Pow3r2008', 'Bac0nRiftDancer24', 'AuroraJellyPulse', 'H3ro_Prism2012',
                     'KingOmegaZap47', 'Scarl3ttPuls32010', 'Ace_Bane37', 'EliDancer38', 'Fury_Lava17',
                     'SAVANNAHPRIMAL2023_Y', 'XxBlaz3GlitchFuryxX2', 'NoahStarryArrow91', 'Hunter_Thunder201372',
                     'LavaKnight200996', 'Grayson_Viper2009', 'NoahBlockChase', 'WilliamSaber41', 'GigaTurbo200247',
                     'C00kieBearClaw44', 'Amelia_Rift31', 'LionPrism201368', 'H3nryHawk2002', 'Wraith_THUNDER2020',
                     'EmmaFlameHyper2007_Y', 'ArrowEagle72', 'Grays0nPrismCha0s', 'BeastMiner96', 'RileyStormyEcho',
                     'XxToxicHazeRiftxX', 'JAYDEN_Drift2004', 'AquaArrowBlade', 'MiaSlimeZoom', 'MysticHer0Craft2021',
                     'Fr0stFlameC00kie', 'PrismZ3roVoid27', 'DarkB3arStar', 'XxAubreyKingxX2006', 'Blaz3Rav3nJ3lly_YT',
                     'JamesCrystalBeast', 'XxVictoriaHunterxX44', 'XxElijahFusionDarkxX', 'VortexSaberDuck',
                     'OwenNova88', 'GamerOrbit200957', 'Vip3rByt32004YT', 'Amelia_BLADE2017', 'Grays0nShad0wEpic',
                     'SilverLucky2002', 'XxBlazeViperxX2015', 'LionGalaxyMast3r', 'T0xicS0nicOmega2009', 'Danc3rFlick',
                     'Samu3lQu33n2003', 'R0gueCircuit2012', 'ChillV0rtexJelly2002', 'XxVoid_DuckxX2020',
                     'AbigailBeast68', 'JackCyb3rChill', 'PrismDragonFire2005', 'ViperOmega33', 'CraftFireViper',
                     'WILLIAM_Knight36', 'Lucky_Chaos39', 'Gold3nCircuit2005', 'XxLegendPrismC00kiex', 'AvaJ3lly201640',
                     'VoidUltraStormy', 'XxMoonGoldenSaberxX', 'LION_Chaos25', 'AlexanderBuilder62', 'HawkPowerPixel',
                     'ClawMoon2018YT', 'SkaterEch0M00n', 'ZapFox91', 'Haz3Silv3rPow3r', 'Vict0riaGamer2018',
                     'XxKingCircuitxX2024', 'Pho3nixSilv3r60', 'XxKaylee_CraftxX2008', 'LiamGamerRider',
                     'Amelia_Legend202271', 'LionDarkVortex2020', 'Neon_Wraith2023', 'BROOKLYN_Toxic38',
                     'Charl0tte_Pixel20036', 'Jam3sAquaPuls3', 'Xx_CraftCircuitTurbo', 'WilliamB3ast2010',
                     'JulianAce24_YT', 'Fir3_SILV3RYT', 'OmegaTurboFrost2012', 'WilliamIceHer059', 'HeroKingFury2009',
                     'ChloeLavaEagle78', 'KnightAqua68', 'Playz_Epic93', 'ProCyberMiner', 'GraysonDarkPrimal201',
                     'JackPixelated88', 'XXGRAYSON_Gold3nxX20', 'LunaFuryCod3', 'P0werN0va86', 'Sab3rSonic21',
                     'NOVA_St3alth2014', 'XxBlastHawkPrismxX20', 'ZaydenStormBeast', 'Rider_STORMY58', 'ZapLightBear',
                     'Om3ga_Gold3n2013', 'RocketByteEpic', 'StarryFir32014', 'GraceMasterCookie99',
                     'XxSkaterMinerxX2005', 'AmeliaSilverGh0st200', 'SilverVortexPlayz201', 'DanielLionFlash',
                     'XxBr00klynnH3r0xX200', 'CraftStream202372', 'XxSlimeKnightxX2017', 'R0ck3tBuild3r2021',
                     'GalaxyP0wer2006', 'Bl0ckR0cketHer033', 'Will0wSilverOmega', 'EllieArr0wDark', 'Blaz3_Mast3r91',
                     'OwenChaosGamer', 'Xx_Arr0wDanc3rSkat3r', 'BANE_Ninja25', 'TurboTig3rNova', 'ByteHazeMiner2013',
                     'HazelSpark62', 'William_Puls32017', 'RiftJ3llyEpic', 'HazelEpicStar', 'NoraGalaxyCraze',
                     'Paisl3y_Panda51', 'XxThund3rHaz3Wraithx', 'XxHarperDriftHeroxX', 'Nova_Arrow57',
                     'PrimalSparkly20', 'V0rtexFire50', 'CraftHaz3Flash', 'PaisleyDuckBear20143', 'CarterFlame200729',
                     'MiaSkyHawk', 'Star_V0ID32', 'XxCharl0ttePandaFire', 'V3nomRiftSlim3', 'LoganGlitch',
                     'Am3liaMysticSky', 'WolfHawkStealth', 'CharlotteMagic18', 'InfernoChill202194', 'BeastNe0nNight',
                     'DawnStarryRid3r67', 'C0DE_Sparkly70', 'Pr0CrazeYT', 'Thunder_Chase13', 'Byt3Cod363',
                     'DuckBlaze95', 'ElijahFlam3Panda2015', 'XxAsherFlickShadowxX', 'XxGlitchHyperGamerxX',
                     'HawkUltra15', 'Danc3rCyb3rGiga2014', 'StealthNinja202413', 'GamerBaconFury',
                     'XxEthanLightPixelate', 'GhostHazeWolf', 'XxStormPow3rxX2021', 'UltraBaneTurbo',
                     'XxLavaKingNightxX', 'XxQueenPrimalxX62', 'CyberVen0mEch0', 'BeastChillLi0n', 'ZaydenPanda202165',
                     'BaconEpicSpark45', 'Hunt3rBan3Storm2019', 'MaxBlizzard58', 'MoonMin3rStorm', 'DarkShadowAce2005',
                     'XxRock3tPuls3Pix3lxX', 'XxCrazeFireAquaxX', 'BlockRid3rGalaxy', 'BrooklynBlizzard46',
                     'GamerPrismBlizzard', 'Will0wByt32014', 'SilverF0xVen0m', 'HunterBear201370', 'SaberFlick30',
                     'SkySt3alth2013', 'IceChaseInferno', 'VictoriaPrimalOm3ga9', 'StormLionPanda', 'FusionOrbit81',
                     'Mast3rBan32002', 'HenryFlash202379', 'BR00KLYNN_Ven0m50', 'Hunt3rInf3rno14', 'GlitchEagl3Li0n',
                     'Bac0nDawnChase', 'JaydenEagleSkater200', 'XxCyb3rBlad3Vort3xxX', 'JacksonBlastIce',
                     'NightCrazeClaw', 'OrbitGolden19', 'Ne0nZ00m80', 'EchoL3g3ndSky', 'M00n_Craze2008',
                     'Thunder_Void17', 'BlastHaze202080', 'XxLaylaDarkxX15', 'XxChl0eT0xicxX2010', 'Echo_Rift68',
                     'PandaShadowStormy', 'Z0e_Z00m2008', 'JacksonThund3rZ3ro', 'ZaydenStarFusion',
                     'Xx_ALEXANDERGOLDENGH', 'Ow3nV0rt3x78', 'OliviaQueenSkater202', 'FoxDragonWolf2011',
                     'Xx_Hyp3rCraz3Pix3lat', 'AquaRiderDancer20215', 'Z3r0Silv3rBlizzard_Y', 'Grac3ClawMagic',
                     'Lucas_ACE2013', 'XxPaisl3yRogu3Luckyx', 'Danc3rSlim3201582', 'AbigailPix3lSlim3',
                     'IsabellaSilver2023YT', 'ZapBlizzardBuild3r', 'XxKingZoomxX22', 'Echo_Duck59',
                     'Infern0BuilderM00n20', 'XxElijahRock3txX2006', 'PandaSilverStream', 'Xx_IceJellyPixelated',
                     'StormByte39', 'LuckyIceDrag0n', 'Kayl33_Sparkly28', 'XxEv3lyn_DragonxX201', 'CraftChillOrbitYT',
                     'XxNovaEpicRavenxX201', 'Omega_Lava32', 'Li0nBlazeThunder', 'XxJellyLavaDriftxX', 'Vip3rBlast52',
                     'VoidTurbo74', 'SparkThunderSaber', 'ProRift88YT', 'C0deGlitch2024', 'JackCookie66',
                     'Grays0nEpic17', 'LukeAlphaNight', 'ProVoidHero', 'HazeSparkNova', 'WraithSkat3rDark2008',
                     'AddisonAquaTiger', 'StarryOmega37', 'SamuelLight2020YT', 'Raven_Hawk2010', 'Charlott3Slim3Craz3',
                     'Fr0stSt0rmyCha0s', 'EllaNightPuls324', 'Qu33nByt344', 'BLAZE_Gamer2024', 'F0xSt0rmyDrift77',
                     'XxGiga_HUNT3RXX2009', 'GlitchRock3t42', 'Xx_VictoriaDarkRogue', 'Olivia_Aqua39', 'Grac3Ban379',
                     'R0ck3t_Sky2008', 'ClawLion45', 'PRO_Silver200851', 'MagicCraft201750_YT', 'XxNoahViperChaosxX',
                     'Pixel_Miner73', 'Flash_B3AST2015', 'Charlott3Giga34', 'XxGamerBytexX73', 'WilliamStreamIce',
                     'Xx_JacksonBlastPlayz', 'Drag0nPixelated95', 'Xx_WilliamVenomTiger', 'XXCARTER_TurboxX2011',
                     'LiamAce2008_YT', 'BrooklynnAlphaPlayz', 'PaisleyPowerStarry20', 'Xx_VenomPhoenixArrow',
                     'AlphaH3r096', 'StarFlashBlazeYT', 'AubreyWolfClaw', 'HannahPix3lat3d51', 'TigerSilver200460',
                     'King_Stormy202481', 'Ne0nRiftBear', 'DanielHer02004', 'LukeVortexBlock', 'ShadowJellyZero',
                     'HannahProChill', 'Bane_STEALTH2010YT', 'Echo_Slim32011', 'XxHazeFireCrystalxX2',
                     'Xx_SparklyShad0wDawn', 'ElijahHunter59', 'Dani3lPanda2004', 'LuckyKing38_YT', 'XxHaze_HyperxX70',
                     'XxEpicCookieMaxxX', 'XxSavannahCircuitxX4', 'GraysonThunderDancer', 'Vip3rCooki32010',
                     'MasonDriftQueen2019', 'CircuitFlash71YT', 'CrazeStream2018_YT', 'Mat3oPuls3Glitch',
                     'ElijahBearSilver2016', 'CraftFire94', 'Grac3J3llyShadow22', 'Light_Galaxy202159',
                     'EthanArr0wC0de2011', 'XxEmmaAcexX2006', 'QueenIceSaber', 'SavannahBaneHunter71',
                     'XxLightRiderxX82', 'OmegaBacon2016', 'XxGhostPlayzxX2009', 'XxMin3rInf3rnoOm3gax',
                     'Br00klynnM00nOmega', 'FoxEpicZoom2020', 'FoxFusionLight', 'FoxDuckRider60', 'Pow3rLavaDanc3r',
                     'Craft_Master49', 'PrismZoomSkater_YT', 'Z3roRav3nPow3r', 'XxIsabella_ProxX2011',
                     'XxVictoriaTigerBeast', 'NoraBaconKing', 'HunterBeastHer020031', 'NovaSkater32YT',
                     'Alpha_Craft2004YT', 'Bear_Sky74', 'XxSilv3rCraftxX2009', 'FrostViperAqua', 'Jayd3nThund3r202380',
                     'RavenMax36', 'GigaEchoViper2013', 'XxZoomHeroBearxX', 'EllaCrazePulseYT', 'ChloeHazeRider2017',
                     'R0ck3t_Hyp3r2023', 'XxPowerMasterRiderxX', 'Max_Vortex96', 'BrooklynnBlazeRaven',
                     'PlayzPr0Omega2016', 'XxHawkSkaterxX2024', 'Venom_Eagle2019', 'AriaSaberShadow2009',
                     'WilliamChaosCode', 'BladeLightFr0st', 'PrimalOrbitJelly', 'XxGhost_SkyxX2015',
                     'XxHenryPrismBac0nxX2', 'XxDani3lFusi0nSparkl', 'ArrowSilver16', 'AidenZapPixelYT', 'AsherDuck76',
                     'KnightPandaByte', 'NovaCrazeHawk', 'Pix3lCha0sGalaxy_YT', 'Epic_Drag0n80', 'XxQu33n_Ic3xX200740',
                     'NoahPow3r71YT', 'TurboLegendBlock2007', 'XxEzraP0w3rxX_YT', 'Aubr3yStormMystic',
                     'Br00klynAlphaPixelat', 'Ava_Light201612', 'AuroraEcho41', 'Qu33nHaz3Cod32007',
                     'KNIGHT_Master2004', 'PlayzJelly202138', 'Vict0riaPix3lat3dGh0', 'XxW0lfTurb0xX2022',
                     'XxSkyBaconVoidxX', 'PulseAlpha71', 'St0rmV0id2013', 'XxJacksonQueenMaxxX5', 'BlockFlashMax2006',
                     'Addison_Fury35YT', 'WraithBuilderBlock44', 'StormyBlaz363', 'B3arRock3t201663',
                     'Jacks0nHunterByte201', 'Hunter_R0gue2013', 'MichaelSonicZap', 'Panda_Phoenix2022',
                     'DragonShadowJelly', 'B3astChillYT', 'SlimeRiftZeroYT', 'Inf3rnoGalaxyCraz320', 'Ban3Vip3rSparkly',
                     'Ne0nV0id2010', 'GlitchPixelC00kie', 'JamesFoxFusion2011', 'RiftSparklyPix3lat3d',
                     'JackBlad3V3nom', 'JaydenShad0w44', 'FUSION_Zap200612', 'Nora_Rogu385', 'XxMinerSkyPlayzxX',
                     'Br00klynZapBuilder', 'SparklyQueenDrag0n', 'Cookie_Knight39', 'ZaydenDuck43YT',
                     'XxDragonThunderFlash', 'XxBearInfernoDragonx', 'NightMagic201794_YT', 'Addis0nChaseDark',
                     'Pix3l_SHADOW2017', 'Xx_BlastStr3amMystic', 'Chaos_Block39', 'NoahStr3am2007', 'Blast_Chill64',
                     'MasonFir3Primal65', 'AlexanderTurbo42', 'N0vaDrag0n201683', 'EvelynAquaFr0st', 'Claw_Vort3x31',
                     'NoraAceTiger', 'Addison_Dawn2006YT', 'RiftBaconGhost2015', 'MoonClawEcho2011',
                     'XxEthanPixelxX2004', 'EmmaGhost53', 'GabrielSparklyLucky', 'Gh0stBane2005', 'N3onLightByt32020',
                     'HazeHero202233', 'AquaDriftBlast', 'PrismSonicCraze2005', 'Luke_Vortex2023', 'CraftMagicBlock',
                     'LegendHyper77YT', 'Rift_Ace200985', 'NightBaneCraft2012', 'XxPaisl3yRid3rxX40', 'LunaAqua83',
                     'LeviStarry85', 'Queen_Vortex85', 'XxKnightEch0LightxX', 'H3roPow3rFlam3', 'GabrielAce97',
                     'StreamByteKnight13', 'LaylaClawTurbo46', 'Chlo3Rid3r2022', 'Al3xand3rPow3r97', 'LiamMasterMagic',
                     'XxPix3l_MagicxXYT', 'XxDrift_JELLYXX35', 'H3nryRid3r2022', 'CircuitAc3Drift2022',
                     'XxChaos_UltraxX2013', 'Sebastian_Beast23', 'TIG3RS0NIC_YT', 'AlphaGhostBacon', 'W0lf_Ech0201947',
                     'LukeMysticWraith', 'Mat3o_PHO3NIXYT', 'ZoomVortex31', 'JamesPlayzPixel2019',
                     'BlockEchoFlash201066', 'RiderQueen37', 'JamesLionFlash2023', 'XxAvaRogu3xXYT', 'H3nryPuls3Spark',
                     'XxFlickBladeCodexX47', 'EliPuls3Pix3l', 'Glitch_Sky23YT', 'EvelynRift201330', 'AidenBlaze24',
                     'HazelDancer39', 'Saber_Chill84YT', 'HazeFoxGalaxy2010', 'CrystalKnightGalaxy2', 'Shad0w_Zer02008',
                     'DancerFlamePixelated', 'Vip3rBlizzardRid3r', 'XxQueenStarVortexxX', 'XxLukeLi0nNightxX',
                     'TurboBlaze37', 'AubreyHaze68', 'XxLavaN3onxX2021', 'XxPowerGalaxyxX2007', 'PixelSt0rmyTurb013YT',
                     'Chl03Build3r2015', 'LaylaCha0s2018', 'RiderPower50', 'Mast3rProBuild3r2010', 'ThunderFoxBear11',
                     'Lion_PANDA201039', 'QueenSparkNeon72', 'LoganChillBlaze', 'XxByteHyperRiftxX', 'HazelUltraLight',
                     'JaydenPandaHunter', 'ChillGh0st2011', 'AsherThunderLava', 'RavenRider201431',
                     'MichaelSparkHero_YT', 'JellyArrowFox2011', 'AriaQueenOrbit2003', 'LegendFlash200739',
                     'XxElijahZeroxX2021', 'FlamePrismLucky73', 'RiftF0xR0gu3', 'Al3xand3rAlphaFox200',
                     'NovaDriftCookie', 'XxPrimalGlitchxX2004', 'HazeArrow2007YT', 'CookieRiftPro42', 'StealthV0idGiga',
                     'LoganLavaMystic_YT', 'DancerPrimal201768', 'StealthHazeFox', 'C0d3PrismDark61',
                     'XxViperPrimalxX2012', 'XxStormyTigerxX2007', 'Xx_VictoriaNightPuls', 'EchoRogu330',
                     'Mas0nBl0ck2022', 'R0gueSt0rm2018', 'Frost_Nova202072', 'BrooklynPix3l89', 'Golden_Hawk35',
                     'LaylaSt3alth27', 'Hawk_Craft77', 'XxLucasSonicCodexX', 'CrazeBaneZap', 'BrooklynGoldenCodeYT',
                     'AriaWraithLegend', 'Ic3Gam3rPix3lat3d201', 'Drag0nV3n0mBlad3', 'WillowSparklySilver',
                     'XxCraze_GalaxyxX2006', 'CodeSkaterRift', 'C00kieAlphaStarry200', 'Jelly_PIXEL202442',
                     'Addis0nAce2006', 'AquaBlizzardFlick', 'G0LDEN_Craft62', 'StreamMaster66YT', 'Turb0Her029',
                     'AvaUltra202028', 'MasonBeastStream', 'RogueAceTiger', 'Inf3rnoPrimalOm3ga', 'Am3liaOrbitHawk',
                     'ThunderGh0stFire', 'FireStarRaven_YT', 'VortexStarArrow94', 'JamesBlade200294',
                     'VICTORIA_Cyber41', 'FlameBlast2012', 'XxSilverVoidTurboxX2', 'RileyStarHunter',
                     'Dani3lDriftBacon', 'JacksonSpark202063', 'LeviDragonGalaxy', 'VoidShadowSilver',
                     'XxZapRoguexX2018', 'Haz3lDragonN3on', 'AmeliaBlastLava2011', 'Danc3r_Glitch2004YT',
                     'Fusion_Miner2015', 'XxFireBlizzardFrostx', 'XxEliBladexX2015', 'Xx_Cart3rCircuitOm3g',
                     'ZaydenRiftFlame2018', 'VenomClaw49', 'HyperLucky27', 'Vort3xDrift32', 'Stealth_Slime94',
                     'SophiaPandaNight19', 'Luk3_Build3r202182', 'GabrielGigaDark', 'FrostRid3rPanda2021',
                     'SparklyFlashLion', 'JaydenVenomPower', 'EliStormyInf3rno', 'Haz3lCyb3r2008', 'XxViperSt0rmxX2024',
                     'XxBladeWolfCircuitxX', 'XxUltraRiftxX200983', 'Sophia_Jelly2002YT', 'XxFusi0n_CHILLXX2010',
                     'ArrowSilver19', 'XxOliviaRiderxX62', 'AidenAceBlizzard', 'Kayl33GalaxySonic65', 'Build3rPow3r44',
                     'NinjaW0lfStealth2022', 'Xx_Build3rB3astWrait', 'HarperBeastGiga', 'Inf3rnoEpic201011',
                     'IceSparkly93_YT', 'St0rmySlim32007', 'Harp3r_Sonic2006', 'Arr0w_Craz32009', 'PlayzGhostHunter_YT',
                     'CharlotteLegendRift', 'FrostCod32016', 'OrbitN3onHaz3', 'XxHarperSlimexX47', 'Rav3n_Sparkly70',
                     'WyattLava29', 'Cooki3Blaz3Pow3r', 'W0lf_Cha0s', 'MoonAqua201747', 'FlashFrostBuild3r',
                     'VoidFlameToxic', 'XxSlimeHazeRiftxX', 'Inferno_Zoom202093', 'Min3rQu33n202074',
                     'XxPrimalNe0nxX40', 'EpicMagicVortexYT', 'JaydenNightStar', 'SlimeZoom12', 'BladeMinerNight',
                     'Xx_RileyStarryLegend', 'JackCraft33_YT', 'BladePlayzPrism2011', 'PrimalStarDuck2013',
                     'CharlotteToxic202398', 'CrazeR0cket63', 'Sonic_Wraith200615', 'ETHAN_Builder58', 'Tiger_Fusion62',
                     'Eagle_GLITCH71', 'HazeVoidHunter', 'Str3amBlastHawk', 'XxSilver_AcexX34', 'XxWraithSlimexX2023',
                     'XxLucasCircuitxX2014', 'XxBuilderEchoxX20171', 'ToxicGalaxy200862', 'Julian_Starry34',
                     'MateoStorm200992', 'LightS0nicZer0', 'Primal_Stealth25', 'XX_Vict0riaGh0stKing',
                     'FlashLavaEpic2013', 'HazelSaberLegend2009', 'AquaMoon201481YT', 'Mia_J3lly59', 'Tig3r_Dragon89',
                     'Xx_VoidPixelatedRave', 'Bl0ck_Ninja44', 'AriaGold3nPrism', 'Sab3rCraz32020', 'PHOENIX_Duck23',
                     'Fury_Blade23', 'Turbo_AQUA51', 'BlizzardAlpha17', 'XxStreamMoonPowerxX', 'XxPulseKingZoomxX',
                     'Shad0wEagle2013YT', 'XxAsh3rSab3rxX2012', 'Luna_Jelly99', 'XxZaydenFireVortexxX',
                     'HyperMinerBlade2011', 'RILEY_Starry99', 'WilliamGlitch51', 'XxBuilderInfernoxX11',
                     'SparkToxicQueen2007', 'BearAceHaze', 'Zayd3n_Glitch2014', 'FrostBaneStealth',
                     'PandaHero200494_YT', 'ARR0W_Gamer2002', 'XxOliviaFir3xX2014', 'EmmaCookieJelly',
                     'XxBuilderRiftHeroxX2', 'Ne0nByteLi0n', 'SilverRift2011YT', 'WilliamMin3r2013', 'AriaSlim32020',
                     'XxDancer_KingxX2013', 'Z3ro_IC3201297', 'StreamSparkHer0', 'XxInfern0HyperBearxX',
                     'Hunt3rCraftClaw_YT', 'AvaNightCraft2024', 'WilliamCraze58', 'RiftBlizzardSilver',
                     'Xx_ShadowSparklyEpic', 'XX_GalaxyRiftCircuit', 'StarryKingFury61', 'StormOmega201194',
                     'CHILL_Phoenix75', 'XxL3viR0gu3Build3rxX', 'CyberMinerKing', 'MichaelChaosBlade',
                     'V0idMasterThunder61', 'FOX_Eagle92', 'Gam3rShadow51', 'AriaOmegaSonic', 'Skat3rHawkVoid',
                     'CharlotteAquaOmega', 'RavenCraze2005', 'XxOwenPulseStarxX', 'PlayzKnightChase',
                     'EzraChaseHero2010', 'R0CKET_Cha0s17', 'HenryViper55', 'Will0wOm3ga39', 'PulseSkater72'}
local RECEIVER_LIST = {'GigaGalaxyLight42', 'Aid3n_Vip3r2019', 'Zayd3nPrismWraith54', 'JamesFlameLegend',
                       'XxTurb0BaneAquaxX201', 'JulianThund3r2008', 'NovaZap43', 'Blad3Z3r02010', 'NoraClawBuilder2002',
                       'XxFlashChaosxX2019', 'RiftStormBuilder', 'C00ki3Dawn95', 'Mateo_Zoom16', 'JACK_Chase15',
                       'JellyMasterNova', 'XxAlexanderSt0rmBlaz', 'C0deGigaN0va', 'GigaCrystalQueen', 'Vict0riaP0wer91',
                       'Slim3WraithBuild3r24', 'PlayzBac0nFury2004', 'V0rtexGamerHunter', 'XxLuckyCrystalPandax',
                       'StreamFuryPrismYT', 'Xx_Str3amThund3rRock', 'AubreyChillOmega', 'ToxicByteSaber',
                       'XxSamuel_FoxxX2011', 'PowerChillOmega', 'AlphaVenom201611', 'ChillDanc3rPro2017', 'Pro_Echo26',
                       'AquaNe0nInfern016', 'DarkMoonDragon64', 'William_Arrow84', 'AidenRift2019YT', 'SamuelN0va45',
                       'Gold3nToxicBlad32018', 'SILVER_Glitch27', 'ChillRaven78'}


-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
