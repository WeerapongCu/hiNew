-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'Chas3_Flam32003', 'Om3gaPrimalDark2012', 'IsaacTig3r2014', 'LUCKYFLICKGLITCH_YT',
                     'XxLegendChillGamerxX', 'XxPhoenixDriftLightx', 'AddisonPlayzZero', 'RavenPixelatedFire20',
                     'PlayzByte84', 'Grace_FLASH32', 'XxRileyKingxX27', 'MichaelRiftDawn_YT', 'EzraStormVortex',
                     'XxAidenNinjaxX31', 'DUCKVOIDBUILDER_YT', 'CircuitUltraQu33n', 'Arr0wMaxAce', 'EliLionCraft',
                     'Light_Blizzard78', 'Luk3ChaosEagl3', 'Crystal_Alpha2009', 'Hawk_Pro87', 'CraftAlphaDancer',
                     'ClawCircuitStr3am', 'ToxicPulsePanda2022', 'SEBASTIAN_Light30', 'DriftArrow79',
                     'AlexanderLegend20124', 'PrimalRiftChill85', 'HyperBaneRaven2007', 'XxStarrySparkRavenxX',
                     'DriftVenomLionYT', 'Pix3lB3ast21', 'L3viDrift202486', 'XxHazel_BuilderxX45', 'GalaxyChaosBlock90',
                     'JellyZeroTurbo83', 'SilverR0gueKnight', 'BlastSilver201473', 'XxFlashStormyxX88',
                     'LucasToxicBeast2010', 'FrostHunterLegend201', 'NoraHawkFlash2008', 'XxBr00klynHunt3rBac0',
                     'ScarlettCyberDuck', 'ToxicLava65', 'Flick_Dawn2005YT', 'SkaterNinjaNova', 'XxBuilderArrowSilver',
                     'Miner_Neon67', 'XxKaylee_ProxX2012', 'XxMoonStormxX2004', 'Liam_Pow3r50YT', 'Shad0wOmega_YT',
                     'XxMagicVort3xxX91', 'DragonZeroByte', 'Br00klynnR0cket20215', 'PrimalPowerCraze',
                     'ElijahNinjaSlime_YT', 'J3lly_EPIC2017', 'Zayden_TIGER2022', 'XxChillPixelatedxX85',
                     'PulseC0dePixelated20', 'Skat3rBlastStarry', 'HunterV0rtexStar2016', 'XxJackIceMagicxX88',
                     'Charl0tt3Tig3r2004', 'XxWilliamCha0sxX2021', 'SkyWraithLava92', 'FirePowerByte', 'PlayzOrbit68',
                     'ScarlettClaw43', 'JackSkyLight2007', 'EchoMoonBlaze', 'ORBIT_Alpha74', 'ArrowGhostRav3n',
                     'ChaseCookie72YT', 'XxLukeTurboAcexX', 'XxSilverPrismxX2015', 'EllaByteCrystal2007',
                     'Victoria_Playz57', 'KnightCha0s85', 'ZoeDawn63', 'Aubr3ySkat3rHawk2015', 'Br00klynn_STAR201165',
                     'MoonPowerGalaxy2002', 'IceHeroZero2013', 'XxChaseThunderBytexX', 'GlitchWraithTiger202',
                     'RiftThund3r95', 'SlimeMagicStormyYT', 'V3NOM_Zoom2005', 'Pr0Infern0Pixel20035', 'GlitchFirePlayz',
                     'Qu33nAqua19', 'StarRogueUltra20', 'N3onStr3am94', 'XxVoidVenomxX201564', 'Build3rInf3rno56',
                     'GraceBuilderZer0', 'DriftSt3alth2017YT', 'DawnTurboArrowYT', 'Silver_Z00m46', 'Harper_Fusion87',
                     'DarkCircuit2018_YT', 'C0deFlickBl0ck2014', 'Cha0s_Ven0m200684', 'MateoInfernoArrow',
                     'RiderFr0st200328', 'Mason_Alpha52', 'CHLOEDANCER2003_YT', 'Thund3r_Puls32009', 'Lucky_Void202047',
                     'HazeOmegaBear', 'MichaelZeroCrystal24', 'PlayzChillSparkly_YT', 'G0ldenStar2019',
                     'EthanV0rtexGh0st2023', 'CharlotteLuckyChaos2', 'XxEthan_LionxX2023', 'LuckyVoid82',
                     'MoonSilverGlitch', 'Viper_Pixel202451', 'XxFlashZ00mxX91', 'MoonBearHero60',
                     'GlitchDancerBuilder2', 'XxElijahSonicCraftxX', 'MiaF0x201564', 'XxFlickHyperxX2023',
                     'MiaMagicKing2002', 'XxStreamPlayzxX_YT', 'Skater_Shadow2011', 'Blad3_Puls3202217', 'Ban3Slim321',
                     'WyattFlamePlayz71', 'XxStorm_ShadowxX2015', 'CarterTurboBlade2024', 'XxThunderGamerxX2008',
                     'Pixel_Ne0n57', 'Rid3rC0d3S0nic', 'XxPixelHawkxX2006', 'SparklyPixel200721', 'OmegaStormEpic',
                     'XxPrimalRogu3Fusionx', 'Z3roFlam3Epic2014', 'BeastVoidDragon', 'XxSilverFlickStarryx',
                     'RogueCrystalSkater20', 'PixelatedPandaLight2', 'Hunt3rStarDanc3r17', 'XxCha0sBladeGh0stxX',
                     'HUNT3R_Danc3rYT', 'FusionHawk73', 'Hunt3rCooki3Fusion', 'ShadowThunderRaven', 'Haz3lMast3r2009',
                     'XxOliviaBuild3rCyb3r', 'WilliamWraithPixel20', 'AvaBlad3Sab3r', 'Zoom_AQUA62',
                     'Danc3rAquaBuild3r', 'Grac3Max2002', 'Mas0nBlizzard59', 'MichaelSonicMagic99', 'Thund3rClaw201014',
                     'XxBeastFuryxX2010', 'SparkGalaxyTig3r', 'XxPlayzChillPhoenixx', 'LavaPr092',
                     'XX_Pho3nixGalaxyBlad', 'XxLuna_LEGENDXX2014', 'FlickHeroOmega', 'JamesZoomSaber15',
                     'JellyLavaCraft2023', 'XxDuck_Eagl3xX2009', 'XxJaxonBearxXYT', 'EpicPhoenixBlock',
                     'XxCart3rGold3nxX2021', 'XxGalaxyAquaxX2018', 'XxAsh3rBan3SonicxX', 'GigaGh0stIce',
                     'LavaAlphaToxic2016', 'HunterJelly18YT', 'XxLaylaCircuitMinerx', 'HazeSaber72', 'EchoTurbo29_YT',
                     'StormyTigerCircuit', 'Jacks0n_Pr017', 'FlameEpic94', 'DuckRogueGolden2014', 'XxNora_JellyxX2013',
                     'KnightGlitchFire2005', 'WraithOrbitZap65', 'HannahEagleFox', 'Henry_Inferno40',
                     'Jam3s_Flick200736', 'XxCharlotteStarryFla', 'MysticOmegaBl0ck2022', 'Pix3lAquaStar2006',
                     'Code_Venom63', 'LaylaPrism39', 'HannahAlphaJ3lly2003', 'Craft_Blizzard202452', 'WraithMagic31',
                     'Rid3r_Duck64', 'Rift_Hyp3r97', 'C0deWraithCraze2022', 'Jayd3nCraftN30n', 'EchoClawDawnYT',
                     'XxInfern0BaneDuckxX2', 'ClawSkat3r_YT', 'JackWolfFire2004', 'XxCrazeFlashxX23',
                     'LEGEND_Shad0w2019', 'LegendJelly2007_YT', 'RavenStormyStarry201', 'Hazel_R0cket15',
                     'AquaNinjaCode', 'NightF0xFlick47', 'AlphaLight2008_YT', 'NOVA_Viper95', 'TurboToxicCode',
                     'FuryTigerEpic2009', 'ElijahSt0rmyS0nic', 'DawnSt0rmySlime', 'LukeCraze58', 'KayleeViper52',
                     'XxAsh3rHyp3rxX2013', 'StormyPix3lMystic', 'XxPlayzThund3rxX93', 'AidenCrystal75',
                     'Min3rInf3rn02021', 'XxIsabellaWraithFusi', 'Build3rCooki3B3ar202', 'Drag0nP0werTurb02014',
                     'SebastianMagic39_YT', 'FlashOm3ga23YT', 'XxNightStr3amBaconxX', 'CodeBearOrbit',
                     'XxLegendPandaxX2008', 'GraysonKnightSonic', 'SlimePr0Ice', 'XxHyperPrismxX2014', 'Gam3rP0w3rDuck',
                     'SkyRogu32006', 'PandaChaos200488', 'Byt3_Flam385', 'Pixelated_Lucky2013', 'ClawOrbitSilv3r',
                     'Jackson_Lucky2009', 'Danc3rLion2003', 'TOXIC_Bacon85YT', 'XxEmmaHawkBanexX', 'MiaNight200780',
                     'Z00mG0ld3nDrift', 'XxBrooklynnKnightSpa', 'Scarl3ttFusi0nBac0n2', 'Build3rFir3Flam3',
                     'Vict0riaVen0mPh0enix', 'LegendCookieArrow202', 'EliNova90', 'Jax0nS0nic18', 'XxRift_Drag0nxXYT',
                     'Byt3_Fury2024', 'Grays0nBaneF0x', 'ZaydenAquaBuilder', 'Slim3_Tig3r2021', 'RileyTiger60YT',
                     'CodeKnightPhoenix', 'VenomHeroBlock201737', 'LionProGiga12', 'DriftCooki3Sonic2005',
                     'BladePulse201085', 'XxHaz3lCraftGigaxX', 'HazeQueen200388', 'CrazeRiderS0nic',
                     'BladeRocket200993', 'MateoZapGamer', 'StormMystic201485', 'JulianSt0rmy83', 'ZaydenBlizzardMiner',
                     'XxAid3nToxicxX2021', 'EliGam3r202387', 'CrazeEch0Fusi0n', 'XxHenryHeroxX74', 'Oliver_Master91',
                     'G0ld3nCraftAlpha', 'CrystalDuck201243', 'GoldenPlayzRaven', 'AsherArrowEpic', 'Spark_MINER47',
                     'XxLayla_Min3rxX2017', 'WraithProIce_YT', 'Pix3lByt3201173', 'XxDuckSkat3rxX2003',
                     'STORMSHADOW2017_YT', 'XxKingHyperHeroxX', 'GalaxyTigerNeon98', 'XxBr00klynN30nCircui',
                     'ZAPMASTERLAVA_YT', 'Danc3r_TIG3R2012', 'Builder_Legend201562', 'EmmaShadow34', 'C0d3Fusi0n83',
                     'DarkStarDuck2019', 'XxCircuitTurboSilver', 'Elli3DriftBac0n2014', 'PowerMaxDuck',
                     'SkaterCookieSaber86', 'Byt3Om3ga87', 'WolfHawkGolden', 'NightWraithEcho18', 'Haz3ClawC0d3',
                     'RogueCodeBlaze', 'STR3AM_Rift91', 'PrimalFlashStar', 'PulseAceGlitch69', 'BaneWraithUltra2022',
                     'Luna_Builder87', 'XxJaxonGhostViperxX2', 'LegendIceP0wer2022', 'GLITCH_Cyber48', 'Luna_P0wer2015',
                     'XxWolfNeonxX2020', 'AddisonHawkCraftYT', 'FoxChaosLion14', 'GhostPlayz200837',
                     'XxProShadowMaxxX43', 'SparkPowerGamer', 'EagleFireFlash', 'ElijahStream85', 'XxNinja_Blad3xX2017',
                     'Bear_Light201232', 'SparkBan387YT', 'XxOmegaNightxX2007', 'Dancer_Raven202074',
                     'Willow_STEALTH97', 'EthanMagicLight2007', 'EthanGalaxyLucky', 'SamuelDriftSlime',
                     'ZoeBlockAlpha2008', 'FlashRiftPh0enix2023', 'BladeSkyPrimal2012', 'V0RTEX_T0xic87',
                     'XxLuna_StormyxX2015', 'JulianPho3nixSilv3r', 'XxKayleeMinerxX2013', 'ChloeGigaCyber2012',
                     'XxHunterSaberFlashxX', 'TurboRav3nVoid', 'BlazeSkaterStealth', 'IsabellaBaconVortex2',
                     'OliviaCircuitKing', 'XxAquaSonicH3roxX', 'XxLightShadowBearxX2', 'Mas0nF0xBlast',
                     'XxBearAlphaStreamxX', 'XxZ00mStarryxX2003', 'XxRiftFlickGlitchxX2', 'Pixel_Code42',
                     'Chase_LIGHT63', 'XxIsaacMagicGigaxX20', 'Hyp3rTig3r201633', 'BearSkyDrift2007',
                     'XxGraysonIc3AquaxX34', 'Flam3EchoSonic2011', 'WyattEch0Epic', 'Aid3nV3nomPrimal',
                     'CyberNinjaNeon', 'GamerHawk201199', 'WilliamDuckJ3lly2007', 'XxOwenStarryxX2002',
                     'VictoriaN3onNight200', 'XxStarryVortexPrimal', 'XxBaconWolfGhostxX', 'Shadow_Skater20',
                     'BearFlick96', 'JellyRogueDarkYT', 'SaberPixel2007YT', 'MinerRavenAce', 'XxNoahMoonRocketxX',
                     'XxGraysonGhostRocket', 'XxGold3nInf3rnoH3rox', 'AsherPixelatedPlayz', 'Vip3rMaxGold3n',
                     'Flam3M00nFir3', 'BaneSilverBacon', 'MagicVoidLucky2011', 'Magic_Vip3r35', 'XxJulianMoonEpicxX20',
                     'Z0eQueen2013', 'Qu33nFlam3R0ck3t', 'BLAST_G0lden96', 'Rid3rChaosB3ar2003', 'AlphaSonicCyb3r',
                     'Ril3yOm3gaBlock', 'XxRil3yLightFoxxX', 'BEAST_Block92', 'Rift_Viper91', 'StarBac0nR0cket',
                     'HeroBear2005YT', 'XxNinja_HyperxX2021', 'EmmaBlastCraft2020', 'Shadow_Craft202413', 'ChaseLava86',
                     'Chl0eHawk2008', 'BLAST_Shadow44', 'BaconDanc3r34', 'MichaelBac0n31', 'XxNinjaAc3xX2012',
                     'FlickNinjaRocket', 'Grac3BlizzardPix3lat', 'RileyEagleRiderYT', 'XXFLASH_GigaxX2008',
                     'SonicArrowCraze2023Y', 'XxBlade_PrismxX2005', 'EzraFoxEpic201294', 'DarkRogueClaw',
                     'AubreyLucky200891', 'Blaz3_PRO2003', 'BlazeGh0st2014', 'CircuitBaneC00kie', 'XxStarryCrazeBearxX',
                     'AbigailBaneOmega', 'OliviaPix3l40', 'Dani3lStarry13', 'XxHazeZ00mxX2017', 'GraceVoid51',
                     'Mas0nFr0stUltra', 'H3r0W0lfFir3', 'PandaHeroSparkly', 'ARROW_Tig3r28', 'AriaNeonPlayz',
                     'StarV0rtexHer0', 'XxCyber_SkyxX2003', 'EagleSlime200248', 'Charl0tteArr0wCyberY', 'Pix3l_Qu33n51',
                     'EthanRiderTiger_YT', 'Hyp3rCraft44', 'MateoBladeFox', 'FusionSparkly200681', 'B3ast_Gh0stYT',
                     'FusionCookie72', 'Puls3BlastZap', 'SkaterStarBlock_YT', 'XxWraith_Zer0xX20196',
                     'PandaSilverBacon24', 'PixelatedBaconTiger', 'HazelGamer202194', 'XxProFlam3xX2007_YT',
                     'Void_Builder200622', 'ZoomRogueFlame', 'XxNightTurboFoxxX', 'PandaFlameStarry',
                     'SkaterHunterRiftYT', 'XxSparklyRid3rxX2015', 'HunterGlitch201093', 'Savannah_NINJA20',
                     'Asher_Zer039', 'OMEGA_Rift201452', 'XxIsaacSt0rmyxX2003', 'ST0RMR0GUEEAGLE_YT', 'Zoom_BLOCK26',
                     'Samu3lLightLucky2012', 'XxWillowStr3amHyp3rx', 'Mat3oStormyVoid', 'Bac0nR0cketHawk_YT',
                     'DarkStreamAqua', 'LavaVenomOmega2010', 'KnightWraithV0id', 'Gam3rGigaCooki3', 'ClawEch0Stealth',
                     'XxSamuelHyperPowerxX', 'Cart3rBlizzardCyb3r', 'AmeliaBlastLava2004', 'XxN3onGhostxX2013',
                     'XxLukeHawkNovaxX', 'L3g3nd_Flam32021', 'St0rm_Zap74', 'G0ld3nClaw2005', 'EliNinjaCrystal2008',
                     'XxQueenHawkGamerxX', 'Hyp3rPix3lat3dVort3x', 'Luk3Chas3Rift201520', 'XxOrbit_Eagl3xX2012',
                     'MagicV0rtexCraze2021', 'WolfSlim326', 'MasonVenom48', 'Harp3rPrismPuls3', 'Samu3l_Toxic2009',
                     'LegendEagleSt0rm2013', 'HeroUltraVoid200993', 'Bear_C0de2020', 'Cod3_H3ro2010', 'Ven0mC0de43',
                     'XxLeviStormBlastxX', 'GlitchDancerNinja201', 'ViperJellyBeast', 'BuilderSaberN0va',
                     'GabrielDarkS0nic', 'WilliamFlickJelly35', 'ThunderPh0enix91', 'ZeroPlayzBear33', 'Zoe_Night79',
                     'BrooklynWraith64', 'XxRiftWraithStarryxX', 'WraithSilverPrism201', 'AidenIceHer0YT',
                     'XxOwen_Pr0xX2007', 'XxGrace_HyperxX2009', 'AubreyBearMoon', 'FuryPh0enixHyper', 'Zayd3nToxic55',
                     'LoganPow3rFlash2007', 'UltraOmegaT0xic2014', 'WillowChaseZoom2003', 'Xx_OliviaCraftBuilde',
                     'XxQu33nZapxX90', 'RocketMinerSaber', 'XxBane_PowerxX2013', 'HenryChaseJelly', 'MoonVoidLava30',
                     'XxPixelArrowxX2024', 'HawkPow3r2009', 'L0ganEch0V0id2002', 'SebastianViperOrbit8',
                     'JackZoomSonic', 'JulianCrazeViper2003', 'XxDriftKnightDarkxX', 'XxLiam_LegendxX2021',
                     'Mat3oPho3nix62', 'EmmaBlade79', 'LightZoomNinja', 'AddisonDragonInf3rno', 'ToxicThunderIce',
                     'ChloePanda53', 'St3althRogu3Hunt3r', 'Sab3rKnight38_YT', 'MichaelEcho200880', 'XxSparkGalaxyxX88',
                     'ETHANMAX28_YT', 'Pix3lSonic20', 'XxZoeCraftAlphaxX', 'StreamMysticHero2007',
                     'XxHenry_PhoenixxX66', 'Rift_Spark78', 'RavenDark201578', 'InfernoPlayz201240', 'Cyb3rH3r0W0lf',
                     'Ven0mSilverYT', 'Xx_CrystalBuilderAce', 'XxSamuelStormySparkx', 'Xx_Jayd3nSt3althUltr',
                     'ViperGalaxyBlock', 'AbigailUltraWraith20', 'StreamV0rtexPixel', 'EthanP0w3r2020',
                     'Grac3_Galaxy80', 'Ic3Bacon2013', 'XxElliePrimalMasterx', 'XxGhost_CircuitxX82',
                     'EchoMoonChaos2018', 'XxMoon_PrimalxX2002', 'Isab3llaB3arBlizzard', 'PandaWolfAqua', 'RavenHaze55',
                     'BlizzardClaw89', 'MysticInferno37', 'Xx_SebastianNinjaAce', 'WyattAlphaInferno', 'NinjaB3ar30',
                     'Ven0mAlphaPulse', 'EpicBuild3rZap2022', 'Grac3_Hunt3r84', 'Ev3lynRiftClaw', 'EzraFlamePulse',
                     'MiaGalaxyLight2017', 'WilliamPix3lat3dFury', 'T0xic_Blizzard57', 'V0RT3X_W0lf62',
                     'DuckGigaDrift2003', 'Mat3oLight59', 'BlazePrimalG0ldenYT', 'XxThunder_BladexX87',
                     'PowerLightCyber', 'XxCraz3_LionxXYT', 'WillowUltra87', 'AceStorm2013YT', 'ChaosCraze96',
                     'BAC0N_Craze98', 'HazelPhoenix14', 'JellyBlockGlitch', 'CraftGalaxyCode84', 'SkaterSkyStream',
                     'Saber_Dark201639', 'Samu3lCircuitPanda', 'Will0w_Turb02010', 'InfernoAqua43', 'EchoThunder201280',
                     'HawkBlaz3Sonic', 'VIP3R_Skat3r59', 'FusionHunter71', 'Rock3tByt3Pix3l', 'WyattRocketZap2018',
                     'Br00klynBl0ck200357', 'Gh0stSkat3r99', 'XxH3roDanc3rxX2007', 'XXJACK_SlimexX2015',
                     'NightGigaL3g3nd', 'XxBlizzardNightxX28', 'Ev3lynShadow77', 'AmeliaNinjaPixelYT',
                     'Ech0R0cketPh0enix', 'BuilderPrimalCookie2', 'NovaFusionBlade', 'CrazeSparkly92',
                     'Hyper_Knight201095', 'XxPowerAcexX2022', 'Flam3OrbitFlash', 'HawkStarViper', 'ChloeStorm67',
                     'Ven0mEpic2007', 'ToxicPulseMystic', 'GraceFusionSilver', 'AriaStarryCraft2007',
                     'RiftGlitchThunder201', 'Zayd3nEpicSilv3r', 'XXPRO_ClawxX75', 'StarBlazeSparkly', 'ZeroHero69_YT',
                     'V0rtexBac0nCraft', 'BlazeEch055', 'XxStreamDawnxXYT', 'F0x_Chill10', 'JulianTigerPower',
                     'AquaNeon202017', 'Pix3lat3d_GHOST2016', 'Ne0nCrystalDuck', 'Mas0nLegendW0lf',
                     'WolfSparkRogue2016', 'XxGlitchFlashGamerxX', 'WILLIAM_Ultra40', 'Dark_Rift91', 'EchoLucky2018_YT',
                     'XxSonicPixelatedxX75', 'Riley_Turbo32', 'XxClawSkat3rFlam3xX', 'JaxonBlizzard35',
                     'SkaterStream29', 'ChillArrowSlime2022', 'ByteFoxAlpha', 'WolfStealthFox', 'XxSavannahNightDuckx',
                     'LucasDriftRider2002', 'R0gueEagle70', 'PandaSilver34', 'JacksonWolf202195',
                     'VoidBlockNight202475', 'Cod3Rid3rRock3t51', 'Mat3oH3roDark2022', 'HazeNinjaFire2020',
                     'Kayl33Blaz3Chill', 'Willow_Vip3r201391', 'SaberVen0m15', 'PulseBane88', 'XxEch0Ph0enixxX13',
                     'AvaEpic77YT', 'XxCraftPhoenixAlphax', 'HarperC0deBeast2016', 'Xx_PixelatedP0werChi',
                     'Z00m_G0lden65', 'Pix3lPuls3B3ast2002', 'EvelynTiger86', 'L3viUltraMagic', 'SophiaAlphaOrbit2017',
                     'PixelatedHyperByte20', 'XxZoeGigaxXYT', 'XxStarDarkxX97', 'RocketLegendKnight',
                     'ThunderCha0sNe0n', 'GhostHawkAqua2015', 'L0ganChillSaber2005', 'FlickSky2011',
                     'Micha3lClaw201542', 'Luke_Hunter200596', 'Xx_B3astBlockBuild3r', 'Ech0Blast23',
                     'MasterLightCookie19', 'Ella_Stream2006', 'LucasDarkCraze', 'SkyPulseEpic', 'Ghost_Haze201416',
                     'GAM3R_Eagl316', 'CarterHero97', 'XxHannahClawxX200368', 'G0ldenHer0Drift', 'B3astZoom91',
                     'HeroHaze200861', 'V3n0mNinjaMystic2012', 'XxStormDawnRiftxX201', 'GhostBeast2021_YT',
                     'NinjaArr0wYT', 'MasonSparklyCookie', 'JamesCha0s201944', 'CookieRiftToxic2019',
                     'SebastianTiger200281', 'HannahHeroHawk2018', 'SaberWraithBl0ck52', 'JacksonPandaStormy',
                     'FusionSlimeHero2006', 'Xx_BrooklynnTurboUlt', 'XxDriftTig3rFusionxX', 'XxCrazeGalaxyNe0nxX',
                     'XxSkaterClawNeonxX', 'Elli3Sky54', 'StarShadow200444', 'XxDanc3rProRav3nxX', 'CraftGoldenEpic',
                     'EllaDuckRav3n2019', 'Build3rPr089', 'XxGabri3lKingFusionx', 'SkySlim32002YT',
                     'LavaWraithM00n2005', 'AquaV0rt3xLight', 'ArrowTurbo2002_YT', 'FlameDarkCraze96', 'PaisleyKing87',
                     'XxFrostBearxX_YT', 'XxNeonHawkxX97', 'ClawPixelatedBlast', 'HarperPhoenixSaber20',
                     'Flam3MaxStormyYT', 'Thunder_DARK19', 'HannahCrystalChill32', 'Zo3_N3on2023', 'Her0Gh0stDuck2022',
                     'Hunt3rFrost201313', 'Inf3rnoFir3Playz', 'VortexEchoOmega2008', 'AlphaEch0V0id2008',
                     'EpicStormy2017YT', 'OliviaH3roFury', 'Addison_Builder71', 'L0ganHer0S0nic',
                     'Grac3Silv3rMin3r2019', 'ArrowPandaFire2019', 'TurboNovaPixel2017', 'Aqua_Orbit52',
                     'AceSparklyRocket', 'EmmaAc391', 'Ash3rDark52', 'XxPrimalMasterLegend', 'Pow3rVip3r2019',
                     'Flick_Inferno201546', 'LeviVortexShadow2022', 'Will0wBearDark2009', 'XxStarMoonProxX',
                     'Jam3s_MAGIC2020', 'Z00mSparklyTurb0', 'P0werOrbitHaze', 'ChloeLavaCookie', 'HenryCrazeHyper',
                     'XxDawnPandaF0xxX', 'Void_Rift71', 'StarSilverFlick', 'NeonFlick200368', 'Isaac_Rider95',
                     'Harp3rSonic2015', 'Aur0ra_Str3am47', 'RileyRocketSilver_YT', 'OliviaCraftNova',
                     'AvaC0deMaster2007', 'GlitchFuryShadow', 'Jam3sStr3amIc3', 'MasterChillZ00m',
                     'Xx_Pho3nixSilv3rH3ro', 'Zayd3nWraithDark', 'XxSab3rN0vaVip3rxX', 'XxAlpha_DragonxX2017',
                     'XxPandaMaxVoidxX', 'XxSt3althZ3roxX25', 'FoxHaze2023_YT', 'MateoPixel67', 'PowerPandaCrystal',
                     'EPIC_Li0n41YT', 'DuckGhostGalaxy20123', 'DanielTurboNight2019', 'SonicPandaPho3nix',
                     'XxZo3Blaz3GigaxX', 'Vort3xQu33nStarry26Y', 'Cooki3_CYB3R68', 'Ven0mPulse2002', 'Ac3_Fir32005',
                     'MichaelGigaPhoenix20', 'Hannah_Hunt3r48', 'UltraPixelIce2019', 'Code_CRAFT69', 'Alpha_Mast3r2015',
                     'BrooklynnOmegaBeast2', 'GamerFrost202388', 'XxBladeFrostEchoxX', 'AmeliaZ00mPulse',
                     'EllieStormBlade', 'XxAriaMoonxX2013', 'Ac3Blast2023', 'MagicFr0st2017', 'BladeKingPro52_YT',
                     'JACKS0N_F0xYT', 'DancerCraft23', 'XxSpark_PrimalxX45', 'Grac3Cooki344', 'PixelRiftBlade201917',
                     'SilverHawkFlame', 'MysticBlastLava42', 'Haz3Circuit200692', 'XxNora_TurboxX2018',
                     'Dani3lDrag0n2015', 'LuckyTigerClaw2020', 'LucasRock3tVort3x', 'Ban3Lava2012',
                     'XxGabri3lBuild3rxX37', 'AsherStarryPower', 'SparklyPrimal2007_YT', 'BlizzardChaos58',
                     'MysticHawkStar', 'JellyGamerNova2015', 'RiftLion84', 'FlameNightS0nic', 'Grays0nSkaterBeast',
                     'XxDancerV0idZer0xX', 'ArrowGhostSonic', 'OliviaGamer2019YT', 'BlizzardChillLion', 'R0gueW0lf85',
                     'XxEchoSkyxX63', 'StreamLavaNinja', 'MichaelByteEcho', 'ProFlickRocket', 'PowerSlime200496',
                     'Gusylklt01330', 'Janetatjzic51327', 'Annoraumosr63798', 'Mindyajyyu53231', 'Neritaccpik36758',
                     'Tallouzmqwo54232', 'Noreenxgbcv52592', 'Colenevyjhn74934', 'Lynnawicmx85344', 'Elitazuhps27941',
                     'Riccacraop63166', 'Barbeerhxew69505', 'Enidfqqlm67413', 'Korentnhwc11628', 'Kettygztwp38105',
                     'Lorenarawor46706', 'Agatangwhp36051', 'Noreengmbhg99883', 'Dodiensqna33059', 'Audyjaelk76398'}
local RECEIVER_LIST = {'Zer0P0wer11', 'Xx_CircuitDuckBlizza', 'HyperR0cketBlaze', 'KnightAlphaShadow200',
                       'Charl0tteCircuitStea', 'XxHenryWolfDancerxX2', 'ClawWraithHaz3', 'HenryMysticFox2013_Y',
                       'Slime_Max68', 'TurboStealthFire50', 'LIAM_Tiger201847', 'EllieMagic66YT',
                       'XxFrostHazeRiderxX20', 'Mate0BuilderDawn', 'XxBlaze_AquaxX31', 'Byte_Ninja2014',
                       'GoldenViper200633', 'Tig3rDragon2017', 'PixelNinja13YT', 'ByteBeastLegend', 'MichaelHawk200242',
                       'Thund3rCraz371', 'Str3amFir3V3n0m2011', 'IsabellaGamer201549', 'St3althAlphaSilv3r',
                       'Gabri3lRift2017', 'StarryArrowNova', 'EchoSonic42_YT', 'LightVenomBacon', 'Pix3lH3roGlitch76',
                       'NovaCyberFrost', 'Build3r_STORM79', 'Xx_St0rmThunderHunte', 'XxJulianGhostBlizzar',
                       'Rav3nSt3althPho3nix', 'EzraZ00mRider', 'JamesCookie201385', 'Al3xand3rHawk36',
                       'XxStormyEchoxX201226', 'Blaz3_Knight2018'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
