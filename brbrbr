-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'EpicB3ast2014', 'FlashStormBacon74', 'SonicEagleHyper', 'TigerJellyClaw', 'XxZoeArrowFoxxX',
                     'CircuitKing200947', 'Bac0n_King2005', 'CarterCyberQueen2009', 'Aqua_RIFT62', 'XXGIGA_AcexX2009',
                     'TigerViperS0nic', 'Grac3DragonCooki3', 'M00nHazeMystic52', 'Ech0_Aqua68', 'Z0eIce2010',
                     'BlizzardBuild3rDuck2', 'CookieGiga93', 'HazeChase37', 'CookieStorm200327YT',
                     'PixelCrystalHaze2006', 'CookieOrbit20', 'LukeNeonDrift2018', 'Sab3r_Knight2019', 'QueenPrism75',
                     'XxVictoriaKnightxX75', 'HazelSkaterCookie', 'XXFIRE_RavenxX73', 'OmegaRogue70',
                     'Xx_ZaydenRogueThunde', 'XxAddis0nR0cketInfer', 'AlphaFlickPuls3', 'MasterEagleSparkly20',
                     'Zer0_Ph0enix2005', 'Xx_SavannahNovaHyper', 'XxDrift_HeroxX24', 'ViperAquaDuck',
                     'WilliamMagicLion39YT', 'EllieSkaterPulse', 'BlizzardFlashZ00m', 'XxPrimalToxicxX2017',
                     'M00n_Arr0w73', 'LaylaZ00m2022', 'FlickNovaBlast', 'Xx_SavannahEchoVort3', 'XxCooki3RiftPandaxX',
                     'ToxicLucky_YT', 'Bl0ckAquaViper', 'IceZoomDawn', 'Moon_Arrow92', 'Gh0stCircuit2014',
                     'XxMoon_PandaxX20', 'FuryStreamPixelated', 'DriftStarry202467', 'Fury_Z3ro2015',
                     'AsherLuckyBane28', 'Hunt3rKingCyb3r2002', 'XxLuk3Fir3Vip3rxX', 'XxMasonV3nomTig3rxX',
                     'EliZapFr0st', 'Nova_Storm64', 'NightOrbitGalaxy', 'Xx_Drag0nWraithFlick', 'Craz3Li0n2005',
                     'XxSavannah_St0rmyxX7', 'Ph0enixLava64', 'N0va_Wraith201014', 'WraithG0lden2007',
                     'WillowFireGhost2023', 'HazelDarkToxic', 'Gamer_Toxic42', 'XxDanc3rUltraxX2012',
                     'ToxicSaberQueen61', 'Bl0ckFlickV0id', 'MysticHer0Ace', 'FlashCraft51_YT', 'Brooklyn_Stormy20136',
                     'HunterV0rtexPanda', 'IsabellaCyberF0x24', 'StreamAlphaBeast', 'Xx_WyattSilverPrimal',
                     'Kayl33_B3ar2009', 'BlazeChaosPixelated', 'DancerBuilderGlitch2', 'ChaosStr3amAlpha2022',
                     'Xx_PixelatedInfernoW', 'Ven0m_G0lden71', 'BrooklynnWraith71', 'XxHarperSparklyxX12',
                     'HunterS0nic2004_YT', 'Night_Rogue81', 'XxHeroLuckyxX83', 'AlexanderGlitchAce20',
                     'CraftLuckyUltra2013', 'GigaGhostHero13', 'XxKing_FrostxX67', 'ChillGalaxyCod3', 'InfernoMaxTurbo',
                     'HunterAceSaber2020', 'JackPh0enix2010_YT', 'Xx_BrooklynLightBlaz', 'Flick_Ban32011',
                     'SamuelCookieChill201', 'CyberVortex201445', 'XxPix3lEchoDuckxX', 'AsherTigerHyper',
                     'UltraMoonLight2018', 'Rav3nSlim3Magic', 'MysticClawGlitch57', 'XxByteRogueNeonxX',
                     'AuroraPrimalSky', 'XxBladeArrowCookiexX', 'XxWillowFlameGlitchx', 'PandaEagl337', 'BearN0vaRift',
                     'Dragon_STORMY86', 'WyattGhost2021YT', 'EliStream2014YT', 'ZaydenVortex24', 'LiamBeastMagic',
                     'XXPANDAGALAXYXX_YT', 'Silv3rDriftUltra65', 'RiftStreamToxic', 'BladeVen0mGlitch', 'Oliv3r_AC388',
                     'AriaBuild3r14', 'Xx_BeastBuilderFrost', 'StreamPixel201097', 'AvaPixelatedNinja202',
                     'Hannah_Thunder51', 'PhoenixPlayzDawn2002', 'FlickFlameChill', 'JacksonSparkly49',
                     'WillowZoomMoon', 'Bl0ckMiner202440', 'Xx_RocketCookieStrea', 'Starry_Power47',
                     'IsaacPrismDragon51_Y', 'N0vaStarV0rt3x', 'CyberMiner18', 'HunterCrazeJelly2024',
                     'SparklyHunterUltra28', 'NightThunderRider201', 'CyberArrowUltra14', 'Xx_BuilderAquaMaster',
                     'Dragon_Miner48', 'XxMysticVoidxX2006', 'Xx_Aubr3yChaosSt3alt', 'NoahCrystalBuild3r_Y',
                     'ZeroMinerFlick', 'MagicHawkFlick', 'XxMoonViperDawnxX202', 'GalaxyRid3r90', 'NovaShadow2005YT',
                     'NightBlad3Crystal', 'OliviaFoxNinja45', 'Rock3tPix3l58', 'JulianPixelated21', 'Fury_B3ar200693',
                     'Alpha_Glitch20', 'Zo3HawkFox', 'Rocket_DAWN40', 'ElijahBuilderSparkly', 'ZapIce40',
                     'OrbitC00kie95_YT', 'PrimalTurboBlade2003', 'XxChaosEchoRavenxX', 'CrazeRiftMaster2012',
                     'XxJulianViperxX2012', 'XxNinjaBac0nxX2004', 'XxFoxBuilderxX_YT', 'Inf3rn0_H3r0200987',
                     'Xx_KnightNightBlizza', 'Scarl3ttRock3tMax', 'Omega_Wraith36', 'SilverDuck2022YT',
                     'DawnTurboNeon31', 'RogueBlockWolf', 'TurboShadow201885', 'Gh0stDrag0n2021YT', 'Z00mHunt3r2024',
                     'CircuitChillJelly', 'Rid3r_HUNT3R35', 'XxAuroraGoldenxX64', 'Luk3Pow3rTig3r', 'LightSparklyDark',
                     'IceDawnZap', 'LionZeroAqua', 'MasonFlam340', 'XxCircuitCodeBaconxX', 'XxUltraTurboPrismxX2',
                     'AriaPanda200414', 'GhostEagl3Moon', 'ZaydenFlameVortex202', 'Frost_Star47', 'PandaAquaFusion',
                     'RiderLi0nPh0enix2022', 'KingDancerRift2007', 'Xx_EllieGhostBuilder', 'LeviC0deRift',
                     'ChaosZoomNeon201060', 'LucasStream26', 'Aur0raStarryBuilder', 'H3r0_M00n200515',
                     'XxDanielKingxX2024', 'ScarlettDragonBlaze', 'KingZoomBuilder2005', 'Blade_BLAST16',
                     'HunterProGlitch2004', 'XxArrowKnightxX53', 'HeroLavaPulse25', 'StarryBuilderChase20',
                     'XxPrismEchoSkat3rxX', 'XxOrbitMoonxX2005', 'IsaacNe0n2003_YT', 'EchoSaber202480',
                     'Stealth_Orbit51', 'XxScarl3ttJ3llyxX27', 'CircuitGhostBane70_Y', 'TigerOrbitPulse',
                     'EvelynThunderToxic', 'XxLuna_LightxX52YT', 'AbigailB3ar2011', 'FoxGhostBear',
                     'Charl0tteDriftHunter', 'ElijahEagl343', 'TigerMasterRaven', 'GraysonFoxZap',
                     'XxOliviaLegendVortex', 'BlizzardLightAce', 'MaxEpicFlame200842', 'XxHaz3l_DriftxX2011',
                     'WillowShadow202257', 'JacksonZ3roGalaxy', 'GamerV0id2004', 'GoldenStarryBlaze_YT',
                     'CHILL_Turbo202171', 'CyberCha0sNight', 'ZoeSlimeLionYT', 'SparkSaberPlayz48',
                     'Bane_Thunder202178', 'XxMagicFlam3xX2024', 'BuilderVen0mAce', 'Elli3Hunt3r2007',
                     'EzraFlashDrift202376', 'LukeVoid201758', 'PowerPulsePixel', 'FoxStarThunder68', 'Elli3_Chaos65',
                     'XxDragonBearSparklyx', 'MasterLegendNova2016', 'Z00mF0x201417', 'Henry_Hyper13',
                     'XxCyb3rFlickAlphaxX2', 'M00nTurb0Drift76', 'TurboBlad3Epic', 'Jax0nLi0n2003',
                     'HawkPixelatedRocket2', 'LavaPho3nix45', 'Bacon_Str3am44', 'XxHunterDuckxX56', 'StarryFlash2017YT',
                     'Skat3rStr3am48', 'XxAlphaOmegaxX39', 'AddisonZ3ro2007', 'LavaPowerVoid', 'XxWilliam_StarxXYT',
                     'XxAubr3yHyp3rxX2019', 'XxDuckBeastUltraxX', 'EliFlam32013', 'Galaxy_Fusion201552',
                     'XxDanc3rLi0nxX', 'XxEllieBaneNightxX', 'Xx_Samu3lDragonFlash', 'BlizzardOmega44', 'MiaSilv3rN3on',
                     'Block_Duck73', 'SlimeSparklyShadow', 'RiderN0vaPrimal', 'LavaStealthPower', 'XxFireDarkBuilderxX',
                     'LightRocketHaze', 'Xx_JacksonFlickPrism', 'SilverGalaxySky20172', 'BrooklynnFrostJelly2',
                     'Puls3OrbitTurbo2009Y', 'MasterSaber201651', 'XxLuckyInfernoxX2012', 'J3llyBan347',
                     'XxSkyBlazeGlitchxX20', 'F0xHunter200241', 'FireDriftViper', 'LukeUltraStormy99',
                     'JackCooki3Ninja2020', 'H3nryFir3Primal2024', 'DanielStealthFlick20', 'XxZeroHeroxX94',
                     'EllaBlizzard200928', 'XXADDIS0N_R0guexX202', 'LuckyHer0Raven', 'AddisonPrimalEpic88',
                     'XxAriaAquaHeroxX2012', 'RocketStormy84', 'Dani3lDanc3r2009', 'BlastHawkJ3lly2015',
                     'Xx_Br00klynnV3n0mPix', 'XxEzraBuild3rxX2003', 'HannahBeastChase2019', 'XxChaseNinjaxX2018',
                     'ElijahMoon67', 'Pr0C0de58YT', 'Legend_Ph0enix2006', 'JulianKingStealth', 'LuckyNightBlaze2006',
                     'NinjaWolfHero2020', 'SkyTurb064', 'BaneAlphaWraith', 'ZeroCrystalHawkYT', 'SonicPhoenixPrimal',
                     'Chas3StormSonic', 'CraftQu33nDriftYT', 'EliV3nomSparkly2010', 'S0nicCraftEch02007',
                     'ProWraith200813', 'LucasStealth78', 'XxHer0Ven0mSlimexX', 'HannahChill67', 'Rogu3CrystalOrbit',
                     'XxDriftTigerPrimalxX', 'XxCircuitQu33nThund3', 'ELI_C0de53', 'IsaacCraft200711',
                     'XxHazel_GigaxX2020', 'Br00klyn_Ac32023', 'Om3ga_Echo2008', 'RiderByteCrystal2007',
                     'Arr0wBuild3rCraft', 'Xx_Paisl3yPix3lat3dW', 'Legend_Nova201936', 'GraceDuckZero16',
                     'Micha3lN3onDark', 'DragonPrimal53_YT', 'SophiaPix3l11', 'XxBlastMaxCircuitxX',
                     'LukeHyperShadow2020', 'LucasCircuitRocket20', 'XxBlaz3Cyb3rTurboxX', 'Hyp3rG0ld3n2008',
                     'LionHyperBlock', 'Fir3_Max31', 'Xx_BROOKLYNSKATERTUR', 'Chas3Rid3r14', 'Z0eGlitchBl0ck',
                     'ByteEch020', 'Infern0Ven0m16YT', 'Luk3_Shadow2022', 'Master_SONIC41', 'PlayzGalaxy95',
                     'JamesVenomCraze', 'Orbit_Glitch202011', 'Mas0nVen0m21', 'PixelCookieFusion62', 'Ban3KingNinja',
                     'EllieGalaxy69', 'AquaClawByte202116', 'Chase_Ninja89', 'AddisonHawkJ3lly', 'Mat30_Starry2017',
                     'Danc3rT0xic2002', 'Ph0enixSkyVen0m10', 'BlazeBeast201111', 'Harp3rB3ar60', 'Cha0s_Knight2020',
                     'EmmaStealthFlame', 'DriftMysticStream', 'JAXON_Builder51', 'BlockFlashThunder', 'AceIceLion_YT',
                     'XxKnightCookiexX34', 'MagicRid3r66', 'ViperJellyHaze', 'CodeMiner200848', 'AmeliaV0idLucky',
                     'TigerZer02018', 'BrooklynnDawnNinja84', 'James_Frost71', 'XxRift_VortexxX44', 'Z3roGhost2018',
                     'Orbit_Rift200333', 'DriftZ00m24', 'GoldenPhoenixStealth', 'HenryTurboMystic2011',
                     'LeviRocketVenom20', 'Blast_RAVEN52', 'CrazeFr0stChill2019', 'EvelynMagic31', 'HawkMin3r2005',
                     'XxFusionStarNeonxX', 'Spark_Orbit18', 'XxLukeMagicStreamxX2', 'BlockMaxBacon2008',
                     'GraysonShadow48', 'XxNinjaDriftBearxX', 'KayleeGhostPrism', 'DanielFox200564',
                     'LavaSilverFlame68', 'Kayl33Hawk2004', 'StreamAlpha66_YT', 'Haz3lDragonNight', 'NeonPowerSonic',
                     'LiamCha0s78', 'XxJaydenDawnChillxX', 'BanePulseBacon', 'XxJaydenPhoenixKingx',
                     'XXLIGHT_FrostxX2021', 'EzraGiga202095', 'LunaCyb3rDark51', 'EthanClaw95', 'BlazeP0werGamer2005',
                     'XxFlameEagleC0dexX20', 'PixelDancer27', 'HyperZap2003YT', 'OliverCrazeCraft', 'LuckyBlast44',
                     'Xx_MichaelTigerSpark', 'HannahFrostClaw', 'EzraStealth202286', 'KnightCyber21', 'Fusi0nGam3r88',
                     'XxStreamGhostxX2011', 'XxG0lden_LegendxX200', 'SophiaBeastBlizzard', 'SkyL3g3ndStormy2010',
                     'ClawTiger24', 'LionSonic77', 'ProRid3rWraith2010', 'JacksonSparkPrism200', 'EthanSonicOrbit2021',
                     'StarryRid3rDawn', 'EthanNightCooki3', 'FoxEagleHero19', 'ElijahBearBlade', 'EpicFlickBuilder2011',
                     'Jam3sFlickPlayz', 'EagleIceClaw', 'OmegaBac0nSparkly', 'WillowIceRift', 'Cart3rBlad3Byt383',
                     'PixelHawkChill2005', 'Stealth_R0gue52', 'OrbitGhostSpark78', 'N3on_Sky64', 'XxNeonGlitchxX2004',
                     'RileyToxicClaw', 'XxPix3lSilv3rMaxxX', 'BaneGlitch2007YT', 'StreamZ00mCraze2003',
                     'ToxicPixelSparkly_YT', 'XxDanc3rFusionProxX2', 'Abigail_Ninja2020', 'Dark_Z00m91',
                     'XxJackToxicHawkxX', 'Mate0DuckEpic', 'BaneStormyChaos', 'VoidWolfFox', 'AriaJ3lly201510',
                     'MoonIceVortex', 'XxLionCircuitxX18', 'Flam3AlphaC00ki3', 'TigerDarkSonic', 'PrismR0gu32006',
                     'Panda_Lava11', 'Haz3l_Shad0w2004', 'BearDrift201859', 'SparkPlayzMin3r', 'AbigailSpark200349',
                     'Gam3rStormDawn', 'XxHannahJellyEchoxX2', 'AubreyHyperHunter', 'GhostStarry37',
                     'DancerEaglePixel95', 'Phoenix_Panda2018YT', 'HannahKnightChase16', 'NightCraze24',
                     'XxMast3rNinjaxX68', 'Chas3Primal87', 'HyperMiner50', 'StormySlimeVortex201', 'WolfBaconViper',
                     'ECH0_Alpha11', 'XxStarryVoidCyb3rxX', 'Pixel_Frost91', 'XxKnightWolfxX57', 'EzraBlast200626',
                     'Flash_Ven0m2012', 'Z00mSlim350', 'XxZaydenMasterxX2012', 'XxHeroGigaBeastxX',
                     'XX_StreamFusi0nR0cke', 'StealthArrowIce', 'IsaacByte93', 'XxHazel_ViperxX52',
                     'XXAL3XAND3R_N3onxX85', 'Sky_Sparkly40', 'AddisonInfernoBane20', 'C00kieCircuitGalaxy',
                     'Arrow_Bacon2019', 'LavaByteCode21', 'OwenPrismHaze78', 'EchoVip3r2019', 'XxEthan_DarkxX76',
                     'PrimalBear60', 'XxVortexFlickxX2008', 'XxUltraCyb3rxX2018', 'XxKnight_Pho3nixxX10',
                     'PandaMysticPrism2002', 'XxH3roStormFrostxX', 'MagicChill56', 'RocketInferno66', 'King_Prism2003',
                     'WillowQu33n2023', 'ZeroBaconSpark', 'OwenNightFlash49', 'Shadow_Hyper200365', 'ViperRiderGhost95',
                     'Rift_Pr013', 'Samu3lCraz3Craft', 'Chill_Primal48', 'NinjaBlockBear', 'XxFuryF0xxX16',
                     'XxGhost_LavaxX200978', 'Tig3rDawnPh03nix2002', 'MasonIc343', 'Elli3_Fir341',
                     'BladeBlastGhost2010', 'DANC3R_B3ar19', 'XxPlayzWolfAlphaxX98', 'XxJellyBlastxX201350',
                     'XxSkaterEpicxXYT', 'DarkClaw2002_YT', 'BlizzardP0werCrystal', 'Al3xand3r_V3nom70',
                     'Rock3tNova2008', 'StarKnightChill2024', 'N0raAceCyber76', 'Chas3CircuitPuls3200', 'Grac3_Star78',
                     'BrooklynArrowSaber14', 'Orbit_Dancer30', 'XxMagicMaxxX41', 'AquaPandaCraft', 'FlickM00nYT',
                     'BlockBlad3201643', 'Dani3lR0ck3t76', 'RiftGold3n2007_YT', 'Xx_StarryRiftStealth',
                     'C0d3_Build3r83', 'PandaLightAc32024', 'NinjaStr3amRift', 'EliLuckyPhoenix2005',
                     'XxLi0nLightxX2024', 'XxGhostKnightAquaxX2', 'XXGAM3R_J3llyxX2011', 'XxDawnSonicxX71',
                     'Pixel_Master63', 'HawkPho3nixPrimal202', 'XxNoahDarkEchoxX', 'BladeBac0nMaster',
                     'EagleVoid200282', 'IsabellaNe0n48', 'SparkGlitchOrbit37', 'ByteClaw47', 'Aid3n_Thund3r2003',
                     'XxSamu3lZoomCooki3xX', 'AriaPandaGiga', 'BlockMinerChill', 'AmeliaZero37', 'Flam3Rogu3H3ro62',
                     'Str3am_Toxic2013', 'Light_INFERN075', 'XxL0ganTigerxX2013', 'AlphaGalaxy83', 'BuilderEchoChase',
                     'IsabellaCyber75', 'Hazel_Shadow99', 'TurboDuckSlime2007', 'R0cketGalaxyC00kie', 'Haz3l_Epic67',
                     'CookieMystic70', 'Eagl3CraftMystic40_Y', 'ScarlettHeroCrystal2', 'GraceDriftPulse20194',
                     'ClawGiga2002_YT', 'SparklyVortex99', 'Duck_Ech047', 'Charl0ttePh0enixR0ck',
                     'Am3liaCyb3rStormy201', 'ClawCodeTurbo2021', 'MaxN3onCod32006', 'Chl03H3r0Sparkly2019',
                     'HawkVoidTiger2007', 'Chase_Phoenix60', 'CircuitBuilderIce200', 'XXFUSION_HyperxX2017',
                     'C00kieP0wer200235', 'ISAAC_Miner29', 'VenomHaze202340', 'EmmaVen0mDuck', 'Eagl3GalaxyStar',
                     'UltraRiftRocket', 'SophiaStealthVoid201', 'DawnPhoenixZap', 'ZeroPandaSlime',
                     'Om3gaBlad3Ban3200660', 'Echo_Gamer70YT', 'XxStarryRocketUltrax', 'Flam3Rogu3Flash2016',
                     'Golden_Hyper201759', 'Dani3lLucky31', 'FoxThunderChaos2024', 'PulseQueenThunder54',
                     'PixelJellyBlaze2011', 'XxDuckL3g3ndxX63', 'TigerClawGalaxy2004', 'XxHawkBaconFlamexX',
                     'Pixel_Tiger45', 'XXKNIGHT_GhostxX2002', 'Silv3rByt3B3ast', 'Circuit_Inferno41', 'PrimalAceStream',
                     'PixelZeroAce44', 'XxThunder_BladexX66', 'StreamBaconGalaxyYT', 'ZoomLightZap22',
                     'ScarlettZoom2012', 'Oliv3rChillHunt3r67', 'XxRift_Slim3xX2005', 'ChloeKingStormy2006',
                     'Ace_Ne0n2006YT', 'XxEvelynRavenClawxX5', 'EpicBear201328', 'ThunderEch02018',
                     'XxMasonTurboxX41YT', 'ArrowWolfStealth', 'DancerMasterBear2017', 'ZeroShadow31',
                     'HawkGlitchCraft', 'XxPandaCircuitxX2016', 'Moon_Spark2019', 'FuryDawn201279', 'OliverNight200518',
                     'Mas0n_Blast2014', 'T0xicArr0wCraft', 'RogueViperIceYT', 'XxDani3l_St0rmyxX', 'AmeliaPlayzKing',
                     'AuroraSpark66', 'LeviDancerNight31', 'AquaArrowFury2003', 'Stormy_Cooki310', 'C0de_Stream200838',
                     'NinjaStarryCode20144', 'Knight_NE0N2015', 'EllieOrbit201130', 'FlickQueenMystic',
                     'XxRil3yGam3rGhostxX2', 'Xx_JellyFlashStealth', 'AriaKnightBear', 'Stormy_Rav3n53', 'DriftSlime31',
                     'StreamStormyCraze200', 'SavannahDancerSlime', 'StormyKnightB3ast', 'BLAST_Rift95',
                     'Xx_Puls3Vip3rSparkly', 'XxSebastianOrbitRide', 'FuryBearClaw', 'MateoSaberDark',
                     'NovaNightKnight2014', 'Shad0wHunterMagic', 'Aid3nPrism76', 'XxH3roSkyCod3xX',
                     'XxElla_SaberxX2013', 'Lava_Turb02009', 'Xx_LucasSab3rPho3nix', 'XxZap_SAB3RXX53',
                     'XxInfern0PrismxX34', 'XxZoomBaneBlizzardxX', 'GoldenKnightRogue202', 'Craze_Orbit50',
                     'HenryV0rtexFusi0n', 'Chase_BLAST200579', 'BladeHazeStealth2015', 'BladeHazeTiger',
                     'CrystalSparkCyb3r201', 'Shad0wOmega2005', 'RileyFr0st24', 'MAGIC_Epic2018YT', 'OmegaFoxPulse',
                     'V3nom_Alpha53', 'BearF0x2023', 'XxLoganHunt3rxX2005', 'Phoenix_Power201042',
                     'OliverNovaTiger2008', 'LightStarFlick42', 'RiftPixel2005YT', 'Hunt3rNovaPro',
                     'Ic3Skat3rStorm2005', 'XxJaydenMoonxX10', 'Xx_StreamMoonCrystal', 'GhostHawk201993',
                     'AlexanderZap47', 'QueenPixel202048', 'XxKingMagicxX70', 'R0cketDuckV0id', 'Xx_Br00klynLuckyMyst',
                     'PrimalHer0Eagle_YT', 'JulianStormChill', 'P0werGamer11', 'CyberHeroEpic2010',
                     'R0cketOrbitFlick2021', 'ElijahLi0nLegend', 'AubreyBlaze200566', 'Xx_PrismBuilderFrost',
                     'XxKnightZapSaberxX20', 'XxUltraNinjaRiderxX3', 'H3roBuild3r74', 'Oliv3rOm3ga2006', 'LavaTurbo67',
                     'OrbitBlastVortex', 'XXCHAOS_Mast3rxX36', 'Zero_Rift32', 'CrazeChill80', 'MysticSab3r49',
                     'Claw_Alpha32', 'Ash3rCyb3r57', 'ZeroNightSlime201085', 'Circuit_Mystic51', 'EmmaViperCode42',
                     'CrazeAqua35', 'IsaacJellyDuck2008', 'ToxicGhost201382', 'Zer0P0wer63', 'Pho3nixHaz3Pro2018',
                     'AquaChaosPrimal2015', 'XxZapTigerxX200836', 'Panda_Star202127', 'OmegaDragonFusion',
                     'GlitchChaos201684', 'C0deAlphaRift', 'GhostCyb3rFox', 'AbigailFlick77', 'SlimeAce200247',
                     'SkyDarkCod323', 'MasonV3nomChas3', 'Aid3nEchoLucky', 'C0d3_Slim32022', 'SkyChillMax41',
                     'LiamSaberStorm', 'Gabri3lFr0st_YT', 'Mat3oOm3gaBlock', 'ElijahVoidAlpha', 'FusionFlickHaze',
                     'ScarlettFlickSkater1', 'Drift_Hunter21', 'CookieRiftMiner35', 'CharlottePulse2005',
                     'Gh0stEch0R0gu3', 'LightEaglePlayz32', 'CyberToxicSky200291', 'Ellie_Dragon200569',
                     'VenomBaconStealth', 'Xx_V3nomSilv3rCooki3', 'XxCrystalVoidxX38', 'MysticLuckyBlaz32010',
                     'St0rmFr0stKing2018', 'Ninja_Skater29', 'BrooklynSparklyOmega', 'XxOliviaAquaMinerxX',
                     'Danc3rVoid2014', 'HazeFusi0n2016', 'AidenMystic63', 'LukeMinerRift', 'PixelatedToxicDawn',
                     'AlphaZeroPower', 'DuckPowerSpark2010', 'SilverHeroPro', 'KayleeN0vaC0de', 'HyperCrystal90',
                     'Haz3lR0ck3t2012', 'Xx_GhostInfernoFusio', 'DAWN_Gamer21', 'Victoria_KING52', 'Eagl3OrbitDuck',
                     'PaisleyLegendChaseYT', 'Chill_SPARK44', 'JackHeroArrow', 'FLAME_Pulse2024', 'Pho3nixFrost201173',
                     'Starry_Chaos69', 'XxDancerLi0nAquaxX20', 'QueenArrow52', 'Light_Hero2023YT', 'XxAidenSlimexX2013',
                     'FlickStealth81', 'Dark_G0lden76', 'ProPix3lSparkly', 'Gamer_Crystal89', 'VictoriaSonicGalaxy3',
                     'FlameJellyLegend2004', 'HawkStreamCookie80', 'DanielStarryBlade15', 'HazeKingStormy',
                     'F0xBuilderHyper38', 'NightBearSpark73', 'DancerPowerAqua', 'XxMiaNinjaVenomxX202',
                     'HawkAce202232', 'OW3N_Panda16', 'Luk3EpicVoid45', 'XxBlockEpicxX2010', 'OwenPlayz200483_YT',
                     'XxBane_Shad0wxX43', 'Ril3y_Hunt3r19', 'PrismEagle202490', 'PaisleyPowerMagic201',
                     'XxChaosBeastPixelxXY', 'OrbitDark52', 'ChillGold3n2010', 'AriaHyperStorm2009', 'LoganBlaz346',
                     'XxMason_LuckyxX2003', 'Owen_Wolf42', 'ChillN3onWraith2009', 'EliClawPixel61', 'Luk3Byt3Fury2012',
                     'Ow3nGold3nDragon', 'Mystic_Ice76', 'Echo_Aqua18', 'Elli3BaconSpark83', 'DragonCraz3St3alth',
                     'DRAGON_Giga13', 'ViperBlazeRider', 'XxBaconStormyxX2004', 'Blaz3Pow3r71', 'Br00klynnRaven2006_Y',
                     'Rock3t_Fury201872', 'ChillFusionPro', 'XxBlastSaberxX51', 'GalaxyCyberByte2011',
                     'OliviaNinja2023YT', 'Circuit_Night201989', 'LionSpark65', 'CarterKingHawk33',
                     'Samu3lHyp3rBlizzard', 'C0deKnight2008', 'MagicGlitchHawk', 'ViperCrystal200620_Y',
                     'MichaelMasterCyber', 'Lion_Aqua200340', 'BlockCyberMagic', 'XxAmeliaCyberxX2014Y',
                     'OrbitWolfBear', 'Harp3rRid3r88', 'FrostPixelLion', 'SparklyZ3ro2008', 'Chl0eLegend201649',
                     'CharlotteGalaxy66', 'Sparkly_Ace202125', 'XxCarter_GIGAXX2017', 'James_Frost51',
                     'XxOliv3rStr3amxX58', 'OrbitQueenN0va', 'Golden_Jelly2002', 'AceHer086', 'Qu33nP0w3r42',
                     'Queen_Dragon202153', 'XxPow3rBlastxX2017', 'SaberCrystalBuilder4', 'TurboDawnSlime',
                     'Bl0ckStream2021', 'Ribotsehrt249'}
local RECEIVER_LIST = {'SonicVortexNight', 'SlimeFusion2004_YT', 'XxBrooklynNovaxX75', 'XxRiftGamerNightxX20',
                       'Micha3lVort3xBacon', 'AquaPix3lLucky2010', 'AsherCyberC0de31', 'LiamWraithMystic2022',
                       'ClawB3ast64', 'XxBearTigerxX2003', 'GamerLegendViper16', 'OliviaNinja97', 'SkaterLucky66',
                       'XxZap_LuckyxX2006', 'Bacon_BLAZE43', 'Chill_Pulse46', 'AbigailNight14', 'Zer0Hawk68',
                       'XxOwenHyperN0vaxX', 'Pixel_Stealth201260', 'ProPixelPlayz2018', 'Zer0Rift34',
                       'BaconSparkSlime2010', 'XxJackMagicDriftxX20', 'XxByteSt0rmxX2005', 'Arr0wNe0nChill',
                       'BladeTigerEagle2014', 'XxSamuel_BLOCKXX2023', 'EllieOmega87', 'LavaRock3tHaz3',
                       'C00ki3GlitchChill99', 'Vortex_King201688', 'BeastStreamSparkly77', 'XxKnight_ToxicxX2003',
                       'LightHyp3r61', 'OrbitBlizzard97', 'Ven0mSkaterAce', 'Ven0mR0cketHunter94',
                       'Flick_Builder201879', 'Bear_R0CKET76'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
