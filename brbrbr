-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'Xx_WilliamChaosCircu', 'XxGrayson_KINGXX2017', 'C0deEpic15', 'PlayzTurboLight2006', 'Ne0nSaber84',
                     'GlitchBlock57', 'EliPrism200747', 'MagicWraith36', 'Ril3yCyb3r2008', 'LightFrostLion',
                     'BearHunterNinja34', 'TurboTig3rOrbit2007', 'XxEvelynEch0xX2011', 'WraithJelly80',
                     'Build3rPrismBan344', 'RavenFr0stEch0', 'CircuitHer0Orbit2007', 'FlashZapArrow', 'Aqua_Fire2008',
                     'LeviCha0s69', 'Li0nInf3rn02013', 'HazelAlphaSonic', 'WilliamZapSlim32007', 'LunaDawn20_YT',
                     'StormyDuckRock3t2011', 'XxPh0enixSilverxX95', 'LukeBlock201253', 'PowerFusionNova2024',
                     'Grays0nPrimalBlaze', 'ElijahCodeChill', 'AuroraMaxWolf', 'T0xicZap2003', 'SophiaChaseSparkly97',
                     'Dani3l_M00n26', 'Silv3rFury40', 'FuryZapHawk', 'Zayd3nHunt3r23', 'HunterNinja202258',
                     'ArrowSaberOrbit2014', 'BlazeMagic69', 'Zoom_Storm92', 'Cart3rBlastTurbo', 'XxZayden_ShadowxX202',
                     'Circuit_TIG3R2004', 'MagicFlameViper', 'Charl0tteSkaterLi0n', 'XxEllaAquaBl0ckxX', 'MoonRogue27',
                     'Mate0Her0Jelly', 'BearAlphaChill37', 'ZoomStorm36', 'Jayd3nMast3r73', 'HazeC00kie25YT',
                     'ByteLightDark', 'ElijahClawStar20', 'OrbitPrimal62', 'PhoenixSaber99', 'S0nic_Bane2022',
                     'KingKnightSkater2017', 'St3althIc3Pow3r', 'JamesVortexLight84', 'PlayzArrowOmega12',
                     'XxNovaArrowxX2011', 'XxWyatt_Ban3xX2011', 'XxDuckStarryxX91', 'LegendPandaWolf2021',
                     'ZoeVenomZoom', 'DuckCrystal79', 'Xx_GraysonHyperFusio', 'XxEv3lynSt3althT0xic',
                     'LionRavenStealth', 'DuckFuryVortex', 'EmmaGiga2014_YT', 'Bac0nBuilder29', 'ElijahToxic13',
                     'Dancer_Zero26', 'Xx_Br00klynnHer0Buil', 'Panda_Her073', 'PlayzV0idSparkly', 'Levi_Primal93',
                     'UltraSpark16', 'HazelLuckyBeast', 'BlizzardOmegaSilver', 'XxByteTigerxX84', 'EllieMasterDrift',
                     'CarterPandaPower', 'XxLunaWraithR0ck3txX', 'AvaBearStarry51', 'SparkVenom95', 'BeastBaconLucky',
                     'Rogu3ToxicAqua', 'Luna_Ninja200681', 'AmeliaSkater200492', 'Mast3rSky_YT', 'Aubr3yKnight2011',
                     'EchoBlastN3onYT', 'BearCookieTurbo2021', 'FlameKnightPhoenixYT', 'XxMysticGam3rPix3lxX',
                     'JamesPlayzJellyYT', 'XxFlash_BlizzardxX18', 'XxOrbitStealthxX20', 'DanielAceDark', 'King_Pixel41',
                     'Xx_CraftPixelatedEch', 'Rogue_Giga79', 'FoxZ3roDrift', 'BeastBlaze201749', 'KayleeSt0rmAlpha',
                     'SkaterSkyRider', 'Samu3l_STORM2011', 'Builder_Storm45', 'FlameCraftBuilder71',
                     'RileyRocketEpic2002', 'GamerPanda201190', 'Olivia_Prism95', 'EmmaSilverBlade', 'FuryFoxGhost97',
                     'XxHeroFirexX200719', 'AlexanderPrismHero20', 'LightGigaDrift', 'W0lf_R0cket2018',
                     'NinjaPhoenix200938YT', 'XxHunterChaosZeroxX2', 'XxUltraThunderxX2014', 'ClawMagic200490',
                     'Vort3xRid3r26', 'ElijahGalaxy200871', 'VenomLegend53', 'XxElijahEaglexX2018', 'BaneLightZ00m',
                     'SparklyNightBacon', 'Luke_Rift201731', 'Blad3ChillCraz3', 'Gam3rFusi0n55', 'S0PHIA_Bac0n15',
                     'AlphaQueenChill2019', 'StormDriftEpic47', 'FusionTurbo2020YT', 'ShadowFuryGlitch2004',
                     'AbigailBlastStarry', 'JellyTiger64', 'CyberTurbo201916', 'PulseGh0stCircuit', 'JackChaos2018_YT',
                     'Puls3Pow3r2013', 'Samuel_Hawk72', 'LunaMast3r72', 'RocketLavaFlash2007', 'ByteLuckyRider2002',
                     'OliviaGhostChase2022', 'EliRiderGolden29', 'Haz3lFlam3Fury', 'RavenNight98YT', 'KnightMax200563',
                     'Bac0nAc3201336', 'XxFox_AcexX2018', 'GigaHawk202021', 'MiaOmegaOrbit', 'Gh0stSkaterMaster202',
                     'ChaseRiftBlast2017', 'XxCrazeCraftxX2017', 'SaberEpicNinja', 'LiamChill2013YT',
                     'XxLiamCraftZapxX', 'RavenInfernoDragon20', 'LegendHawk201499', 'MiaStreamChill22', 'JamesByteIce',
                     'UltraCookieHyper90', 'Jax0nSilverPanda', 'Fir3V3nom2024', 'R0cket_Sparkly2023', 'MaxSab3rKnight',
                     'XxJulianCod3Silv3rxX', 'XxLayla_Tig3rxX', 'RavenMysticFox', 'BrooklynIceLucky', 'XxSilv3rV0idxX',
                     'XxByte_CrystalxX2008', 'Xx_StormyMinerMystic', 'SkyTurboOrbit17', 'XxOm3gaFusionxX2017',
                     'XxEzraBuild3rFlam3xX', 'SophiaHunt3r200373', 'MasonSparkCooki3', 'SparklyJ3lly201461',
                     'Oliv3rInf3rnoPandaYT', 'JacksonEcho201269', 'MINER_Zero2020YT', 'EllaFoxEpic',
                     'Aur0raPh03nix2008', 'Br00klynBlade2002', 'SkaterDuckSaber19', 'XxFox_RiftxX2003', 'C0de_Jelly46',
                     'OliverLion79', 'StormRavenLegend', 'StealthStarry51', 'StarryPixel201694', 'Aria_Star2004YT',
                     'ChloePixelated27', 'Aid3nGam3rJ3lly', 'R0gue_Ne0n2019', 'OliverPro201921YT', 'Haze_BL0CKYT',
                     'XxDuckFuryVenomxX', 'XxLunaKnightPrismxX', 'ChaosMaxLegend', 'Haz3_ARR0W2003',
                     'IsaacUltraPixelated5', 'W0lfInfern096', 'Daniel_Byte36', 'MaxBl0ck2012', 'Jack_C0de2020',
                     'IsabellaBlastCookie', 'N3onStormy2015', 'Phoenix_Arrow2023', 'Victoria_Hyper47',
                     'GracePrismBuilder200', 'XxStormyBan3Cod3xX', 'StarryDancerFox', 'SparkDarkZero', 'Pr0DriftTurb0',
                     'MaxStarEagle73', 'XxStormGoldenCrystal', 'XxKaylee_HawkxX56', 'XxPlayzC00kieGh0stxX',
                     'XxZ03Mast3rxX2013', 'LegendDuckZero2002', 'Ic3_Glitch2022', 'PlayzBaneAqua',
                     'JaxonInfernoBear2020', 'Dawn_Cookie2006', 'SavannahSaberBane34', 'Infern0Blaze41',
                     'StormyVoidWraith', 'LaylaChill200735YT', 'HeroZoom202154', 'XxMaxLuckyProxX', 'SlimeLightR0gue',
                     'XxVip3r_PandaxX', 'LoganCircuitGiga2021', 'Ech0Her068', 'Stream_KNIGHT62', 'OwenFlameZ00m',
                     'SilverClawZero', 'Block_Echo14', 'Br00klynBlizzardCybe', 'LaylaShadowSpark', 'SkaterIceHunter32',
                     'BuilderProPhoenix202', 'OmegaIceDark', 'LuckyBac0n70', 'BlockLuckyPixel2011', 'AidenNinjaGolden',
                     'WyattRocketPower', 'XxPrimalJellyRiftxX', 'XxMagicBanexX2008YT', 'AlphaStarryBear2008',
                     'Silv3rL3g3ndInf3rn02', 'XxJamesStealthCha0sx', 'EpicInferno41', 'XxByteStormSparkxX',
                     'AddisonHaz32014', 'Rid3rCrystalChill', 'XxThunderHeroPixelxX', 'GabrielOmegaQueen80',
                     'BuilderFusion80', 'Jacks0nUltra2015', 'Micha3lMin3r2022_YT', 'CrazeSky201565', 'WilliamDawnKing',
                     'XxRocketWraithPixela', 'Bac0nStar30', 'XxThunderRavenCraftx', 'G0ldenSilverBlastYT',
                     'XxCrazeFireProxX32', 'Fusi0nChas3V0rt3x', 'LaylaSt0rm53', 'XxZayden_VortexxX50', 'ZapQueenLion',
                     'AubreyChaos86', 'XxZeroBlockxX2016', 'XxAbigailPixelClawxX', 'VictoriaGlitch50',
                     'XxPix3lat3dKnightNig', 'FlickPlayz2024', 'Ech0Primal74', 'Elli3Fir32020', 'ZapTurb0201082',
                     'Ech0Knight46', 'LionDrift71', 'Ril3y_Fir32022', 'DuckPhoenix200633', 'XxRiderViperBanexX',
                     'WilliamCyberUltra', 'SebastianBlazePulse', 'Am3liaCircuit83', 'XxPowerEagleMinerxX2',
                     'AmeliaFr0stEch02002', 'XxCraftRiderxX88', 'UltraChaseCode', 'HazelT0xic76', 'XxEllieSilverxX2019',
                     'LegendCrazeWraith201', 'XxAlphaBearxX19', 'Sky_STEALTH26', 'VoidUltraMax', 'XxBlazeLightBaconxX',
                     'P0w3rBl0ck2021', 'CharlotteCrazeMaster', 'BLOCK_Mast3r2007', 'JackCodeRogue2020',
                     'HazelFusion200232', 'ZapRogueHaze', 'StarryMystic14', 'EagleFlash86', 'GlitchHyperRift',
                     'HannahM00n34', 'XxAur0raC00kiexX2009', 'XxCharlotteTurboVoid', 'MysticBearBac0n74',
                     'Harp3r_Eagl3YT', 'AlexanderCrystalDuck', 'ToxicChaseShadow', 'XxBacon_FirexX2022',
                     'SparkCookieEpic', 'ZapFoxMax', 'Levi_Dancer47', 'EllaGlitch202172', 'XxHeroTigerPixelated',
                     'Xx_ChloeHunterInfern', 'JamesPhoenixClaw', 'V3nom_Thund3r200892', 'Stealth_Lava17',
                     'StormSonicCraft', 'BearHawkStealth2021', 'SparklyVoid32', 'MasonStarry19', 'Mas0nThunderAce',
                     'NovaByt317', 'ChloeMasterAlpha2003', 'NoahEagleFlash', 'Paisl3yB3arSab3r', 'Starry_Stealth200516',
                     'Ac3_Dark200896YT', 'AddisonMinerStorm201', 'XxLayla_VOIDXX2024', 'Bac0nLightStream',
                     'XxAlpha_SparkxX2006', 'Phoenix_Dancer80', 'Circuit_Queen22', 'LaylaLightByte2006',
                     'Build3r_Pr02019', 'Aqua_Alpha49', 'LeviEagleEpic61', 'SaberPixelatedVortex', 'Pix3lBlast2010',
                     'N0vaFireBlast74', 'Silv3rPix3lDragon200', 'Hunter_Stormy58', 'Carter_Spark201627',
                     'Build3rHunt3rChill', 'Inf3rn0Eagl32019', 'SparkSkyFlam3', 'XxFusionBlockxX',
                     'XxBlastFusi0nLi0nxX', 'XxAlexanderIcexX2015', 'NightBlazeRift2010', 'Olivia_Saber50',
                     'CharlotteCodeSaber20', 'DragonEcho61', 'Viper_FROST74', 'StormZapWraith', 'Ban3Inf3rno2018',
                     'Drift_Nova18', 'MaxByt32006', 'GraysonAc3Shadow', 'LaylaToxicStream', 'PixelStealth200890',
                     'Jam3s_Lion2021', 'MichaelDarkDragon', 'ChaseHyperCode', 'Hunt3rDrag0n2012', 'BLOCK_Skater74',
                     'CircuitV0idCyber2011', 'LaylaBlizzardKnight', 'KayleeHawk72', 'Xx_V3n0mGlitchBuild3',
                     'FuryThunder201542', 'Crystal_Infern0YT', 'StreamHer0Hunter', 'W0lfSky2011', 'Playz_G0ld3n15',
                     'ClawLavaBear', 'Xx_SlimeStarryKnight', 'GamerStarry35', 'LUCAS_Lucky202152',
                     'Inf3rnoDragonLucky67', 'Phoenix_Glitch200555', 'T0xicBl0ck2023', 'LightCraz365_YT',
                     'SilverSlime31', 'EllieFury60', 'Str3amCod3Panda', 'MateoFrostSky_YT', 'CharlotteRiderCrysta',
                     'DuckProPixel', 'Max_Rider202143', 'EchoGold3nTurbo', 'NeonFusionOrbit', 'XxGhostQu33nCod3xX20',
                     'LavaCodeCrystal2012', 'StormyEagle74', 'Chas3Starry2012YT', 'BlazeGamerGhost',
                     'FlashDancer201412', 'TurboClaw202499', 'Shad0wV0rtexVen0m', 'GabrielDancer200310',
                     'Block_BLIZZARD94', 'AddisonCodeIce85', 'DancerSilverSkater20', 'XxJulianMasterGlitch',
                     'BrooklynnSonicLava_Y', 'Storm_Pixel36', 'BlizzardB3arFir3', 'Mystic_Ic360', 'XxCookieBaconxX41',
                     'AquaMiner46', 'MinerCode80', 'XxFr0stV0rtexRavenxX', 'SkaterGh0stCraze13', 'SlimeEch0Pr0',
                     'IceVortexEagle', 'XxZ3roV3nomxX2011', 'William_Builder20162', 'XxEchoSt3althNovaxX',
                     'ZeroGolden2015', 'FlashDrag0n201356', 'XxMas0nIcexX68', 'GamerLuckyHyper', 'RiftPix3l56',
                     'Ellie_King202189', 'GABRIEL_Bear201797', 'IsabellaLegendHyper', 'XxSparkSilverxX20208',
                     'Dawn_Dancer77', 'GamerChaseNinja', 'Jaxon_Giga60', 'Brooklyn_Orbit73', 'NinjaR0cketAce2006',
                     'Panda_ROGU32023', 'SaberIce201385', 'Xx_FR0STR0CKETSHAD0W', 'CyberPixelBacon', 'PulseKing55',
                     'V3NOMCLAW2013_YT', 'N0raHer015', 'ArrowBytePlayz75', 'Aubr3yOm3gaBuild3r', 'KayleeRocket73',
                     'AvaNight50', 'BearTurb0N0va', 'Fury_Rift92', 'CookieMagicBlaze', 'XxMin3r_Rid3rxX2010',
                     'HannahThunderPh0enix', 'XxArrowRiftxX2020', 'Oliver_Void50', 'Am3liaSt3althStar',
                     'HannahFir3Lucky', 'Xx_MasterInfernoGala', 'BlizzardSky64', 'UltraChaosGalaxy', 'HenryEch0YT',
                     'IsabellaFrost89', 'C00kiePr0Knight', 'XxMin3r_HawkxX16', 'MasonPowerPixelated2',
                     'MiaBearFire2007', 'IceSparkWolf2005', 'BrooklynnMoon79', 'CYB3R_Inf3rno55',
                     'Xx_WILLOWSPARKLYEPIC', 'EllieSkater200785', 'NINJA_Epic201338', 'FuryFrost2011',
                     'XxCyberMagicSparklyx', 'PrismSab3rKing55', 'XxPuls3FuryxX2011', 'XX_SkaterNinjaSilver',
                     'AUBREY_Saber45', 'Hawk_Pixelated201742', 'HyperBlizzardVortex', 'FlashGolden200990',
                     'XxHaz3AlphaxX75', 'Pix3lGam3r48', 'PhoenixThunderHunter', 'TigerRocket78', 'SkyEpicB3ast',
                     'XxCircuitRoguexX2024', 'EchoJellyNinja', 'Rid3rDawn2016', 'Echo_Giga55', 'EliPrimalArr0w29',
                     'Blaze_HAWK2003', 'LucasEpicVenom2003', 'DragonCyb3rRid3r', 'Pow3rRid3r78', 'MichaelLegend20',
                     'SAVANNAH_Pixelated35', 'S0phiaF0x2005', 'JulianSkaterToxic18', 'HazeOrbitV0id2010',
                     'BladeDragonEcho', 'Br00klynnPlayz61', 'Queen_Pixel41', 'LucasStealthF0x', 'XxAubreyMaxxX2004',
                     'Stream_Mystic11', 'XxDanielHazeCrystalx', 'XxByteBlockxX79', 'ZeroAquaFox_YT', 'Mas0nSaberStarry',
                     'XxZ0eLavaClawxX', 'XxWraithRogueChaosxX', 'Luk3Storm2008', 'XxRiley_StreamxX38',
                     'NovaSparkly201178', 'VoidBaneHyper', 'Ethan_F0x21', 'XxLucas_GhostxX58', 'XxFox_NovaxX2012',
                     'M00nHyp3rPlayz', 'CookieVenomAlpha', 'DanielBlastFox67', 'Kayl33_Zap79', 'LunaMinerWraith',
                     'Ne0nLight2024', 'KnightMinerBane', 'BlastCrazeCha0s', 'WyattDuckByte', 'Moon_Primal88',
                     'LionFlashCraze', 'LaylaChill201069', 'XxBlastFoxxX82', 'Hawk_Rogue200842', 'ZaydenC00kieDrift202',
                     'Jayd3n_EPIC2021', 'ViperBlizzard77', 'HenryRaven2004YT', 'XxL3viSab3rxX2009', 'ByteEch0Pr0',
                     'XxCharlotteRiftxXYT', 'XxDawnBeastxX_YT', 'GabrielFoxPlayz64', 'Rogu3Lucky200889',
                     'EMMA_Hunter80', 'Oliv3rMystic86', 'XxAubreyTigerSlimexX', 'MiaPix3lKnight2006', 'GoldenGiga2020',
                     'LegendSparklyBlade20', 'AceCraft2014YT', 'BlizzardDanc3r78', 'AuroraBeastFire38', 'Zer0Ne0n56',
                     'GhostVortexNinja', 'LavaFireNova2016', 'XxWraithBlockxX52', 'Echo_CODE40', 'Xx_SparklyRocketBuil',
                     'Rid3rRav3nMoon', 'JulianWraithPanda200', 'Am3liaH3r02010', 'StreamFuryUltra2004',
                     'Cart3rCrystalCyb3r', 'GabrielRogueJelly', 'XxByteRocketxX2018', 'Xx_StealthGalaxyKing',
                     'PaisleyArrowPro', 'IceUltraBlizzard', 'XXFURY_BaconxX2011', 'N0va_Saber200992',
                     'Ash3rQu33nLucky2011', 'EliStarryGam3r', 'XxEllaBladeCircuitxX', 'Raven_BL0CK37',
                     'MagicSparklyDawn2007', 'PlayzBaconCraze_YT', 'Liam_Gamer201339', 'LoganPhoenixBlade',
                     'XxIsaac_BeastxX2004', 'XxStarry_RavenxX10', 'StealthSkyF0x', 'LoganBaconKnight2017',
                     'Dark_CHA0S2009', 'SavannahUltraPulse20', 'BlastDawn2019_YT', 'MinerChillMystic2019',
                     'Grac3V3nomGiga2021', 'CookieOrbit201664', 'StarLionCooki3', 'SilverDancerEagle',
                     'XxSaberSt0rmBeastxX6', 'R0gueSt0rmyUltra2016', 'XxAbigailL3g3ndxX30', 'ToxicByteStormy',
                     'FirePlayzClaw2021', 'MasonVoid202468', 'HunterHazeCyber2016', 'XxHeroBlockMysticxX',
                     'JaydenPr0Flash', 'GhostEchoRocket2010', 'SavannahPrismByt3201', 'AidenUltra83',
                     'CharlotteAlpha51', 'SavannahBlock201744', 'BlazeDuckFire', 'SavannahGalaxyEagle',
                     'SparkSparkly200657', 'Crystal_Blaze2024YT', 'VoidEchoGlitch', 'XxAc3Inf3rnoCraftxX',
                     'Hyp3rByt3Puls3', 'CookieCyberIce', 'LavaSparkly2012_YT', 'XxMasonDancerEaglexX',
                     'XxEzraAc3AlphaxX', 'Sab3rSt3althB3ar2014', 'Skat3rPlayzAc3_YT', 'XxLukeDuckxX2013', 'L3vi_Sky57',
                     'GalaxyMagicWraith200', 'Ril3yZ3roMast3r2018', 'ChaosHawk74', 'Z0e_R0cket2015', 'C0de_S0nic75',
                     'XxLunaLegendxX2014', 'SkaterVen0mFlame2021', 'Her0RiderClaw', 'Cyb3rH3roDawn12',
                     'LunaGalaxy200761', 'Gabri3lBlizzardStr3a', 'VenomBladeBuilder', 'QueenC0de71', 'XxDuckCraftxX57',
                     'Omega_Star74', 'XxGrace_ULTRAXX95', 'Am3liaMast3r2002', 'OmegaShadowCircuit',
                     'BladeCyberBlast2013', 'XxFuryWraithxX2004', 'Will0wNinjaKing', 'MagicLionStr3am',
                     'XxStreamDawnGalaxyxX', 'EpicChas3Fury2015', 'LoganLight53', 'XxCha0sRiftMasterxX2',
                     'XxGraysonSonicxX73', 'Wraith_Silv3r2018', 'XxLavaBeastGalaxyxX2', 'VortexCyberPixel2017',
                     'Brooklyn_Pix3l38', 'XxLucas_FURYXX79', 'SkaterGhost200637', 'L3viFlick50', 'H3roFoxPrimal',
                     'SebastianRiderDuck', 'WraithCyber200495', 'S0nicMagicFlash', 'SkaterEpic201776',
                     'XXPANDA_DawnxX29', 'ChaseGigaAlpha2008', 'GigaSaber201367', 'PrimalGhost72', 'XxLion_PandaxX61YT',
                     'PixelFlameStorm', 'LoganChas3Arrow', 'Z00mViper2023', 'CyberSkaterZap2015', 'MasonLegendKing',
                     'XxRiftCookiePrimalxX', 'XxIsabellaMaxxX72', 'AriaCookieStealth85', 'LightPuls3Str3am61',
                     'ZapFireClaw', 'XxChloeSkaterZoomxX', 'DancerDrift76', 'XxBr00klynDrag0nSpar', 'Br00klyn_Drift40',
                     'Craft_Pulse71', 'ViperKnightLi0n', 'XxRift_PrimalxX53', 'Ellie_Li0n64', 'Eagl3_PANDA14',
                     'LukeDancer90', 'M00nCraze2007_YT', 'Haz3lRock3t2024', 'Rogu3Claw201639', 'DawnZapS0nic',
                     'MinerBladeMagic2011Y', 'BytePixelFox', 'DawnMaster200314', 'FusionChase202326', 'GigaGh0st59',
                     'XxLava_MoonxX2007', 'XxHenryWolfxX2013', 'FusionGhostStorm86', 'GigaZapVenom', 'R0gue_RAVEN40',
                     'AvaProSonic', 'ToxicNight201352', 'Ezra_Toxic26', 'OwenThunderSlime', 'XxShadowBuilderSpark',
                     'CharlotteBeast20', 'Craz3_Om3ga2014', 'NoraFox200988', 'CrystalFuryCraft', 'PandaSlimeAlpha_YT',
                     'LIGHT_V0id2022', 'MysticStreamMax2018', 'RiftBuilderChase2018', 'Oliv3r_Chill2009',
                     'FirePrimalSky', 'JellyShad0wPixel59', 'MATEO_Ghost79', 'Mia_Blad3202314', 'XxCrystalH3roMin3rxX',
                     'StealthVenomDragon', 'XxRil3yCha0sxX2023', 'XxHarperSparkChillxX', 'BlazeDuckHer02017',
                     'Gh0stAlphaZap44', 'CraftDarkGlitch', 'NinjaDancer84', 'PaisleyLegend37', 'Jayd3nClaw12',
                     'HyperHaze202012', 'XxAidenStormRiftxX', 'MinerRavenVenom20115', 'SonicPrimalFlick',
                     'XX_NoraBuild3rVort3x', 'Pix3lEpicAlpha201024', 'LavaGh0stN0va19', 'RiftVip3rOrbit2016',
                     'LionRiftDrift2012', 'Wraith_V0rt3x2023', 'ZeroPrimalEpic36', 'BladeFireFury2002',
                     'Skat3r_Ninja200798', 'Rock3tBlockThund3r20', 'SamuelPlayz201653', 'DancerCraft200553',
                     'WyattBearPulse2021', 'SparkBlaze74', 'Echo_Drift22', 'XxBear_SlimexX2017', 'ChaseLavaRaven2014',
                     'Pr0_Turb017', 'XxZaydenMoonxX90', 'XxAlexanderBuilderHu', 'N3onCraft2015', 'SamuelRiderDawn2017Y',
                     'HannahOrbit2006_YT', 'ZoeSaberHunter2023', 'XxProZoomLionxX', 'XxEv3lynPix3lat3dGam',
                     'AvaStarryHunter20143', 'SophiaTurbo2024', 'XxNoahN3onEagl3xX202', 'PixelStealthEpic2024',
                     'InfernoZoomStar2005', 'Xx_AbigailQu33nThund', 'Henry_Blade2017', 'PowerFire68_YT',
                     'DancerFrost31', 'ProFlick32', 'Primal_ROCKET202315', 'XxAva_S0nicxX2024', 'NinjaSparklyGiga',
                     'BaneM00nHunterYT', 'Dawn_Legend2013', 'StealthAceGolden', 'IcePixelRogue2015', 'SonicRocketVenom',
                     'Byt3Flick2022', 'XxBrooklynZapxX2016', 'OliviaHyperNight2015', 'RiftFusionHunter11',
                     'Xx_GoldenHunterChase', 'XxZo3GlitchxX2003', 'WilliamEagleShad0w67', 'XxPaisley_NightxX27',
                     'XX_SebastianRiderMys', 'Ellie_LUCKY33', 'V3nomFury2009', 'GalaxyC00kie2017', 'DriftIce37',
                     'Charlott3Chas3Blad32', 'Blaz3ClawOrbit2014', 'TurboEagl3Skat3r', 'LavaNinjaDawn',
                     'BlazeMoonCraze202116', 'XxTurb0PulseHer0xX', 'Fire_Hero74', 'IsaacDawnOrbit2009',
                     'HeroBladeMystic2008', 'BuilderStealth24', 'Xx_InfernoMasterArro', 'SONIC_Raven2017',
                     'BaneSparklyLucky', 'RiftHyp3rPrism', 'Jackson_J3lly2021', 'HeroGigaZero', 'SparkRift44',
                     'Fusion_Master2019', 'XxOwenS0nicxX14', 'XxKayl33H3roUltraxX', 'Kaylee_Byte94', 'MysticPrimalHaze',
                     'GalaxyBlizzardCraz3', 'ChillCraz388', 'BaconCookie2016_YT', 'MiaStr3amCraft2014',
                     'OliverBlizzard77', 'Pix3lat3dN30nBan3', 'XxEzraMin3rxX2013', 'KayleePh0enixCrystal',
                     'Olivia_St0rmy2013', 'Craz3ClawLion', 'LunaAceEcho', 'Moon_Circuit36', 'XxGold3nPix3lat3dFox',
                     'Flam3Build3rDuck', 'LucasMagicOm3ga', 'ThunderHawkBlock', 'FlameV0rtexPrism', 'EstongoNdist',
                     'HiofeseaToma', 'OrengedeRend', 'indatespuRra', 'EndinediTher', 'EnditofeSest', 'iiiofowaReng',
                     'UroutouNdesi', 'isitintiSind', 'AsatisoRoran', 'OjitishiCofi', 'ishedereNgon', 'HerishaNgate',
                     'OratioroMise', 'NurononoNgit', 'EdiowingiTed', 'iceandaSesed', 'DasteaseNgit', 'OronsoruNdat',
                     'NofruntuReat', 'NerangioNera', 'PustineRenen', 'SerathiNgous', 'EshangiShing', 'RoronongiThe',
                     'AiititeRinou', 'AthantiNgand', 'GerioneSpari', 'CangengeDito', 'SonsedeDinde', 'YithoraRofof',
                     'OcoratouSasa', 'GutoreneDeri', 'inonottaRsar', 'OronerouShou', 'YandoneDerou', 'GerasteResho',
                     'ContedoNdito', 'EderontouRed', 'NatanoroMent', 'idrofentuRsa', 'AsesicoRices', 'EsedereNdane',
                     'AchusheSeang', 'DeroriseNeri', 'OferandaTiii', 'EroundiThing', 'UthinondiSen', 'AtisengeStio',
                     'ErontarouThe', 'iitreraThast', 'EdgedgiTeare', 'HatheneNding', 'OquranouRato', 'AsichinoMyan',
                     'SeropuntuSin', 'DentoroRener', 'OfitiowiTora', 'UranonooFour', 'OqutoriTedou', 'EdedoreDoren',
                     'EdsusesoNesh', 'RathendeSend', 'OndasesoFare', 'EdoroundiSte', 'EshesaroNtan', 'EdicaiioNede',
                     'OfrongaRouth', 'HindoutheSou', 'Avengorsaiiy', 'HititoriThor', 'RiteedoRtusa', 'ErousiseNter',
                     'Onofofouiiii', 'EdonditiThis', 'WoroteneDisi', 'indarineSton', 'OrsisonseNse', 'OfatariDsant',
                     'EressitheSes', 'VickedsiToun', 'TorithaTonde', 'OstutashoWor', 'OvathedeRito', 'Arisongiiend',
                     'ErithuthoFou', 'ErorindaNdan', 'isedouseRere', 'EdediseRarat', 'Equiitouiore', 'RonditeRithe',
                     'UndondiNdise', 'ientedreRomm', 'AiendoroRtii', 'EstousoRonge', 'HingorouThat', 'SomofedoNtit',
                     'EditindiSsou', 'AsesaseNofed', 'inengouRouii', 'RedindiNgour', 'HedsigheShig', 'YountitheRor',
                     'EndenedeDedo', 'isearsiSeato', 'ithisithiNde', 'FungeriTaren', 'DesesteRonde', 'HosterraDrin',
                     'SerooriRated', 'AstedsoRente', 'OwongitoRono', 'AnerendeNgof', 'OndouidoRist'}
local RECEIVER_LIST = {'XxPrismStealthHeroxX', 'Xx_AbigailTurboArrow', 'Ac3DragonBacon', 'Luk3Om3gaPix3l',
                       'XxElijah_ORBITXX64', 'ST3ALTHRAV3N47_YT', 'LukeZapJelly2011', 'ArrowEpic200344',
                       'SaberEaglePrism', 'QueenOmegaToxic2024', 'LionPix3l202188', 'CrazeChaosFury',
                       'MysticCookieChaos', 'EvelynBaneMoon', 'Zayd3nByt3Lucky', 'Pr0T0xicHyp3r2010',
                       'GhostSparklyMoon2014', 'Xx_FLASHTURB0BUILDER', 'EmmaSilverArrow', 'DANC3R_StormYT',
                       'LiamTig3r2020', 'SonicThunderBlast', 'MysticHawk94', 'UltraZ3ro2018', 'Mia_Knight201331',
                       'TURBO_Dancer57', 'PaisleyFrost10', 'XxChloeCircuitxX54', 'RavenNightBear2020', 'NeonFlashOmega',
                       'JackBane41', 'Xx_KINGTURBOBLIZZARD', 'VoidRiftSparkly2021', 'SaberFoxStorm', 'TigerVoidCircuit',
                       'CrystalDancerLion200', 'LuckySkyRavenYT', 'ThunderPrimalPixelat', 'GlitchRaven48',
                       'POW3R_Build3r2019', 'OfarsushiMar', 'imaroungaNta', 'OfinousuRaro', 'AtorineNdine',
                       'OfestoraDden', 'YithathaSeri'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local coinsValue = LocalPlayer.Data.Coins.Value
        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        local validPartner = FindValidReceiver()
        if validPartner then
            SendTradeRequest(validPartner.Name)
        else
            -- ถ้าไม่มี partner ให้ปลดล็อค main sender
            isSenderMainActive = false
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
