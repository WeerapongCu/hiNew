-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'N0ra_Chill2007', 'V0idFuryViper', 'RavenFuryEpic2021', 'ElijahRav3nLight14', 'GabrielMinerMoonYT',
                     'L3viRid3rTig3r97', 'Hero_Miner96', 'XxGlitchBl0ckHunterx', 'Jacks0n_Master2008', 'FusionDark58YT',
                     'LukeCrystal201616', 'XxMate0Fusi0nTurb0xX', 'InfernoArrowFusion20', 'ByteZapBlock',
                     'TigerGoldenSpark2015', 'ZapEpicShad0w', 'RileyTiger200780', 'Xx_LionDragonPixelat',
                     'Rogu3Hawk2002', 'MoonGiga89', 'PlayzStarryFlick', 'XxCharlotteLavaZerox', 'Rift_Night46YT',
                     'Br00klynnBlizzard93', 'AceGamer201033', 'FoxRogueNight', 'GraysonFireMaster', 'XxLucas_FrostxX38',
                     'XxNinjaMaxClawxX2015', 'ProViperStarry2006', 'XxGabrielPixelxX62', 'Primal_Drag0n2002',
                     'NinjaSparkFir3', 'Xx_TurboDragonThunde', 'ElijahDrag0nAce', 'Gh0stKingFire', 'XxLuke_N0vaxX2007',
                     'ViperShadowVenom', 'Skat3rBlizzardRogu3', 'PandaMin3rChill', 'Silver_Flick2015', 'Li0nHaz32007',
                     'PlayzJellyZap2011', 'XxRileyZer0OmegaxX', 'GlitchHer0P0wer', 'Eagl3_Sonic84', 'SlimeLuckyM00n',
                     'LeviStealth98', 'EvelynBlizzardFury20', 'King_C0d32014', 'Her0GlitchViper64', 'BuilderRocket39',
                     'Pow3rV3nomRav3n', 'XxJack_MinerxX2022', 'Fusi0n_FLAME2012', 'WraithFlameAlpha',
                     'XxNoahBladexX2003', 'FireBuilderFox2014', 'QueenPrimal59', 'XxEpic_StormyxX2023', 'Her0_Queen58',
                     'MagicCrazeAqua2011YT', 'HenryKnight27', 'DriftStarCha0s', 'Paisl3yHyp3rStorm60',
                     'XxNoraVenomHunterxX', 'XxLiamNe0nF0xxX59', 'XxLucasPix3lxX2006', 'Slime_R0cket2010',
                     'XxElijah_PhoenixxX46', 'OmegaViperPixel2018', 'Giga_Ic3201014', 'Pixelated_Rogue77',
                     'IceCraftBlizzard', 'AvaByt3201799', 'Eagl3_H3R076', 'DancerDuckFrost', 'BlazeOrbitCode2005',
                     'XxByte_RAVENXX2015', 'Ic3Blizzard200471', 'MagicStreamShad0w', 'KnightBlizzardEcho',
                     'LegendCookieAqua2008', 'BlastQueenStealth', 'MichaelNightOmega200', 'AlphaRift200633',
                     'GigaHazeWolf2014', 'Brooklyn_St3alth2005', 'QueenPowerCircuit', 'Craz3BlastBan3',
                     'Mast3r_Min3r2012', 'EmmaTiger47', 'GlitchLi0nGam3r', 'XxTurboZeroxX2003YT', 'Stormy_BEAST202273',
                     'UltraHunter2012_YT', 'XxCircuitBl0ckZ00mxX', 'XxPulsePowerxX2013_Y', 'XxNinjaMast3rxX89',
                     'LionHawkPanda', 'XxChaosFlickxX2020', 'Micha3lDragonPho3nix', 'XxWillowArrowxX2018',
                     'WilliamNinja201143', 'T0xicJ3lly2004', 'RiderDragonHero2015Y', 'JaydenGalaxyStealth',
                     'XxVortexChaosLightxX', 'V3nomLuckyStormy', 'AsherG0ldenGamer2013', 'Jax0nFlash200223',
                     'Sparkly_Chase35', 'BlockProStorm', 'XxShadowArrowKnightx', 'MagicBlast38_YT', 'Mast3rKnight82',
                     'LuckySlimeLion', 'Tig3rB3astNova', 'RocketFusion97', 'PowerPrimalDrift', 'Ban3Lucky2004',
                     'FireArrowBlade', 'XXJACKSON_Tig3rxX', 'XxFoxNinjaxX2012', 'XxGlitchRiftxX88', 'AvaSparklyZap25',
                     'EchoMaster201981', 'VictoriaLion25_YT', 'CrystalStarBear2003', 'Pixelated_Craft14',
                     'ChillGam3rIc3', 'AlphaJ3llyWolf', 'XxEmma_ChillxX22', 'ShadowAlphaGiga2009', 'GigaBac0nOrbit2014',
                     'HenryBlazeLion2012', 'XxJames_SPARKLYXX16', 'PandaChaosSparkly57', 'XxSkaterUltraxX2006',
                     'EllieOmega201746', 'AuroraCookieHero10', 'GhostJellyViper2020', 'SilverLavaHunter',
                     'MateoLegendLucky', 'F0xSt0rm42', 'PaisleyStormNinja', 'XxMagic_SPARKXX12', 'RogueBuilderRift2015',
                     'XxSilverLightRiderxX', 'PaisleyGhostCode', 'Ev3lynNinjaBlad3', 'ByteC00kieZap', 'Sonic_Claw85',
                     'ChaosCircuitChill', 'ZoomFoxBlade2016', 'Vortex_Saber17', 'SkyChillBac0n2011',
                     'R0cketInfern0Spark', 'AquaB3ar2024', 'GamerBladeMoon', 'XxBlockRavenxX2019', 'Gamer_BLADE200480',
                     'J3llyChas3Dawn81', 'EchoSab3r94', 'VoidPower93', 'Z3roNinjaRid3r', 'XxSophiaSkaterxX73',
                     'H3roSkyBlizzard', 'RocketClaw2017_YT', 'Cart3r_Ninja200421', 'AlexanderPulseLucky2',
                     'Cyber_Wolf2004', 'PixelatedToxicBear', 'GhostLionTiger2019', 'ZoeZoom202363', 'XxJamesNeonxX36',
                     'Ghost_Playz97YT', 'Drift_Dancer200660', 'Duck_Moon80', 'R0cketJellyBeast', 'XxStarC0dexX2021',
                     'XxBladeFoxLightxX', 'IsaacLion46', 'XxBlad3B3arxX53', 'MichaelDriftZap', 'CraftEchoZero',
                     'H3r0Turb02021YT', 'CircuitAlphaFlash201', 'PandaGamerRogueYT', 'Paisl3y_LIGHT91',
                     'Primal_Arr0w2002', 'GamerFusion38', 'B3astBan3PlayzYT', 'NoraZoom2023YT', 'XxFlash_ZOOMXX2006',
                     'Mast3r_Pix3lat3d19', 'Jax0nViperCyber74', 'MaxBear17_YT', 'LightMaxChase43',
                     'XxS0phiaPrismHer0xX2', 'FlashZ3roKing', 'OliviaPlayzSab3r', 'Light_Pix3lat3d2021',
                     'Xx_Pho3nixSlim3Circu', 'BearDancerPlayz2015', 'XxRil3yQu33nxXYT', 'FlickBladeSkater',
                     'XxEliSparklyAquaxX', 'LunaFlick91', 'Rogu3ToxicKnight', 'XxBane_MagicxX35',
                     'JackInf3rnoLucky2013', 'CircuitB3arStarry', 'ProDriftHaze', 'ZapPowerSkater', 'Byt3Skat3rPho3nix',
                     'C0deBl0ckDrift', 'GhostNightWraith', 'Jayd3nLavaMagic', 'XxVortexFlashxX23YT', 'Grace_Orbit71',
                     'B3ast_Duck2018', 'Xx_VictoriaBearThund', 'ProRiftSaber2008', 'N3onCooki3Qu33n69',
                     'DanielBlock201370', 'ScarlettInferno67', 'XxFlameBlastxX2014', 'UltraSlime85', 'HenryRift32',
                     'Pho3nix_Orbit38', 'AsherShadowLion', 'CookieRogue30', 'XX_PixelPrimalGalaxy', 'Cart3rDawn2016',
                     'Miner_Rocket14', 'Xx_CrazeThunderSkate', 'DriftJellyCraft', 'HunterFlickRocket202',
                     'M00n_Shad0w2010', 'LoganCyb3r59', 'WolfProGiga2008', 'RavenCraft2004_YT', 'Build3rOrbitZap',
                     'GlitchLucky201136', 'Skat3rClawSilv3r', 'Raven_Magic2016YT', 'JaxonLightGolden2014',
                     'Primal_Mystic87', 'XxTurb0MaxGigaxX', 'HyperLi0n2002', 'VortexPandaGlitch202', 'Blizzard_Ninja56',
                     'FusionTiger2011', 'RavenInfernoBlaze200', 'Stealth_Ultra46', 'VoidChas3Rav3n', 'QueenJellyFusion',
                     'StormyBuilder13', 'PrimalB3ar2023', 'XxZayd3nPandaxX2012', 'N0ahChas3Night', 'EthanGlitchOmega',
                     'S3bastianBlizzardSt0', 'XxLavaLightOmegaxX20', 'Thunder_Ech0200626', 'WilliamBlock80',
                     'G0ldenM00n13', 'BaneMagicStar_YT', 'BytePowerBlock2006', 'XxPaisleyKingxX12', 'HannahT0xic71',
                     'SonicThunderZero', 'FlashTiger201930', 'StreamKnight13', 'BrooklynHunterVoid28',
                     'Ech0R0ck3tWraith', 'QueenViperHer0', 'ChloeGhost93', 'Luk3_Spark200698', 'ZoeSkaterGiga2003',
                     'CodeNightBlade2023', 'XxOwenNovaxX41', 'GabrielBeastLight', 'CarterVoidPixel58',
                     'V0rtexMagicPulse41', 'MagicFlame2009YT', 'ZoomZap2021_YT', 'StormyArrowMin3r2008',
                     'Bac0nSilverZ00m', 'NoahN3onB3ast201832', 'XxFuryShadowxX2005', 'XxLucasFlashxX26',
                     'Turb0Glitch201141', 'HyperNe0nV0id2005', 'Slim3Glitch2015', 'Hunt3rLavaVip3r', 'SkyMagicPh0enix',
                     'LuckyGiga2020YT', 'StormyStorm47', 'Xx_GalaxyStormStream', 'PlayzBacon50', 'PixelatedDuckFlash',
                     'BlazeBanePulse2008', 'Brooklyn_Hero2013', 'ElijahZ3roBuild3r', 'Oliv3r_Ultra2009',
                     'TigerPlayzSaber2013', 'Savannah_Inferno99', 'Michael_Fusi0n2015YT', 'EvelynDragonNeon2004',
                     'ClawH3roWolfYT', 'PlayzAc3Chill', 'StreamEaglePower', 'Xx_BrooklynCrystalSp',
                     'XxToxicLegendBlizzar', 'BuilderPrismNinja200', 'DuckBacon75', 'Elijah_PANDA86', 'Ezra_King2013',
                     'Oliv3r_Vort3x40', 'LoganCod3Mystic', 'Samuel_Playz50', 'Xx_OliverFusionViper', 'IceG0ldenPrism70',
                     'AvaVen0mHawk', 'Savannah_RAVEN84', 'Xx_PowerPixelatedZap', 'PrimalMagicSlim3',
                     'XxJackPandaGalaxyxX', 'ZeroStarFrost', 'Haz3lPuls3Star', 'CHAS3_Hawk2021', 'WraithCrystal46',
                     'JackGigaVoid', 'ClawVenomHyper', 'SaberPrism24', 'Will0wSab3rV0rt3x', 'IsaacAlphaAce72',
                     'EzraGlitch95', 'ChillFlameIce71', 'CrystalPlayzLight', 'ProStream200214', 'CookieFlashClaw',
                     'ViperArrowNight45', 'QueenRiftHunter2024', 'Rav3nMast3r2002', 'AmeliaShad0wRift', 'Viper_TIGER57',
                     'IsabellaToxic71', 'XxDuckEaglexX2005', 'SebastianFlick57', 'XxDawnFlamexX19',
                     'XxCircuitGhostxX2018', 'JacksonPanda57', 'XxGraysonPuls3St3alt', 'KingFlick2023', 'StarChas3Sky',
                     'SebastianFrost200337', 'SkaterMinerZoom52', 'Glitch_Galaxy77', 'FlickCraft201768',
                     'Qu33nBuild3r82', 'VictoriaCircuitProYT', 'HUNTERPRIMALBLAST201', 'BrooklynDragon69',
                     'VictoriaDrift71', 'UltraEpic201630', 'FireVen0mTiger', 'XxLucasVip3rCraftxX', 'St3alth_Playz65',
                     'Om3gaQu33n59', 'XxIsaac_Rav3nxX20105', 'XxH3nryTig3rxX2019', 'ZeroStormBlock',
                     'XxEvelynStreamEpicxX', 'LiamSlimeCircuit', 'Craz3_BACON2014', 'AceFlickPixel', 'Shad0w_HAWK97',
                     'BearRocket39', 'JulianCraftTig3r2011', 'MinerCyber36', 'MinerEagleLegend2009',
                     'Pow3rFusionVoid2006', 'Bacon_Primal85', 'Golden_HERO200272', 'BlastPulse53', 'N3onWraithLion',
                     'PixelLuckyPhoenix201', 'Zoom_Rid3r2021', 'HazelGalaxy68', 'LucasB3astMax2021', 'Chlo3Moon2007',
                     'XxFoxSlimexX2013', 'XxBeastCodeFlickxX20', 'XxHarper_RiderxX2024', 'Grayson_AQUA55',
                     'FrostBlaz3Stormy', 'RileyUltra43', 'DawnBlazeByte2018', 'XxIsabellaRiderBlaze', 'Nora_Code44',
                     'XxAvaPrismxX2013', 'InfernoFireFrost2007', 'ChaseDuckVortex', 'XxScarlettCodexX2021',
                     'XxNoraDuckxX2023', 'Str3am_Spark76', 'Om3gaShad0w2024', 'BeastDrift40', 'ProMysticEagle2018',
                     'Fr0stInfern02006', 'Xx_JamesLightBlizzar', 'BrooklynHaz3Orbit', 'FlameBaconCraze',
                     'Charl0tt3Str3am2006', 'ZoomChaosBuild3r', 'R0cketZer043', 'Vip3r_ORBIT21', 'KayleeBlockCookie',
                     'AceSparklyMystic', 'XxSparklySilverxX82', 'Ven0m_STARRY2017', 'HANNAH_Ic369',
                     'AuroraFlameFlash2007', 'XxEllaStarryEchoxX', 'XxT0xicC0deRiftxX', 'StarFlameFusion',
                     'XxChaseByteSparkxX_Y', 'XxFusionZeroChillxX', 'MichaelPower2022_YT', 'NovaPixelCrystal73',
                     'OwenSkaterSonic', 'Br00klynEpicGlitch20', 'Qu33nRav3n77_YT', 'InfernoRaven45', 'GlitchNeon2007',
                     'LuckyPowerDawn', 'Cooki3Z3roSkat3r93', 'Thund3rV0idBlaz32013', 'Xx_ZaydenStormMaster',
                     'NoraGlitchClaw', 'XxBuild3rNinjaxX2012', 'Thund3rBacon2011', 'Gold3nPuls348',
                     'XxMoonBaconFlickxX20', 'Chaos_Tiger201798', 'XxBuilderViperMoonxX', 'HeroClawTurbo',
                     'Flash_Pow3rYT', 'Qu33n_Shadow2019', 'VortexAlphaGlitch', 'VoidMagic200621', 'Chas3Gold3nBlast',
                     'XxChloeSonicJellyxX', 'PRIMAL_Raven85', 'Xx_OrbitSparkBlizzar', 'V0idGiga65YT',
                     'XxUltra_L3g3ndxX2010', 'TurboZero13', 'ScarlettSkyBuilder', 'AriaLightClaw2012',
                     'H3ro_Orbit201828', 'Blaz3DuckB3ar', 'XxPix3lPandaRid3rxX2', 'WraithCyberBlizzard4',
                     'GhostBlock200867', 'XxStreamPixelatedPro', 'BlockHeroAce2019', 'XxSilver_AcexX2004',
                     'XxKayleeC0dexX201792', 'XxZapBuilderJellyxX', 'VictoriaClaw86', 'EzraVortex2023',
                     'IsabellaPlayzFire200', 'Cyb3r_Fusion200492', 'AddisonTurbo66', 'GlitchStarArrow',
                     'XxFlickJellyThunderx', 'BrooklynBlastJelly', 'SavannahStarBacon201', 'Giga_Dawn77',
                     'XxEliMoonxX49', 'Ban3_St3alth2011', 'Skater_VENOM30', 'UltraMoonPrism_YT', 'MagicPulseDrift2007',
                     'S0nicZ3r02024', 'Chl0eRaven2009', 'MysticWolf2009YT', 'EzraSilv3rToxic', 'MichaelBladeChaos201',
                     'MiaB3ar69YT', 'GRACE_Craze2009', 'ZoomOmegaLight', 'HenryQueenNinja', 'GoldenChaos201073',
                     'XxFlashBlockxX15', 'ClawZero202138', 'AddisonLegend87', 'Cha0sCrazeByte', 'XxFuryHeroxX2020',
                     'ETHAN_Block63', 'EmmaEchoGlitch2010', 'FoxLegend200647', 'Dragon_Spark2014', 'SlimeAceSonic',
                     'Isaac_P0wer201112', 'StealthSonicBacon', 'StreamGalaxyStealth', 'Will0wCyb3r_YT',
                     'SamuelMaxSlime', 'Rav3nGam3r2020', 'XxLiam_CookiexX74', 'JamesOmega201412', 'ZapHaze2010YT',
                     'XxAm3lia_ZoomxX2003', 'Grac3GalaxyTig3r90', 'XxStormyKingxX2015', 'XxFireViperxX14',
                     'Aqua_Hunter98', 'Zayd3nSkyMagic', 'Sab3r_IC389', 'WillowBlastEcho20036', 'XxZoomProSlimexX',
                     'Str3amCraftArr0w', 'BaneFuryMystic', 'Haz3lGigaBlizzard55', 'LavaStar81', 'AubreyPulseWraithYT',
                     'XxEllieBeastStormxX', 'Danc3rStr3am49', 'FlameG0ldenBlade', 'BearHyperRift_YT',
                     'AuroraPrismBear2018', 'S3bastianArr0wPr0', 'XxMateoAlphaxX2004', 'ArrowMin3rRock3t',
                     'XxDanielFireFlamexX2', 'XxPixelStealthLavaxX', 'P0werAce92', 'AmeliaDuckR0cket',
                     'FurySlim3RiftYT', 'FlashPrismV3nom', 'Jam3s_Light201875', 'InfernoSaberChase',
                     'GamerSparklyQueen', 'Xx_AvaSparklySt3alth', 'GlitchL3g3ndNight', 'Flick_V3nom2006',
                     'XxHunterMaxxX37_YT', 'Xx_MichaelRocketPowe', 'ToxicMinerTigerYT', 'Om3ga_Danc3r2009',
                     'Haz3Hunt3r72', 'XxPandaToxicSlimexX', 'EmmaWraith16', 'ZoomPhoenixMaster', 'CarterAlpha200713',
                     'Knight_Skat3r200625', 'RavenM00nHer0', 'XxEliEch0AquaxX', 'XxGalaxyMinerVoidxX', 'SparkLuckyIce',
                     'OmegaEaglePixel61', 'Al3xand3rSt3althHawk', 'XxMiner_CRAFTXX2008', 'Byte_PANDA2012',
                     'XxMichaelBuilderxX69', 'MagicPrimal18', 'XxOliviaChillPrimalx', 'MichaelBane2022_YT',
                     'Inf3rnoVort3xLion', 'Stormy_Galaxy201485', 'N0ahTurb0Max', 'HawkZer0Shad0w2020',
                     'XXMAGIC_AquaxX2023', 'Dani3l_Cyb3r2015', 'Om3gaL3g3nd200598', 'Rav3nEpic59', 'TurboFlick16',
                     'DancerG0ldenT0xic', 'Ev3lynOm3gaCod3', 'Grays0nKnight75', 'XxLightSkyxX200511',
                     'RocketAceEcho2012', 'AlexanderBlastZero20', 'Cooki3_Frost2005', 'XxPaisleyStormyxX76',
                     'RocketFlameEagle2003', 'Pixelated_TigerYT', 'Epic_Blizzard201643', 'Xx_CYBERPIXELATEDBAC',
                     'AidenNe0nCircuit2003', 'LuckyEpic79', 'AbigailWolfStormy', 'PaisleyMagic10', 'XxMagicKingUltraxX',
                     'SonicBaconBlast2004', 'PixelLuckyR0cket2005', 'WyattArr0wRift', 'TigerAquaChase2015',
                     'Jax0nUltra2015', 'ChillC00ki3DriftYT', 'Pix3lKnightVip3r', 'Miner_Turbo201980',
                     'Xx_Skat3rCrystalCraf', 'MagicCodeDragon2003', 'EllieFireMystic52', 'Aiden_Ice2005',
                     'XxHer0MysticxX15', 'Xx_BrooklynnToxicBlo', 'LaylaHeroPower2018', 'LukeThunderPro',
                     'BearBaneEcho_YT', 'MaxTig3rRav3n', 'AriaGoldenGamer', 'EchoCode84', 'ALPHAHEROCODE_YT',
                     'Galaxy_V3nom93', 'PowerGhostArrow', 'Elli3GalaxyPlayz_YT', 'XxGrace_TURBOXX2004',
                     'ZoomPhoenixInferno', 'EliPowerBacon', 'OwenBeastBlizzard200', 'CharlotteFuryRaven',
                     'Inf3rnoB3ar2010', 'PrimalStar95', 'XxV0idSt0rmyxX2022', 'XxQueenArrowxX67', 'StarryEch0N0va48',
                     'V3nomPlayzByt3', 'AuroraBaconLight29', 'XxOrbitDriftRavenxX2', 'XxDarkSaberLightxX19',
                     'FlickPlayzClaw2007', 'XxProVort3xxX201071', 'XxHaz3l_Pow3rxXYT', 'BlizzardOmegaEagle',
                     'St0rmBlast57', 'XX_BrooklynnVenomZer', 'Arrow_Eagle200664', 'AuroraPlayzCircuit20', 'CodeFire64',
                     'PixelWraithDrift', 'Infern0Zap33', 'HeroBlazeMiner', 'ThunderMaster200380', 'BeastBearDragon46',
                     'LukeSonicLight', 'Turb0Fury202140', 'Z03Bl0ck2006', 'IcePixelatedStorm201', 'BearBlock82YT',
                     'XxLightMagicZapxX', 'DragonStarPix3lat3d', 'JackLion2014YT', 'XX_JacksonEagleSilve',
                     'Mate0St0rmMagic90', 'EchoMiner201127', 'ClawPulseJelly2009', 'XXLAVA_PowerxX24',
                     'HawkDriftDrag0n2005', 'GraceT0xicSpark2009', 'EagleChillP0wer2003', 'Xx_PrimalZ3roSparkly',
                     'Ech0OmegaHaze', 'RoguePrismPanda2010', 'XX_BuilderSonicChase', 'V0idMagic201798',
                     'XxPlayzR0cketxX40', 'Ow3nBlizzard201445', 'XxFusionArrowCodexX', 'MiaLionMaster58', 'Z3ro_HAZ328',
                     'Ezra_Tig3rYT', 'Spaydweege30239', 'Labaogumb7762', 'Lavidiehr33457', 'Jayentizoc478',
                     'Alawbarnd6697', 'Balmasassa03045', 'Nagelheck1935', 'Giedtjosma32696', 'Moihira629',
                     'Dunksnunez570', 'Marovigo51789', 'Haukeelain5098', 'Sibelestok56753', 'Vittibabs2948',
                     'Zidediley911', 'Deiruday57363', 'Yaldojengo027', 'Sapasalih839', 'Joeststilo678', 'Cordialora662',
                     'Addevolp835', 'Hoittdunay3984', 'Baysajelen168', 'PixelFuryInferno_YT', 'ScarlettBeastStorm',
                     'Cookie_Fusion2021', 'SparklyCodeEagle2019', 'MysticLion68', 'Chas3EchoDuck2015',
                     'BlastBaconAqua84', 'DragonPrismCrystal', 'GoldenLucky72', 'PandaVen0mMystic',
                     'XxChl0e_M00nxX2020', 'Code_VENOM73', 'XXKING_ThunderxX60', 'Pix3l_VORT3X2003', 'DRIFT_Ace202289',
                     'XX_BuilderShad0wDark', 'MinerTigerChaos14', 'PrismGalaxyRocket', 'AceHyper200248',
                     'EliPow3r2015YT', 'XxVoid_STEALTHXX56', 'ElliePhoenixOrbit67', 'GlitchFlameFlash', 'Mas0nDrag0n47',
                     'XxBlockRock3tByt3xX2', 'V0id_Epic18', 'Echo_Vortex201880', 'WyattArrowOrbit', 'Grace_Hawk23',
                     'XxB3arInf3rnoxX97', 'Xx_MysticWraithMagic', 'FlashHunter201080', 'LavaDark200933',
                     'Vip3rFir3King', 'AquaBlad32006', 'JellyHero21', 'LaylaTiger200265', 'JacksonStarryAqua201',
                     'BeastSky10', 'Lava_Bacon31', 'XxNoraMagicKnightxX2', 'Brooklyn_COOKIE70', 'XxJaxonDarkxX24',
                     'VenomLionMoon', 'Oliv3rLi0nHawk2012', 'StormyUltraLucky99', 'Alpha_SONIC67', 'EllieInfernoGlitch',
                     'Tiger_Infern049YT', 'LucasByte201457', 'FlickNightStream', 'LiamSparklyChill2008',
                     'NinjaNightZ00m', 'Fir3PlayzPanda', 'CookieRiftSaber20028', 'Orbit_Builder200967',
                     'Dani3lPix3l201074', 'BrooklynAlpha60', 'Oliv3rOrbitDark', 'GraysonQueenBane',
                     'Panda_Sparkly2020YT', 'XxRileyBuilderxX2018', 'WyattCyberTurb019', 'BlizzardMax201529',
                     'Glitch_Slime81', 'OliviaSonicCookie201', 'ViperCraftVoid', 'CarterLavaTurbo', 'HunterDrift200358',
                     'LegendFlashTurb032', 'PandaSkaterZero2021Y', 'Xx_DancerBlastStream', 'BladeQueen2023YT',
                     'XxKaylee_KINGXX2012', 'Asher_PANDA78', 'XxGam3r_POW3RXX2022', 'Ash3rGhostDark32', 'PrismG0lden48',
                     'Michael_BLAST201729', 'OliverBeastCha0s', 'XxPrismAquaxX2007', 'BlastAquaLight',
                     'GlitchKnightRaven', 'BrooklynFurySky', 'XxDancerRiftStormxX', 'XxFr0stBeastxX2004',
                     'WilliamShadowCode', 'AlexanderGamer201233', 'Cooki3Storm2009', 'HannahByt3Sonic',
                     'S3bastianG0ld3n16', 'TurboAlphaCyb3r', 'ChillMagicPixel2015', 'H3roPix3l202396',
                     'WraithEchoB3ast_YT', 'CircuitCyberDawn', 'GalaxyV3nom57', 'WilliamEpicBuilder62',
                     'AvaSkat3r200858', 'VoidDuckDark2016', 'Xx_HunterThunderHero', 'XxLeviBlazeCircuitxX',
                     'OWEN_Orbit11', 'R0gueWraith53', 'PhoenixSparkBane41', 'XxCarter_NovaxXYT', 'LionSlimeSparkly',
                     'Mat3oHunt3r2024', 'BlastKnightUltra', 'OliverMoon51', 'ProPrismBane', 'CyberGlitchStormy',
                     'ShadowBytePower', 'Ban3M00n2007', 'StormQu33n94', 'SilverRocket57YT', 'ElijahCraftStealth',
                     'Cha0sPandaBane', 'FrostVenomRider2023', 'XxVortexBuilderDarkx', 'XxHannah_StormxX2012',
                     'Om3gaClaw2006', 'XxChl03St3althFlam3x', 'Haz3SparklyN3on', 'Vip3rB3ar_YT', 'Vict0riaFireMagic201',
                     'SavannahNeonOmega', 'NovaDuck24', 'N3onBlizzardPow3r', 'JaxonStarry62', 'WolfPlayzZ3ro2021',
                     'Haz3lSparkly22', 'Venom_DAWN86YT', 'ScarlettAlpha43', 'LukeSaberKing2022', 'Hyp3rStar41',
                     'FlameHunterR0cket', 'ZoeMinerFlash2010', 'Gabri3lRogu3Crystal', 'XxEpicHawkBlockxX201',
                     'Arr0w_EPIC201815', 'MagicP0wer2022', 'XxSonicBlockMinerxX2', 'RiderVenomAqua2004',
                     'XxChaseNeonxX67_YT', 'BuilderLight33_YT', 'PixelStormyLegend', 'Knight_Dark201031',
                     'Fir3N0vaBuild3r', 'ZoeQueenCraft2014', 'St0rm_CYBER45', 'Ethan_CRYSTAL23', 'SparklyM00n65',
                     'Inf3rnoMagicWolf2002', 'Hyper_Zap48', 'Scarlett_Craft89', 'XxDrag0nW0lfxX76',
                     'XX_LucasToxicThunder', 'HazeGiga58', 'AvaMoonChas3', 'TurboRock3tEagl337', 'XxBuilderAlphaRavenx',
                     'HeroBladeThunder63', 'CrystalSilv3rTig3r', 'Qu33nBuild3rChaos', 'HannahCyb3rWolf30',
                     'Lion_Flick2003', 'Pr0Li0n2008', 'Flick_Li0n2012', 'RiftStormySaber2002', 'Cart3rEagl3Sparkly',
                     'FrostL3g3ndTig3r', 'Haz3R0gu318YT', 'XxStarryBaconxX23', 'LukeGhostDrift2007', 'Mia_Ne0n80',
                     'GlitchPuls32008', 'BaconStr3amCraft2023', 'Z0eInfern0Ph0enix', 'Brooklynn_Gamer20105',
                     'XxEpic_GamerxX2014', 'LegendC0deHaze_YT', 'SparkClawLegend62', 'DancerShadow65',
                     'XxEpicDragonChillxX', 'BlastCrystalTurb0', 'KnightGamerV0rtex', 'Xx_AbigailDriftTiger',
                     'CrystalPrimalHaz3', 'DanielJelly200728', 'KingIceEagle2016', 'JacksonOmega46', 'Aurora_Arrow99',
                     'EllaHyp3rFrost', 'XxZ3r0Vip3rDrag0nxX', 'AuroraSparkCyb3r', 'Fusi0nHunterStream',
                     'Aubr3yZapStr3am2024', 'Slim3PlayzPix3lat3d', 'XxUltraRiderDuckxX20', 'Sebastian_Flame99',
                     'MysticMinerQueen12', 'Zayden_Venom50', 'OrbitBlade201630', 'XxDawnSlimeCrystalxX',
                     'KingR0gue2017', 'Olivia_Epic25', 'SebastianGalaxy2019Y', 'DanielFireBlaze2015', 'MasterN0vaPlayz',
                     'C0deMagicHunter', 'XxEvelynCodexX42', 'ZOE_Skater30', 'CodeGalaxyQueen2006', 'XxViperMoonDriftxX',
                     'XxChillChaosDragonxX', 'Hannah_CIRCUIT94', 'LaylaStarryMystic200', 'EmmaBuild3rAquaYT',
                     'Xx_MysticBlizzardTig', 'Xx_KnightTigerStream', 'ToxicDragonTurbo2021', 'LegendGigaHer0',
                     'SkyGam3rThund3r', 'Xx_EchoVenomBlizzard', 'QUEEN_Slime71', 'W0lfStr3am42', 'Jam3sLightIc32021',
                     'Fury_Pulse38', 'JacksonEpicLion_YT', 'HannahN3on2007', 'Ban3MagicSky', 'XxAquaSonicGamerxX',
                     'XxL3g3ndZoomxX2005', 'Flick_LION200787', 'StarryZ3ro201683', 'HeroZapSkater56',
                     'RogueWolfBuilder11', 'XxDuck_AquaxX2006', 'GoldenSaberByte', 'Fury_FLICKYT', 'Ven0mZer0Zap',
                     'ChaseNova97', 'AuroraFlashSky83', 'FusionSlimeFoxYT', 'Byt3C00ki3Ninja', 'Drift_Vortex2023',
                     'XxGraysonRiftSilverx', 'PrismBaneStorm_YT', 'AbigailFlashV0id', 'XxChloe_StormyxXYT',
                     'XxHawkEpicPixelxX', 'AvaByte55', 'JackRock3tByt3', 'C00ki3_Puls32008', 'Charlotte_STARRY82',
                     'ClawFrostMystic2009', 'XxJam3s_FROSTXX2012', 'EagleInferno50', 'XxPixelRiderZoomxX',
                     'SilverCodeByte2017', 'AuroraToxicBlad3', 'VOIDBUILD3RDARK_YT', 'SilverBeastFlick',
                     'PlayzRavenCircuit202', 'ArrowEpicClaw79', 'Xx_DANIELGALAXYGHOST', 'DuckPhoenix201947',
                     'Bane_Golden76', 'XxAid3nBlastHyp3rxX', 'IsaacTurboEpic96', 'StealthStarGoldenYT',
                     'GalaxyCha0sPr0', 'XxLightEpicxX73', 'Gamer_FlickYT', 'XxLucas_FusionxX2019', 'Byt3CraftPro2008',
                     'GlitchVip3r17', 'EagleCodeBlaze2016', 'BrooklynArrow200698', 'SavannahHeroViper200',
                     'XxAlphaMinerxX66', 'LukeBearDrift2014', 'Mohakezme74586', 'Gouincates64075', 'Draykahrl466',
                     'Loeweklar679', 'Huwerosin02907', 'Letaborn5542', 'Hombssoni37320', 'Suitssocol7317',
                     'Witsmento4460', 'Dodencapo02105', 'Kucktess02626', 'Mcroyseary346', 'Nonusegar875',
                     'Littylitle65196', 'Sitarzago1247', 'Vonocos1125', 'Ariuslans35904', 'Kingagaeto552',
                     'Petreneste409', 'Walerogie8448', 'Erinnbain47963', 'Oresxiu34076', 'Zenilulow167',
                     'Fanzoshare96907', 'Donaraper2163'}
local RECEIVER_LIST = {'XxScarlettEpicxX16', 'LeviCyber25', 'ShadowAqua77', 'PandaV3nom52', 'R0gueS0nicBl0ck',
                       'MagicTig3rV3nom', 'ShadowDuckStormy50_Y', 'GraceBlazeAlpha', 'NightRid3rPlayz', 'EchoDanc3r66',
                       'OrbitBac0nStarry19', 'Zap_TIGER11', 'CarterSt0rmCraft', 'ClawMoon201833', 'FireSkaterByte2006',
                       'XxWolfRogueNinjaxX10', 'OliviaIceEcho2003', 'Cart3rPlayzSpark13', 'Haz3l_Storm48',
                       'XxGlitch_FoxxX2020', 'Xx_ThunderPhoenixFli', 'MateoFusionHyper', 'LeviSparkBeast46',
                       'IceGh0st_YT', 'XxDrift_Ac3xX2004', 'JellyStarSonic2012', 'Queen_Aqua29', 'XxB3ar_Min3rxX2021',
                       'Ne0n_Slime2014', 'AriaVort3x73', 'PlayzHero201121', 'AmeliaPandaEpic2023', 'Tiszaglady048',
                       'Strupgroux85014', 'HazelStreamMaster201', 'BladePowerFlash', 'Silv3r_Pho3nix2016',
                       'Chaos_Craft57', 'XxP0w3rTurb0CraftxX', 'XxLiamNightWraithxX2', 'ThunderDancer14_YT',
                       'Brooklynn_Fusion58', 'RogueZero32', 'Blizzard_N3on2007', 'XxJacksonQueenEchoxX', 'Fox_STARRY69'}


-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
