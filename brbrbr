-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'Hunt3rChillZ3r0', 'PowerVenomZap', 'HannahPho3nixH3ro201', 'Asher_Echo85', 'BrooklynnGhost87',
                     'Jacks0nMaxCraze2019', 'Luke_Knight201169', 'BladePhoenixEagle81', 'MiaSaberFury',
                     'KingFrostJ3lly', 'LuckyEpic202432', 'RiftGoldenTiger', 'WraithPandaRift59', 'HANNAHDUCK2022_YT',
                     'ThunderViper200474', 'KayleeFlashCrystal', 'CrystalMystic202219', 'Charl0ttePh0enix2006',
                     'SonicHyperIce', 'MiaG0ldenNe0n', 'DanielVortexFrost', 'MoonNightInferno41', 'Str3am_Craft201869',
                     'SonicRider83', 'PrimalQueen67', 'PlayzLionPro', 'JulianChaosOmega2003', 'Circuit_B3ar2011',
                     'XxAria_ZoomxX71', 'OliviaNinja87', 'Spark_Z00m2003', 'XXCLAWSTR3AMFROSTXX2',
                     'SophiaToxicStormy201', 'XxJulianEaglexX96', 'LegendInfern0R0cket', 'DriftPix3lat3d16',
                     'Xx_MichaelTigerCraze', 'ThunderEpic200411', 'Orbit_PANDA202214', 'Kayl33Blad32008', 'Chl0eC0de87',
                     'Al3xand3rN3onShadow', 'HyperMystic86', 'XxMagicFir3xX2007', 'Craze_Magic93', 'EchoDawn2009YT',
                     'Chlo3L3g3ndVoid', 'MaxBear2015_YT', 'OliverFrostBear', 'RiftPixelTurbo71', 'AlphaDancer90',
                     'Arr0wCraft2003', 'XxByteMinerArrowxX', 'S3bastianFlam3Rift20', 'PaisleyCyberFrost201',
                     'RileyGigaGalaxy', 'TurboCode14', 'FIRE_Starry201545', 'H3r0Ac3Primal', 'XxHawkMagicxX71',
                     'Grac3Orbit31', 'XxLukePandaxX2005', 'XxKayleeStealthxX75', 'FlameMoonDark2022', 'Master_Bane97',
                     'BlockPrismL3g3nd', 'AuroraNinjaCode', 'Lucas_B3ar51', 'TURB0_Fusi0n62', 'EzraToxicNight',
                     'H3r0Turb0Ic3', 'LukeFlash74', 'EpicAceBlast', 'XxZ3roStr3amPrismxX', 'L3g3ndArrowPuls3',
                     'C0de_VEN0M2010', 'PRIMALFLASH2002_YT', 'Blast_Shadow48', 'XxEthanGlitchxX58', 'DawnLuckyPlayzYT',
                     'ThunderIceTurbo2018', 'AlphaUltraBlizzard20', 'Samu3lLi0nFlash', 'FoxChas364',
                     'XxNeon_FlickxX2013', 'Thunder_Epic36', 'Hunt3rPuls3N30n2008', 'Viper_Rift201084', 'ZaydenStar63',
                     'XxHunt3rMaxRid3rxX', 'SparkPandaSt0rmy', 'Giga_Golden202048', 'JaxonSky69', 'MinerRocket202462',
                     'ThunderCircuit201557', 'AceMysticPixel2021', 'Xx_OmegaBac0nStealth', 'ChillFlameUltra2017',
                     'MagicLionFrost35', 'RiftGoldenStream', 'XxDanc3rFlickVort3xx', 'XxGraceFusionBladexX',
                     'Jayd3nUltra81', 'XxDragonHeroCyberxX', 'ViperPlayzClaw86', 'XxJamesDancerCrystal',
                     'HAZ3LBYT3PIX3LAT3D20', 'EagleGhostFusion', 'NightToxicInf3rno202', 'LunaLegendGiga2017',
                     'WyattEagl3Slim3', 'Vortex_Sparkly2008', 'Cooki3V3nomWolf', 'FusionBlastGhost',
                     'UltraBladeSaber99', 'DriftHazeChaos', 'FoxVortexArrow2002', 'OwenDancerAce', 'OmegaSaberHawk35',
                     'BladeChaseByte2006', 'HeroLavaPrimal31', 'Cha0sR0cketRaven', 'XxJaxonBlaz3Vort3xxX',
                     'LukeSparklyCircuit20', 'XxMichaelAlphaGh0stx', 'StormyKnight98', 'GLITCH_Haze202215',
                     'XxHaze_BuilderxX53', 'HawkVenomSaber2011', 'KnightMagicSpark2011', 'XxCraze_CookiexX69',
                     'SkaterSlimeZero20204', 'Rogu3Dawn26', 'Isaac_Hyp3r2002', 'DragonPulseSlime2009',
                     'RiderDragonChaos2006', 'XxKayl33_T0XICXX2005', 'GhostRift200532', 'GraysonCraftChas3',
                     'Wyatt_Arrow85', 'Xx_Br00klynGlitchCyb', 'Ow3nFusionIc3', 'ADDISON_Flash37', 'Ech0Arr0wKing',
                     'FlashBlast97', 'BlizzardGalaxyVenom1', 'BuilderHazeW0lf', 'MagicStormyAlpha13', 'V0idS0nic2011',
                     'Savannah_Fusion34', 'TurboVip3r200472', 'Panda_Chaos2024', 'HawkJellyN0va', 'SparklyAquaHawkYT',
                     'ELIJAHFUSION2007_YT', 'Xx_WyattDragonShadow', 'Grays0nNightRift', 'FlickClawMax',
                     'MAST3R_Str3am2007', 'XxSparklyBuilderDuck', 'XxGrays0nSilverM00nx', 'ProSonic202182_YT',
                     'N0vaChaseNe0n', 'XxRocketKnightBladex', 'AlphaSkaterLava71', 'SilverPhoenixSkater2',
                     'Xx_WraithStarryShad0', 'Xx_T0xicR0gu3Thund3r', 'SlimeNe0nGalaxy', 'SparklyGamer201080',
                     'B3astStarry41', 'TURBO_Lucky37', 'Drift_Chaos88', 'EllaBuild3r77', 'PixelHer02016YT',
                     'ShadowHunt3r2008', 'BrooklynRogu3Rift', 'XxLucasWolfNinjaxX73', 'PLAYZ_V0id201822',
                     'AbigailLegendSpark11', 'BlizzardSilver24', 'Li0n_Pr059', 'CodeFlickEagle', 'MasonDarkPho3nix2019',
                     'L3viEch0Fir3', 'CART3R_Dark2004', 'HazeEpicSonic', 'XxZ0eBac0nViperxX22', 'HawkToxic202298',
                     'KnightCodeOrbit2013', 'ThunderM00nV0rtex63', 'MichaelSlimeFlame200', 'Lucas_Max200528',
                     'XxRiftStarryTurboxX', 'RiderRavenHyper49', 'MINERAQUA58_YT', 'ProHero2024YT', 'RiderTurb040',
                     'XxMin3rChaosxX2015', 'OliviaStormyPanda200', 'XxAm3liaRogu3NinjaxX', 'Jam3sGold3n79',
                     'DriftBlockZoom', 'AddisonBladePhoenix2', 'Sebastian_ORBIT20149', 'ZapFlick2006_YT',
                     'FireNinja2024YT', 'XxWraithInfernoHerox', 'F0xCyber2021', 'WillowTurbo11_YT', 'PixelatedZer077',
                     'ProOmegaSkater', 'Skater_Builder2004YT', 'DriftCooki3Silv3r', 'LiamFlickClaw2017',
                     'PrimalMysticBlade', 'Xx_NinjaPho3nixSkat3', 'Hunter_Omega40', 'EzraBuild3r200579YT',
                     'Xx_Craz3Pow3rInf3rno', 'BlockStarryRift2022', 'Blade_Ice43', 'JellyAlpha2008YT', 'J3llyShadow90',
                     'Xx_SamuelInfern0Mine', 'XxZeroRiderLegendxX', 'XxS0nicV0rt3xxX52', 'Bl0ckRiftF0x',
                     'CrystalEagleChase200', 'EagleBear201533', 'BlockOrbitCode', 'ScarlettF0x201628', 'Vip3rPanda2021',
                     'Bac0nCraftStar', 'XxSkyPrismCodexX2009', 'HarperTurboMystic26', 'Rid3rClaw66_YT', 'KingMystic31',
                     'PhoenixFlash32', 'ULTRA_Alpha200961', 'PrismPrimalEpic', 'LegendEagleFlick2003', 'ChillQu33n50',
                     'HunterPhoenix200250', 'MINER_Blade77', 'GalaxyBuilder95_YT', 'BaneEagleToxic',
                     'IsabellaLightAlpha83', 'XxPix3lRav3nR0gu3xX', 'DragonDriftPlayz2009', 'CookieNovaBlock',
                     'LionQueenStorm', 'Gabri3lRock3t201441', 'Will0w_DRIFT35', 'Charl0tteKnight40', 'PrimalBan336_YT',
                     'XxLucasNinjaxX24', 'XxMast3rClawxXYT', 'CyberHazeDancer', 'RocketNeonZero', 'WilliamFireNight',
                     'Bane_NINJA200932', 'Thund3r_Fox2009', 'Xx_StealthNeonMaster', 'Duck_Rocket2012',
                     'JulianBlizzard2021YT', 'Aur0ra_B3ast2009', 'StealthChaosTiger', 'DanielVoidHero74',
                     'XxMichaelHyperVenomx', 'XX_V3nomPuls3Crystal', 'CircuitThunder20', 'AidenDawnVenom2022',
                     'LukePixelTiger200326', 'OrbitProSkater2007', 'FlameDarkClaw', 'JaydenSparklyHero',
                     'XxLeviKnightxX2023', 'EagleHazeCyber2017', 'LightBlockZap', 'LightChaosDancer',
                     'XxVoidCod3StormxX201', 'St0rmySaber2013', 'XxChaosPixelxX55', 'Build3rBan3V0rt3x73',
                     'Inferno_Tiger2016', 'Dani3l_Qu33n91', 'WillowSlime200493', 'XX_Pix3lat3dLightDaw',
                     'Her0G0lden201579', 'XxB3astCooki3Cod3xX7', 'ZeroStarry98', 'XxChas3PrimalxX64', 'Samu3lSkyMax',
                     'RiftDriftTurbo2008', 'BACON_Spark40', 'WyattPanda_YT', 'Craz3Tig3rM00n', 'XxNoraHazeStarxX',
                     'XxHazeTurboMysticxX2', 'BrooklynArrow62', 'Golden_Alpha2021YT', 'Arr0w_Rider2017',
                     'KayleeTigerHyper2010', 'XxHenryBaneRavenxX', 'OrbitDawnKing11', 'C0d3Light2004',
                     'VortexFlickAlpha', 'BlastCooki3Ninja', 'AuroraStream81', 'Elli3KnightShadow', 'StormyClawPix3l',
                     'XxLukeEpicxX2016', 'MiaBacon88', 'SkyCookiePrism', 'Xx_AlexanderCodeEagl', 'Stealth_ZERO44',
                     'XxAqua_MaxxX41', 'R0ck3tQu33n86', 'Xx_EmmaPh0enixLegend', 'XxPrimalQueenSaberxX',
                     'Z00mKnightPixelated', 'RileyLi0n92', 'IsaacDarkBuild3r2011', 'IsabellaInfern0Hunte',
                     'Gam3rCooki32016', 'DriftSkyBlock2017', 'LunaCyberFox2018', 'SebastianIceCrystal',
                     'BlizzardBan321', 'Slim3Ultra10', 'XxCircuitGalaxyxX80', 'XxBlad3_SkyxX2019', 'SparkStormAlpha28',
                     'EzraPrism2004_YT', 'AidenLegendRider2021', 'Venom_Inferno88YT', 'SamuelThunderVortex',
                     'StormyEagleCircuit20', 'Aid3nGlitchArrowYT', 'Dani3lRid3rStarry', 'XxSparklyInfernoxX43',
                     'Bear_Stream53', 'Z03SkyThund3r200811', 'H3nryQu33nZ3ro', 'StarTurboPulse2016', 'Henry_SILVER41',
                     'WillowMaster16', 'AvaBeastDawn85', 'PowerPixelatedDark20', 'VoidVenomFlick',
                     'IsaacFlashGhost2008', 'SkaterV0rtex45', 'DancerVenomThunder84', 'LucasToxic201594',
                     'CodeShadowArrow2011', 'Toxic_Neon201725', 'BuilderDragon87_YT', 'Z3roBuild3rInf3rno',
                     'JackDark201884', 'XxCraft_CLAWXX91', 'Om3gaBlastPix3l', 'Skat3r_BACON94', 'Ellie_Thunder23',
                     'HunterZap200389', 'Xx_SavannahRiderBaco', 'Paisl3yQu33nWolf66', 'Xx_MinerDragonGlitch',
                     'N3onLuckyPho3nix', 'OliverViper200854', 'Samu3lEagl3Aqua', 'Night_Eagl32010',
                     'BladeInfernoRift_YT', 'BaconShadowVortex34', 'XxTurboDragonxX84', 'SamuelZoomDrift78',
                     'Dancer_Rift15', 'HawkPixelatedCraze20', 'DuckEchoFrost2017YT', 'IsaacKnight200697',
                     'RileyFoxIceYT', 'SHAD0W_Danc3r2019', 'Xx_AbigailCraftVorte', 'ChaseHero200447', 'Blade_Cyber18',
                     'XxPrimalAlphaxX2003', 'DragonQu33n2005YT', 'Logan_BUILD3R2003', 'FlickSky78',
                     'XxOliv3rEchoHyp3rxXY', 'ChaosStarryLight2018', 'Jayd3nShadowPrimal', 'AddisonDarkCraze',
                     'XxCrystalZapFirexX20', 'BuilderSky200589YT', 'Xx_DriftSonicCircuit', 'Pow3rLava2012',
                     'N3onRock3t61', 'GalaxyFlameGhost2015', 'XxAlphaSilv3rxX53', 'EmmaBlizzardToxic',
                     'XxEchoCookieSparkxX', 'XxEllaOmegaxX53', 'XxPixelatedPixelDanc', 'XxChloeBytexX2018',
                     'XxFrostQu33nDriftxX', 'NeonLionVoidYT', 'BUILD3R_Pix3l90', 'ClawZ3ro2015', 'Cha0sR0cketSt0rmy202',
                     'Cart3rStr3am13', 'PhoenixToxic201681', 'ZoeLionOmega', 'WolfDragonBlock54', 'FlashFusionTiger',
                     'Gamer_Hawk36', 'Haz3lPho3nix200223', 'DancerCraftAce2024', 'Aur0raHer024', 'BrooklynnFuryRocket6',
                     'Bl0ckShad0w2024', 'OrbitHunter201340', 'VortexDawnPrimal', 'DuckChaos57', 'BrooklynnOmega35',
                     'SavannahSkySilver200', 'MasterPixelOrbit37', 'AquaAlphaZoom28', 'EzraFlame23', 'King_DAWN53',
                     'Rav3nN3onFox', 'LionL3g3nd2022', 'XxOrbitSparklyW0lfxX', 'Rav3nFlashFury', 'XxMaxFuryxX2024',
                     'Blast_Panda39', 'SparklyRavenFury', 'BearR0cket94', 'EliRift52YT', 'XxFuryCodeUltraxX',
                     'Oliv3rSparkly2016', 'WyattVoidChase2016', 'PrimalFlashGolden96Y', 'SkaterUltraLava',
                     'Ac3Cyb3rHawk', 'NightFlame201451', 'EzraLucky200943', 'XxSparkRocketVoidxX', 'EllieAceDancer',
                     'Prism_Drag0n2014', 'MichaelKing202114', 'IsaacSparkPower2003', 'XxElijah_GalaxyxX52',
                     'Paisl3yGhost70', 'JacksonStar200542', 'ZaydenAlpha19', 'XxLionStarryGalaxyxX', 'PowerAce85',
                     'RocketEchoDuck', 'Scarlett_Wolf99YT', 'Nora_N3on15', 'BlazeHawkDuck', 'ScarlettStarry2020',
                     'AriaPix3lRogu3', 'GhostBan377', 'XxSkyGamerxX2012', 'ChaosBlastCraze', 'EllieBlockStealth201',
                     'LEGEND_Stormy2005', 'Isab3llaToxicBlad320', 'DragonIc3Spark2023', 'BLIZZARD_F0x2011',
                     'PandaToxicSpark', 'BeastSparklySkater', 'RocketGolden201843', 'TigerLavaInfern0',
                     'T0xicBuild3rHunt3r20', 'PixelSaberPower32', 'AURORA_Magic48', 'WolfZapNinja', 'C00kieLightHawk',
                     'Eagl3R0ck3t2016', 'Byt3Light31', 'NinjaHer0201593', 'Ril3yGam3r65', 'EpicGold3nBacon_YT',
                     'FoxViperHunter2019', 'EllieBlade201763', 'XxBlastHawkHeroxX', 'BaconCookieWraithYT',
                     'Oliv3rMax201297', 'Haz3_DRIFT201840', 'FlickEchoArrow11', 'XxAubreyByteR0guexX',
                     'Xx_IsabellaNinjaSabe', 'BlizzardCraz329', 'PixelCircuitShadow20', 'XxAddisonPlayzxX2002',
                     'Ph0enixLuckyCraft', 'S3bastianGalaxy2004Y', 'UltraStealth200330', 'Playz_Lava48', 'ChloeGalaxy21',
                     'Charl0tt3F0x10', 'DanielArr0wSt0rm50', 'NoraGoldenByte', 'XxEpicRiftLavaxX',
                     'Harp3rByt3Str3am2003', 'Xx_GH0STC00KIESHAD0W', 'OwenPixel71', 'XxLogan_TIGERXX74YT',
                     'XxChaosStormyCodexX', 'SilverT0xicHawk', 'Playz_Pr02016', 'JulianQueenBear', 'BrooklynnPixel30',
                     'Haz3lZ3roSparkly', 'OliverMagicToxic_YT', 'BlockSparklyStormy', 'SkyFoxL3g3nd',
                     'BeastTigerQueen2019', 'BlizzardFrost202174', 'James_Infern025', 'XxElli3BlizzardHaz3x',
                     'WilliamMast3r2002', 'UltraPixel2023_YT', 'RiderPixelHyper2006', 'MagicBuild3rBacon',
                     'AbigailNinja202439', 'JamesMaxLight', 'FrostPixelatedRift', 'ARROW_Lava15YT',
                     'Li0nCrazeBlaze2008', 'Knight_Qu33n97', 'LegendMiner99', 'Miner_Bacon27', 'VoidBlizzardGolden',
                     'RocketPixelDark18', 'Will0wZer017', 'JacksonIceZoom200986', 'SilverChaseCraft2011',
                     'FusionRiftMast3r', 'AriaZ3roPanda', 'Sparkly_INFERNO95', 'BlizzardC00kieMagic',
                     'XxRav3nRock3txX18', 'FlickInf3rno2023', 'StormySkyGam3r', 'FoxRogue200210', 'Isab3llaTig3r2011',
                     'BlastQueen82', 'BaneChill30', 'ViperSonic201641', 'Cart3r_NIGHT23', 'KingUltraW0lf',
                     'IceGlitchG0lden', 'Xx_CrazeCrystalInfer', 'XxPixelC00kiexXYT', 'Cha0sLegend57',
                     'XxWraith_CookiexX56', 'DriftZapMystic86', 'Samu3lJ3llyDrift', 'ThunderWraithLight20',
                     'Ne0nAceMagic', 'PrismGigaCyber2008', 'FlashAqua201122_YT', 'WolfPixelHero2013',
                     'Olivia_Sky202139', 'XxLight_DriftxX2010', 'XxOwenZ00mHyperxX', 'LegendVortex28',
                     'FusionSlimeBlock', 'Br00klynnZ00mSilver3', 'VoidBearHawk', 'XxRileyLightxX2018',
                     'XxPaisleyStealthxX24', 'XXARR0W_C0dexX2016', 'XxHawkAquaFlamexX', 'XxAlpha_HeroxX49',
                     'VictoriaTurbo31', 'WillowWolfDragon2008', 'Rider_Panda52', 'GalaxyThund3r44', 'OrbitHunter91',
                     'XxMax_ChaosxX2021', 'SonicVenomNova2004', 'XxPlayzDuckMoonxX202', 'AlexanderPrismPulse',
                     'SparklyBlad3Pow3r201', 'BlastCookieSky', 'GoldenViperClaw15', 'XxEpicCooki3xXYT',
                     'LuckyV3nomStarry', 'CraftCrazeStream2006', 'LegendNe0nTurb0', 'MichaelViperCyber200',
                     'GamerGigaArrow', 'StarryNeonAlpha', 'AlphaSparkGolden2006', 'ByteBlade58YT',
                     'PixelatedFlickChase', 'Br00klynS0nic90', 'LunaVortexGhost', 'Ven0m_Hunter52', 'XxScarlett_PR0XX',
                     'CraftH3roHunt3r', 'Rogu3Hunt3r2024', 'NinjaKnightLight2008', 'GigaIc32017', 'FlashVenomKing2011',
                     'DawnStealth200473', 'RavenMaxFlash2016', 'F0xClawChill200748', 'ShadowH3ro70', 'FlickN3on2002',
                     'StarrySparklyBlast', 'Z00mSt0rmyCraft', 'LiamBladeThunder', 'EchoJ3llyTurbo2010',
                     'Xx_Paisl3ySt3althZap', 'SkyFlickDrift31', 'SaberGamer2024', 'Aubr3yGlitch2003',
                     'Micha3l_POW3R2020', 'RocketFury201086', 'MaxS0nic2019YT', 'Legend_Circuit36', 'MateoEchoCraft',
                     'BearPowerBeast2009', 'OrbitCrazeCrystal', 'XxHarperGhostEaglexX', 'XxZ03Fir3Rid3rxX',
                     'Xx_ISAACPIX3LAT3DGAM', 'GoldenFlickPulse67', 'LoganQueen2005YT', 'RavenFlick88', 'MoonViper2020',
                     'BlizzardDancerMoon', 'LucasViperCyber', 'Shad0w_Hawk35', 'HunterStorm2014_YT',
                     'XxIceBuilderxX2018', 'DanielDrift77_YT', 'V0rtexIceGlitch2017', 'NoraSparkBuilder',
                     'DancerDuckGolden', 'DANC3R_Flam32021', 'ChillToxic63', 'Chl03_B3ar2024', 'ChillArrowFlick',
                     'DarkBlock200236', 'AquaGamerNe0n', 'BladeKnightNight2015', 'XxAuroraVenomArrowxX',
                     'FoxHazeEpic_YT', 'Builder_Raven20', 'XxRileyZapLegendxX20', 'XxRil3yFusionxX2010',
                     'XxLegendOrbitxX21', 'Blast_Stealth50', 'Sparkly_Block43', 'DragonHunterPhoenix', 'Miner_Arrow54',
                     'Alpha_Thunder2018YT', 'Micha3l_Ban32011', 'SlimeEpic201764', 'Hunter_Blizzard28',
                     'BaneNeonCookie2003', 'XxEagleBladexX2004', 'ElijahPrism2006_YT', 'KnightN30nFusi0n2006',
                     'Shad0wOmegaLegend201', 'ViperCrystalEagle201', 'XxArrowJellyOmegaxX', 'BrooklynOmegaNova56',
                     'SophiaLuckySlim3', 'AsherDrag0nEpic2019', 'OmegaF0xStarry', 'Ow3nV0idKing', 'ThunderDarkZap',
                     'LucasW0lfNight', 'NinjaBearAlpha', 'XxInf3rnoIc3SkyxX', 'XXSILV3R_C00ki3xX',
                     'XxGracePrismPixelate', 'XxFlickBuilderxX2011', 'SparkNovaVort3x', 'MysticL3g3ndPrimal46',
                     'MateoStarry66', 'XxVenomBlazeCraftxX', 'ArrowCodeCyber', 'XxStreamVenomVoidxX2',
                     'LaylaDawnEpic2006', 'JacksonZapFlick', 'XxWraithMinerStormyx', 'ByteLion22', 'VoidOrbit2014YT',
                     'Lava_C00kie2016', 'Lava_Builder200447', 'StormEagle2006', 'KnightFusion47', 'VortexRift97',
                     'Lucas_Stealth62', 'Gam3rWolfPrism', 'FlameClawOrbit', 'XxMagicZeroxX28', 'BrooklynCode12',
                     'XxAceTigerxX202387', 'SkaterDarkPixelated2', 'HarperDarkBear2007', 'HunterOmegaGhost22_Y',
                     'Her0SkaterBlast', 'XxQueenRiftBytexX', 'XxClawBearAlphaxX', 'RiftUltraFusion2014Y',
                     'FlickFoxToxic200798', 'Xx_V3N0MINF3RN0PIX3L', 'GamerSparkDuck', 'Ph0enixN0va99',
                     'XX_AmeliaVortexStarr', 'XxBuilderRiftSt0rmyx', 'MichaelDuckHero2002', 'KnightCraz3Wolf',
                     'AriaJ3lly62', 'FrostPowerVortex', 'CircuitCyb3rArrow202', 'EllieHeroPixel2010', 'GamerClaw27',
                     'ShadowArrowCode72', 'HannahInf3rnoTurbo78', 'Xx_ScarlettBeastSpar', 'INF3RNO_Dragon2007',
                     'NightProJelly80', 'Jayden_TIGER2023', 'XxCircuit_FLICKXX51', 'Arr0wPix3lPix3lat3d',
                     'HannahGamerWraith201', 'N0raBear30', 'FOX_Lion13YT', 'XxGraceStarryxX2023', 'ByteArrowMaxYT',
                     'Hunter_Bane84', 'XxBaneOmegaxX2024', 'AsherGlitchByte', 'Thund3r_Mystic2017YT',
                     'Pix3l_B3ar2018YT', 'AlphaMystic2011YT', 'XxAriaShad0wxX98', 'FlickEchoLuckyYT',
                     'ScarlettJelly2024', 'MoonSilverRogue', 'VoidKingLegend', 'Flame_Byte43', 'SkaterStormyHyper',
                     'Cha0sSilverSparkly20', 'MasonMagicBeast', 'Build3rFrostFlam3', 'XxCraze_PixelxX47',
                     'Gold3nMoon201838', 'Orbit_BLAZ3201477', 'AsherStarryPro87', 'RavenWolf201021',
                     'GabrielLucky200215', 'DancerRocketCookie', 'Hunt3rCod3H3ro', 'PixelPrimalShad0w',
                     'Carter_St0rmy2006', 'MiaL3g3nd2008', 'Mat3o_STAR29', 'AriaIceCrystal2018', 'LavaCrystal201893',
                     'XxChillCraftAcexX', 'LunaVort3x82', 'Fr0stNe0nDark2007', 'S0nic_Raven2011', 'JellyZ00m72',
                     'Cyb3rBlaz3Fir3', 'Stormy_Blade2020', 'EliTigerCookie', 'ChillByteVoid2012', 'Viper_Rider64',
                     'XXFLICK_Her0xX2016', 'StarLucky42', 'PlayzGamerBlastYT', 'Moon_Ice44', 'XxStealthUltraxX2005',
                     'XxHawkKnightGoldenxX', 'Hunter_Pulse90', 'XxSavannahFrostxX15', 'Bac0nSkat3r2023',
                     'SophiaThunderMoon54', 'Blad3P0w3r90', 'EchoHawkBlaze2010', 'EchoPlayz2004YT', 'HazeCyber77',
                     'EzraBaneRift', 'XxHunt3rFlam3B3astxX', 'HeroTurboMagic2015', 'LavaMystic2005_YT',
                     'Zayd3nFrostFlam3', 'N0ah_Dancer200469', 'FlickVortex76', 'Inf3rn0_Rav3n54', 'BaneZoomEcho90',
                     'DragonHunterPulse', 'William_ICE94', 'LaylaByt3Z3r0', 'Cod3_Craz32012', 'XxSpark_FoxxX2017',
                     'Samuel_C00kie2010', 'Ash3rZoom2017', 'UltraCyb3r2004', 'SonicStorm2015_YT', 'PrismHyp3rBuild3r',
                     'XxHarperFuryxX84', 'CodeCircuit58', 'OliverAceStream47', 'Flam3Flick_YT', 'XxByteSkaterBanexX',
                     'CyberV0id2005', 'R0cketPrimal2010YT', 'CyberFusionRocket21', 'MysticBuilderLight20',
                     'Ban3Flam3Sonic', 'Galaxy_DARK2019YT', 'HazeStream67', 'VoidLightBlizzard200',
                     'LionPow3rCircuit2014', 'MiaNeonLava', 'XXMASON_FoxxX2021', 'FoxSonic40', 'Inferno_Hawk200210',
                     'DancerR0cket201013', 'AlphaWraith2006_YT', 'Flam3Rav3nPix3l2012', 'CircuitTurbo79',
                     'PhoenixByteNinja2008', 'JamesHyper20'}
local RECEIVER_LIST = {'ChaosRid3rBlizzard', 'XxBan3B3arEagl3xX', 'Xx_CYBERSTEALTHMAGIC', 'FuryF0xViper',
                       'Ellie_Blade65', 'XxTigerInfernoNightx', 'GoldenBane49', 'Xx_PhoenixStarryMyst', 'EvelynFlash12',
                       'Gamer_Haze2007', 'BearChillSaber', 'PlayzPix3lat3dAc3', 'XxInfernoProCookiexX', 'Rider_TigerYT',
                       'Samu3lKnightBlizzard', 'LukeLuckyWolf', 'Harp3rCyb3rP0w3r', 'Om3ga_Playz202265', 'PulseEagle57',
                       'GhostSkyChase201733', 'IsaacSaberRider', 'PlayzIce92', 'LightB3ast2006', 'AuroraKingPlayz2015',
                       'AriaKing200473', 'Void_Hyper202426', 'NoraLuckyNight76YT', 'BACON_Drift49',
                       'XxVortexNightVoidxX', 'GalaxyFrost37', 'Rogu3GhostVoid2023', 'JaydenCraft58',
                       'XxChillSkyMasterxX', 'Jayd3nPuls3Gam3r', 'VortexHeroBear', 'DriftSparklyPro2022',
                       'Ethan_Duck200415', 'ToxicAceAlpha', 'PlayzClaw201354', 'SamuelAlphaStarry38'}


-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
