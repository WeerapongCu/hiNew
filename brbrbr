-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'Chl03Turb02002', 'Ev3lynHyp3rDawn', 'DanielFlash2024_YT', 'HyperStreamPh0enix20',
                     'XxMasonSt3althGhostx', 'GraceCraftOmega', 'ChaosSilv3rKnight', 'XXLUCAS_Ban3xX2011',
                     'GraysonStarryViper20', 'HannahOrbit2006_YT', 'VenomGhostDrift2002', 'AquaH3roSky2023',
                     'XxGlitchR0gueNightxX', 'PlayzQu33n35', 'XxBear_SlimexX2017', 'XxCircuitBeastxX2020',
                     'MysticZero201325', 'St0rmEch0Byte2010', 'Circuit_Shadow93', 'StarBaneFire', 'WyattBearPulse2021',
                     'EliRiftBlade2016', 'XxTigerRocketxX20053', 'AmeliaN0vaF0x', 'InfernoCookie64',
                     'XxOm3gaInf3rn0xX37', 'IsaacDawnOrbit2009', 'XxWyattV3nomBuild3rx', 'Xx_AvaPixelatedBlizz',
                     'EmmaPandaAqua2006', 'S0nicRavenR0cket_YT', 'BladeDancer2016_YT', 'L0gan_Dark2012', 'HazelPixel98',
                     'AbigailFusi0nR0cket2', 'MasonSparkBlizzard', 'CraftHawkEagle68', 'CraftDarkGlitch',
                     'ChillCraz388', 'Charl0tt3HawkR0ck3t2', 'ISAAC_Shadow2017', 'Bac0nThunderAce11',
                     'DragonStormLight2016', 'VictoriaArrow201591', 'IceEpic23', 'AquaFir3Cyb3r',
                     'CraftPandaPhoenix201', 'ScarlettShadow201950', 'Jax0nS0nicPrimal', 'MysticPrimalHaze',
                     'XxJellyByteBaconxX65', 'DriftRiderRaven20187', 'DriftNeon13', 'LegendInfern061', 'SlimeDawnDark',
                     'OliverCrazeTurboYT', 'Tiger_Galaxy2017', 'XxJacks0nCha0sxX13', 'L0ganDancerStar',
                     'Aur0raW0lfV3n0m', 'XxMasonPlayzBuild3rx', 'ChaseLavaRaven2014', 'FusionAqua11',
                     'L0ganMinerQueen2002', 'LukeVenom43', 'ArrowPixelNinja', 'Hannah_Rift62', 'XxKayleeDriftxX54',
                     'QueenZeroRider', 'EvelynVortexSilver', 'JaxonVenomDancer24YT', 'OmegaPanda200884',
                     'XxZaydenMoonxX90', 'WilliamArrowBlaz3', 'CHA0S_Li0n78', 'BeastPower30_YT', 'XxSophiaFirexX200537',
                     'PaisleyR0cket76', 'HunterCyber55', 'MichaelCyberBeast', 'Gh0stNightT0xic', 'EzraCircuit200565',
                     'MysticHyper17', 'SamuelPlayz201653', 'Layla_Pixel77', 'PaisleyLegend37', 'XxAsherEpicBac0nxX',
                     'DawnZeroBeast', 'StealthVenomDragon', 'XxMiaFireProxX_YT', 'EvelynToxicHunter',
                     'XxEzraMin3rxX2013', 'Xx_InfernoMasterArro', 'XxBladeJellyxX2005', 'Abigail_Fox44',
                     'XxBlaz3Hyp3rStr3amxX', 'Silv3rMoon2010', 'Addison_Code80', 'BLAZE_Alpha202156',
                     'Builder_Panda201110', 'Magic_Byte201594', 'AlphaWraith94', 'LaylaCode2019YT', 'AidenKingDawn2017',
                     'Zo3_Knight75', 'XxBuild3r_P0w3rxX99', 'StealthSkaterBeast56', 'DanielGalaxy201218YT',
                     'RiftVip3rOrbit2016', 'L0gan_Dancer2009', 'HunterFuryTiger2011', 'ChloeCyberNeon',
                     'Wraith_V0rt3x2023', 'PrismZapPix3lat3d', 'NoraHaz3Blad3', 'Storm_ZOOM2004', 'IcePixelRogue2015',
                     'JaxonCircuitRavenYT', 'Om3gaPix3lInf3rno69', 'FlameCyber201640', 'DanielRocket2008_YT',
                     'BladeBlast77', 'DriftTurbo45', 'BrooklynnStr3amMysti', 'St0rmMasterPh0enix',
                     'B3astAlphaPix3lat3d7', 'VoidPow3rQu33n', 'Echo_Drift22', 'Xx_S0nicEch0Pixelate',
                     'MasonGhostCrystal', 'SkaterFrostJelly', 'FusionQueen61', 'PowerFire68_YT', 'Samu3lRock3tShadow20',
                     'BaneM00nHunterYT', 'XxBrooklynZapxX2016', 'EchoFoxLavaYT', 'GigaPowerAce', 'Gh0stAlphaZap44',
                     'KayleeM00nLucky2003', 'Xx_WilliamR0gueNinja', 'JulianRift47', 'SONIC_Raven2017', 'SparkBlaze74',
                     'BrooklynEchoFlam3', 'Pix3lStarryDragon_YT', 'MateoSky202454', 'Haze_Craft16', 'LeviCookieSlime',
                     'Pr0Beast44', 'ViperBane201852', 'EchoFlameNeon', 'MateoPrismStorm20058', 'XxFlashCod3xX2020',
                     'InfernoZoomStar2005', 'LuckyJellySilverYT', 'FlashDriftHawk', 'XxClawDuckxX73', 'SonicChill45',
                     'LoganBuilder2017_YT', 'SparkTurboBuild3r', 'PixelatedBlazeFusion', 'XxRift_BearxX2021',
                     'Z0eW0lfS0nic', 'TOXIC_N3on2023', 'Mast3r_Nova50', 'XxJulianBlastPix3lxX', 'V0idBlizzard2014',
                     'Ac3H3roLion', 'StealthHer0C0de2007', 'SamuelRiderDawn2017Y', 'Blad3Mast3rBlaz3', 'Rav3nNight2008',
                     'Ninja_ROCK3T2014', 'XxHunterMinerStreamx', 'PrismBl0ckGamer', 'Eagl3_Lucky2015',
                     'XxHarperArrowxX20186', 'Jelly_Skater16', 'XxNinjaZeroxX2023', 'HannahNeonLion',
                     'AuroraMax2013_YT', 'Vict0ria_Legend2009', 'Xx_VictoriaSaberPixe', 'XxSilver_OrbitxXYT',
                     'StealthEpicSonic', 'GalaxyQueenInfern0', 'AidenBaneMystic93', 'GalaxyCraze202069',
                     'H3roEpicVip3r2003', 'Henry_Sky2023YT', 'PrimalTurb0C00ki363', 'Flick_C00ki370',
                     'XxAuroraPowerWraithx', 'Drag0nF0xRift', 'StealthFuryVenom', 'PrismBuilderRift2008',
                     'Aubrey_Shad0w2024', 'XxHarperSparkChillxX', 'IsaacEpic201254', 'RavenGhost50',
                     'Elijah_Dark202172', 'LunaLionChill', 'Brooklynn_Aqua42', 'BaconSonicChaos', 'Ow3nGlitchNova',
                     'XxPandaBanexX_YT', 'XxMichaelSilverKingx', 'LunaAceEcho', 'DancerFrost31', 'HAZEL_Shad0w2006',
                     'Jack_Builder21', 'RiftDriftAlpha66', 'Haz3lHawkLi0n', 'BaneSparklyLucky', 'SebastianPandaBlock',
                     'BlizzardCrazeSonic', 'BrooklynStormKnight', 'Inf3rnoSkyRock3t', 'BuilderPhoenix26',
                     'XxSkaterDriftSilverx', 'XxLoganSkyCrystalxX', 'EmmaPulseNeon2003', 'XxMiaDuckBlockxX2016',
                     'XXZ00M_Cha0sxX2010', 'Xx_Al3xand3rUltraCha', 'Aubr3ySparkChaos', 'XxC0de_WraithxX72',
                     'Rock3tBlockThund3r20', 'DawnGoldenNinja', 'XxFlameSaberRoguexX4', 'ETHANFLAME201634_YT',
                     'Will0w_Sparkly2013', 'XxWyattQueenHeroxX', 'Henry_Blade2017', 'EliVip3r201384', 'Chl0e_Zer014',
                     'VictoriaZoomSab3r', 'EagleDragonFlame_YT', 'XxByte_StreamxX2021', 'LucasSkyBlizzard',
                     'EpicMagicToxic', 'BeastMaxDancer', 'OliverStorm2024YT', 'ElijahEagleBuilder', 'Flash_Rogue200775',
                     'NightPixelG0lden', 'Oliv3rTig3r79', 'Xx_HarperMasterMysti', 'Levi_Gh0st202281', 'JulianLi0n32',
                     'Aubr3y_Tig3r', 'XxTurboGigaFuryxX', 'Hunt3rHaz3FoxYT', 'Xx_SophiaPrimalLucky',
                     'BaneThunder201852', 'Aur0ra_Danc3r67', 'XxIsab3llaVoidxX2010', 'Kaylee_Byte94',
                     'XxBrooklynMaxxXYT', 'BeastFlashRift58', 'XxBuilderBanexX73', 'XxLightVoidCookiexX2',
                     'ChillStarryTurb0', 'Flash_FLAM316', 'EthanLavaEpic2024', 'Lucas_FLICKYT', 'EzraStarry200369',
                     'XxEchoStarPho3nixxX', 'L3vi_R0gu374', 'PulseCrazeCraft98', 'XxElijahLightPlayzxX',
                     'HunterShadowSpark', 'Charlott3Chas3Blad32', 'RileyPrimal70', 'WraithBearTiger2009',
                     'SlimeFrostCode2011', 'Sky_Nova35', 'EllieBuilder202097', 'BlazeMasterMagic2013',
                     'GraysonShadowFox2010', 'GigaCraz3Haz3', 'ZaydenInfernoPro2003', 'JaydenAlpha29',
                     'Grac3Tig3rPuls3', 'Blade_Cyber62', 'Flam3Build3rDuck', 'XX_GabrielCyberShado', 'XxGabrielProxX16',
                     'LavaGh0stN0va19', 'XxCrystalH3roMin3rxX', 'ThunderMystic80', 'EMMAMINER2011_YT', 'Bl0ckMaxDrift',
                     'SonicRocketVenom', 'XxPowerMysticxX28', 'SonicPrimalFlick', 'BladeViper49', 'BlizzardPulseBear',
                     'HannahTurbo99', 'GalaxyN3onRid3r', 'Arr0wAceCyber', 'BeastEch02011', 'LucasCrazeDrift',
                     'Rid3rNovaEagl3', 'FlashBearFox2024', 'NinjaOmega201152', 'JellyShad0wPixel59', 'AvaArr0wEpic',
                     'MichaelJelly83', 'HyperHaze202012', 'S0phiaFlameNe0n', 'Slime_Sonic95', 'Storm_Inf3rno2022',
                     'PROSPARKLY20_YT', 'WraithViper25', 'Thunder_Golden200780', 'Xx_OliviaLuckyHunter',
                     'NightUltraPulse', 'Zer0MasterBane', 'LoganPrimalKing2006', 'XxElijahGlitchPrimal',
                     'LiamMysticH3ro2017', 'Olivia_St0rmy2013', 'Xx_JulianFrostCircui', 'Ic3Mystic2014YT',
                     'HazeCookieHyper2015', 'XxClawGigaxX2024', 'Oliv3r_Chill2009', 'XxNoahDriftRiftxX', 'Pr0_Turb017',
                     'MateoGigaTurbo', 'HeroGigaZero', 'IsaacDawn200319', 'XxTurbo_ProxX2021', 'LoganKingSkater',
                     'AsherTurbo201682', 'AlexanderPulseQueen', 'BuilderStealth24', 'SparkCraz32007',
                     'EliSparkDrift2020', 'Jayden_Panda201696', 'Ultra_Pulse78', 'Samuel_Shadow201412',
                     'Micha3lProCyb3r28', 'XxV0rtexZ00mxX2002', 'ToxicChillArrow', 'MinerRavenVenom20115',
                     'EllieLava38', 'MiaEch0Ace', 'CircuitF0xZap', 'Pix3lEpicAlpha201024', 'XxThunderGamerPrimal',
                     'FireStarMiner', 'Dani3lSab3rEcho20103', 'XxCraftEchoxX2014', 'BROOKLYNBUILD3RLUCKY',
                     'XxAmeliaEagleSt0rmyx', 'DanielCodeUltra', 'Tiger_Rogue2013', 'XxMiaGalaxyRavenxX',
                     'MysticStreamMax2018', 'EagleDarkShadow2018', 'Luke_Rider99', 'Primal_ROCKET202315',
                     'Tiger_MAGIC55', 'WilliamUltraDawn2006', 'XxJaxonStormyPixelxX', 'SebastianPulseDragon',
                     'CrystalUltra202386', 'H3r0Drag0n200752', 'XxH3ro_PlayzxX2015', 'MiaStr3amCraft2014',
                     'MysticBuild3rByt3', 'LightMysticFire20049', 'AlexanderStreamThund', 'FuryBuilderSlime2004',
                     'EchoBlazeJelly', 'HawkPr0P0wer', 'Blaz3ClawOrbit2014', 'Zayd3nBuild3rChill20', 'SparkV0rtexZer0',
                     'HazelRiftCrystal41', 'XxEthan_FlashxX56', 'LukeQueen201651', 'Cod3J3lly2021', 'Hyper_Byte2012YT',
                     'C0d3_Galaxy74', 'LAVA_Chase63', 'XxFusi0nC0deStarxX', 'MysticCrystalOmega74',
                     'XxSparkH3roxX201684', 'NinjaPix3l34', 'LunaStormySonic', 'SAMUEL_Byte200930', 'LucasMagicOm3ga',
                     'MinerGigaSpark', 'BrooklynnDuckOmega26', 'XxMateoHeroxX2021YT', 'XxKayl33H3roUltraxX',
                     'NoahBuilderFury', 'Xx_HannahBeastThunde', 'DANI3L_Spark2019', 'CarterSkyBuilder2020',
                     'SaberBladeMax202081', 'SparkRift44', 'Jacks0n_R0gue2019', 'N3onCraft2015', 'BuilderPrimalF0x76',
                     'NinjaSparklyGiga', 'EpicGlitch75', 'FoxKingSky2004_YT', 'NoahGhostViper', 'P0werPandaN0va',
                     'LoganMasterDawn2019', 'XxAmeliaToxicxX2008', 'BlizzardNinjaH3ro', 'CarterHyperSpark2022',
                     'ArrowGigaDancer', 'XxTigerBuilderxX2005', 'PulseSaber2004YT', 'Build3rStarry52', 'MOON_Ghost57',
                     'GlitchBlizzardNeon', 'SparkPulseCraft98', 'AbigailEpic2011YT', 'Sebastian_Moon34',
                     'JackZ3roThund3r', 'XxBrooklynnSilverUlt', 'MateoLionUltra', 'SavannahTurb02018', 'Moon_Circuit36',
                     'RiftHyp3rPrism', 'MiaHyperEagle43', 'Void_Nova72', 'Ban3J3lly99YT', 'ArrowStarryPixel2010',
                     'B3ast_SLIM32009', 'XxTurb0PixelxX2017', 'XxNoahN3onEagl3xX202', 'XxEv3lynPix3lat3dGam',
                     'R0cketCircuit2013', 'XxZapFlam3MagicxX', 'BrooklynPandaAc3', 'GalaxyKnightMystic',
                     'Grays0n_Pix3l2017', 'MagicPandaPulse2023', 'ChaosZeroRider2009', 'GalaxyBlizzardCraz3',
                     'ScarlettC00kieFusi0n', 'XxFireBlizzardxX2014', 'Ech0_Claw201682', 'StarHyperNova',
                     'Z03R0gu3Ninja2016', 'InfernoFox47', 'Chaos_Beast27', 'NinjaDancer84', 'CrystalShadowDragon7',
                     'S3bastian_Magic2014', 'DancerStreamGlitch', 'StreamKnightLight200', 'ClawFox85_YT',
                     'Harp3rEcho2016YT', 'StealthHyperStorm61', 'MaxGolden2006YT', 'N0ra_Hawk2005', 'NINJA_Ban342',
                     'SlimeCraftLava', 'JacksonBuilderLava59', 'NinjaAquaRift', 'XXHAZEL_CodexX35', 'GraceGamerF0x',
                     'Void_Fire2010', 'XxLayla_FoxxX2020', 'Gold3nSpark85', 'OliverBlizzard77', 'LegendShadowFlame',
                     'Xx_Will0wHyp3rSt3alt', 'FlashEpicSkater2008', 'XxStormEchoFlickxX', 'BearGhost201633',
                     'LavaNinjaDawn', 'AceClawKing48', 'Shad0wDawnTurb0', 'Xx_Kayl33StormyFusio', 'Dani3lAc3Night',
                     'Blizzard_Star13', 'ToxicBuilder68', 'MATEO_Ghost79', 'Byt3Flick2022', 'WilliamEagleShad0w67',
                     'ProFlick32', 'ThunderCircuit200531', 'PrimalBlaze2009_YT', 'BlazeLuckyP0wer',
                     'XxGam3rLavaDragonxX', 'EpicWolfDanc3r', 'Skat3r_Ninja200798', 'Harp3rPix3lat3dBlaz3',
                     'UltraCha0s200586', 'SkaterNinja67', 'TigerPixelWraith_YT', 'XxJaxonLuckyGamerxX',
                     'Sparkly_Dark46', 'SebastianKnightDuck', 'Pix3lat3dN30nBan3', 'FLASH_Crystal52', 'Bac0nN0vaSlime',
                     'KingLegendInfern053', 'DuckRift58_YT', 'ChillDriftPower', 'NinjaClawEpic72', 'ViperKing200263',
                     'AddisonZapGiga', 'AlphaStream74', 'HazeCraftJelly', 'XxMat30Build3rxX2016', 'ChillMasterZap',
                     'Silver_Hawk201080', 'Pow3rLion2003', 'Br00klynBeast2013', 'Playz_Viper2007',
                     'StormySonicInferno20', 'ToxicIc366', 'RocketByteAce200242', 'Xx_CrystalFusionMine',
                     'SlimeTurboShadow_YT', 'FireHyperCha0s', 'PowerDragonPixel', 'TurboEagl3Skat3r',
                     'NoraThunderDrift', 'XxBlockVortexxX2020', 'LionEagl3Claw2019', 'FlameDark82', 'Jayd3nClaw12',
                     'XxChaosLavaEaglexX', 'FlashFusion202110', 'HeroBladeMystic2008', 'LaylaNeonVenom2003',
                     'XxGold3nPix3lat3dFox', 'PulseLuckyGlitch', 'XxSt0rmBl0ckGigaxX20', 'Luk3SkyStr3am',
                     'XxEch0ZapxX_YT', 'ChaosGigaBlaze', 'FLASHCODESKATER_YT', 'DarkUltraPlayz', 'Xx_RiderPixelatedSab',
                     'SonicTigerRider', 'Mas0nEagleDancer2010', 'LightPrimalChas3', 'Br00klynSaberCircuit',
                     'SonicRogueCraft2015', 'Danc3rVip3rCyb3r', 'Ech0Pix3lat3d200725', 'JulianLegendG0lden20',
                     'Wraith_Sonic2016', 'KnightSparklyRift201', 'XxSlimeCraftxX2006', 'V3nomFury2009', 'MiaKnight73',
                     'PandaSlimeAlpha_YT', 'XX_AbigailPrimalRift', 'LightOrbitDuck', 'SebastianEpicAqua',
                     'Master_Blade201282', 'HawkGolden38', 'XxBaneBuilderxX2004', 'CrazeN0va2022',
                     'XxCircuitUltraxX2018', 'FlameV0rtexPrism', 'XxSavannahRiderxX_YT', 'IceHyperStar',
                     'Cod3Z3ro2014_YT', 'EagleArrowMax', 'MysticRocketNinjaYT', 'Z3roChill2020', 'PlayzStealthSilver20',
                     'Qu33nL3g3nd2003', 'Raven_Toxic2018', 'XxStr3am_Flam3xX2016', 'SaberFlash33', 'Z3roArrowWraith',
                     'Oliv3rT0xic201365', 'DragonLava82', 'KingBlaze201762', 'Fire_Hero74', 'CHILLBLADEVENOM_YT',
                     'Craz3ClawLion', 'V3n0mJ3lly2015', 'GraysonByte79', 'BlastGigaSkater86', 'DancerCraft200553',
                     'Jax0nThund3r62', 'RiftBlazeHaze2018', 'C00ki3_J3lly2010', 'PixelatedEch0Turb020',
                     'Dawn_Legend2013', 'XxCart3rToxicSkat3rx', 'BaconCookie2016_YT', 'AvaProJelly',
                     'XxRavenFoxVenomxX73', 'XxZapInfernoxX2017YT', 'Rogu3Min3rFrost', 'EliDragonStream2022',
                     'Ic3Z3ro33', 'XxZo3Silv3rxX23', 'MAX_Ghost51YT', 'AquaBl0ck201021', 'DuckToxicMoon',
                     'Blaze_Her02004', 'CyberZap16', 'Spark_Build3r2003', 'NinjaByteGiga2008', 'Xx_RavenBlizzardDrif',
                     'HannahFireToxic', 'PulseBladePlayz', 'Circuit_Duck2019', 'XxBuilderClawRiftxX9', 'F0xCraze2014',
                     'XxIsabellaStealthWol', 'XxSamu3lFlashxX82', 'XxVort3xSkat3rPix3lx', 'Ghost_Nova50',
                     'Xx_ECHOMYSTICPHO3NIX', 'ThunderHawkBlock', 'Luk3Sab3rStr3am', 'MichaelFusionPulse',
                     'Mas0nHawkOrbit', 'Br00klynPr074', 'XxZo3GlitchxX2003', 'Aurora_DAWN65', 'Gh0stSt0rm2005',
                     'XxHannahMoonxX97', 'GhostFoxIce2024', 'Samuel_Fusi0n200415', 'KayleePh0enixCrystal',
                     'AvaStealthNova', 'EliRock3t75', 'XxFuryMasterThunderx', 'GoldenPulseChill',
                     'JacksonPowerBuilder2', 'R0cketInfern021', 'JacksonMasterStormy2', 'S0PHIA_Starry53',
                     'LightVen0mDrag0n2019', 'InfernoJelly93', 'Aubr3yV0id89', 'CircuitBuilderDrift', 'StormyBan32014',
                     'WilliamL3g3ndEpic', 'Br00klynnQueenPlayz1', 'EagleCookieAqua2023', 'BearSt0rmPulse_YT',
                     'MaxN3on96', 'Gabriel_Fr0st2004', 'ViperGoldenStormy', 'BlazeMoonCraze202116', 'CookiePandaGolden',
                     'FlashLavaFusion', 'Build3r_Ninja44', 'StealthAceGolden', 'ChillCraft2011YT', 'XxMiaRavenxX26',
                     'TurboShadowStr3am', 'KayleeNinja202446', 'BrooklynnRocketUltra', 'StealthFlashToxic201',
                     'Addis0nFr0stFlame', 'OliviaHyperNight2015', 'Mia_Blad3202314', 'V0rt3xM00nEch0', 'Panda_Cyb3r64',
                     'XxHaze_NovaxX2010', 'PandaViperLion2008', 'EvelynWraithEpic2017', 'GlitchPandaBac0n',
                     'HyperJellyPanda', 'XxEvelynBlastxX2015', 'EllieLavaMaster', 'Om3gaBlaz3202458',
                     'PlayzFusionDrift', 'Night_Wraith48YT', 'PixelLuckyFire2003', 'HawkH3roPix3lat3d',
                     'Her0Rift2010_YT', 'N0ra_Gh0st76', 'Fusion_Master2019', 'LavaHyperOmega', 'Tig3rClaw2008',
                     'SlimeNightEagleYT', 'XxRaven_Infern0xX201', 'J3llyHunt3rPrism', 'Ash3rMin3rCraz3',
                     'Li0nEch0Master', 'VictoriaBlastZoom200', 'STARRY_Knight200737', 'Am3lia_Dragon2023',
                     'PixelatedRider200325', 'BladeLucky200618', 'GigaSky50', 'AlphaViperFlick', 'DanielDancer18',
                     'R0cket_Pulse2002', 'OrbitPixelF0x2022', 'InfernoBaconMax2006', 'Blade_Ven0m2003',
                     'H3ro_Crystal200479', 'DragonInfernoLight', 'Queen_LEGEND2023', 'ScarlettSky_YT',
                     'RiftFusionHunter11', 'XxMoonThund3rxXYT', 'XXMAGIC_GoldenxX2013', 'CrystalUltraPro2005',
                     'StormyFire2020YT', 'XxHenry_AquaxX2005', 'Fusi0nHunter2002', 'Inf3rnoBan3V3nom',
                     'ZoomBlastDark2019', 'Ellie_LUCKY33', 'SavannahNova2004YT', 'Mate0LavaWraith20221',
                     'Ash3rTig3r2021', 'LAYLA_Lava201567', 'Fr0st_V0rtex2011', 'WraithSparkDanc3rYT',
                     'KingBeastInferno', 'LoganRiftPrism', 'GraceChillEcho', 'XxGiga_MaxxX2023', 'XxDanielFuryxX_YT',
                     'XxSlimeArrowxX2019', 'Xx_AbigailQu33nThund', 'LiamStarrySky', 'Pix3lat3dFir347', 'FoxClawSparkly',
                     'GabrielStormyShadow2', 'GoldenZoomByte', 'N0ra_Bane65', 'IsaacClaw58', 'XxOwenS0nicxX14',
                     'Dawn_CRYSTAL200488', 'XxAlexanderBuilderHu', 'BladeFireFury2002', 'LavaHunterSonic2002',
                     'MateoSlimeZero', 'XxLucas_DancerxX46', 'XxWolfLightxX2011', 'Oliv3rL3g3ndPrism',
                     'Xx_MasterGalaxyMysti', 'PandaRogu3202398_YT', 'NightCode34', 'HeroCookieOrbit', 'AcePowerBlock',
                     'WraithPr078', 'CraftGamerEagle_YT', 'XxAidenStormRiftxX', 'GhostRocketByte20099',
                     'SophiaTurbo2024', 'Byt3_B3ast2010', 'HenryWraith201228', 'SebastianCha0s10', 'SamuelPanda201844',
                     'PulseStreamHer0', 'ClawSlimeT0xic', 'TurboPrimalPower2012', 'PrismSlimeBane2009',
                     'XX_NoraBuild3rVort3x', 'XxArrowBytexX2014', 'Inf3rnoNovaOrbit', 'XxZ3r0_Cyb3rxX2018',
                     'Om3gaL3g3ndNinja', 'AbigailSparklyEpic', 'ZeroPrimalEpic36', 'LaylaVoidMoon',
                     'XxCrystal_QueenxX44', 'CrystalKingRaven', 'WyattPixelRogue', 'LegendCodePixel67',
                     'XxPaisley_NightxX27', 'XxJellyOrbitxX42', 'PaisleyNightGamer', 'PixelStealthEpic2024',
                     'WyattPlayzPro', 'XxBrooklynWraithPlay', 'Aurora_Byte201424', 'LionRiftDrift2012',
                     'XxProZoomLionxX', 'XxMoonFrostxX2015', 'BaneOrbit200732', 'Build3rRid3rPlayz',
                     'LightCircuitP0wer_YT', 'William_CRYSTAL50', 'XxGigaZapHunterxX201', 'XxLevi_EchoxX2023',
                     'ArrowClawStar', 'XxIceMaxLuckyxX20', 'StarryCyberMaster201', 'Elijah_VOID77', 'F0xStarryKing2008',
                     'BrooklynnCyberBear20', 'Blad3N0vaVip3r2011', 'BlazeCyberBl0ck', 'S0nicGalaxy2003',
                     'INF3RNO_Fusion2010', 'BaneNinjaLegend2014', 'Brooklyn_Primal2011', 'XxMysticRock3tRiftxX',
                     'Xx_GoldenHunterChase', 'Puls3Mast3rPrism', 'XxMateoSonicxX2002', 'BlazeDuckHer02017',
                     'ShadowFoxSky2021', 'MysticHawkByte', 'BlastOm3ga2009', 'XxAva_S0nicxX2024',
                     'XX_SebastianRiderMys', 'Emma_Saber200621', 'Grac3Ban3B3ar', 'BlockInf3rnoSparkly2', 'OwenChaosYT',
                     'NovaOmega66', 'BrooklynEchoHawk84', 'Hunt3rArrowPix3l', 'Gabri3lSilv3rCircuit', 'LIGHT_V0id2022',
                     'N0ra_Duck2005', 'AvaStarryHunter20143', 'Aqua_Blad357', 'Ow3n_H3ro81', 'Asher_LEGEND63',
                     'XxFusionPandaxX2011', 'Pix3lat3dLion2011', 'FirePrimalSky', 'Zer0AceOmega', 'DriftIce37',
                     'XxEch0GlitchxX2004', 'Aid3nChas3B3ar', 'EthanStormyV3nom2019', 'Pulse_Fox2011',
                     'XXTIG3RGAM3RMOONXX_Y', 'XxTurb0PulseHer0xX', 'VortexDawnBuilder201', 'StreamShadow2014',
                     'Moon_Rogu32008', 'GalaxyC00kie2017', 'StormyRogue27', 'ZaydenBlockJelly', 'ShadowTurbo201942',
                     'BlizzardPrimal25', 'XxDanielSlimexX66', 'XxFusionFlickxX', 'OrbitCodePro_YT', 'Flam3FlashFox2017',
                     'PulseCircuitShad0w20', 'S0phiaZapBlaze', 'BaneHyperGolden_YT', 'Jackson_J3lly2021',
                     'XxGrac3WolfxX10', 'ZoeSaberHunter2023', 'WilliamDuck201240', 'ThunderHyperGlitch',
                     'SebastianUltraLi0n20', 'WraithIceCrystal2008', 'IceLionBlast', 'EpicBl0ckDark',
                     'XxFireVortexNightxX', 'XxRil3yCha0sxX2023', 'Pr0Stream2022', 'Epic_Craft34', 'Bacon_Lucky202237',
                     'WILLOWCHILL200930_YT'}
local RECEIVER_LIST = {'XxPandaGold3nxXYT', 'HazelBaconAce', 'BlastChase2002', 'Phoenix_Sky2015',
                       'Xx_WolfRocketSparkly', 'Ace_Ice64', 'Sophia_Fusion2004YT', 'ThunderDark201156',
                       'VenomOmegaOrbit', 'RILEY_Master48', 'ELLAMASTER17_YT', 'Power_Galaxy78', 'Ril3yBlad3Bacon',
                       'Charl0tteFusi0n2005', 'MiaMagic2013YT', 'CodeHyper21', 'OliviaRavenPower'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชัน monitoring เห็ด
local function MonitorShrooms()
    while true do
        local success, error = pcall(function()
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print(
                    "⚠️ เห็ดเหลือน้อยกว่า 20 กำลังปิดเกม...")
                game:Shutdown()
                return
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดในการเช็คเห็ด: " ..
                     tostring(error))
        end

        wait(5) -- เช็คทุก 5 วินาที
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local coinsValue = LocalPlayer.Data.Coins.Value
        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        local validPartner = FindValidReceiver()
        if validPartner then
            SendTradeRequest(validPartner.Name)
        else
            -- ถ้าไม่มี partner ให้ปลดล็อค main sender
            isSenderMainActive = false
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม monitoring เห็ด
        coroutine.wrap(MonitorShrooms)()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
