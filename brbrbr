-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'MYSTIC_Claw22', 'EthanHyperTurbo2015', 'LunaGalaxy2008YT', 'S0nicSt3alth2021', 'ZaydenFlick68',
                     'Hannah_STREAM23YT', 'RavenFlash92', 'Layla_Drift2005', 'DanielArrowSaber', 'Z00mJellyPulse2008',
                     'Mia_Fusion70', 'Will0wRavenPulse2003', 'LionEchoNova2008', 'Jayd3nDuck36', 'ElijahClaw56',
                     'ZoomZero65', 'Cart3rStarry2019YT', 'HeroPixelPulse', 'Silver_Claw2003', 'GigaSaber201226',
                     'Storm_Builder202373', 'ZeroViper80', 'Drag0nLuckyUltra', 'MysticCrystal81', 'BrooklynnLionZoom',
                     'XxNoraRav3nNovaxX201', 'LiamArrowBlizzard200', 'JulianLightRift2007', 'ChillToxic67',
                     'Vort3xStarryFlash', 'Cooki3ChaosAc3YT', 'WilliamJellyQueen', 'Gam3r_PULS3201756',
                     'SparkBuilderLion2017', 'Aria_Ban32014YT', 'DuckWraith200769', 'XxSparkAquaZeroxX',
                     'BEAST_Bacon2017', 'FrostNightGlitch', 'Lucas_PRO2010YT', 'XxLaylaLionxX2012',
                     'AriaPixelatedGalaxy5', 'AceMasterSky2022', 'Primal_PRISM93', 'Alpha_V0RTEX2019', 'Brooklyn_Max41',
                     'LaylaInfern0202417', 'BlastCraft200988', 'Claw_Ice2002', 'LucasR0gueKnight', 'Skater_Gamer19',
                     'MichaelZap53', 'GoldenChillFire', 'XXF0X_ThunderxX2009', 'KingWolfRaven', 'Zo3DuckZ3ro',
                     'LukeSonicMiner', 'SkaterMasterBac0n', 'XxJacks0nShad0wStrea', 'EvelynBuilder200668',
                     'AvaBlade200870', 'EllaThunderGalaxy201', 'ShadowNinjaDancer', 'Skater_Void200950',
                     'AidenBuilderLucky201', 'H3nry_Blizzard58', 'BearF0x2006', 'Jayd3n_R0ck3tYT', 'BaneClaw66',
                     'MasonMagicH3ro', 'AriaStormy67', 'Fusion_Toxic25', 'GlitchCraftHyp3r21', 'ST0RM_BeastYT',
                     'HazeFoxPhoenixYT', 'BlockNinjaVenom', 'XxRiderLavaxX2024', 'GalaxyZapNinja', 'GamerHeroStream',
                     'AubreyStarryPrimal', 'ZapSkyTiger', 'Cart3rBlockGalaxy', 'NightOmega73', 'H3r0Gam3rKnight',
                     'Panda_Legend2017', 'XxCodeBuilderxX', 'Cart3rThund3rDark200', 'Pix3lFusionB3astYT',
                     'NinjaHyp3r2011', 'IceSpark2011YT', 'DuckSt3althSt0rm', 'ZoomPix3lOm3ga2005', 'AbigailArrow200493',
                     'AidenOrbit201636', 'EthanRogu32012', 'BYT3_Danc3r201983', 'ZOE_Arrow46', 'Cart3r_Lava2023',
                     'SILVER_Galaxy39', 'XxAvaBlazeShadowxX', 'HazelBuilderSky2014', 'StormWraithCraft',
                     'Dark_Shad0w2019', 'SaberGigaEagle200775', 'XxMasonFir3UltraxX', 'ZapNeonSlime', 'OwenMoonIce',
                     'XxSamuelFrostGalaxyx', 'XXPLAYZ_FusionxX2019', 'N3ON_Zoom2013', 'XxZer0DancerxX19',
                     'Pow3rSparkPix3l', 'XxL3g3ndSt3althxX200', 'KnightTiger64', 'N30nEagl3Ech0', 'Oliv3r_Stormy30',
                     'AriaGhost19', 'OwenNightClaw', 'XxZ00mChillxX52', 'MagicZ3roOrbit2010_Y', 'ZoeNight2016YT',
                     'LunaDarkNeon', 'EllieWraithFire2009', 'XxKayleeStarryInfern', 'ChillGam3r84', 'EzraHeroCircuit',
                     'AriaIc3Ac323', 'AceBlaze200289', 'JackMysticDancer', 'LaylaPixelatedNight', 'XxEpicBaconxX21',
                     'CrazeT0xicN0va', 'AlexanderBlast72', 'KayleeCyberWolf', 'JaydenStream25', 'RiderCodeOrbit',
                     'Sparkly_Bane27', 'MICHAEL_Sky25', 'MaxRavenStormy55', 'SparkEagl3201083', 'XxRogueJellyxX22',
                     'Cart3rRiftChill2004', 'LiamFrost94', 'RavenChaseLucky', 'JamesBearDawn2017', 'T0xicZ3r0YT',
                     'MiaEchoHaze_YT', 'LaylaMaxFlash2015', 'R0gueSkyStar', 'AriaPrismHyper2002', 'FurySky2004',
                     'HawkToxic13', 'EzraGigaChas3', 'WilliamBlock67', 'Ne0nR0gueByte200321', 'XxBlastPixelxX2023',
                     'S0PHIA_Ech0201650', 'BrooklynnHero200730', 'RiftViperArrow2020', 'SkyDuck73',
                     'XxFrost_Silv3rxX2019', 'Code_Dancer200699', 'XxEvelynWolfxX2022', 'Block_RIDER2009',
                     'BlockMysticSilver201', 'Dark_STEALTH200418', 'XxMoonGamerRiftxX', 'JamesTurboPlayz',
                     'J3lly_FLAM32015', 'LiamDuckZer02019', 'Ne0nBuilderPanda2004', 'NinjaEagle200639',
                     'Infern0PlayzFlash', 'Cooki3_MIN3R2015', 'AuroraAquaKing', 'WyattPhoenix97', 'P0werEagleKnight',
                     'Hyper_Claw71', 'CraftMinerZero', 'Willow_CYBER41', 'Flick_Blad3', 'Xx_VictoriaHeroMiner',
                     'AceFusionZap', 'OmegaFlick2002', 'Pr0_Queen2013', 'Ph03nix_Ninja2003', 'LaylaChasePrimalYT',
                     'JamesHazeFlick', 'RavenHazeFlame', 'KnightPuls3Magic', 'Cha0sHawkRaven', 'XxRiderViperSonicxX',
                     'SkaterMagicFlame_YT', 'Hawk_V3nom31', 'PulseBlockPixel', 'XxLaylaBladexX29', 'BlockSt3althSky',
                     'Isab3lla_St3alth18', 'MichaelDragonFire86', 'Vip3r_Circuit2007', 'PrimalLuckyTurbo',
                     'XxIsabellaSonicTurbo', 'StreamCyberAlpha73', 'Starry_Hyper78', 'Isab3lla_Z00m26', 'S0nicSky66',
                     'KayleeShadowIce', 'PrismStarryMystic200', 'JaydenPixelated20057', 'EpicSparklyFir3',
                     'XxOliviaBlaz3Vip3rxX', 'Charl0tt3Arr0w2012', 'XxAidenFlameSaberxX1', 'LeviKingHyper',
                     'RiderSlime2005_YT', 'XxLoganDawnPhoenixxX', 'Vict0riaCrazeM00n', 'Bac0nLi0nLava',
                     'QueenVenomCraze2013', 'CyberMiner2006', 'ElijahBuilderLava', 'Playz_Omega24', 'Lion_CIRCUIT2014',
                     'GraysonBuilderFlame5', 'JaxonMagic201928', 'Blast_Blaz32020', 'JacksonGamerBlade',
                     'Flam3MysticNova', 'PlayzDrag0n202090', 'XxEchoTigerxX2011', 'Primal_Starry29', 'AlphaRogue39',
                     'Min3rMast3rBan337', 'XxEli_MoonxX18', 'CrystalRiftZap2019', 'Tig3rStarryShadow13',
                     'PulseGlitchSpark', 'CircuitBac0nHyper', 'XxVictoriaStreamEpic', 'CarterHawkKnight56',
                     'HawkIc3Rav3n66', 'ArrowNightAqua78', 'ElijahRocket202275', 'XxShadowCraftxX2019',
                     'Chlo3Silv3r200833', 'Slime_Shadow202493', 'XxKingFuryxX2005', 'BlastDriftSonic2014',
                     'XxHyper_MAGICXX2020', 'DarkPrismStarry2010', 'GigaStream63', 'XxV0idPrimalxX2013',
                     'Paisl3yTurboBlaz3', 'StormyPrismHyper', 'EllaSaberEpic', 'XxPixelAquaLionxX200', 'MiaBeastAce',
                     'HawkDawnZero2016', 'NeonUltraOmega200256', 'JamesBlade80', 'Pow3rLight51', 'OrbitSparkLava',
                     'DuckRider29', 'XxVictoriaQueenEchox', 'SilverLegendQueen201', 'ElijahGigaN0va',
                     'AddisonVoidToxic2018', 'Brooklyn_Spark2011', 'RiftLucky61', 'JaydenFlashStorm',
                     'XxCarterShad0wMaxxX2', 'IsabellaPr0Slime2012', 'HunterLion2022', 'HAZELNIGHTSTORMY_YT',
                     'V0rtexGiga2013', 'AbigailCodeBane', 'SavannahOm3ga80', 'EliWolfViper', 'BlizzardC0de2008',
                     'HunterNightPlayz2003', 'CircuitSonicGolden20', 'XxCha0s_B3ASTXX2019', 'Br00klynnPlayzSkat3r',
                     'Duck_Blast98', 'ClawTurb0Night2021YT', 'BlockSonicFury', 'Tig3rMagicP0w3r', 'Al3xand3rV3n0mChill',
                     'VenomZoomBacon', 'DawnClawChill', 'XxMiaShadowxX2017', 'Storm_Panda201740', 'Ech0AceBear95',
                     'Luna_SONIC2023', 'ElijahPrismChaos', 'SparklyCircuitToxic', 'XxSonicAc3xX50', 'Elijah_Her02024',
                     'Night_Neon65', 'Paisl3yStarMast3r', 'FlameTurboAqua', 'FLAM3_Z3ro200269', 'FlickToxic2004',
                     'GigaSkater65', 'EpicGh0stHer090', 'XxOrbitGamerBuilderx', 'ZeroDuckJelly', 'Jelly_Pulse29',
                     'Xx_CharlotteNeonStea', 'GalaxyCha0sThunder20', 'NovaSparklyBane', 'Cart3rCooki370', 'Ne0nPanda86',
                     'CarterRocket63', 'AbigailSparkSky52', 'LegendOrbitMax', 'N0ahSlimeN0va', 'JacksonQueenBane2009',
                     'Aiden_Ech049', 'GigaRavenIce_YT', 'S3bastianHyp3r82', 'L3vi_Toxic37', 'XxEv3lynLavaH3roxX',
                     'XxFlam3EpicxX67', 'Puls3GalaxyCod3', 'Harper_Echo99', 'Bl0ckPrimalZap', 'PrismPandaIce90',
                     'WyattDawnChaos2011', 'Oliv3rNova_YT', 'KnightPulse201127YT', 'NoraAlphaStormy',
                     'Kaylee_Chase202158', 'PixelRaven202247', 'NeonPlayz202068', 'XxNightBlazeThunderx',
                     'FlameOmegaZero2005', 'Shadow_Zoom99', 'Scarl3ttFury', 'LunaStarStarry', 'FlickSkater2005',
                     'KayleeBaconLucky', 'JaydenZer0Raven2003', 'DawnPixel70', 'NinjaGoldenEcho2009',
                     'KayleeSparklyUltra', 'XxDawn_PixelxX87', 'CookieHawkRocket2010', 'Ellie_NOVA201050',
                     'XxJaydenHeroCraftxX', 'EliBlad3Night2011', 'XxChillBl0ckKingxX', 'Chase_HERO15', 'Ban3_Turbo2021',
                     'XxRiderBlastOmegaxX2', 'XxPhoenixEchoMagicxX', 'LoganRoguePixel24', 'Alexander_Bane96',
                     'Zo3Alpha84', 'MysticTurbo82', 'AbigailMoon31', 'XxDriftLightxX2012', 'XxByteBlizzardHer0xX',
                     'Gabri3lRock3t2022', 'G0ldenCha0s202498', 'Jack_Galaxy47', 'StarryRiftBlock', 'PrimalSab3rSlim311',
                     'PixelBlock77YT', 'BlastRiftDrift', 'CookieChase201189', 'WyattClawHunter', 'ViperOrbitS0nic',
                     'SparklyPandaCraze', 'DragonBearThunder', 'Addison_Flash2003', 'Flam3Dawn2005',
                     'WilliamSky2019_YT', 'XxBlastChillGlitchxX', 'PandaLionInferno', 'GlitchVen0m2024',
                     'HANNAHRIFT2020_YT', 'Zayd3nFusion2005', 'Rift_Queen76', 'FusionFoxStreamYT', 'PaisleyHaze23',
                     'StealthNovaMax2011', 'Elli3Inf3rnoSlim3201', 'MichaelDragonNinja', 'ZERO_Orbit84',
                     'Blizzard_Gold3n35', 'Br00klynn_Turb0', 'OmegaVoid84', 'MagicZeroWolf2021', 'EchoIc3Dawn_YT',
                     'Cart3rNinjaDrift', 'Ph03nix_Rav3n2011', 'ThunderGamerShadow94', 'SkyDuckClaw2023', 'Noah_Rid3r83',
                     'Rogu3_Dark2014', 'XxMiaCircuitxX2006', 'Fusi0nStar2005', 'XxFoxBlazeFlashxX', 'EagleZapInferno17',
                     'VictoriaIceOmega2012', 'HazeWraithMiner', 'VictoriaKnightOm3ga', 'NoahToxic37', 'JellyBladeHer0',
                     'PandaZoomChaos2009', 'HenryDawn77', 'Will0wDanc3r2008', 'Flash_Block2008', 'XxJamesDarkChillxX',
                     'ChillCyberFoxYT', 'SonicDragonQueen2011', 'Hunt3rNova57', 'WyattThunderPlayz95',
                     'MichaelFuryPrism2006', 'LoganSlimeCookie', 'GalaxyRocket201044', 'V3nomVort3xSt3alth',
                     'ClawNovaCode2009', 'OmegaVortex2008', 'LunaAlphaHunter', 'WraithV0rtexOrbit', 'GalaxyBlad32003',
                     'XxN0ahMysticV0rt3xxX', 'ThunderGhost201613', 'PhoenixUltraAlpha200', 'XxAl3xand3rNightDuck',
                     'CrystalCrazeFrost200', 'ElijahCrystalVenom20', 'Infern0Magic2022', 'Lion_Skater2012',
                     'Xx_BlastPrimalSilv3r', 'FrostDawnRogue', 'Fox_Fusion10', 'Aiden_Omega2002',
                     'TurboChaseRocket2003', 'RileyMystic76', 'Fr0stSaber2007', 'Shad0wC0d32015',
                     'XxHunter_RiderxX2003', 'EllaStarry200680', 'Mat30L3g3ndGalaxy', 'RiftVenom92YT',
                     'XxRift_FlickxX2012', 'Oliver_Chaos60', 'VortexBuilderSkater6', 'Jaxon_ACE42', 'OrbitPandaStream',
                     'ChillMysticRaven', 'EllieR0cket54', 'ClawHaze45', 'LucasMysticFox', 'F0xStream11',
                     'XxLoganFirexX2010', 'XxZapGam3rxX65', 'Pulse_VORTEX2002YT', 'RileyDuck201946',
                     'XxSab3r_CLAWXX2012', 'Xx_CrystalCircuitLig', 'JamesSt0rmy24YT', 'MichaelBlizzardArrow',
                     'QueenBane33', 'Jack_Star201421', 'AlphaFlashDragon', 'Will0wJellyR0cket200', 'F0xFire40',
                     'MateoCircuitStarry80', 'NoraGigaKing2006', 'Star_Eagle28', 'Ac3_Ech040', 'Fir3GigaPuls3',
                     'EllaFlash20', 'BaneChaosEagle', 'MaxPandaLion', 'ARIA_Stormy201677', 'GoldenIceGalaxy2007',
                     'ChillCrystalEcho2021', 'Str3amByt3C00ki3', 'Xx_ChasePixelatedEpi', 'XxHunterInfern0xX202',
                     'LightBaneChaos', 'Jayd3n_Zap2019', 'PlayzStarryAlpha2004', 'Blaz3_Crystal202476',
                     'XxWyattNovaxX2016', 'Chloe_Raven27', 'Flam3_Alpha87', 'HarperHunterChase201',
                     'Gold3nSparkTurbo2021', 'AvaMin3r67', 'Xx_PhoenixTurboOrbit', 'LightGalaxy15',
                     'XxGabrielThunderxX74', 'CraftH3ro76', 'XxOrbit_BuilderxX82', 'StarryCodeClaw2019',
                     'StreamDancerFlash201', 'XxMagic_DriftxX2005', 'Fusion_Ban3YT', 'IceGalaxyN0va',
                     'XxUltra_B3ARXX2004', 'Pr0_V0ID31', 'SophiaDancerPixel', 'Wolf_Cookie99', 'Slim3Hyp3rPlayz2007',
                     'XxOliverDriftxX59_YT', 'StreamStarryS0nic', 'HarperStormy78', 'Jacks0nN0vaYT', 'ArrowMasterVoid',
                     'N0ahDancerMax', 'HAZEL_Sparkly2017', 'LunaGamer2015_YT', 'EchoPrimal202323', 'GhostFire200326',
                     'GracePandaEagle', 'POW3R_Storm2002YT', 'EagleFlame39', 'XxCyberMagicDarkxX20', 'BrooklynBlaze11',
                     'Str3amOm3gaGold3n', 'OrbitSonicBlizzardYT', 'Blizzard_Giga30', 'ElliePrism44',
                     'UltraBlizzardGhost', 'HenrySlimeHer02007', 'AceSparklySkaterYT', 'HawkPrismBan3',
                     'Z00mPix3lat3d2021', 'C0deShad0wV0id202383', 'DancerPhoenix28', 'BlockChill23',
                     'XxAlexander_V0idxX38', 'JaxonBuild3rWraith20', 'N0VA_Circuit61', 'Xx_Str3amKnightPuls3',
                     'Jayd3n_Ac32020', 'CLAWCRYSTAL95_YT', 'Paisl3y_Alpha86', 'KnightRiderStormy', 'XxLuckyChaosxX2020',
                     'InfernoStarry61', 'NovaHawk200287', 'Hazel_Silver45', 'CRYSTAL_Rocket2009', 'MinerFlashBlast_YT',
                     'Ril3yOrbit202414', 'BaneQueenEagle_YT', 'JulianPow3r35', 'Xx_STREAMBUILDERSONI',
                     'MasterCraftCookie', 'BUILD3R_Pro201170', 'ClawBlastChase', 'XxEv3lynBan3xX54',
                     'PandaBladeGiga2020', 'Craz3MagicSky2004', 'Mat3o_Dark2024', 'CraftCod3Zoom', 'Cod3_Star2003',
                     'FlameUltraSparkly85', 'Xx_BrooklynCookieFox', 'DawnSparklyOrbit', 'MaxHazePulse97',
                     'Blast_Giga80', 'XxQueen_BaconxX2010', 'SkaterVortex201590', 'Dani3lSparklyL3g3nd',
                     'AbigailV0idHunt3r_YT', 'WolfZoomLegend', 'Aid3nBan3Craft', 'LaylaWraith52', 'LoganHyp3r32',
                     'C0deMysticEagle', 'RiftC00kieViper', 'Isabella_P0wer2003', 'AmeliaMysticSkater20',
                     'DuckRiftAce87', 'Gam3rLuckyDawn2003', 'MaxMysticMin3r2010', 'DragonFlame200873',
                     'Cooki3Craz3Rift', 'Gabriel_Star200238', 'XxHenryTurboAcexX21', 'FlashGlitchCrystal',
                     'Br00klynnR0gueEpic', 'CharlotteGamerBlade', 'AidenRocketMagic', 'StealthBlizzard20146',
                     'XxShadowAquaDawnxX', 'DancerM00n52', 'PandaBytePower', 'Jacks0nCraze74', 'PRISM_Blad32018',
                     'Sebastian_Hawk98', 'XxRogueBlizzardSilve', 'HenryQueen200367', 'LuckyPulseNight',
                     'Star_Fox200853', 'VictoriaIc3Sab3r54', 'EvelynEpicBeast11', 'Oliver_Cookie2011YT',
                     'CraftR0cket200537', 'XX_Hyp3rMysticCooki3', 'CodeSparkStream', 'MysticSonicBeast',
                     'Ne0nShad0wLight31', 'LunaHeroPrimal', 'XxKayleeC0dexX_YT', 'Liam_Rider70', 'RileyInferno40',
                     'Epic_Spark58', 'NoahSonicN3on', 'ICELIGHTPHOENIX_YT', 'LoganNightNeon', 'DragonB3arSkat3r_YT',
                     'ZOOM_Skat3r2007', 'PaisleyIce67', 'GamerStarVortex', 'JaxonStealthStorm201', 'GalaxyRogue29',
                     'OliviaVoidLight', 'FlamePulse45_YT', 'XxAbigailGamerRavenx', 'XxPulseDarkHeroxX200',
                     'Cha0sZer0Primal', 'Amelia_Stormy2016', 'SilverNinja201037', 'VORT3X_Build3r48',
                     'XxW0lfMasterSlimexX', 'Ac3GalaxyGiga2007', 'FusionSparklyFrost', 'PixelatedTurboCode',
                     'Xx_StormyStealthFlic', 'BlastArrowViper23', 'WolfBlockPixel2024', 'XxCircuitMoonxXYT',
                     'PrismMagic30', 'XxEthanNovaxX2018', 'XxHer0_ORBITXX2024', 'Cooki3Galaxy73', 'Sab3rDragonZoom',
                     'PIXELATEDNINJA2010_Y', 'P0werPixelatedSt0rm8', 'AsherPrimalSkater200', 'WraithGamer47',
                     'OliviaLegendGolden', 'XxN30nCircuitSkat3rx', 'Mystic_Dark2016', 'Cyb3rTig3rFoxYT',
                     'XxAl3xand3r_H3r0xX20', 'XxAce_FirexX2011', 'HunterVenomStormy30', 'ScarlettPixelHawk',
                     'XxLiam_ChillxX13', 'PlayzMoon34', 'RocketViperOrbit', 'Xx_RocketStormyGamer', 'Luk3Craz3Turbo',
                     'Slim3Pix3lDark_YT', 'Xx_HarperHer0Builder', 'XxStreamRocketxX2020', 'Moon_Viper10',
                     'XxTigerDawnxX82', 'Xx_AubreyKnightPhoen', 'JamesByteGlitch2020', 'BaneNight73', 'CodeIce95',
                     'SonicBlockWolf71_YT', 'AlphaEaglePixelated', 'EzraVoidGolden69', 'EllaHunt3rChaos',
                     'Grays0nPrimalC0de201', 'Addis0n_Blaze202359Y', 'PhoenixPixelOmega', 'FrostSonicFlash',
                     'MYSTIC_Nova73', 'NightSt0rmyFr0st', 'MysticSilver52', 'Pixelated_Chill20233',
                     'Xx_OrbitPh0enixBlaze', 'SebastianPanda201392', 'XxBeast_RavenxX2005', 'DanielEagleStar2023',
                     'XxGamerLightxX2016', 'R0gu3J3llyT0xic', 'EchoDawnJellyYT', 'XxVoidViperPixelxX93',
                     'St0rmySpark2020', 'ProVip3r44', 'EthanW0lfBlaze', 'MateoZap68', 'Code_Slime69',
                     'SILVERFOX2009_YT', 'Ethan_Crystal2013', 'XxCyb3rRiftBlizzardx', 'LeviVen0mHyper',
                     'Aubrey_Ultra2005YT', 'HazeCookieVoid', 'Arrow_Glitch84', 'EzraBlockStream', 'XxWolfDawnxX39',
                     'XxSt0rmP0w3rxX2011', 'Chloe_Panda57', 'KnightB3arPanda', 'WilliamR0cketPanda', 'GraceFireHawk',
                     'ThunderBlastChaos', 'XxSaberOrbitxX17', 'Cyb3r_Orbit96', 'TigerCyberRider', 'XxMaxBuilderMagicxX',
                     'SamuelLionNova', 'ZoeHyper2022_YT', 'XxMaxBlastxX2023', 'Julian_Bane202144',
                     'MasterBanePlayz2008', 'EllieInfernoRift58', 'LegendHeroPixelated', 'AlphaHaze39',
                     'JackVenomSlime2006', 'XxPrimalFlashxX2007', 'Thund3rFusionLion202', 'FrostKing201745',
                     'XxZ0eQueenxX2008', 'XxHunterShadowKingxX', 'Stream_WOLF2017YT', 'XxAbigailDawnxX2003',
                     'Addis0nHunterPrism20', 'Ava_Omega200244', 'DriftP0werPrimal', 'JackSparklyChaseYT',
                     'Mat3oGam3rSt3alth', 'Dark_Skater33', 'Light_Primal200710', 'WraithM00nBane', 'GlitchBane22',
                     'GamerCircuitStormy25', 'KayleeSky202027', 'Thund3rBlockCraft80', 'Isabella_HYPER2019',
                     'Mateo_Thunder72', 'Ace_PIXELATED26', 'StarryGigaLava2008', 'Xx_Gabri3lFlashCircu',
                     'BuilderPixelated85', 'MasterDawnEpic2009', 'CrazeBlast201153', 'XxMaster_VoidxX20116',
                     'XxJackHeroxX2008', 'NoahStealthPixelated', 'Aur0raGh0stByte', 'BearPixelRogue2004',
                     'Gabriel_Pulse22', 'EpicCod361', 'Eagl3BlastCha0s', 'SilverTurboSparkly', 'Xx_RIL3YQU33NBUILD3R',
                     'GlitchSlim3Build3r20', 'LiamEagleFusion_YT', 'Charl0tte_Hyper2003', 'XxH3roQu33nNightxX',
                     'MasterZoomChase2012', 'HannahDuckThunder', 'XxViper_HyperxX2007', 'XxEllaHeroCircuitxX',
                     'HawkN0vaBlastYT', 'WyattGhostEcho2005_Y', 'DragonL3g3nd99', 'XxEllieWraithUltraxX',
                     'AmeliaThunderLegend5', 'StormyPrismRift2011', 'XxNightQu33nxX2018', 'Stream_Rocket2015',
                     'AsherPandaStarry21', 'PrismSab3rVort3x', 'IceCookie201557', 'XxMast3rArrowxX2008',
                     'L0GAN_R0ck3t2005YT', 'HeroOmega2005_YT', 'DancerSky83', 'Jayd3nLuckySilv3r',
                     'MateoChillFusion2013', 'Scarl3ttBl0ck2010', 'VenomAce2018YT', 'ALEXANDER_Duck201362',
                     'XxEzraSilverxX47', 'IceRocketGhost', 'MiaFlameChase64', 'William_GALAXY2022',
                     'ChaseHer0Pixelated', 'Mat3oCyb3rPix3lat3d', 'Xx_EagleInfernoGalax', 'XxLunaPrismEpicxX200',
                     'Ash3rStarryN3on2023', 'ElijahAce202429', 'Z00mMax2022', 'XxLunaBac0nxX2021', 'GigaKnightHaze',
                     'Vict0ria_Miner40', 'LUNA_Blast66', 'Xx_G0ldenSparklyMagi', 'JulianMoonRocket2011',
                     'Qu33nRock3t13', 'FuryIce20', 'XxCyberShadowMaxxX32', 'MaxEpicLi0n202490', 'Xx_GOLDENBUILDERDAWN',
                     'Qu33nRiftSpark', 'XxSamuelZapxX70', 'XxOmega_SparklyxXYT', 'Oliv3r_IC32022', 'Vict0riaClawLava',
                     'AbigailHeroGolden53', 'XxNeonThunderKnightx', 'AsherCrazeBlade20167', 'LAYLA_Master91',
                     'XxRiftDawnTurboxX', 'Fir3_Prism2020', 'HazeZoomViper', 'BuilderHazeMax', 'XxPandaTigerxX2012',
                     'PixelIcePrism201993', 'WillowLuckyGlitch', 'EagleTigerFox', 'UltraBl0ck2023_YT',
                     'XxChloeEchoChillxX', 'LightFuryVoid2010', 'BuilderHunterSt0rm', 'Chas3_PHO3NIX2019',
                     'XxPrismSkat3rM00nxX', 'ZapChaos200345', 'DuckSparklyByte', 'XxDragonLightxX2022',
                     'RiftTurboVoid98', 'RiftBuilderSpark2023', 'Oliver_HYPER30', 'LaylaSlime20', 'SparkPixelZoom72',
                     'Fusi0nSt0rm89', 'ChloeBlizzardKing', 'PaisleyAquaOrbit', 'Power_Glitch69', 'Xx_KAYLEEDRAGONPOWER',
                     'TurboSparklyKing46', 'XxIsabella_ToxicxX58', 'Grace_Storm2012', 'JackDrift24', 'LaylaSkyChas3',
                     'XxEagl3PandaxX200569', 'JaydenOrbitKnight', 'UltraPixelatedLion', 'SparkPlayzPanda20',
                     'Moon_Panda2018YT', 'Micha3l_Magic88', 'SavannahLegend98', 'R0gu3Pix3l2017', 'CircuitToxic40',
                     'HunterChillTurbo2017', 'Zo3_Dark2013', 'FusionPixelInferno', 'XxV0idT0xicLegendxX', 'V0idT0xic44',
                     'Emma_Mast3r2005', 'N0ahBlaz3Vip3r', 'Bac0nGamer55', 'Dragon_LAVA44', 'XxDragonPlayzBuilder',
                     'PlayzS0nicFlame2004', 'GALAXY_Vortex2011', 'Qu33nProBuild3r', 'XxSamuelDawnxX2016',
                     'FR0STFLAM3SKAT3R_YT', 'StormyStarRiftYT', 'Aur0raStream51', 'BlockPowerFlash', 'AvaFireDark',
                     'BlizzardUltraMagic99', 'H3roRid3rSab3r', 'Aur0raPandaGh0st', 'ChillPh0enixIce2012',
                     'WyattDarkL3g3nd52', 'EpicPixelatedPrism20', 'BrooklynnZeroDawn200', 'C00ki3_Alpha2008',
                     'AubreyStormyChase202', 'ECHO_Dawn87', 'XxTurb0Bl0ckxX2019', 'HarperHyperWraith200',
                     'Pixel_Z00M2010', 'JAYD3N_Giga47', 'HARPER_Rogue2008', 'MysticR0ck3t2012', 'Bl0ckStealth2022',
                     'ChillTurboCircuit', 'XxEzraSilverHeroxX', 'Chlo3Chas368', 'WolfPrismBeast', 'MATEO_Aqua201853',
                     'PrimalSt0rmPanda2005', 'XxBearMasterxX2003', 'Drift_ALPHA202181', 'NinjaEagleBane',
                     'Pix3lSparklyFox', 'LightMaxMaster2011', 'UltraDriftShadow', 'DuckR0gue2020', 'SAMU3L_Chas331',
                     'RocketDark2020YT', 'Jackson_Shadow2017', 'CircuitToxic87', 'F0xEagle2016YT', 'XxMaxCookieBaconxX',
                     'DriftCyberCrystal', 'HatereraTere', 'GoromateNtes', 'AnomanteSima', 'YiiduieSonde',
                     'RededistiShe', 'AnomyomiRist', 'EsofesteRofo', 'OromyiuNdeno', 'EdistiseSter', 'ichisorsoTic',
                     'CandendiTade', 'OmengoraNont', 'iiesendiNdor', 'SitaseaTicar', 'EntofontiThi', 'EndofouThent',
                     'UtititiThang', 'insedisouThi', 'OfineraThith', 'UndoforseRsi', 'izeangioRoct', 'TeshofeNtera',
                     'FusongaRnean', 'AseresaNeiya', 'OrsororaTone', 'EngontiStist', 'EdouseneRone', 'ParathouTeng',
                     'TengisiNding', 'ErishedsiShi', 'DatatondiDan', 'iidonowiSesh', 'OraseseDofis', 'OngereaSofen',
                     'HaterintoNgu', 'SonteseSonto', 'Herereraiian', 'ithenteNgout', 'HistimeRithi', 'AroutheRnond',
                     'UronengaRend', 'ArsouseNgedr', 'OmyeiioMyong', 'AtofineRoune', 'RitoforiDour', 'ishearoRasat',
                     'imimoriThand', 'CanearoRisan', 'HouseseDesta', 'NoriredoNtui', 'AthoutiCerin', 'RedorintuSti',
                     'HanofouRieme', 'UtourouSteda', 'OzzongaTendi', 'NearoutraSea', 'OspusetaDofe', 'Towiomaiiofe',
                     'ErorenoRered', 'TatanouSesof', 'UngedineRine', 'TasinengaTed', 'ErentoriTend', 'ErenduraRest',
                     'UiieatouTedi', 'AthiofeSaiai', 'EroutisaSent', 'iiissesiTeie', 'EditedeDoure', 'OngarsiSsine',
                     'isimoriMesit', 'AtoungaRinde', 'SandonteDont', 'ErededeNtere', 'YousatheNoma', 'TeditengiNgi',
                     'UsatentoRast', 'RonendiSener', 'inguserouRou', 'UtreaiiiNdea', 'SorousceRine', 'RathashaRour',
                     'HoferontiNda', 'HartotiRoung', 'RasotertaDim', 'EsatenteNour', 'EntengeSendo', 'ErarithouRan',
                     'UnesistoFere', 'NinongeSowar', 'FofithiSerof', 'BuierouRingo', 'inoweroNtend', 'SedouriTerou',
                     'iimeseaNdiro', 'RindingeNdas', 'RatesesteSin', 'ArsidatheNde', 'Yidistaienof', 'NutonofoNien',
                     'EsenereShing', 'ErestonsiNsi', 'itintoraRene', 'EnederoNdedi', 'EredofriThin', 'YutindaTeare',
                     'AndineneDedo', 'SengiorioRou', 'OnomeseeNgas', 'EndondeDitou', 'RathisiTheng', 'idarsofreRed',
                     'OvousondeDan', 'HathofeSting', 'NutoredoNdis', 'NereritouNed', 'ZondengeSint', 'UroneneRiser',
                     'HerengeDoned', 'SunounteeNdi', 'HareshaStene', 'Blad3ShadowMin3r'}
local RECEIVER_LIST = {'Cyber_Drift2008', 'ProLegendMoon13', 'LuckyInfernoStealth', 'HeroBlockCircuit2024',
                       'LuckyV3nomPrism2018', 'Pulse_BANE91', 'HazeBladeSpark', 'XxLiamV0idThund3rxX',
                       'Xx_Thund3rRav3nBlad3', 'AlexanderZapStarry', 'QueenDawnDrift', 'PhoenixBlizzardGolde',
                       'VandedeTatar', 'DesoweroFrar', 'igroncaNcime', 'EssondeSengo', 'SparklyInfernoRift',
                       'Al3xand3rChas331', 'XxPandaStormyxX2015', 'BlockStr3am2002', 'LaylaShad0wKnight',
                       'AddisonGamerSpark', 'Xx_ElijahStarryCryst', 'GraysonMaxChase', 'XxPanda_GlitchxX74',
                       'Haz3lEpicFusion', 'Jacks0nHawkQu33n74', 'AriaRock3t83', 'JaxonSlimeSpark', 'MaxEchoLava',
                       'MoonInfernoOrbit2014', 'SophiaRid3r11', 'LavaStormRogue', 'XxNinjaQueenHer0xX20',
                       'MasonSparkTurbo40', 'JacksonEagl3Arrow201', 'KnightSparklyAqua', 'RileyRogue201923',
                       'BeastNovaPixel2018', 'AsherClawCyber', 'AidenInferno2021YT', 'MiaTig3r27', 'Jacks0nEagle75',
                       'XxMichael_DarkxX68', 'HannahRocketDuck2006', 'SamuelLion200652', 'B3ar_Min3r2016',
                       'CraftRift2007YT', 'OrbitRogu3Flam3', 'InfernoGalaxy2007_YT', 'FoxPixelKing35',
                       'Rogu3ToxicTig3r2018', 'DragonFrostSlime', 'G0ldenBlast2020'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local coinsValue = LocalPlayer.Data.Coins.Value
        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
        if not requestsFrame then
            return false
        end

        for _, child in pairs(requestsFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        local validPartner = FindValidReceiver()
        if validPartner then
            SendTradeRequest(validPartner.Name)
        else
            -- ถ้าไม่มี partner ให้ปลดล็อค main sender
            isSenderMainActive = false
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
