-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'PixelRiderVenom2019', 'XxMysticPandaxX95', 'N0vaS0nic14', 'CraftMoonVortex',
                     'Harp3rPix3lat3dCraft', 'ZoomNovaBacon2007', 'NoahNeon29', 'XxInfern0_BuilderxX7', 'StormOrbit77',
                     'BearStealth39', 'Oliv3rDuckToxic', 'LaylaHer0Blizzard', 'GraceVortexSlimeYT',
                     'TurboFlashRogue2018', 'GraysonDragonEpic200', 'T0xicSparkly48', 'Isabella_Crystal41',
                     'RiftPlayz201920', 'AubreySparkly42', 'StealthOmegaPanda201', 'Ac3DawnBuild3r',
                     'GoldenRavenKnightYT', 'SamuelShadow97', 'StarryVoidGalaxy56', 'LiamDriftCode67', 'Harp3rShadow97',
                     'XxNinjaT0xicPlayzxX2', 'L3viDawnOm3ga', 'MasonPrimalDragon', 'Master_Byte2002', 'KayleeLionCraft',
                     'ShadowZapOmega', 'EllieMagic43', 'Fusi0nStarDawn', 'Crystal_Blade81', 'XxFuryAlphaGlitchxX',
                     'MaxBl0ck97', 'OwenInfern0Ven0m', 'MIABLIZZARD93_YT', 'Gh0stM00n39', 'NoraGamer201135',
                     'Aubr3yZ3ro2020', 'Xx_AriaGlitchPixelat', 'KingIceStarry', 'Pr0OrbitTurb0', 'King_Craze2002',
                     'Fusi0nAceBuilder', 'ChaosInfernoVenom', 'FlameSt0rmyV0rtex', 'HeroHawkDrift',
                     'CrystalNinja201178', 'XxNovaThunderxX2017', 'Lava_St0rmy2012', 'Bac0nLavaPr0',
                     'ThunderOmegaSilver', 'Dancer_Light52', 'XxFr0stKnightxX2002', 'VictoriaVoid66',
                     'XxWolfRiftRocketxX20', 'XxLightFlickxX2021', 'OliverVoidZero45', 'XXCYBER_V0rtexxX2005',
                     'Duck_W0lf2008', 'HyperDancerChase85', 'CrystalEagl3Light', 'XxHarperStreamPandax',
                     'CyberFlash200827', 'XxAvaPix3lIc3xX', 'JulianNeonDark_YT', 'L3g3nd_Pix3l2004YT',
                     'CookieSilver201881', 'BrooklynInf3rnoL3g3n', 'Al3xand3rMagic89', 'ViperFr0st39', 'Raven_Silver69',
                     'JacksonSkaterAce2003', 'AriaBearHunter41', 'Gold3n_Pro2014', 'Spark_VEN0M39', 'MoonSpark49',
                     'StormMasterFlame2008', 'VenomAquaMagic', 'LiamBlizzard201332YT', 'Block_Eagle2015',
                     'Circuit_COOKIE32', 'Z3roDark36', 'FireHunterPrism', 'HazelByteNe0n', 'ZapAce34YT',
                     'ScarlettGamerRaven', 'Xx_WILLIAML3G3NDSTAR', 'Xx_L3g3ndBlockMast3r', 'MoonGhostCod32022',
                     'EchoPro87', 'PlayzEchoNinja', 'ZoeTigerDawn', 'Xx_GraysonLightBlade', 'BlazePixel201065',
                     'HazeNight201557', 'XxMagicPix3lxX21', 'LavaJellyCrystalYT', 'EpicHazePrism',
                     'XxRiftDragonGhostxX', 'EchoNeonNight51', 'Giga_Hyper2015', 'XxEzraMaxxX53', 'FuryStarZer0',
                     'Oliver_Pixelated10', 'PixelNightC0de', 'Hero_Rift2020YT', 'Daniel_Stealth15', 'P0werChill26',
                     'XxCooki3Qu33nStr3amx', 'OliverStream91', 'MysticBlockFlick', 'EchoChill19', 'StormTigerBear',
                     'XxVictoriaFuryCrysta', 'XxFrost_PowerxX2022', 'Ril3ySlim329', 'FlickWraithDragon',
                     'Inf3rn0_Build3r20055', 'SABER_Circuit28', 'Aid3nDuck58', 'OliviaCyberThunder',
                     'XxV3n0mFusi0nxX2003', 'DragonNeonGolden79', 'NinjaEpicFlick', 'V0rtexFlameSilver',
                     'ZoomCod3Turbo_YT', 'JulianRock3t37', 'T0xic_Panda2022', 'DawnBlastBear76', 'TurboWraithFury',
                     'FrostBaneVenom2018', 'LukeCyberSlime', 'FlickBane200961', 'FireSaberFr0st', 'Oliv3rWolf2018YT',
                     'Power_Blizzard21', 'WILLIAM_St0rm201835', 'EagleStealthHaze', 'SkyGalaxyEcho', 'FlickIceNeon',
                     'GabrielM00nBlade', 'M00nCyber200790', 'XxLegendNovaxX200245', 'EzraArr0wCircuit',
                     'XxLunaStealthCookiex', 'ZapInfern0Fire', 'EliFury75', 'BuilderSparklyRiderY', 'Aid3nBlizzard59',
                     'CodeCrystal201967', 'Ethan_Arrow76', 'XxByteGhostNeonxX', 'XxMicha3lM00nDarkxX2',
                     'XXBEAR_RiftxX200242', 'V3nomGlitchStr3am', 'BrooklynVoid58', 'Sab3rCooki356', 'MiaEagleBlast',
                     'SavannahSt3althHunt3', 'SparkR0cket2016', 'XX_GlitchSilverSpark', 'ViperLegendDark',
                     'XxEv3lynGold3nSparkl', 'N0vaThund3r201888', 'EllieNinjaThunder', 'PandaAquaGh0st_YT',
                     'DriftNinja202325', 'GamerPlayzCyber54', 'N0va_Her02019', 'LuckyVoid201947', 'EzraMysticSky2021',
                     'MichaelPowerPixel201', 'Chill_Rogue81', 'PlayzNinjaChill', 'LavaFlashFrost2005',
                     'Samu3lDragonZoom', 'XxJellyDancerxX96', 'TOXIC_L3g3nd2008', 'BrooklynnSlime19', 'ZoomCod3Z3ro',
                     'DarkPuls3Gold3n', 'ZAP_Builder201412', 'DuckPrismHero2012', 'CraftFlame27', 'DarkGamerAce2014YT',
                     'Str3amSkat3rZoom77', 'Xx_PaisleyOmegaPanda', 'Owen_Eagle69', 'Build3rHyp3r201949',
                     'AubreyPrism46', 'XxCraftBac0nxX2016', 'XxR0cketBlastxX2020', 'M00nInfern023', 'LiamEcho78',
                     'Ac3Hyp3rShadow', 'BrooklynPixelStream2', 'XxHarperHawkxX201217', 'XxSparklyPixelBladex',
                     'Dark_PRISM201434', 'F0xR0gu32014', 'P0werPixelPlayz55', 'Fir3_Vort3x66', 'XxIceBaconxX2012',
                     'LoganStarryPrimal', 'ArrowToxic53', 'JamesToxicRift', 'Bl0ckSlime34', 'Neon_Cookie200231',
                     'XxSavannah_NINJAXX94', 'EmmaBlazeDark2023', 'EpicGold3n2024', 'JackStreamHero2018', 'L3viUltra31',
                     'CarterLionStarry16', 'Flam3_L3g3nd61', 'XX_GraceTurboInferno', 'Fusion_Ninja10',
                     'XxAddisonBanexX20039', 'StreamSpark89', 'XxSt0rmFuryxX84', 'V0id_N30n2012', 'XxBladeGamerV0idxX',
                     'FlickFlam32019', 'MichaelC0de46', 'StarBearGamer14', 'XxOrbitPandaNinjaxX', 'EpicFuryV0id',
                     'N30nAqua2008', 'NightMoonZap2005', 'XxZo3_GalaxyxX45', 'Ash3rFusion2015', 'CookieInferno2007YT',
                     'Harp3rH3roPix3l', 'GhostFuryAlpha', 'WolfQueen2011YT', 'ZaydenFusionSkater20', 'RogueAqua97',
                     'XxLuckyHyperWraithxX', 'WraithDarkSonic2010', 'XxFr0stBlastHawkxX', 'Gh0stRiftC0d3',
                     'XxRileyCircuitDragon', 'XxScarl3ttToxicDanc3', 'XxBlizzardDarkxX2009', 'XxSavannah_RiderxX39',
                     'CircuitMiner31', 'Ash3r_Tig3r2022', 'GigaFlick18', 'GhostDarkBuild3r', 'Samu3lPro2012',
                     'MoonPix3lat3dL3g3nd5', 'F0xRaven66', 'SavannahWraithZoom20', 'BlastSilverSonic2005',
                     'StormyZ3roChas3', 'Rav3nC0d32021', 'EllieCraze82', 'Om3gaPuls3Ech02015', 'James_SPARKLY91',
                     'ProNinja69YT', 'JulianOrbitAc32016', 'EchoInfernoBacon2005', 'ZeroHaze200276', 'Rogue_Light86',
                     'NightRavenHaze', 'Eagle_Crystal202133', 'XxBrooklyn_ViperxX95', 'ProShadowStarry',
                     'Samu3lCooki343', 'STARRY_Eagle2006', 'XxVenom_MYSTICXX47', 'XxCha0sPixelStarxX', 'RiderVoid42',
                     'Ril3yKnightDrift', 'WillowHunter36', 'NightDrift64', 'XxMateoNovaxX202065Y', 'Hunter_Fox38YT',
                     'StealthStormy202356', 'StormHyper35', 'Turb0Skat3rZ00m2018', 'XxCharlotteOmegaxX54',
                     'PrimalStormyPix3l', 'SonicAquaSpark2017', 'BlazeTurboMax2005', 'Ethan_Night11',
                     'XxBuilderBaconDuckxX', 'HyperStealthZap2016', 'JackTigerSt0rm2019', 'Xx_SavannahFusionOme',
                     'XxChaosEchoxX46', 'SparklyDarkPix3l', 'MoonToxicBlastYT', 'XxVortex_JellyxX2008', 'Ic3Str3amZap',
                     'EliRiftChill2021', 'RavenNova2002YT', 'NoraSonicWraith', 'XxOliverCrystalClawx',
                     'BlizzardGolden13', 'Aid3nPh03nix53', 'FlickBeastNinja90', 'KingBlock202078', 'KnightHero201395',
                     'Wraith_Raven12', 'PowerRiftFrost_YT', 'GigaPix3lat3dStar90', 'CircuitStr3amFlash', 'T0xicHawk75',
                     'Slim3Vort3xChaos', 'PlayzVoidIc381', 'L3viToxicBlaz3', 'T0xicC0deBuilder2013', 'Oliver_Crystal71',
                     'AquaMoonToxic48', 'EpicKnightLion', 'Paisl3yMaxPuls3', 'Inferno_Flash35', 'XxAlphaOrbitxX61',
                     'Xx_WilliamDancerGold', 'OrbitAceMagic2024', 'Logan_Hero94', 'Rock3tRogu3Chas3',
                     'Henry_Light202051', 'BaconHyper201497', 'XxB3astKingFrostxX20', 'XxZ00mHyperxX2010',
                     'GigaProTiger2020', 'BlockPulse41', 'ProStorm2009YT', 'NEON_Arrow56', 'FlickToxicGolden',
                     'Zoom_Puls32006YT', 'GigaPhoenix51', 'PH0ENIX_Rift16', 'XxBuild3rNovaxX2023',
                     'XxWilliamHer0xX2002', 'Jelly_Miner33', 'P0wer_HUNTER2021', 'RocketWolfFrost', 'EpicLion200897',
                     'GoldenBaconBane', 'Dancer_Chase14YT', 'BladeSkyInfern0', 'HunterV0rtexSilver',
                     'XxBlockAlphaxX202342', 'OwenDarkCraze2005', 'FlickDragonStealth', 'Flick_PLAYZ55',
                     'XxStealthPrimalxX17', 'Vip3rSt3althPanda', 'Ultra_Toxic202498', 'LunaSlimeGamer', 'Jack_Pixel54',
                     'AquaChas3Fusion60', 'XxPulseEaglexX200281', 'SlimeCrazeZap', 'LAYLAKING_YT',
                     'Xx_ScarlettBearBuild', 'PaisleyV0id62', 'XxBuilderGlitchDuckx', 'B3arIc386', 'SlimeBladeGamer63',
                     'XxPlayzH3roDuckxX', 'AsherC0deLegend92', 'W0lfT0xicGalaxy', 'St0rmyFlickW0lf2004',
                     'Rock3tDuck2018', 'ClawPhoenix33', 'XxM00nPixelJellyxX_Y', 'NovaBladePrimal2008',
                     'AceLegendZap2008', 'Gabriel_ZOOM2005', 'KnightCyber201028', 'PhoenixCraze11', 'Venom_MINER20',
                     'Charlott3B3ar34YT', 'XxEchoStormStarryxX', 'WilliamPanda2018YT', 'Xx_V3nomSparklySlim3',
                     'Haz3Cooki3Night2013', 'NoraStarSt3alth', 'PrimalMoonBlizzard20', 'Xx_S0phiaOmegaStream',
                     'InfernoFusionEcho', 'Cookie_Turbo61', 'EliEpicDuck', 'AmeliaClaw200796', 'VoidThund3rBlock',
                     'LunaByteDark', 'EzraCrystal51', 'XxKayleeBlockProxX', 'GabrielFlashDancer11', 'Haz3lDriftGh0st',
                     'BladePowerLava54', 'XxStr3amFlickPho3nix', 'GoldenChaos201399', 'Rav3nB3arThund3r2021',
                     'Z03_King2006', 'XxDriftTigerxX93', 'XxDawnCyberxX60', 'AquaKnightPrism2015',
                     'Xx_KayleeCircuitBuil', 'XxEllaSt0rmxX99', 'AquaB3arPho3nix', 'EchoFrostNight202483',
                     'Pixel_St0rmy94', 'Dani3lPlayz2006', 'N0ahArr0wCyb3r', 'BrooklynnEpic99', 'DarkViperFusion',
                     'Legend_Phoenix12YT', 'Xx_S3bastianPlayzCla', 'Min3rHaz3C0d3', 'CyberHawkEagle56',
                     'ChillLavaCha0s', 'V0rtexFlash91_YT', 'ScarlettKnight2005', 'MysticVoidLion2004',
                     'XxBrooklynnStormCod3', 'Magic_CRYSTAL201579', 'InfernoAlpha45', 'FrostZoomFir3', 'StormyChase41',
                     'BlizzardFusi0nR0gu3', 'Ech0_TURB02020', 'XxBlazeRavenxX68', 'GigaHeroGolden80', 'Build3rFlam383',
                     'XxWillowPrimalQu33nx', 'Hawk_Block89', 'SlimeHunterBlizzard', 'DancerMax74', 'SamuelFrost79',
                     'NightBaconCrystal43Y', 'BuilderDriftJelly', 'XxFire_TURBOXX2003', 'RogueHazePower',
                     'XxNoahShadowHunterxX', 'Danc3rMysticHyp3r26', 'XXHAZEL_SonicxX12', 'MysticHeroFrost2006',
                     'ToxicCyb3r48', 'N3on_Alpha49', 'RogueLight78', 'Rogu3Craft42', 'RileyCrystalRider202',
                     'AddisonIc32015', 'ZO3_Craft27', 'Flam3_Lava2007', 'H3roJ3lly2021', 'XxLucasSparklyxX2003',
                     'Ultra_F0X2018', 'RIFT_Bear202351', 'S0phiaBearFlash', 'ChaosFury200480', 'XxEvelynRogueBuilder',
                     'FlashBlock201129', 'PixelMax201793', 'Xx_StealthSilverCraz', 'Bacon_Sparkly60',
                     'Jelly_Wraith2013YT', 'Gabri3l_Star15', 'PrimalStormyQueen', 'DuckLuckyHero2004',
                     'H3nryEch0Primal2009', 'Bacon_SKATER35', 'ZaydenCookie95', 'XxSilv3rGigaNinjaxX',
                     'R0cketHyperMystic', 'ElijahBaneStar2012', 'V0rtexSlime25', 'QueenDarkCookie2017',
                     'J3llyThund3r2012', 'ORBIT_Master2010', 'XxGlitchNovaxX2005', 'SlimeHazeToxic2005',
                     'SaberGalaxy72', 'PlayzCyberZoom28', 'Giga_Li0n96', 'Light_Duck2010', 'V0rt3xPix3lBlad3',
                     'Rider_Venom2005', 'Chl03Giga2004', 'Li0nN30nRav3n', 'HunterCraft25YT', 'BlastZoomStream',
                     'St0rmyS0nicN0va', 'Legend_F0x22', 'AidenPixel64', 'WolfSpark23_YT', 'Flame_Wraith54',
                     'RavenPixelTiger_YT', 'XxBaneLavaBladexX201', 'LiamSkaterThunder41', 'BlazeQueenPulse2023Y',
                     'TigerMaxWolf2008', 'ArrowAc350YT', 'XxMysticFlashBlastxX', 'V0rt3xEch071', 'XxEcho_CircuitxX2022',
                     'NovaHazeEcho', 'PlayzQueenMax2010', 'HeroVenom2003_YT', 'SlimeHawkPanda2003_Y', 'LuckyByte40',
                     'Moon_Chas387', 'Byt3Craz385', 'SonicCircuitPix3l', 'XxOwen_ChaosxX2003', 'XxCookie_FlamexX2023',
                     'Z0eCraftHer02009', 'MagicLegendZoom2017', 'RocketHero2010YT', 'PrimalStarryFusion12',
                     'XxN0ahPixelSt0rmyxX2', 'JaydenFlameFlash', 'JaxonMinerPhoenix55', 'BrooklynnPlayzKing',
                     'LavaP0w3r2022', 'XxZeroSilverRiftxX', 'DancerFlameRogue2010', 'IsaacEagl3Hyp3r',
                     'Skat3r_Z3ro2006', 'BaneHero53YT', 'SparkChaosAqua76', 'XxJackBlizzardEpicxX',
                     'Xx_Shad0wR0gueHunter', 'XxFox_ZapxX10', 'DanielVen0m200595', 'PixelatedN0va2004',
                     'EliCyber201079', 'LukeArrowGhost2018', 'Cyb3rLuckyChill20132', 'S0phiaDawnC00kie',
                     'GabrielThunderLava20', 'XxCarterThunderR0gue', 'MasonProDawn', 'AceFlash48', 'Danc3rPandaDark',
                     'XxAubreyGlitchOmegax', 'VoidHyperFlick', 'TurboMast3r26', 'Cha0sDanc3rYT', 'Addis0nThunder202487',
                     'OwenV0idLight200489', 'HunterHaze28', 'Block_Cyber86', 'AuroraPuls32020', 'LiamMaster200625',
                     'OliviaCyb3r2004', 'XxAquaProxX2008', 'ElijahShad0wSaber', 'InfernoAlphaZoom',
                     'XxSaberPlayzRocketxX', 'AceStealthStream2021', 'XxV0rtexBeastMinerxX', 'BearS0nicBuilder',
                     'StarryDuckRogue', 'Bear_Blaze76', 'Xx_RavenFrostThunder', 'FlashBlade2019YT',
                     'DanielKingHaze2011', 'CrazeChaos2015', 'Build3rCod394', 'XxWillowEchoxX64', 'ChillFlash39',
                     'B3arEagl3Drift', 'OliviaThunderBac0n', 'BearFrostEagle2019_Y', 'ByteSilver201517',
                     'XxHarperPixelSkyxX_Y', 'EllaStreamCraft88', 'Xx_Charl0tteT0xicPri', 'CodeSilver2008YT',
                     'ScarlettLionWraith', 'AlphaDawn40', 'GigaGoldenDuck2006', 'XxZero_FuryxX2021',
                     'XxLaylaStarryxX2021', 'DriftGolden61', 'IsaacBuild3r87', 'MinerShadow20', 'XXSKYLIONTURBOXX_YT',
                     'Jacks0nVip3r95', 'XxOw3nFlickL3g3ndxX', 'XxHazeVoidxX2018', 'AidenFlashT0xic', 'L0ganB3arCrystal',
                     'Aria_BUILDER88', 'PixelGigaWolf2010', 'GraceMaster50', 'LunaSt3alth2024', 'AmeliaNinjaFire',
                     'Isab3llaStar50', 'StormyByt3Mystic', 'BeastPrimalSkater64', 'HannahOmegaVortex',
                     'Blaz3V0id201554', 'Aria_Ninja2004', 'Xx_Harp3rGlitchFusio', 'Sab3r_Bacon2022',
                     'Ph0enixKnight2009YT', 'Zero_Blast17', 'LoganUltraQueen2006', 'EpicFuryKing', 'PowerFusion202440',
                     'GlitchBear22', 'SamuelKingCircuit200', 'RileyByte63', 'MasterStormyGlitch', 'XxEchoGold3nDarkxX',
                     'Inf3rnoDragonCyb3r', 'VictoriaSkyJelly18', 'MiaRocket60', 'XxBlockDuckArrowxX',
                     'G0ldenS0nicR0cket', 'BaconDawnJelly', 'N3onL3g3nd93', 'LightDriftGolden', 'Fr0stGiga93',
                     'KayleeDuck201118', 'AlphaPixelSparklyYT', 'BaneZoom44', 'XxDragonAlphaxX2005',
                     'GabrielRiftBear2003', 'Hyper_Blast80', 'Xx_CrystalFlashQueen', 'SaberArrowToxic2003',
                     'Xx_SkaterCircuitWolf', 'AddisonCodeChaos', 'Jax0nV0rtexSpark', 'W0lfHawk17', 'VortexSkaterBlast',
                     'BaneVenomDark2006', 'XxAlpha_BeastxX73', 'XxThunderR0gueWraith', 'XxPix3lVort3xPuls3xX',
                     'AddisonThund3rOm3ga', 'BearCraftM00n', 'Pix3lFrostRift', 'SavannahNeonUltra', 'GigaEcho200777',
                     'Tiger_Jelly58', 'JulianStr3amKnight', 'Aur0raMaxBlade', 'AquaBac0n2013', 'ChillLegend2002YT',
                     'WraithNinjaDuck2003', 'Pho3nixCod3Silv3r13', 'WillowNinjaHawk2003', 'Build3rChas3Z3ro46',
                     'CodeBaconGolden81', 'SparklyDanc3rStormy', 'Cyber_ZAP200345', 'Turbo_Bane2010YT', 'AceDawnM00nYT',
                     'L0gan_Starry51', 'WilliamDarkCraft14', 'LuckyZ00mZap', 'XxTigerBuilderFuryxX', 'EzraGoldenZero',
                     'PandaBlastByte202233', 'BlizzardTiger64', 'Dragon_Byte201184', 'OrbitLionHero2012',
                     'XxElijah_B3ASTXX75', 'Fr0stAqua2005YT', 'CrazeMagicHunter', 'Rav3nNova2005', 'Pow3r_Toxic2004',
                     'Zayd3nH3roCrystal', 'PowerKingPhoenix2004', 'HawkZero201868', 'Arr0wStarHunter2013',
                     'XxCraft_DuckxX2008', 'RileyOmega45', 'SavannahSky60_YT', 'CrazeRiftFusion', 'Vort3x_Blad32006',
                     'BuilderDancer2014_YT', 'XxZaydenHer0HawkxX20', 'VoidJ3llyHyp3r', 'ShadowAceNova2023',
                     'BaconNinjaDancer2013', 'Hunter_Pulse90', 'XxAuroraCrazeMoonxX', 'Inf3rn0_Rid3r2004',
                     'XxAlphaGalaxyxX28_YT', 'N0ahAqua200552', 'XxSavannahFrostxX15', 'Ech0RiftPixel2015',
                     'SaberPandaByte', 'Ev3lynTig3r65', 'Br00klynCrystalBlast', 'ClawN0va2024', 'VoidHazeFlick',
                     'LuckyHyperGolden', 'R0gueCircuit91', 'Xx_Ven0mBlizzardPand', 'SlimeArrowTurbo2007',
                     'HazeLightV0id', 'XxGraysonBanexXYT', 'LightSilverGamer', 'ScarlettQueen2009',
                     'Xx_ScarlettVoidGolde', 'XxSilverVen0mxX20081', 'HannahRid3rHyp3r', 'Byte_SONIC2018', 'Fox_NEON47',
                     'Aqua_RIFT200414', 'H3roCod3Star2016', 'EvelynW0lfRift15', 'CrazeSilver2021_YT', 'EthanEcho24',
                     'EagleQueenChaos20052', 'XxSaberSlimexX_YT', 'ElijahG0ld3n2014', 'LeviBlastDawn98', 'Chl03NinjaYT',
                     'XxMast3r_Pix3lxX2017', 'EchoZap90', 'UltraPowerCraft', 'GalaxyM00nN0va', 'XxAva_SparklyxX2006',
                     'PixelBearNight78', 'KnightOrbitGamer', 'XxPrismPh03nixxX2012', 'SparklyDragon81',
                     'LeviCodeWraith2004', 'PulseBac0nChill', 'SonicAquaBlock', 'XxEagleGalaxyShadowx',
                     'Xx_CharlotteBearVipe', 'NeonThunder94', 'XxGalaxyEchoxX2016', 'LukeGlitchSpark',
                     'ClawRiderGlitch2002', 'IsaacViperWraith', 'HazelBeast84', 'XxTigerCrystalxX2012',
                     'XxMaxBearSilverxX', 'Block_Fury200562', 'AvaG0ldenEpic', 'ClawMasterEagle2009',
                     'StealthCrazeVenom', 'VictoriaFlashCraft20', 'Ech0T0xicR0cketYT', 'W0lfAce2008', 'XxRileyHawkxX71',
                     'XxStarryRocketAquaxX', 'Panda_Pow3r2012', 'ScarlettBearM00n', 'Fir3Slim3Lava',
                     'Chill_Night201958', 'XxJamesViperxX29', 'Hunt3r_Min3r22', 'Cyb3rEpic2021', 'Chl03StarryIc32007',
                     'OwenCookie200356', 'XxGalaxyFlickG0ldenx', 'ZoomHunt3r59', 'SonicHawkFlame', 'PlayzEch049',
                     'AlphaPowerDancer_YT', 'Byt3RiftStormy2018', 'Ne0n_Turb092', 'XxPlayzWolfMinerxX32',
                     'Pixel_Crystal25', 'N0ahP0wer2022_YT', 'SABERHYPERPIXEL_YT', 'PixelGigaPro2014',
                     'SavannahInferno14', 'LiamByteQueen2017', 'XxTurboGamerxX2004', 'Ne0nWraithPixelated',
                     'XxAur0raKingxXYT', 'BearStormySonic2016', 'AriaP0wer51', 'AubreyP0werCraze2010',
                     'XxEchoToxicCraftxX', 'XxAlphaGlitchChas3xX', 'BanePhoenix201537', 'LucasMoon64',
                     'Arrow_Dancer201192', 'Her0Ech0Bac0n200856', 'OrbitCyb3rQu33n2022', 'V3nomN3onGalaxy',
                     'Oliv3rLightBlizzard8', 'JaxonTiger46', 'XxDrift_VortexxX42', 'XxGalaxyRiftSonicxX',
                     'UltraBlast2002', 'Ph0enix_Flick77', 'BaconDrift17', 'N0raHer080', 'Blaz3Blad313',
                     'PixelatedHyperMoon20', 'Golden_Chill81', 'AsherZap201940', 'XxFoxRiftxX2016',
                     'XX_CrystalFr0stStarr', 'GalaxyVip3r2012', 'DawnBlizzardFusion', 'LucasGigaChaos',
                     'LightStealthNeon2016', 'PrimalSkat3rRav3n202', 'XxMystic_Ph0enixxX69', 'VenomStealthStormy',
                     'WraithThunderIce', 'ScarlettKnightNova20', 'AmeliaMaster34', 'PlayzEchoPixel17',
                     'ThunderBuilderLava', 'XxGalaxyChillxX2024', 'RogueJellyLegend', 'Jayd3nSparkly2010',
                     'WyattEch081', 'MysticDragonFlash86', 'HyperF0xP0wer', 'SophiaPuls3Qu33n', 'Vict0riaStar95',
                     'ByteZer0Star', 'JulianLightViper2017', 'MateoAceSparkly_YT', 'XxAvaCircuitPixelxX',
                     'DragonOmegaGiga2024', 'AuroraPixelated23', 'NINJA_Fusion2023', 'Xx_BrooklynnBlazeDra',
                     'SaberStormyStorm2012'}
local RECEIVER_LIST = {'STARRY_Hunter17', 'Xx_MagicRid3rSt3alth', 'Playz_Wolf201510', 'XxNight_TURBOXXYT',
                       'Ezra_Queen33', 'EllaVortexBlizzard20', 'ThunderStarMiner2012', 'QueenChaos2017YT',
                       'CookieClawLegend', 'Bl0ck_Skater61', 'XxZoe_GAMERXX2006', 'GraceDarkBuilder2008',
                       'XxGold3nMin3rxX2012Y', 'XxPix3lLionCircuitxX', 'Z0eHer0St0rmy64', 'HawkZ3roFlash',
                       'HarperSky50', 'OWEN_Ice10', 'Luk3Pho3nix2007', 'LionEchoTurbo2024', 'PaisleyCookieFlame20',
                       'GraceBlizzardFusion7', 'LuckyChaosEcho', 'GlitchRocketPhoenix', 'HazelRiftHawk2011',
                       'Build3rTurbo2006_YT', 'Qu33nLavaFusion', 'SlimeFireAqua', 'ByteChillC0de2015',
                       'XxCodeCrystalDancerx', 'CircuitKingShadow19', 'Flash_N3on2022', 'TurboHaze2014YT',
                       'EzraFox2023_YT', 'EmmaPrism201671YT', 'OWEN_Fox10', 'SaberGamerLight', 'XxProBaconxX2020',
                       'RogueStealthArrow', 'AvaLegend79'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
