-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'AlphaPrism62611', 'EmmaHyper6237', 'AceFlame9805', 'MasonCode1717', 'Chr_istianEagle2901',
                     'HannahMystic89083', 'EchoLion9538', 'MichaelStar39642', 'Luna457Eagle', 'ArrowPrismBlaze',
                     'Caroline704Fox', 'CharlottePixel8265', 'FlashVenom21978', 'Leo161Aqua605937', 'RyanStarFi_re2836',
                     'IsabellaBuilder15943', 'Luke466Ace', 'BenjaminNi_nja', 'JamesEcho34612', 'VenomFlash6750',
                     'ChillGhost8540', 'Fox_Frost528831', 'LuckyFoxPhoenix', 'Her_oFlash654Nova682', 'PhoenixStorm8679',
                     'OrbitHeroPixel551527', 'HeroGhost41289', 'HeroFlame2874', 'NovaAqua6052', 'Byte492Orbit3655',
                     'FoxAqua55582', 'AquaTurbo3320', 'RocketGhost9630', 'L1onFox354Eagle8661', 'ShadowHyper29192',
                     'Craft950Eagle', 'GamerStar3392', 'M00nF_ir38860', 'Pixel65_0F0x37', 'Lucky906Fl_ame',
                     'AquaCode3890', 'ChillGamer188Mystic8', 'MadisonFusion87603', 'L_ionByte7907', 'SkyShadow6734',
                     'BlazeOrbit63132', 'Wolf532Flame', 'LuckyChillWolf3302', 'LilyFrost52673', 'Flash729Alpha21',
                     'FlameSpark5702', 'IsaiahRid3r9445', 'WilliamByte29729', 'LionHyper42', 'LunaSpark4618',
                     'TurboNeon7150', 'Aubrey521Lucky', 'CraftPrism6493', 'Lu_cyFlame5513', 'B_lock284Sky',
                     'Miner172Aqua', 'FrostNeon411436', 'Vict0riaRider2938', 'ArrowTurbo9225', 'Ai_den263Lucky265629',
                     'PenelopeBlock7337', 'FireArr0w40', 'JackNinja47655', 'Nathan433EchoFrost', 'IsaacAce2342',
                     'OrbitVenom1582', 'TurboM_ystic32', 'JulianGhost3908', 'EthanLion3182', 'HannahSky7989',
                     'Jonathan307LuckyMyst', 'IsaiahBuilderVenom55', 'Ace217Light', 'SparkTurbo4980', 'MysticSpark5893',
                     'LionMyst_ic34', 'DavidWolf4034', 'WolfBuilder27084', 'Fir_e906Nova8210', 'TurboH_ero2600',
                     'AlphaNeonR1der1443', 'HyperDrift5587', 'Hannah579FrostVenom2', 'FoxFrost28341', 'EagleCode77654',
                     'HeroGhost81047', 'Gabriel257_Flame', 'IsaacStormDawn822834', 'JacksonEch_o8773', 'Jacks_onAqua',
                     'WyattFox1788', 'PrismFlash3897', 'MoonChill6134', 'Prism388Gamer4953', 'Ghost565Turbo23',
                     'ShadowRocket7164', 'AidenVenomPhoenix408', 'Code305Turbo109038', 'Craf_tDawn8108',
                     'LukeShadowRocket4980', 'HeroDawn18032', 'PixelMoon4890', 'CraftNeon8210', 'Ne0nR0cket8311',
                     'CodeRocket12045', 'FlashEc_ho', 'Orbi_tF0x9616', 'CodeMoon1620', 'EagleChill87962',
                     'NinjaPhoenix4340', 'Lucy686Lion2682', 'Victoria015Hyp3r', 'DylanLucky4909', 'SkyDrift5460',
                     'MysticRid3rFir3', 'GraysonPhoenix2081', 'Ri_leyFlame', 'Jonath_anRocket96262', 'RyanEagle134742',
                     'MinerAqua48957', 'LunaAlphaG_amer9026', 'Ethan873Turbo6191', 'StormPixel4381', 'NovaAlpha6077',
                     'Aubrey234Mystic7242', 'CyberHero3638', 'SilverHyper7833', 'LunaAce4655', 'MysticFox123736',
                     'AriaShado_w', 'Hyp3rSpark34', 'SilverFlame2674', 'MinerFusion89754', 'Pr1sm378Bl0ck',
                     'Spark_Phoenix3598', 'HyperEagle19032', 'MichaelGamer68405', 'FlameS_tar34', 'BlazeVenomAqua3064',
                     'GamerPhoenix8258', 'Blaze06_0Byte', 'LuckyBuilder1710', 'VenomSilver73026', 'F0xSky3387',
                     'DawnSpark31', 'FlashWolf5687', 'GhostNo_va341826', 'CrystalFusion11084', 'LunaDawn9487',
                     'NovaAqua8950', 'OliverFire885Alpha51', 'William901Craft2747', 'NovaSkyNeon9040', 'Av_aMoon8911',
                     'CodeArrow5980', 'Luk3Pix3l394927', 'EchoFrostRid3r7018', 'OliverPrism7811', 'Mi_chaelMinerSky',
                     'ScarlettRider955125', 'MysticBuil_der9997', 'AnthonyBuilder5105', 'Rid3rCy_b3r', 'HeroLucky9434',
                     'JosephNinja2660', 'AlexanderFusion23362', 'AnnaSky2765', 'FusionNinja530324', 'Liam860Chill',
                     'BlazeP_rism6037', 'LiamOrbit6118', 'ZoeCrystal8227', 'DavidHyperPixel2616', 'LightBlock4389',
                     'AcePixel27896', 'PixelLight3816', 'BlockFusi_on8002', 'MysticFire27749', 'ByteFlashGhost35',
                     'OwenStar79551', 'MysticFlame78178', 'LunaFrost730021', 'FusionByte3412', 'ChillD_rift6312',
                     'EllaAqua5881', 'Builder613Block28', 'Hero164Crystal3187', 'LucyBuilder232836', 'VioletRocket9460',
                     'David808Ninja3809', 'CalebCyber7655', 'FlameEcho7026', 'LuckyAqua4925', 'Orbi_tArrow36',
                     'FoxFlam35258', 'PixelBuilder3363', 'Sky192Echo9107', 'LionDrift2226', 'DawnFoxAlpha2511',
                     'ClaireFlame75364', 'LeviCode3101', 'Build_erCrystal23', 'Ev3lyn722Eagl3Drift3', 'StarNeon48140',
                     'GamerPrismCrystal588', 'OrbitAce1417', 'StormGhost5274', 'Turb0Arr0w2806', 'MoonGhost8423',
                     'JulianWolf3378', 'GhostMiner23578', 'HarperShadow9605', 'A_idenMiner8194', 'ArrowStormCryst_al',
                     'Rid_erNova1873', 'FlashSparkDawn29', 'ChristianEagle2234', 'Rider703Drift', 'AlexanderFox937426',
                     'FireFusion4578', 'SparkFusion43309', 'ChristianCrystal746G', 'EthanNinja626834',
                     'PhoenixNinja9744', 'Drift228Lucky8182', 'LunaBlock65789', 'Ca_milaCraftCode4528',
                     'RiderPi_xelChill', 'FirePrism85408', 'LilyFr0st8403', 'John518Lucky117225', 'Blaze371Rider',
                     'CyberBlock7522', 'Christopher_Ghost265', 'NovaSilver118323', 'DawnStar7283', 'BlockBuilder7902',
                     'SavannahCraft7621', 'JamesLion2354', 'VenomByte8823', 'AnthonyNinja1780', 'EmmaDrift5782',
                     'Ninja370Ghost9700', 'Turb0SilverDawn9071', 'Sha_dowRocket6315', 'RileyTurbo9072', 'Fr0stP1xel',
                     'AceCrystal5679', 'HannahSky4030', 'AquaN3on623041', 'PhoenixRider2416', 'NovaStormSpark513930',
                     'WolfNeon8827', 'WyattNova6650', 'Fox640Shadow', 'BlazeVenomArrow29', 'Ghost090Crystal8985',
                     'P1xel448Alpha925626', 'EchoMoon9980', 'AceSilver3210', 'BuilderVenom5221', 'Flame327Echo581523',
                     'N0raBuilder137320', 'Jackson379Fusion', 'BuilderHero1838', 'NovaFr_ost', 'Zo3y774Star7732',
                     'WolfDawnSpark655528', 'PixelFox59354', 'StarSilver6350', 'NeonGamer2349', 'WolfMysticChil_l3461',
                     'James932Craft', 'AriaLight45758', 'Owen936Rider6263', 'AlexanderSt0rm6675', 'Carter500Rocket2814',
                     'MinerPhoenix8731', 'KinsleyMiner60689', 'Turbo236Orbit2124', 'NathanPixelDrift',
                     'Vi_oletWolf1417', 'Shadow_Neon896025', 'VenomHyper1709', 'LaylaFlame6257', 'Isaac417Shadow35',
                     'BlazeDrift48384', 'ChillWolf8391', 'LightShadow6076', 'SilverFlameFusion', 'EchoPixel3371',
                     'AlexaPrismByte', 'AlphaHero2102', 'EllieAqua8819', 'PrismStar49826', 'AlexaGamer26639',
                     'Rider220Flash4293', 'Aur0raF0x_Bl0ck5842', 'ArrowPixel9652', 'JackShadow34332', 'William772Turbo',
                     'LightF_r0stSky', 'EchoAlpha4121', 'EvelynNinja49948', 'Rocket165ChillLight7',
                     'Sebastian567Phoenix4', 'Fusion130ByteArrow30', 'VioletMystic64191', 'Ac3Flash8436',
                     'FrostFlashDrift4354', 'Code879Lucky8379', 'LucyCode6120', 'AceCyber4220', 'BellaLight62423',
                     'Fusion524Aqua2812', 'JoshuaArrowLight4680', 'StarFire_Craft9187', 'Star2_06Cyber713525',
                     'BuilderFrost82058', 'HenryArrow2736', 'NoahLuckyAce852438', 'BlockEagle4672', 'WolfStar2798',
                     'CodeAqua80116', 'RocketFire24764', 'RocketMoon30', 'Vi0let780R0cketChill', 'BenjaminGamerRocket',
                     'BenjaminDriftCyber', 'Nova286Gam3r', 'OrbitNinja9925', 'Noah781NeonFlash5321', 'LionDawn41',
                     'Davi_dSky2843', 'RocketEcho972921', 'LoganBuilderC_hill87', 'LuckyTurbo9411', 'NeonFlash49737',
                     'JoshuaDawnSilver9961', 'Fusi0nHyperShad0w915', 'LeviFusion1585', 'AquaGh0st885Fr0st',
                     'LuckyCodeSilv_er2897', 'AquaCode8472', 'AllisonBlock6587', 'Sky459Phoenix', 'CarolineMystic21031',
                     'Crystal353Rocket6672', 'VenomCraft4352', 'Aq_ua079Star', 'Storm993Light', 'NeonStar27268',
                     'MysticSky9000', 'LucyCrystal40', 'FusionGamer529631', 'LincolnM_in3r6318', 'NeonStorm1846',
                     'WolfRider89840', 'AlexanderAlphaPrism4', 'LionStorm7559', 'Leo383Gamer', 'HeroSpa_rk',
                     'AlphaAqua9160', 'AllisonSky8087', 'FlashCrystal4214', 'LuckyAceFrost3831', 'AnnaCode15814',
                     'AcePrismArrow9925', 'NeonStorm2233', 'AquaRocket3063', 'SavannahByte8010', 'KinsleyBlaze6210',
                     'NathanPrism64385', 'SophiaGhost787340', 'SilverLightSky5045', 'NovaSkyE_cho39',
                     'Turbo314Nova1868', 'StormMysticSil_ver58', 'TheodoreCode23558', 'LuckyNova8619',
                     'TurboSilver8032', 'Stella628Byte', 'Light105Alpha', 'JacksonChill73739', 'FlameFusion2715',
                     'LeviHyper6495', 'VenomBlock1673', 'NoahSparkT_urbo7274', 'RiderDrift80321',
                     'Code37_1BlockFire134', 'Spark888Flame', 'LilyRocket50779', 'KennedyLightLion9293',
                     'ChristopherLuckyStor', 'ElijahShadow9760', 'ThomasFusionWolf3457', 'CarterMystic32311',
                     'Eagl3Drift9628', 'RiderBuilder480836', 'TurboGamer1483', 'M00nFlame6206', 'FireRiderBlaze6665',
                     'AnthonyLight30', 'ByteGh0st9560', 'HyperRider9702', 'MasonAqua34550', 'Fi_reLight489122',
                     'ChloeAlphaByte7743', 'Orbit236Fox2982', 'Alexander326Ninja', 'FlashFox9538',
                     'VioletShadow842Ninja', 'Shadow383Fire3763', 'HyperF_ox', 'JacksonChill2496', 'AsherLight2058',
                     'HyperSilver387035', 'AlexanderBl0ck6583', 'LincolnFlash9957', 'DylanFox8771', 'LeoRocket80873',
                     'Dawn163Builder8367', 'Storm454PixelCode439', 'LuckyFlash70973', 'CyberFrostFusion2903',
                     'Aqu_aCrystal9330', 'HannahFlame1656', 'SparkGhost8862', 'Neon467Eagle212531',
                     'Shadow660ChillHyper5', 'AnnaDawnHero2890', 'HyperAce79348', 'J0hnPrism4408', 'AceDawn6310',
                     'SkyWol_f1534', 'Shadow_Ace1582', 'Blaze603Byte', 'Shadow000Blaze', 'L0gan991Mystic3485',
                     'RiderFrost1763', 'CyberChill3130', 'AvaGamer8956', 'StormLion8803', 'MayaLight1751',
                     'AndrewAlpha242533', 'FlameTurbo4879', 'ByteMystic2063', 'SparkArrow5071', 'Gamer466BuilderLion',
                     'Fox678Blaze1548', 'FrostShadow4713', 'Fr0stDrift991921', 'FlashSilver51861', 'Liam389Blaze9010',
                     'Lincoln601HyperRocke', 'DanielMystic7522', 'MadisonPrism204Storm', 'Lin_colnFlash',
                     'CraftDrift2156', 'CalebNova39733', 'AquaDriftNova4960', 'OliverPix_elHyper', 'E_mmaOrbit7005',
                     'JosephGhost27', 'AriaBuild_er4164', 'Lucy741_Gamer', 'OrbitNinjaShadow7594', 'FlashPixel1253',
                     'KennedySilver6498', 'ZoeyOrbit1260', 'Chloe624Spark37', 'LukeEcho47107', 'MayaMysticSky5651',
                     'CodePrism11482', 'JackNova48024', 'WolfFus1on331930', 'Aria644Sky8041', 'Gamer014Fusion6462',
                     'Stel_laW0lf', 'ByteFlameWolf6171', 'NinjaLion27441', 'AceBlaze29418', 'CrystalTurbo1452',
                     'DriftLucky33978', 'HyperR0cketS_had0w77', 'AnthonyNeon9949', 'LuckyByte6027', 'Kinsley923Wolf',
                     'MoonSilverStar2844', 'ShadowCrystal40108', 'LuckyWolf8_31Hyper', 'Builder865Star152440',
                     'EmmaNova6831', 'AriaAqua3015', 'BlazeBuilder5113', 'Carter637Aqua768440', 'RyanOrbi_t3607',
                     'OwenCode70110', 'Fire545VenomFrost431', 'GhostAlphaDrift7620', 'ZoeyVenom1292', 'PrismN0va4174',
                     'VenomNeon37100', 'LucyDrift5998', 'Grays0n936Ace', 'GhostDrift79430', 'SilverMoon40226',
                     'W0lf103Cyber', 'Fire822Star6871', 'GraysonLight8409', 'EchoFlame64187', 'Crystal379Turbo',
                     'ShadowEcho537Prism79', 'DriftEcho9110', 'MoonFlash74827', 'Layla107Lucky787541',
                     'N0raFlash282923', 'NeonAlpha6000', 'GabriellaByte8302', 'AriaEagle67471', 'Gamer095Flame683431',
                     'M00nBuilder4571', 'VenomLuc_ky8078', 'VenomMiner73733', 'EllieShadow3282', 'AdelineStorm2143',
                     'SamanthaStar8253', 'BlockFire8218', 'NovaBlaze971623', 'JonathanStorm9914', 'Linc0lnFr0st3832',
                     'SebastianLucky9488', 'EllieMiner9309', 'Sca_rlettWolf', 'BenjaminFlashShadow2',
                     'JaydenSpark28411', 'FlashFlame21937', 'IsaiahPrism513625', 'ChristianDawn7990', 'LucySpark8906',
                     'HeroAqua9217', 'J0sephByte4251', 'Linc0lnOrbit', 'NovaCrystal4621', 'PixelMoonCyber1096',
                     'StellaCrystal9297', 'Orb1tFlam_e', 'Wolf257Prism1716', 'Cod_e720Ace', 'HyperEagle7316',
                     'OwenNeon18680', 'LeoEagle861538', 'AnthonyCod_eStar', 'NovaDrift77568', 'HyperBuilder944037',
                     'Drift_Blaze2105', 'Block903Byte', 'CyberC0de32', 'DawnAqua81412', 'StarSilver8530',
                     'L1on392Storm', 'VenomGhostBlock7661', 'MinerAqua9170', 'DavidStorm9175', 'CodeSky817432',
                     'Luk3Light8076', 'DriftOrbit_Lion9518', 'DylanCrystal1440', 'GraceWolf1452', 'GamerAqua687531',
                     'Silver459Lion704134', 'Nova447Ace622238', 'AquaSt0rm487F0x93992', 'AubreyFusion841Eagle',
                     'Kinsl3y046Hyp3r5557', 'FlashShadow37912', 'AuroraVenom3857', 'IsaiahCrystal2758',
                     'RocketNova85480', 'JamesGhostPhoenix', 'ArrowChillLion40', 'AvaVenom6052', 'NeonDrift73571',
                     'BuilderMystic17131', 'Fire700CodeFusion801', 'IsaiahGhost39954', 'MasonOrbit1531', 'CodeShadow24',
                     'WolfFireSpark7614', 'AmeliaHyper9934', 'SkyStorm2083', 'Storm465Code', 'DanielCra_ftAlpha',
                     'ChillWolfFire1428', 'Eagle_217RocketWolf2', 'MoonSilver8573', 'AceLion11210', 'VenomSilver3408',
                     'EmmaPrism24526', 'Miner081Wolf6422', 'StormCode6211', 'Levi836Eagle1860', 'hrta48lhvp44',
                     'gvdomhic9049', 'Camila376Lucky6892', 'arxw80wqyd73', 'lzuelmdc8545', 'ekhc84mvmu16',
                     'FrostFlash87059', 'MadisonPrism9135', 'FlashHyper1999', 'Theodore790N1nja7747', 'Fr_ostBlaze8371',
                     'ShadowStar5082', 'BuilderH_yper', 'ddti44kxcr28', 'Ellie_Hyper2348', 'OrbitMystic26643',
                     'Owen840Da_wn', 'Leo322Code', 'uweiwjjp5596', 'DawnNinjaLight9163', 'GraceMiner37103',
                     'ChristianArrow5651', 'Pixel068Alpha1916', 'NinjaD_awnLucky8166', 'NeonFusion4484',
                     'VictoriaEagle1932', 'AllisonVenom28', 'PhoenixAquaByte2639', 'AnthonyEagle21', 'BlazeCyber9682',
                     'TurboBuilderStar2451', 'RiderEag_le924528', 'LeviGamerEcho8494', 'Stell_aFox41',
                     'SamuelLight57891', 'NovaCyber2582', 'ZoeyBuilderRider8843', 'StormMiner6883',
                     'ByteCryst_alLion5842', 'StormAce2533', 'HannahDawn674Neon971', 'qlusyyws0488', 'EchoVenom41940',
                     'AndrewFire74229', 'StellaByteChill2440', 'SparkMoon910726', 'CyberBlock3390',
                     'Block776Fusion5064', 'Orbit737Hyper', 'NathanMystic8352', 'EllieDrift2065', 'LoganAqua7945',
                     'Ghost523SparkNova687', 'Turbo227Block372535', 'MinerArro_w6492', 'Block829Pr1sm',
                     'GamerNinja50839', 'DylanDawn978842', 'CyberLion23863', 'NeonEagle62408', 'S0_phiaFire4459',
                     'SkyCrystal38644', 'CalebHero31185', 'Bella721Cyber9783', 'FoxV3nom6000', 'HyperEcho7318',
                     'LiamBuilder9731', 'DanielFusion73759', 'Si_lver782Gamer', 'AllisonMinerGamer', 'Grays0nC0de5813',
                     'OrbitByte7925', 'ChillEagl3V3nom5611', 'DavidDrift88064', 'SparkCyber6681', 'MichaelGamer3171',
                     'HyperFrost9352', 'Blaze002Rider7664', 'SkyBuilder048Prism70', 'LucyChill3019',
                     'Owen248W_olfByte9773', 'LightStorm28182', 'EagleAlpha738439', 'ClaireByte75236', 'SophiaDawn9257',
                     'LukeWolf514Nova3052', 'Av_aBuild3r7111', 'AquaAce5312', 'JaydenByte403Fusion9',
                     'Cyber173Byte9835', 'PenelopeFusion6159', 'Aqu_aByte', 'MinerOrbit77531', 'GamerMiner6094',
                     'KinsleyShadow110328', 'KinsleyVenom5050', 'BlockFireMiner7249', 'LuckyAqua3271', 'Sky324Lion1643',
                     'ChristianFox52533', 'Nova026Byte_Gamer216', 'NoraOrbit267', 'AceNova85713', 'EllieEagle3731',
                     'TheodoreCode77000', 'Zoey900Turbo9445', 'EmmaHeroByte6118', 'ByteNinja7221', 'DriftPrism447338',
                     'WilliamRocketArrow88', 'DriftNeon71428', 'Rider037Spark27', 'FrostArrowFire3742',
                     'LeoGamerMoon9514', 'GamerFla_me921742', 'SparkWolf16326', 'HyperGamerAce430925', 'ElenaArrow8909',
                     'CamilaArrowCraft32', 'MysticOrbit9148', 'JamesGhost348Shadow3', 'Stella813Flash7299',
                     'FusionChill3375', 'StarFox54762', 'PixelLight810Ace', 'DavidEcho6289', 'HeroNeon60138',
                     'NinjaAlphaFire8731', 'Eagl36_65Lion22', 'Fox205Lion', 'DawnFrost77268', 'Neon797Turbo',
                     'Flame282Cyber846741', 'JulianStarChill33', 'RiderDrift9159', 'Charl3sMin3r936020',
                     'FireDrift8628', 'ChillHeroPhoenix3059', 'AlexaSkyBuilder5824', 'Ace902Dawn120424',
                     'LincolnStar46476', 'Kinsley679Silver9729', 'Shadow933Star', 'LionAlpha65589',
                     'RiderCrystalPhoenix1', 'SamuelMystic8895', 'ChillPixel74783', 'FlashCodeHyper7857',
                     'SilverMiner2208', 'NovaGamer54410', 'AlexanderStormGhost4', 'AceMystic7927', 'L_eoWolf',
                     'LucyWolf46251', 'Sky_Prism8343', 'MoonRocket31', 'ChristianHero78874', 'ArrowCode5551',
                     'DriftSky8916', 'AquaNovaCraft5710', 'Gabriella257Pixel775', 'NovaGamer8999', 'RocketPrism63303',
                     'MiaFusion34758', 'ChloeLion9940', 'BlockMiner8920', 'HeroCrystal033Silver', 'BlockByte62132',
                     'VenomBlock3298', 'Storm10_7Nova6687', 'Code672Rocket9236', 'SebastianCyber8228',
                     'LuckyDrift_Byte', 'AquaLion6014', 'AndrewOrbit6318', 'SamanthaStorm7333', 'TurboAlpha791437',
                     'StormOrb1t7265', 'AidenPixel4526', 'EvelynFlash4028', 'M00nW0lf6839', 'SparkAlpha63574',
                     'RyanNinja9745', 'LeoGhost13829', 'SebastianDawn8987', 'SparkFlash5775', 'Jam3sN3on7377',
                     'SilverTurb06558', 'Riley794Dawn', 'GhostDrift10891', 'Ghos_tDrift8549', 'CharlesEcho8090',
                     'HenryHeroSky5456', 'CalebChillFr0st3599', 'Turb0297Aqua29', 'W0lfSpark5006', 'A_lexaFlame6887',
                     'MinerAqua448134', 'IsaacFire2397', 'LunaFox4526', 'Eagle078Arrow9583', 'Eagle405Flash3663',
                     'Echo846Lion', 'EllieCraft67878', 'SilverMystic79207', 'StormWolf13549', 'PenelopePixel31610',
                     'NathanCrystalPhoe_ni', 'KennedyEchoPixel', 'LeviTurbo4213', 'F1reFoxArrow1921', 'MoonFusion279',
                     'Orbit_946Flame', 'Silver242Storm7452', 'Prism981Shadow', 'CodeEcho5599', 'Prism49_5Rider143121',
                     'FoxMystic8038', 'LionSky10602', 'CyberShadowCrystal22', 'Bel_la049Light', 'TurboCraft362824',
                     'AdelineGamer27', 'DriftCyber9031', 'LightGhostBuilder233', 'Anna878Orbit2755', 'Mas0nSpark4482',
                     'Chill894Flash2857', 'JamesSilver7956', 'LionCraft4967', 'WyattCyber26274', 'ByteM00_n2858',
                     'Alexa779Pixel', 'HyperBuilderLion4136', 'AceGhost38828', 'JulianWolf30312', 'KinsleyStorm58064',
                     'JoshuaCode321622', 'Flame911Pixel3375', 'BlazeHeroFox30', 'StarByte3636', 'FusionVenom646137',
                     'NathanFrost26227', 'N0raOrbitRid3r9628', 'HeroE_cho5473', 'HyperTurboAqua33', 'Ninja310Sky8161',
                     'GabriellaDrift23', 'ShadowDawn72905', 'FlameSky57446', 'CalebOrbit303030', 'VenomD_riftBuilder',
                     'Madison851Eagle', 'SilverArrow9077', 'AquaNova7149', 'Ghost163Byte8650', 'FlameFox55468',
                     'MayaSky298123', 'GhostArrow3337', 'Fla_shRider25', 'FlameChill1212', 'ByteBuilder24830',
                     'C_harlotteCyber', 'LionRocket75892', 'Block397Fox400739', 'AsherMystic41673', 'Li0nVen0m1140',
                     'Her0Gamer2752', 'RocketPixelAqua7542', 'FlameArrow658Ninja', 'El_laTurbo8479', 'DawnNinja144528',
                     'BellaSky366342', 'Ann_aBuilder3045', 'CodeFox2640', 'FoxSilver82247', 'Chi_llCrystalNinja12',
                     'FusionEcho4016', 'Gh0st_Flame7059', 'CyberNova45898', 'LuckyPh_oenix', 'VenomFox17331',
                     'OwenCraft5688', 'JamesHyper6620', 'SamuelGamer82172', 'L1ncolnCyber', 'LeoVenomNinja',
                     'LeviMoon7513', 'MysticGa_mer2823', 'KinsleyPixel3468', 'Aaliyah830CodePrism2', 'EllaCode686640',
                     'GamerArrow8298', 'MysticGhost3342', 'Luna155H3r0', 'OrbitStar8880', 'CodeEcho57925',
                     'Builder548Star', 'C0deStar8333', 'KennedyLion82856', 'AuroraHeroOrbit94312', 'KennedyRocket5364',
                     'SavannahNinja16265', 'ChristianLucky23597', 'BuilderLucky3507', 'Aqua254Cyber843241',
                     'Genesis817Flash4112', 'KinsleyCraft288635', 'HannahFire590Echo556', 'VictoriaAquaCraft233',
                     'KinsleyByteEagle5659', 'SavannahSky87423', 'LucyCodeDawn123227', 'CraftFoxHyper7858',
                     'ArrowP1xel3485', 'CarterStar2673', 'MiaShadow41408', 'PhoenixBlock4823', 'DriftShadow4043',
                     'KennedyByte8232', 'JohnVenom84778', 'HeroShadow3915', 'ChillVenomAlpha', 'StormVen_om1790',
                     'ShadowMysticBlock555', 'AndrewMiner450121', 'StormEagleLight7614', 'Lily546BuilderGamer3',
                     'StellaCyber8838', 'AnnaChill8258', 'CarterOrbit5472', 'LeviNeon3112', 'ArrowPixel7222',
                     'Kennedy207Eagle8570', 'Joanfpcjc26193', 'Elmirasqwff94294', 'Kristynixhu63932', 'Lianappfqt55610',
                     'Joelieqwcba99209', 'Joeyduxyw34604', 'Chloegthxb50200', 'Janeenwmtjc10097', 'Kileyeelrn17024',
                     'Pepibguyb18491', 'Corlymzlmo21939', 'Idellujrmo01330', 'Avritrmcod58739', 'Ethelkllgv00498',
                     'Maddybojcj68304', 'Karolevped57423', 'Catleewyhob27972', 'Mindysolxw96051', 'Gailxcqwj33715',
                     'Mickiewyfkq35525'}
local RECEIVER_LIST = {'VenomSky155722', 'VioletGame_r7322', 'EvelynArrowRider6687', 'Daniel176Hero', 'EagleCraft5194',
                       'ZoePrismBlock640937', 'DavidSpark38770', 'R_iderRocket8407', 'FlashStar51892',
                       'ShadowLucky4732', 'Craft738Cyber7277', 'HannahTurbo3947', 'MasonByte30124',
                       'PenelopeRocket54377', 'Savannah634Spark4460', 'CharlesMinerPrism232', 'BlazeTurb01985',
                       'SkyNova367820', 'LeoPhoenix50615', 'Mystic201Hero', 'MoonNeon2497', 'Samantha_Shadow1757',
                       'LaylaCraft9042', 'PrismArrowFox1782', 'BuilderMysticBlock26', 'ByteSilver65549',
                       'VenomSilver6873', 'Arrow605Echo7297', 'mnfvsjvj1672', 'jixf58xjgq37', 'GraceAqua77564',
                       'Genesis989Mystic7463', 'Ace592ByteSpark2794', 'LuckyBlaze9184', 'Dawn883Neon2464',
                       'ChillNinja5989', 'LoganLight5243', 'HannahFrost73221', 'RileyFox5540', 'GhostPhoenixPrism477',
                       'Grayson652Chill2261', 'SkyBlaze23533', 'TurboWolf7761', 'PixelPh0enix670721'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
