-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'FireUltraRogue', 'RiftVort3xB3ar', 'L3viSonicRav3n', 'Silv3rFoxDrift2023', 'XxAuroraHazeSparklyx',
                     'Jacks0nR0cketDrag0n1', 'PandaPrimalMiner2003', 'OmegaHaze66', 'Pix3l_King87', 'MinerSkyAqua2007',
                     'MasonDragonSlim3', 'LegendVoidNight', 'XxPro_FusionxX51', 'Drift_Silver71', 'CRAFTRIFT2020_YT',
                     'XxLunaFoxxX2016', 'EzraHyperDancer', 'Silver_Dancer2019', 'StreamEchoPower2018', 'AriaNeonFlick',
                     'DanielSkyUltra2014', 'Dani3lPho3nixFlash_Y', 'HeroEagleWolf', 'Gold3n_LIGHT87',
                     'XxBlad3Blaz3V3nomxX', 'Primal_Master89', 'XxThunderBuilderxX16', 'Sab3rDragonMoon',
                     'Brooklyn_Byt345', 'Jam3sFoxB3ast13', 'XxEagleBuilderxX38', 'NoahStarBlizzard2017',
                     'Craft_PRO77YT', 'Rogue_Duck46', 'StarRiftRider2018', 'TigerPowerPrimal82', 'NovaBan32003',
                     'XX_BrooklynnFlickZap', 'RavenByteN0va', 'XxMaxOmegaxX48', 'DriftCod3201212', 'VortexShadowZap40',
                     'BYTE_Star71', 'NinjaDrift75YT', 'XxProOmegaxX20', 'RiftSt0rmy90', 'BaneSt0rmyBeast',
                     'BlastBlazeMoon90', 'HAZ3_Dragon10', 'EchoRift200668', 'ShadowCookieEcho2020', 'MasterAquaOmega65',
                     'Pix3lat3dVort3xHyp3r', 'DawnCrazeSpark2008', 'XxThunderHunterGamer', 'Phoenix_MOON2018',
                     'XxStormyHeroxX67', 'XxLi0nAlphaIc3xXYT', 'Silver_Turbo94', 'St0rmyR0cketQueen',
                     'CircuitCooki3202326', 'MiaFox200652', 'Xx_AuroraSparklyGala', 'Sparkly_HUNTER47',
                     'Echo_St3alth201126', 'BaconRift19', 'JellyCrystalIceYT', 'Willow_Dawn200761', 'Gh0stDarkC0d3',
                     'RocketSonic83', 'Byte_Tiger83', 'Dragon_Rogu32005', 'XxCyberRiftxX88', 'MysticMoonWolf2021',
                     'EchoJellyLion2006', 'EpicF0x201911', 'XxBuilderCircuitxX27', 'LuckyProBlast200546',
                     'StreamBeastPanda54', 'UltraCyberLight2013', 'XxChaseBytexX2020', 'StarShadowRid3r',
                     'GoldenMysticNova', 'AmeliaVenomCyber2021', 'XxIsaacQueenxX2024', 'XxJellySkaterxX2004',
                     'EzraRav3nSt3alth', 'Epic_Mystic201416', 'OliviaZ3roDark', 'MagicLegendPlayz2018',
                     'Xx_SparkDragonKnight', 'BearPrism2021_YT', 'EthanNinja2019_YT', 'ProIc3Gam3r',
                     'CarterOmegaHero2002', 'LucasKnight200618YT', 'XXFROST_BanexX2009', 'DancerCrystalDuck89',
                     'BlastLava2007_YT', 'MoonMaxFoxYT', 'Aid3n_ORBIT85', 'Xx_HazeC00kieBuilder', 'Pix3lByt3Danc3r',
                     'KayleeNinjaDrift2004', 'Li0nEch0St0rm', 'Z00mG0lden72', 'Block_Bane14', 'Blast_Drag0nYT',
                     'Micha3l_Str3am16', 'LuckyFuryCyb3r2009', 'VenomJelly85', 'Playz_Zoom201312', 'Samuel_Hunter61',
                     'EchoB3arMoon', 'Puls3Hawk2017', 'XxLionAquaSonicxX57', 'Br00klynnBuild3r2002', 'AsherPlayz202350',
                     'XxZayden_DawnxX30', 'HannahPulseHaze2006', 'C00kieBear54', 'Drift_Viper88', 'Ic3BlockLucky',
                     'WraithRift200591', 'MasonByt32003', 'Aubr3yFlam312', 'Will0wR0gue200840', 'BearRaven53',
                     'ByteBlizzard52YT', 'Ech0_Z00m38', 'NightStormyEcho96', 'LightStormGhost', 'Ban3Duck21',
                     'Glitch_Hyp3r66', 'Isaac_Pulse94', 'ThunderSilverGamer20', 'Galaxy_Wraith2009', 'NoahAc32015',
                     'XxZeroFoxZapxX', 'CHASE_Knight27', 'ChaosBaconCircuit200', 'EchoJ3llyGlitch', 'Tig3rZap47_YT',
                     'XxUltra_SilverxXYT', 'Dancer_R0GUE200799', 'CodeKnight201616', 'XxMoonZeroChaosxX',
                     'FlashFir3Blad397', 'Galaxy_Lion2017YT', 'Turbo_Byte2024', 'BlazeVoidFoxYT', 'BeastEaglePanda',
                     'BlazeSilverChase', 'Rider_Storm49', 'HawkStealthBlock', 'FusionZapAce', 'Ow3nPandaFusion62',
                     'Storm_Gamer201250', 'Fusi0nLavaBlast', 'Turb0TigerFr0st', 'Moon_Orbit2018', 'AddisonLight201352',
                     'XxNight_PixelxX2016', 'Pix3lat3d_Lion2009', 'HarperGh0st2005', 'FlashHyp3r38',
                     'TigerSkaterZero2017', 'Xx_Thund3rMast3rVoid', 'LoganFusion2024_YT', 'HUNT3R_St3alth47',
                     'RavenSilverCraft', 'Paisl3yFlick15', 'CookieLavaLion', 'Charl0tteBac0nDrift2',
                     'XxGabrielThunderxXYT', 'FusionBlockNight', 'CyberIceG0lden42', 'PixelCodeVoid2013',
                     'MoonStarry68', 'EthanClawMin3r2002', 'XxOrbitEch0Rav3nxX', 'XxPixelSt0rmyxX15YT',
                     'Gabri3l_Pix3l2013', 'XxChl0e_W0lfxX2011', 'ChillArr0w202368', 'Xx_SparklyGlitchChil',
                     'XxCircuitFlashDawnxX', 'EllaBuilderVenom2007', 'GlitchB3arPrism', 'FlameCode200597',
                     'XxBac0nBytexX2003', 'ToxicCode200513', 'XxKingSt0rmxX19', 'SebastianTigerHaze', 'Chill_Zoom30',
                     'SkyW0lfPixel', 'Cookie_Flick2006', 'SilverStream2020YT', 'XxMaster_SlimexX2011', 'Ac3Gold3nAqua',
                     'Qu33nStarryCraft', 'UltraPlayzPuls3', 'Blaz3Haz335', 'XxSamuelPrismxX81', 'HAZE_Ice57',
                     'AquaVenom97', 'XxElli3Skat3rN30nxX2', 'Playz_Circuit200952', 'XxLavaGalaxyBanexX20',
                     'Echo_Claw81', 'HeroStarry60', 'XxLuckyBladeZapxX', 'TurboRock3tBuild3r20', 'PandaS0nicChill',
                     'Her0F0xCha0s67', 'PandaKnightStarry', 'PrimalFox201257', 'Byt3PrismCraft2023', 'ClawGoldenFlick',
                     'Ech0Skater73', 'FusionZap2014YT', 'Shadow_Raven200838', 'JaxonAquaDancer', 'NoraDark201486',
                     'XxKingPixelxX2019', 'XxChaosHunt3rxX2016', 'Brooklynn_HAWK42', 'PulseMoonSky25',
                     'XxEagleSonicDriftxX2', 'GraysonKnightGhost20', 'DancerDawnLegend', 'R0gu3Z00mAqua',
                     'XxTurbo_FlashxX2011', 'Blade_Frost26', 'LucasMysticPower2003', 'SonicSkyDuck94', 'St3althGhost18',
                     'LeviBlockEagle2006', 'XxZoomFlickxX2009', 'XxEchoWolfxX2020', 'Fir3SparkL3g3nd', 'LukeQueenFr0st',
                     'PrismBuilder200810', 'XxCrystalH3r0PandaxX', 'EzraShadowDancer', 'ArrowNovaGalaxy',
                     'DawnEch0Bl0ckYT', 'FlickThunder2002YT', 'XxHannahNightHunt3rx', 'XxGraysonRoguePandax',
                     'Thund3rPow3rSparkly', 'ViperDragonTurbo2007', 'St0rmyPh0enixW0lf', 'TurboStreamDancer202',
                     'XxDuckSparkMoonxX', 'Pho3nixStorm63', 'WolfWraithDrift_YT', 'AceShadow200269',
                     'DarkStarryKing2019', 'B3astRock3t201095', 'Xx_AddisonPrimalBuil', 'XxPaisl3y_QU33NXX200',
                     'XxB3ast_DUCKXX2019', 'DuckPhoenixArrow', 'XxPrism_G0ld3nxX54', 'Xx_WillowStreamPulse',
                     'CrazeStarryZap', 'Wraith_Build3r67', 'Viper_Epic74', 'NinjaBaneFlash_YT', 'Dani3lHyp3rEpic',
                     'BlazeShadowStealth11', 'AlphaH3ro18', 'Xx_JulianChillSkater', 'Zayden_Slime65',
                     'Dani3lDanc3r2006', 'MinerDrift200579', 'NeonSlimeDawn2015', 'LeviHazeBlizzard85', 'N0raTurb02019',
                     'MoonThund3rLight', 'Silv3rArr0wChill2020', 'Xx_BlizzardNightVipe', 'TigerEagleToxic',
                     'Silv3rMin3rAqua', 'Dragon_Pix3l33', 'LightCrystalArrow202', 'SamuelDragon58', 'Aubr3yLavaNight',
                     'ChaosFlam3H3ro', 'Cart3rFir3Z3r0', 'XxBlizzardBeastxX77', 'MaxPho3nixMystic',
                     'Xx_Charl0tteMagicOrb', 'VictoriaAlphaFrost20', 'JamesInfernoPlayz', 'EzraBaconWolf2024',
                     'Eagl3Hunt3rSt3alth', 'Mate0PrimalR0cket', 'NinjaNeon200717', 'XxRiftAquaBlockxX',
                     'StealthEchoSkater201', 'RiftGalaxyClaw2006', 'CookieZoomMystic', 'XxZaydenVenomBeastxX',
                     'WyattOmega73', 'Knight_Stormy77', 'XxJam3sCrystalxX2018', 'GalaxyVenomMystic201',
                     'PandaJellyFrost', 'EmmaCookieDark2003', 'Ow3nNightSlim3', 'PixelRift202245', 'BearLight49',
                     'XxOmega_LionxX24', 'Liam_IC32021', 'AlphaKing202269', 'Craz3Hunt3r2007', 'W0lfLegend2015_YT',
                     'MIA_Knight76', 'Ech0Fr0stRaven2005', 'GigaChill41', 'CharlotteCyberZapYT', 'S0nicChase39',
                     'ShadowHazeAlpha2019', 'JacksonPrism60', 'IsaacVenomCookie', 'Turb0Shad0wCircuit',
                     'XxBlizzardWolfxX2002', 'Samu3lBlaz3Alpha91', 'XxShadowLuckyStormyx', 'StarryLuckyVen0m',
                     'V0idNight2020', 'Z03Hawk2020', 'XxB3arCooki3xX2007', 'Pr0G0ld3n2013', 'PandaGoldenNova69',
                     'LukeStarryRaven', 'GalaxyDancerGlitch20', 'Oliver_Flame77', 'NovaLuckyCode2018YT',
                     'XxFlashDriftClawxX', 'EchoGiga201832', 'VictoriaToxic200938', 'XxDriftStarryxX38',
                     'Aiden_Pixelated15', 'XxJam3sZoomBuild3rxX', 'Vortex_Gamer29', 'Luke_LEGEND2020YT',
                     'NovaBeast201886', 'XxHawkOrbitPowerxX', 'PrimalDrift201794', 'KnightSparkByt32020',
                     'James_Fox2016', 'MinerAquaBear2003', 'XxWillowFlickFusionx', 'Turb0_Rift32', 'PrimalCrazeFusion',
                     'HAZE_Wraith91', 'Gabri3lByt3Orbit2023', 'JulianSlimeStormy201', 'AsherV0rtexQueen2005',
                     'XxCookieNightPhoenix', 'C00kieZapHawk2014', 'GalaxyPrimalVenom', 'PulseEagle30',
                     'Oliv3rBlaz3Byt3', 'PrismCyberToxic', 'BlockPlayz201350', 'CodeDark2024', 'OmegaBlockClaw2014',
                     'Blad3Pow3rAc3', 'XxMinerFuryxX43', 'ZoeStreamNight201685', 'Silv3rTig3r2017', 'EvelynViperWolf',
                     'XxHunt3rLavaxX2008', 'INF3RN0_Knight2004', 'MysticBladeGhost', 'CyberMaxFrost2017',
                     'XX_EllaBuilderMystic', 'Craft_Pro2016', 'AlphaGalaxyGh0st', 'BrooklynLegend201889', 'Ic3_AC32006',
                     'ChaseBear48', 'LukeBladeSlime2010', 'BearOrbit2022_YT', 'EagleHawkSonic', 'XxTig3rUltraKnightxX',
                     'XxStreamClawPixelxX2', 'OliviaP0wer82', 'Aid3nDrift72', 'Shad0wMax2004', 'Arr0wP0wer2019',
                     'Rocket_VIPER202439', 'Mast3r_Pix3l201039', 'DANCER_Stealth2003', 'XxZoomBlad3PandaxX',
                     'EllaHero200447', 'AlphaZoomRogue', 'XxVortexFoxxX20', 'Gabri3lStormyBuild3r', 'Silv3rWraith2011',
                     'RiftR0gueStream', 'LionKnightNova18', 'AlphaNightPower', 'KING_Block2005', 'Kaylee_VENOM2004',
                     'Cyb3rVip3rSab3r51', 'Puls3_King2009', 'AbigailIc3H3roYT', 'H3ro_FURY26', 'QueenFlameVortex2018',
                     'AquaH3roB3ar2023', 'ViperPixelated26', 'Xx_AddisonDancerStar', 'Blaz3Eagl3Arrow',
                     'PixelRogue201785', 'KnightSlim3Cyb3r', 'XxEmma_M00nxX2018', 'BaneFusi0nSpark2018',
                     'KingRaven200282', 'XxAddisonGhostxX2022', 'ToxicGlitch200228', 'XxZeroAcexX89', 'Riley_MOON71',
                     'Flame_Fusion2005', 'CyberClawFox', 'ZapDragon200313', 'XxH3roAc3xX34', 'RavenBeastViper77',
                     'FURY_Thunder81', 'SlimeSpark32YT', 'Danc3rFusionChas3', 'St0rmy_PLAYZ52', 'XxBuild3rB3arMagicxX',
                     'StarryPix3l2011', 'Fury_Haze68', 'XxSkater_Ven0mxX2012', 'PixelatedDriftTurbo7',
                     'HannahBlastWolf', 'XxGh0stChillSparklyx', 'DarkPhoenixCircuit20', 'VenomProHero56',
                     'JAYD3N_Min3r52', 'Ow3n_Shadow2016', 'GamerFlick2007', 'XxUltraAceHeroxX', 'Hunt3rEpicSparkly',
                     'Xx_UltraBuilderLucky', 'XxFir3MagicxX31', 'L3viFlashB3ar', 'ChaosRift97', 'XxVictoriaFoxUltraxX',
                     'PixelatedVoid201956', 'Flick_Spark86', 'FlameLuckySlime2009', 'XxShadowBlastMoonxX',
                     'VortexBlazeByte2013', 'PixelatedViperZoom20', 'ChaosTiger201873YT', 'Inf3rnoFlam3Ban3',
                     'Ne0nEpic2017', 'QueenSky201715', 'GABRIEL_Cookie201566', 'XxGamerWraithxX77', 'JAX0N_B3ast18',
                     'StormChase200825', 'Xx_Li0nStealthPrimal', 'XxZ3r0Qu33nxX2014', 'Samu3lCyb3r200920',
                     'ChaosPandaInferno200', 'BrooklynStarSaber', 'XxStarDragonChillxX', 'HyperClawBuilder2018',
                     'PixelVoidIce65', 'StormyGamerIce', 'C0de_BLAZE2004', 'XxCooki3StormLavaxX', 'XxM00nGamerxX31',
                     'Infern0BlastTiger', 'PrimalWraith71', 'MichaelRiftBear2007', 'XxCrystalLightLionxX',
                     'JacksonDragonStealth', 'Puls3_Duck2018', 'XxWillowAlphaxX2008Y', 'Xx_JaxonVortexStream',
                     'SkyJellyHunter', 'EpicDancerSaber', 'WyattVortex2004', 'Fury_R0cket201694', 'WilliamEagl3Fox',
                     'JulianFusion2016YT', 'Min3rSonic58', 'LaylaPow3r38', 'J3llyG0ld3nR0gu32006', 'NightCircuit48',
                     'J3llyEagl339', 'UltraBac0n2018', 'ViperHyper200289', 'Jacks0n_Drag0n46', 'DuckBlizzard201180',
                     'TurboChaos75', 'William_Puls32010', 'CyberGalaxySky', 'Eagl3Arr0wB3ar', 'LightPhoenix2004_YT',
                     'MagicPrismCraze31', 'Al3xand3r_Turbo2016', 'WraithChillPulse2024', 'SavannahChaosDawnYT',
                     'XxViperS0nicxX90', 'StreamHazeSkater', 'ScarlettFlameStormy', 'XxRil3yArrowxX98',
                     'XxAidenAceBlockxX', 'LucasMystic202344', 'XxDarkSlimeS0nicxX66', 'EmmaCraftFusi0n2011',
                     'Arr0wFireFlick64', 'HENRY_Star50', 'XxChill_GlitchxX2019', 'Haze_Mystic16',
                     'Rid3rSparklyWolf2007', 'Mystic_Chill2018', 'Luke_Chaos2009', 'HazeBearZoom', 'NinjaFlickHaz3',
                     'Cha0sThunderW0lf', 'XxLavaUltraPrimalxX2', 'Rid3rSonic71_YT', 'AidenBlazeGalaxy2003',
                     'Blast_Light201560', 'RogueFuryBlizzard_YT', 'XxPhoenixGalaxyDarkx', 'Fir3SonicBuild3r',
                     'MysticPowerEagle_YT', 'MasonFusionBuilder54', 'Aid3n_L3g3nd39', 'VoidMagicViper',
                     'BlazePixelGh0st2012', 'Cha0sDrag0n200982', 'DragonGolden201872', 'XxJamesHawkPandaxX',
                     'Inf3rn0_C00ki327', 'BearMysticMagic2010', 'NovaTurbo45', 'Jack_Ace2002YT', 'Xx_BeastCircuitTurb0',
                     'BladeZeroCyber2024', 'GalaxyKnight2002YT', 'RocketPrismMystic202', 'XxMateoAquaRocketxX',
                     'GalaxyQu33n54', 'R0gueFuryCraze_YT', 'XxHazelDriftxXYT', 'Ril3yChas321', 'AmeliaStarryMoon2009',
                     'Master_Aqua89', 'SkaterChillPlayz11', 'SlimeCrystalFlame', 'ProIceBlade56', 'Michael_Haze12',
                     'OmegaSonic200542', 'SaberAqua2023YT', 'XxLeviFlamexX201013', 'XxJacksonNeonStormyx',
                     'XxRiley_MysticxX2005', 'ByteHazeStarYT', 'JackKnightPower2013', 'V0idQueen44',
                     'Hunt3rKnight201133', 'HawkSparklyCyber', 'RIFT_Hero200843', 'Jam3sEpic54', 'NovaEcho201992',
                     'XxByteFrostxX2013', 'Drag0nAlphaFr0st2009', 'BanePhoenixDrift', 'Bear_C00kie201069',
                     'Samu3lMagic45', 'XxSilverCraftxX64', 'SebastianS0nic45', 'HunterStarW0lf2011',
                     'HawkEpicSonic64_YT', 'M00n_W0lf20', 'J3llyMagicLucky', 'BearNova25', 'XxAidenGlitchxX2012',
                     'XxLaylaDriftxX2016', 'EmmaOrbitPrism', 'LiamZer040', 'LegendBeastFr0st', 'RiderNight200461',
                     'FrostCrystal32_YT', 'MysticV3nomStorm', 'XxJacks0n_Pr0xX57', 'MasterFlickAlpha60',
                     'Xx_Will0wR0cketTurb0', 'EmmaCraftBlaze2006', 'DuckWolf71', 'BlockOmegaViper2010',
                     'PH03NIX_Claw2011', 'SkySonic48', 'SavannahPh0enixFury', 'OliviaShadowRid3r', 'Stealth_Aqua73',
                     'Slim3ChillBlizzard', 'XxMoonKingBlizzardxX', 'Luk3_Tig3r2020', 'NinjaSparkly2012_YT',
                     'Phoenix_Sparkly48', 'SparklyInfernoAqua', 'FlameEchoNinja', 'XxMiaRiderxX60', 'ViperBlizzard49',
                     'Gabri3lMagicRift2016', 'DawnIc3Chaos42', 'Venom_Dragon2006YT', 'SparkFr0st62', 'ArrowCooki32005',
                     'BaconHyper2006_YT', 'LukeUltraStealth2012', 'XxJacksonZoomFlashxX', 'RileyPixel201148',
                     'Xx_JACKSONNINJACOOKI', 'Paisl3ySt0rmy2023', 'BuilderShadow2017YT', 'AceFlick2003', 'GamerR0gue26',
                     'Cooki3Z3ro95', 'Charl0tteBeast201862', 'Rocket_FLASH201720', 'XxSamu3lChas3Rav3nxX',
                     'Xx_LaylaBlizzardZ3ro', 'XxL3vi_H3r0xX2020', 'Xx_IsaacStormBuilder', 'XxGraceGlitchxX2017',
                     'PhoenixRavenLucky', 'XxFlamePrimalxX2004', 'Blast_EAGL3201729', 'XxGigaNeonFoxxX',
                     'XX_KayleeFlameSparkl', 'GoldenKingStormy2016', 'PowerNova22', 'XxCha0sAceDrag0nxX',
                     'Micha3lBan3C00ki3', 'NeonLucky34', 'PulseSparkly200568', 'Micha3l_Chill2014',
                     'ULTRAVIPERHUNTER_YT', 'Ezra_Hero55', 'WyattH3ro46', 'ElijahDriftSlime97', 'XxDawnFlickDuckxX',
                     'ChaseShad0wLi0n', 'MasonAce200949', 'Miner_Pro97', 'XxAddisonBuilderLion', 'GalaxySilver201342',
                     'XxNeonTurboxX18', 'Xx_MysticSilv3rR0gu3', 'XxSkyDarkNovaxX2012', 'WolfCircuit48',
                     'XxMason_BAN3XX2002', 'XxEliVortexxX2003', 'AddisonSilverGamer', 'Mate0IceEagle', 'PrimalDawn99',
                     'RiftR0gue56', 'XxScarlettKingxX2011', 'XxFireSparkxX2006', 'Tig3rFr0stDrift2012',
                     'S0nicDanc3r2004', 'FlickZer02006', 'MasonBladeThunder201', 'XxToxic_MinerxX2009',
                     'UltraVoidSonic', 'JulianThund3rStar', 'XxHarperEpicxX2002', 'ZapR0gueBl0ck', 'DarkAquaHawk2003',
                     'ChloeThunderStream20', 'VoidUltraRocket_YT', 'BuilderBl0ckMax', 'ZeroUltraFrost2011',
                     'BlizzardPow3rDragon2', 'RiftZapDragon', 'AceT0xic64', 'JaydenDuckKnightYT', 'EzraNightFlick2014',
                     'DarkSilverChill14', 'VoidGhostByte', 'Will0wByte201260', 'FlickIc3Blast', 'XxPandaCrystalUltrax',
                     'XxGhostEagleSparklyx', 'Thund3rUltra2019', 'Galaxy_F0x2004', 'XxSparklyKingxX2020',
                     'LuckyN3onNinja', 'SamuelHeroArrow34', 'Build3rAc3Lion202245', 'Shad0wFlickNight', 'XxF0xBytexX84',
                     'Pix3lStr3amDrag0n', 'N0ah_Builder28', 'C0deDark2008', 'Void_Zero38', 'MichaelVenom200535',
                     'Chas3CraftGhost', 'XxArr0wPlayzxX201775', 'EvelynFusionRocket', 'XxSavannahBeastGalax',
                     'Thund3r_Blaz368', 'HawkBuilderArrow', 'FlameStealthMiner', 'ToxicVortexSilver',
                     'XxGoldenGalaxyStarxX', 'XxRiderHeroOrbitxX', 'SilverLavaFrost', 'WraithGlitchPro', 'DragonEpic87',
                     'BuilderMinerWolf2007', 'SavannahDawnPix3lat3', 'LiamZ00m2017', 'Qu33nZ00m2009',
                     'Alpha_Epic2008YT', 'Ech0Circuit201151', 'Infern0_EAGLE2002', 'ViperS0nicLucky25',
                     'ToxicHeroFusion2020', 'Gabri3l_Sky2003', 'GalaxyFurySparkly201', 'XxIsaacKnightxX20062',
                     'Fir3_CRAFT202465', 'XxWolfLightBlizzardx', 'Pix3lSparkVoid2003', 'NovaEpic36', 'Thund3rB3arHawk',
                     'AubreyMasterVenom201', 'XxBlade_PROXX201551', 'T0xicBac0nPulse', 'TigerCookie200389',
                     'SebastianP0werSpark4', 'BlastToxicCrystal201', 'XxFuryCyberxX23', 'XxHazeStreamxX201414',
                     'XxEcho_StormyxX32', 'Ow3nThund3rMagic', 'StarryGamerQueen2004', 'Fury_Lucky2011',
                     'LunaDuck2004_YT', 'XxZoeLionNightxX', 'TigerDragonLion2021', 'Xx_Br00klynWraithStr',
                     'FoxGigaPixelated2006', 'XxNora_TurboxX2019', 'S0phiaAlpha48', 'Turb0Gh0stPixel2020',
                     'HazeSt0rm2017', 'StarryWolfHyper12', 'Ic3_B3ast2023', 'Toxic_Slime62', 'Moon_Om3ga86',
                     'XxOliv3rSparklyxX90', 'HyperArrow200962', 'CrazeEchoUltra_YT', 'FrostEchoVortex51',
                     'MasonPhoenixPro', 'LoganWolf37YT', 'XxPix3lat3d_UltraxX1', 'Jaxon_Panda28YT', 'SparklySky31',
                     'ByteEchoBlaze2017', 'Skat3r_Fury2024', 'XxQueenHeroxX2020', 'XxC0de_R0GUEXX2016',
                     'StealthMagicWraith', 'ScarlettDark2019', 'Zayd3nUltraDragonYT', 'RiftAlpha200331',
                     'PRISM_Frost60', 'XxFlick_LuckyxX2008', 'LavaBuild3rSpark', 'FlashRiftGlitch2023Y',
                     'Rid3r_Z00m2020', 'HAZEL_Cookie200431', 'EmmaZ3ro91', 'GalaxyTurboFire_YT', 'XxSebastianSonicxX76',
                     'CircuitStealthV0id', 'XxCyberGoldenxX72', 'DanielStarryAce2005', 'RileyG0ldenDuck2021',
                     'Harp3rMoonDuck2008', 'Sonic_Pixel26', 'XxBuilderCraftFoxxX', 'Rock3tToxicRid3r',
                     'HazeStormyStealth201', 'OliverChaseTiger', 'SonicByt3Aqua_YT', 'XxPhoenixEchoxX60YT',
                     'StormFurySpark89', 'Dani3l_Duck31', 'EllieVenomSkater', 'Charlott3_Wolf200699', 'Magic_Storm40',
                     'Circuit_Silver43', 'KingVip3rRock3tYT', 'XxFox_PrimalxX59', 'LionGoldenBane', 'XxTigerMoonNeonxX',
                     'StreamMaxVortex2020', 'XxEllaCraftxX200989Y', 'AmeliaTurb069', 'SkaterPlayzFlame',
                     'KingJ3llyPow3r200547', 'Z3roDrift2013', 'DragonSkySlim3', 'Str3amPho3nix200829',
                     'XxLoganStormFlickxX', 'Blast_Rocket2023', 'XxCodeFlashTurboxX', 'XxPho3nixRiftxX88YT',
                     'GamerNeon98', 'Jackson_Night78', 'XxClawJellyxX88', 'Xx_SavannahPixelBloc', 'Omega_Pixel40',
                     'MagicFurySilver2002', 'NoraCod359', 'AriaFrostCraze', 'ChaosPrimalUltra87', 'JulianOrbit18',
                     'NinjaPrimalOrbit_YT', 'ByteBuilderG0lden61', 'WyattDark41', 'Craz3Ghost62_YT', 'ProDawn39',
                     'XxEliNeonxX200432', 'Thund3rT0xicYT', 'EchoFoxShadow_YT', 'SAMUEL_Eagle2009', 'Aubr3yKingStorm83',
                     'CraftFireEcho201095', 'Ice_Crystal83', 'CrazeKingFlick', 'PrismPix3lStarry', 'AquaFrost202457',
                     'PulseUltraNeon', 'XxKaylee_Arr0wxX2024', 'MagicCodeHero26', 'SparkAlpha2018YT',
                     'TigerWraithPower', 'PlayzWraith202157', 'Layla_Craft30', 'StealthWolfPulse2022',
                     'Chl0eMasterLight', 'BlockBeastCode', 'LegendEchoTurbo2022', 'DawnStarryBlast20228',
                     'Silv3rProOrbit', 'AriaCyberAlpha2024', 'XxL0ganStarBladexX', 'Bane_Crystal200429',
                     'CyberPixelToxic2008', 'JellyGigaMystic2024', 'St3alth_VORT3X69', 'WillowVoidFlash2009',
                     'BlizzardLavaBlaz3', 'XxRiftBlazeClawxX', 'ZapProFire41', 'AidenSaberStar2015',
                     'BaconStealth200993', 'LunaBlizzard46', 'JAM3S_Zap90', 'Will0w_Dark83', 'Asher_Ice42',
                     'EthanPrismBuilder201', 'XxPhoenixBlockxX2017', 'Julcafoy751', 'Holtywicka93662', 'Critzeul709',
                     'Andisadem071', 'Poshalic481', 'Settholba9195', 'Siamayundt8018', 'Palsananda014',
                     'Odgenkrohn58794', 'Maizyvece5878', 'Bovenesti3080', 'Akselangry9013', 'Baiahurr78311',
                     'Geneyolva632', 'Jilraaya8440', 'Dyarkuse633', 'Fumometry787', 'Ranttervo36514', 'Keethbarby113',
                     'Fullddene221'}
local RECEIVER_LIST = {'EthanBlaz3Ac32012', 'Xx_VictoriaWraithHer', 'Stream_Nova2005', 'PixelSlimeFlash20142',
                       'JaydenPixelBlade32', 'RiftSt3althV3nom', 'DanielUltra2012YT', 'SparkTurboHyper54',
                       'Ow3nMast3r2017', 'RiftMagic200630', 'Skat3rTurboFury', 'ClawStarry2009YT', 'MichaelPandaAqua',
                       'C00kieZer0Dark2005', 'Claw_Min3r26', 'Ow3nTurb0Wraith', 'JackSparklySaber2020',
                       'Zoom_Aqua201526', 'Craft_Byt375YT', 'Xx_MinerBuilderGlitc', 'XxCyber_StormxXYT',
                       'W0lfAlphaIce82', 'BrooklynnPixel29', 'MagicSkater2015YT', 'XxMoonFir3xXYT',
                       'XxIsaacPandaxX2021', 'SkaterDancerBlast202', 'FlameSilverPrism', 'Cod3_Dark2016YT',
                       'Echo_Min3r2024', 'Blad3_COOKI363', 'ArrowIc366', 'Sebastian_Star89', 'NightSt0rm28',
                       'EpicChillSlime', 'XxHarper_JELLYXX2012', 'TIG3R_Rid3r2022', 'XxOliviaSkyLightxX',
                       'XxThunderNightxX_YT', 'WillowPix3l82', 'WillowZapGam3r', 'Her0F0xBlaze'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken','DeathGachaToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
