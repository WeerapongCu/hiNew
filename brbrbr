-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'XxQueenCircuitArrowx', 'ChaosKingByte', 'Vort3x_Build3r2005', 'SilverEpicSt0rmy2011',
                     'XxRiftRocketxX201868', 'Ac3UltraBlizzard2005', 'CrystalInfernoOrbit', 'RiftSab3rFury',
                     'BlockBuilderWraith', 'Tig3rPrimalPuls351', 'Circuit_V0id30', 'XxWyattHer0xXYT', 'Cha0sEpic2004',
                     'Xx_HAWKSTORMBLIZZARD', 'SparkHaze10', 'StreamMysticDawn_YT', 'Build3r_WRAITH54',
                     'SkaterGolden2015YT', 'Luna_Skater2008', 'ChaosH3ro2008', 'HyperStarrySt0rmy83', 'Cooki3Slim32010',
                     'ToxicGalaxy202290', 'ChaseMystic2013', 'XxStormAquaRiftxX', 'BaconChas3Dragon',
                     'XxZaydenBladeAquaxX', 'Alexander_MAGIC20202', 'EchoStormIce', 'XxVip3r_Eagl3xX20125',
                     'VenomSonicPrism', 'OwenWraithFlick_YT', 'C00kieUltra65', 'Ech0CyberClaw', 'XxPixelatedEaglexX58',
                     'SlimeNeonVortex2018', 'ProStealth200726', 'Crystal_Queen201657', 'JamesCyber34', 'NovaCraze65',
                     'SparkClawGalaxy2021', 'MysticIc3201353', 'XxFlickProxX2016', 'CyberStormyFrost',
                     'WyattHero201235', 'Byte_Hero56', 'XxEllie_SkyxX2018', 'DragonFury202329', 'Cooki3Ghost81',
                     'HawkFlickDancer', 'XxPr0_BearxX201793', 'Ava_Playz200626', 'MoonPixelKing', 'Ac3NinjaPho3nix2003',
                     'XxLionToxicxX2024', 'XxRocket_MoonxX41', 'ViperPowerVortex2003', 'XxZaydenHer0JellyxX',
                     'RiftL3g3nd33', 'Byt3_Blizzard2010', 'JulianHyperInferno', 'SparkCrystalZero', 'FlameRaven54YT',
                     'Micha3lPix3lat3dTurb', 'Queen_Pixelated20035', 'DriftKingCod3', 'LukeGhostMoon',
                     'LucasKnightCookie', 'XxBaneSilverCyberxX', 'Viper_Aqua200541', 'Aid3n_SKAT3R2011',
                     'Om3ga_Magic99', 'RiftLionPlayz52', 'S0nicCrazeCha0s', 'LavaHunterViper2023',
                     'XxSpark_SaberxX2016', 'EllaQueenViper95', 'GamerZer046', 'Sab3r_B3ar34', 'KnightPhoenixGamer20',
                     'RiftByt322', 'AriaPlayzPow3r2023', 'PrimalBeastWolf', 'HawkBuilderFire2007', 'W0LF_Zer0YT',
                     'XxBl0ckV0rtexxX2022', 'XxDriftInfernoxX2002', 'FlameVen0mPixelated', 'MaxThunderMaster',
                     'Samu3lArr0w2014', 'Jam3sKing2018', 'XxCrazeCha0sxX2003', 'R0gu3_Prism25', 'Slime_Dragon200584',
                     'Xx_JULIANHAWKCIRCUIT', 'HawkInfernoPrism2013', 'XxScarl3ttEchoTig3rx', 'PaisleyByteNe0n19',
                     'GabrielZoomVortex', 'Storm_Chaos201237', 'ChillAlphaBlock', 'Z00m_Lucky2013', 'Storm_ECHO200947',
                     'Bane_Flick201074', 'XxPrimal_GigaxX2021', 'FuryDragonRogue', 'XxMysticFoxxX2004',
                     'XxLiamDanc3rChillxX2', 'MasterLionPulse2003', 'Her0S0nicHawk2018', 'TURBODAWNQU33N_YT',
                     'XxLoganStealthSkyxX1', 'N0vaHyperStream', 'LegendToxicByte', 'AubreyGalaxyBacon', 'N0va_Haze23',
                     'Charl0tteFlashDark', 'XxSlime_SilverxX42', 'RiderCircuitPhoenixY', 'NoahStarryZero68',
                     'EllaOrbitLucky30', 'FlashSt0rmyUltra2023', 'NightChaseArr0w', 'AmeliaFusion88',
                     'ByteKingStealth_YT', 'Ech0WraithC00kie', 'XxNoah_GLITCHXX83', 'SaberSparkTurb077',
                     'OrbitCircuitPlayz201', 'XxGh0stNinjaxX2005', 'ZapLavaPrism2009', 'B3astN3on85', 'Panda_RAVENYT',
                     'Pro_Vortex68', 'WilliamSparklyNight2', 'XxJackQueenVenomxX20', 'AriaOmegaCraze2022',
                     'Kayl33Fir3Epic', 'XxSparkVoidxX2003', 'Craft_Bac0n77', 'PrismSaber18_YT', 'KingFusionPower2006Y',
                     'BearRogueOmega', 'PhoenixStreamSkater8', 'SparkCraftVenom2004', 'XxGamerCodexX29',
                     'SilverTigerBlast2021', 'PaisleyGalaxyBacon55', 'ChloeDark30', 'NeonKingInferno2008',
                     'JacksonZoom61', 'XxToxic_SonicxX2003', 'LaylaSonic99', 'VenomMysticCyber73', 'XxMasonBytexX22',
                     'Oliver_Galaxy201134', 'Charlott3Playz2017', 'SparklyStreamWraith', 'GamerTurb059_YT',
                     'Drift_Silver69', 'XxPrism_ACEXX2018', 'N0ahHer099', 'Skat3r_Knight72', 'XxGrays0n_BanexX2002',
                     'V0rt3xAlpha20', 'XxBlizzardSkyV3nomxX', 'Bear_Flick2003', 'BlazeBuilder98', 'FuryEagle201091',
                     'XxAbigailBuilderZ00m', 'Craze_Frost201666', 'LunaMaxClaw46', 'Dani3lFlash2008',
                     'OliverSkaterEcho2005', 'Ethan_INFERNO28', 'V0rtexFuryBlizzard', 'UltraTurbo2009',
                     'HenrySkaterPhoenix', 'StormEaglePower30', 'XxBlastSkyHawkxX', 'NoraFlameArrow2010',
                     'OrbitVortexEagle2015', 'XxBlockNightxX2011', 'ST0RM_Ic32022', 'CHLO3_Pro202168', 'Oliv3rSkat3r38',
                     'EzraLegendBuilder', 'LavaSkyPixel2011', 'Chaos_Chill74', 'CyberPanda2008', 'AquaB3ast202170',
                     'TurboDanc3rZap201270', 'BlastN3onTurbo', 'KnightJ3llyVoid', 'AquaIce37', 'XxFoxRock3txX2003',
                     'ChaosLucky42', 'MagicWolfGamer2017', 'XxPowerFusionxX69', 'GIGAJELLYKING_YT',
                     'EvelynBeastCrystal20', 'Harp3rKingGhost', 'Wolf_Cookie2020', 'ElijahVip3rAc3',
                     'XxWraithStr3amFusion', 'XX_MysticHawkSparkly', 'WraithPowerMaster', 'Oliv3rToxicShadow',
                     'RiderMiner64', 'Vort3xCooki32007', 'RiderLionWraith', 'Ril3yL3g3ndQu33n76', 'XxMateoGalaxyxX2014',
                     'AbigailMaster58', 'XxNeonHeroxX20', 'Zoom_Beast200340', 'Primal_Bane201566', 'RileySt0rmyBeast23',
                     'ChloeGhost201367', 'RiderGlitchPulse', 'Paisl3y_St0rm2022', 'MoonBaneBuilder16', 'Builder_Bear99',
                     'XxDragonArrowCod3xX', 'XxHannahSaberGhostxX', 'Ic3N3onMast3r', 'OwenHunter30', 'Giga_Arrow2006',
                     'Beast_CIRCUIT200237', 'XxHenryNightDuckxX', 'NinjaP0werC0de2023', 'L3g3ndPrimalTurbo',
                     'MIA_Storm12', 'XxHenryGoldenBlockxX', 'Build3rAlphaNight201', 'XxEllieZoomxX2004',
                     'NoraToxicSkater', 'Giga_DARK27', 'XxNora_BLIZZARDXX92', 'DawnWraithIce95', 'RiderKingWraith20203',
                     'Build3rV3nomStorm', 'NinjaPhoenixCrystal2', 'Str3amUltra2005', 'EliAceHunter',
                     'Xx_JackBuilderLegend', 'XX_SamuelInfernoEpic', 'XxJacksonGigaIc3xX', 'XxZer0Gh0stxX2007',
                     'LukeLionGamer37', 'Mas0nNe0nStealth', 'RileyEpicGalaxy2015', 'XxMate0_NIGHTXX2002',
                     'RiderGhostEcho', 'NinjaShadowGlitch201', 'XxUltraSilverDawnxX', 'Luke_Slime2006YT',
                     'Stealth_Dancer41YT', 'XxKingEpicArrowxX53Y', 'NINJA_B3ast200723', 'LeviClaw47',
                     'XxLava_BlastxX2013', 'PixelatedPulseS0nic2', 'XxLukeSkySkaterxX', 'Elli3Void90YT',
                     'PandaR0cketLucky', 'EllieProPixel2023', 'V0rtexR0gue2020', 'LunaZoom47', 'LionVip3r2018',
                     'Kayl33Qu33nFury2021', 'ClawGamerOrbit2016', 'IceFireChaos2021', 'OrbitLava28_YT',
                     'Viper_Arrow200723', 'XxB3ast_GIGAXX2003', 'BrooklynWolf201863', 'Vip3rInf3rno42', 'Shad0wSaber71',
                     'MoonEchoLegend2018', 'OrbitP0w3r2009', 'LionStormMin3r82', 'Arr0wSky200941', 'AquaHunter51',
                     'XxLightSparkxX_YT', 'B3arEch0YT', 'EliRider200231', 'XxAva_MoonxX2022', 'Elli3Cod3Eagl32008',
                     'R0gu3Fir32016', 'Craz3Vip3r2004', 'Pow3rSlim3Gam3r', 'FireStarFlick', 'Addis0nStreamWraith',
                     'ClawBeast201428', 'MoonGiga29', 'Orbit_MASTER62', 'XxStarPr0Ech0xX20049', 'JaydenDragonFusion',
                     'PulseBuilderTurbo202', 'Wraith_Lava78', 'Samu3lTig3r201126', 'Blast_Rogue2019', 'HarperKingBlaze',
                     'Chase_CRYSTAL73', 'ZapWraithMagic2008', 'Xx_ScarlettBuilderT0', 'Pow3rMagicDawn46',
                     'Aubrey_MAGIC2003YT', 'Cart3rPandaToxic32', 'StealthAlphaSky', 'XxOmegaThunderxX2019',
                     'JackC0deGh0st', 'Rift_Venom38', 'EllieDragonSkater', 'Aubrey_Magic201218', 'XxJax0nOmegaFlashxX',
                     'AlexanderMysticLucky', 'Xx_HarperBuilderDrag', 'XxNovaCodexX2020', 'SkaterVen0mNight2020',
                     'Jam3s_Ph03nix2002', 'Xx_SavannahUltraBliz', 'AvaZoomFury88', 'Master_Turb02002', 'FireVoid200387',
                     'OmegaGoldenFlick2020', 'EmmaByte200642', 'Xx_GlitchClawStealth', 'Spark_Qu33n2012',
                     'HazelPixelated200743', 'LegendVoid201811', 'LuckyHeroStorm2018', 'AceNight201236',
                     'MiaSkaterFox48', 'XxGraceBeastGalaxyxX', 'XxBaconInf3rnoxX2016', 'Hunt3rSkat3r12',
                     'XxStealthRiftGlitchx', 'PixelProViper61', 'XxLuckyStreamBlockxX', 'AlphaStormVoid',
                     'Xx_VictoriaBladePuls', 'StarEagle202296', 'Ril3y_BLOCK2003', 'XxIceCrystalStealthx',
                     'OrbitViperPixel2019', 'AquaRavenThunder', 'AubreyChaosMoon30', 'AceHazeSky',
                     'Xx_OliverUltraC00kie', 'XxAm3liaFuryxX2013', 'XxPaisleyFlashPrismx', 'Hunt3rChas3Playz',
                     'Ace_Inferno2021', 'PhoenixDark53', 'ClawBanePrism', 'CraftG0ld3nT0xic2007', 'JaxonUltraWolf27',
                     'Turb0Craft27', 'XxJackDancerxX43', 'EchoHyperDancer', 'XxBlad3ChaosxX2013', 'HannahLavaCookie56',
                     'XxRogueBeastxX2021', 'LavaIcePlayz2021', 'XXCIRCUIT_Ph0enixxX2', 'StormPrism79',
                     'W0lfBlazeGamer2021', 'BuilderBeast202494YT', 'ChillStealthKnight20', 'AriaZoomPower',
                     'DawnHazePanda2019', 'WilliamBlastPh0enix', 'Ban3_Toxic18', 'XxOwenBytexX2008', 'Infern0C0de2024',
                     'Arrow_LIGHT70', 'ClawDuck201829', 'FireS0nic23', 'Inf3rno_Flam358', 'XxPix3lC0d3xX200315',
                     'PhoenixFlameLion_YT', 'ElijahCha0s2020', 'Z3roPix3lat3dFlick', 'ChillC0de2012',
                     'St3alth_Cod32009', 'ScarlettGamerFlame20', 'J3llyCooki3Zap', 'GlitchToxicTiger_YT',
                     'St0rm_CYB3R2017', 'FusionBaconClaw', 'N0raPix3lRav3n', 'XxThund3rMagicPix3lx', 'StarryFireEpic60',
                     'Elli3Eagl3Ninja2014', 'PaisleyLight2005_YT', 'MateoHeroDancer', 'XxEagleAceZapxX',
                     'JacksonCyberFlame', 'NoahCyberSlime2006', 'EmmaCircuitSkater201', 'XxMiaShadowMysticxX4',
                     'BlizzardMoon202065', 'XxBlizzardRav3nThund', 'XxOwenBanexX2004', 'XxBeastFlameBytexX35',
                     'HannahBlast74', 'S0phiaLuckyGamer', 'GalaxyViper45', 'RocketEchoBuilder200',
                     'XxWillowRavenEaglexX', 'StarTigerBuilder2021', 'XxZer0CraftxX2005', 'SparkPhoenixNova',
                     'Mat30Danc3rAlpha', 'Ril3y_BYT32019', 'Silv3rFuryRift', 'BeastStreamHero2003', 'LavaC00kieFlick77',
                     'LavaAlphaMax94', 'ToxicTig3r200727', 'XxCircuitCodeDawnxX2', 'Build3rN3onLucky',
                     'Rock3tDarkBlaz383', 'JackMoonZap2021YT', 'LukeNinja73', 'XxSophiaBlockHawkxX1',
                     'Al3xand3r_TOXIC16', 'Z0eStealthQueen2022', 'Alpha_St0rm20', 'Drag0nLegend2011', 'OwenLionFox',
                     'XxRift_BEASTXX81', 'LightN0vaP0wer', 'MinerMagic201050', 'Xx_ISAACLUCKYBUILDER',
                     'BrooklynWraithFireYT', 'XxAceCodeMagicxX', 'MateoCircuitInferno2', 'GigaFrostCookie',
                     'Xx_Micha3lSlim3Lucky', 'Fir3Storm60', 'W0lfBl0ckFlame2013', 'StreamIce59', 'Xx_LuckyCookiePixela',
                     'XxLoganRavenTurboxX2', 'SaberM00nKing45', 'XxArrowZeroxX45', 'EllaNight71',
                     'Xx_ADDISONCRAZEFROST', 'XxClawOrbitNinjaxX23', 'Xx_SparklyFrostOrbit', 'GraceLight2010YT',
                     'AquaViperPixelated', 'MinerQueenLi0n2022', 'SlimeCrystalFlick202', 'SebastianPr078',
                     'ZAYD3N_B3ast82', 'TigerByteKing2018', 'MagicArrow86', 'PixelOmegaWolf_YT', 'Inferno_Ace42',
                     'Ow3nPix3lL3g3nd2004', 'Ph0enixTigerDark2021', 'GigaR0gu314', 'FlickDuckMasterYT',
                     'Xx_PixelatedDragonEa', 'StormyTurboViper2015', 'Fox_Glitch23', 'HenryNightC00kie', 'Sky_Echo2019',
                     'B3arSparklyCircuit', 'KingStar2013YT', 'AC3_Ghost21', 'Turbo_Echo97', 'J3llyCyb3rFlam3',
                     'Xx_BaneCircuitDragon', 'XxFusionEpicCyb3rxX', 'HannahLightAlpha17', 'XxCodeGoldenxX98',
                     'LeviNightStarry2021', 'PrimalOrbitMagicYT', 'BeastLavaSparkly', 'XxRavenNightxX75',
                     'StarFlickStormy88', 'SparkOrbitFir3YT', 'Flick_Fox202328', 'C00ki3Haz32015', 'Cyber_WRAITH201861',
                     'VictoriaSkat3rRock3t', 'FusionGlitch34', 'XxW0lfJellyxX2009', 'JacksonBlast202425',
                     'BlizzardRock3t47', 'MagicOrbitHer02012', 'LaylaBuilder49', 'XxLevi_GlitchxX2012',
                     'MasonStreamFrost2002', 'SlimeBeastFury', 'FusionFlick54', 'RiderSparkly36', 'XxEvelynPixelxX93',
                     'Rogue_Pro2015', 'Turb0Flick87YT', 'Sonic_Rock3t2021', 'StarUltraDuck51', 'DanielChillChaos',
                     'EmmaLi0n91', 'XxToxicZapxX2008', 'XxDawnEagleBanexX', 'DanielHazeCraze', 'FurySlime200659',
                     'ArrowPuls3Slim388', 'ZoeDancerLegend', 'Zoom_CHASE2003YT', 'Xx_PhoenixTurboMiner',
                     'Cookie_Byte14', 'XxClawMagicxX2016', 'Xx_BlizzardFr0stByte', 'MiaStream25', 'Haz3lSlim3Drift2016',
                     'Master_Cyber201588', 'BrooklynWraithDragon', 'Li0n_Rift2024', 'BuilderBlockSilver20',
                     'ZeroFusionAce2020', 'Storm_Eagl384', 'HannahClaw60', 'RiderProRaven2019', 'HazeDuckSky63',
                     'XxAria_LegendxX2009', 'AlphaStormy94', 'OrbitCyb3rZoom', 'EchoDawnEagle', 'Pix3lat3dV3nomClaw',
                     'JulianKnightSlime75', 'Xx_AubreyDriftPhoeni', 'Luk3FrostZap', 'WraithOrbitEagle',
                     'StealthMoonBlock', 'AceRavenTiger', 'HazelSonicWraith', 'Build3rBan3Panda2021',
                     'XxPixelatedPrismxX62', 'LoganZap15', 'Wyatt_STORMY87', 'Slime_Primal42', 'Aur0ra_Slime97',
                     'KnightCraftQueen', 'DawnMaxGlitch2010', 'Gabri3lOrbitHyp3r201', 'HunterViper35',
                     'Jax0nViperNinja', 'XxPlayzTurboMinerxX1', 'GamerEchoMagic2013', 'XxJaydenStarxX84',
                     'DancerIceFlame2019', 'JackV0id36', 'LightDriftFire70', 'XxVen0mGh0stLi0nxX', 'ToxicBlastQueen',
                     'Build3rCyb3rChaosYT', 'PrismPix3lat3d2002_Y', 'AddisonThunderNeon', 'XxAl3xand3rNovaGalax',
                     'StarBane201160', 'PrismBlade25', 'NightBuilder19', 'ZaydenSlimeW0lf2021', 'XxBaconBeastNeonxX',
                     'R0ck3t_W0lf2004', 'Void_Circuit35', 'MagicDriftStormy2011', 'XxMagicVenomxX48', 'Zap_Legend2002',
                     'EpicFlam32009', 'Jayden_NIGHT202094', 'NightMiner200846', 'STARMINER2017_YT',
                     'PixelatedCrystal17', 'JamesToxicPixelated2', 'EllieNight20', 'VortexKnightStar',
                     'XxV0rtexUltraxX2006', 'HenryWraithCode2011', 'HyperChillBeast2007', 'OmegaBl0ckClaw',
                     'BaconChaos42', 'EchoArrow201756', 'Xx_G0LDENBLIZZARDPIX', 'BlizzardStream27', 'FLICK_Pro91',
                     'BuilderLegend200895', 'Mas0nPixel55', 'DuckSkyPrimal2013', 'SlimeMoonFusion', 'SparkSlimeToxic',
                     'Her0AlphaGalaxy35', 'KnightTurboMagic2007', 'FlickViperGhost2013', 'Byt3N30n2020', 'HazelCraze55',
                     'AuroraDarkSonic', 'Ice_ZER071', 'BladeInfernoBlizzard', 'SaberCircuitCha0s', 'Hawk_Blast27YT',
                     'EpicMoonEagle38', 'Craz3T0xic201870', 'OliverFlashCyber', 'Stream_Fox23', 'Zo3PrismL3g3nd',
                     'Ven0mMagicViper2019', 'XxMiner_MaxxX2003', 'XxVenom_NightxX23', 'RiderVortexCookie202',
                     'Turb0FlashHer0', 'Blast_Stormy200853', 'KingDragonStormy2008', 'XxVenomUltraxX2024',
                     'StealthEpicFr0st', 'DawnFusi0nFlickYT', 'Xx_LucasBlizzardChas', 'XxFlam3_Fr0stxX2004Y',
                     'EzraR0cket2012', 'FrostBlizzardBacon58', 'KnightBaneFusion2015', 'Fusi0nStar2009',
                     'StormSparkly59', 'HawkGlitch75', 'XxMichaelFrostCircui', 'Ne0nBlade30', 'XxZ3roB3astxX2020',
                     'GigaSonic89', 'QueenFlick2008', 'Cod3_Rift2004', 'PixelFlashHunter28', 'SkaterAceStream',
                     'Xx_GabrielStormyBlad', 'JacksonFlameStealth', 'ArrowKingLucky43', 'EliFlame200523',
                     'CircuitGlitch202259', 'Oliv3rDanc3rBuild3r2', 'Pix3lat3dAc351', 'Addis0nFlameDancer',
                     'EchoChaosRaven', 'HawkEch0Omega', 'FLICK_Builder2003', 'Xx_KayleeDarkInferno', 'AubreyNightDrift',
                     'XxSonic_HawkxX201752', 'BytePrismDancer2018', 'GhostEcho202029', 'Turb0GamerBlade2019',
                     'NovaStormy202195', 'C0deHer0200994', 'XxVortexNeonxX2002', 'Gh0stNe0n80', 'XxSt0rmOmegaP0werxX',
                     'CircuitClaw200610YT', 'RiftStr3amOm3ga', 'XxAvaPhoenixLavaxX', 'XxFoxNightBanexX', 'Ethan_SKY40',
                     'XxJ3lly_ChillxX23', 'ZoeStreamNova2005', 'BlazeEchoCyber', 'SebastianRiftChase_Y',
                     'OwenSaberPh0enix2010', 'XxPowerNightClawxX', 'GigaSky82', 'SkaterIcePro', 'CyberByteArrow',
                     'Fir3Cyb3rNova', 'Aubr3yBlastWraith64', 'Pow3rBacon53', 'Oliver_Moon73', 'Oliv3rGam3r2022',
                     'OliverOmegaSkater200', 'XxEzraPandaRocketxX', 'Blast_Pulse200822', 'BlazeDragonCrazeYT',
                     'PandaByt3Pix3lat3d20', 'EzraBlastVenom', 'GamerViperZoom', 'Raven_Aqua70', 'Xx_TurboDarkBlizzard',
                     'Danc3r_Sonic2010', 'BrooklynnEagl32015', 'Xx_RocketLegendBlock', 'LeviPr0V0rtex2020',
                     'LuckyFlickDawn', 'QueenSparkStorm', 'Isabella_Blizzard69', 'FireBlazeBlock25',
                     'Night_Bacon201948', 'J3LLY_Mast3r34', 'Rock3tLucky202382', 'Hyp3rFusion2009',
                     'WilliamRav3nHyp3r202', 'XxStarFrostNinjaxX', 'XxL3g3nd_FoxxX2012', 'XxIsaac_LightxX40',
                     'XxSab3rBan3xX25', 'AcePulseGoldenYT', 'GlitchHeroPanda', 'XxLionChaosxX2015', 'XxP0w3rS0nicxX44',
                     'MichaelZapTurbo2014Y', 'J3lly_LightYT', 'XxMateoAcexX40', 'Gold3nRift2020', 'FlashNova36',
                     'LoganChaosWraith60', 'XxWraith_LightxX2012', 'ADDISON_Hyper2018', 'B3arSkat3rTig3r2006',
                     'BlastSonicNeon', 'XxBlazeRiderxX72', 'Micha3lJ3lly2012', 'LightHyper15', 'P0w3rEagl3Lava',
                     'LukeDrag0nGalaxy28', 'AsherStarZoom2010', 'XxHazeVenomxX2015', 'RiderEagleRaven', 'JackLavaWolf',
                     'Br00klyn_Alpha2011', 'JacksonPandaSilv3r66', 'StormyVenom99', 'BaneEcho200648', 'CyberKing201654',
                     'Flam3AquaSkat3r', 'Fr0st_Pixelated39', 'Shad0wHer0Flash18', 'BlazeF0xPrimal', 'N3onMin3r26',
                     'Jayden_Hyper202462', 'MasterCraze2022YT', 'XxStarOm3gaRiftxX', 'Eli_Fire200251',
                     'GraysonBuilderCraze2', 'Epic_Glitch201478', 'Magic_Epic201520', 'Knight_Storm59',
                     'Xx_SavannahByteToxic', 'B3ar_Mast3r52', 'XxJellyKingArrowxX', 'FireGigaFox2018',
                     'GalaxyEpicEagl3', 'PrimalHero200827', 'ProHunt3rDark', 'BaconJellyFlick2006', 'Tig3rSkat3rLucky',
                     'Ban3RiftStorm', 'Xx_PIX3LSHADOWDANC3R', 'IC3_Slim32015', 'RavenQueenBane2023',
                     'XXBEAST_BearxX2022', 'EzraMysticLucky', 'AsherCookie13', 'XxHyperLavaxX19', 'Blaze_Blade41',
                     'XxCart3rStarryHaz3xX', 'EzraHawkPuls3', 'Code_Crystal46', 'Luke_Flash2024', 'BrooklynHeroSky2006',
                     'UltraDuckVortex2006', 'ElijahHunt3rJ3lly', 'TigerToxicBlock12', 'Ash3rOrbitAlpha2006',
                     'InfernoSkater201216', 'DriftHyperGolden', 'XxChillFirexX53', 'EllaR0cketStealth',
                     'MiaDawn202255YT', 'DuckTurboEagl32004', 'Elli3Flick87', 'Xx_JacksonBeastFrost',
                     'MaxPlayzLucky2017', 'Saber_Turbo2011YT', 'XxAiden_Cha0sxX2011', 'MasonVoidCircuit',
                     'GlitchLuckyAqua', 'TigerGlitch59', 'StormB3ar202231', 'PulseT0xicSaber2011', 'Claw_Craze57',
                     'QueenBlazeDuck', 'Cha0sFlickWraith_YT', 'ZoeEcho56', 'EmmaRaven201325', 'KingG0ldenAlpha2010',
                     'Pix3lFir3Cyb3r76', 'ChillUltraFury80', 'StarDrift59', 'WilliamCod3Giga20095', 'OliviaHazeRider',
                     'StormHero200392', 'Byte_Power55', 'Magic_Code2019', 'AsherFusi0nV0id', 'UltraHazeGh0st',
                     'Cart3rPuls3Stormy', 'AvaM00n32', 'JulianRiftC00kie', 'Xx_PrismCrystalShado', 'Circuit_ORBIT29',
                     'XXLEGEND_FusionxX200', 'ASHER_Ice69', 'XxChaosHyperDragonxX', 'XxIsabellaTigerCraft',
                     'OwenSlime202286', 'LunaAlphaFlash97', 'Inf3rn0CraftZ00m2014', 'Pow3rBuild3rB3ast',
                     'MasonHazeMagic2021', 'Wraith_BUILDER74', 'PandaNeonDark2003', 'Haze_Cha0s2007',
                     'Vip3r_Rock3t2024', 'PowerNovaJelly2021', 'BearKnightHawk98', 'ChaseSt0rmyMagic2020',
                     'Skater_Nova21', 'LiamB3ar47', 'Haze_Fox2002YT', 'Chas3Ech02023', 'ChillUltra17',
                     'ChloeVortexBlock', 'LuckyBlaze201615', 'XxEli_BladexX2008', 'DuckHyperPanda',
                     'ChaosPix3lBlad32017', 'KingPowerSparkly', 'MagicVen0mBlizzard20', 'Infern0P0wer79',
                     'PulseSt0rm2009', 'XxHazeTurboSlimexX', 'Xx_ElijahCraftThunde', 'Aubr3yKnightMax',
                     'XxVenomGigaStarryxX', 'JulianBlizzardKnight', 'LuckyThunderCyber202', 'AidenTurb0Ne0n',
                     'H3ro_Ghost48', 'StreamHunter61', 'Sab3rCooki32011', 'MysticOm3ga72YT', 'Blaz3Pix3lat3dBlizza',
                     'XxPandaProxX20', 'XxStream_FirexXYT', 'EzraTig3rChaos', 'Ban3_Block2013', 'IsabellaInfern0Maste',
                     'MaxPlayzSlime', 'XxZo3_KINGXX2004', 'R0cketFlickFury2021', 'XxSophiaLegendxX34',
                     'XxFlameArr0wTurb0xX', 'MiaPowerBlast', 'XxW0lfFireLavaxX2024', 'UltraRiftBane2019',
                     'SilverMagicWraith', 'Julian_W0lf2022', 'Samu3lNight11', 'NeonNinjaBane2006', 'Z00mViperLavaYT',
                     'Orbit_Z00m80', 'DarkBlock66_YT', 'XxPandaStreamxX2014', 'ULTRAICE2010_YT', 'Gh0stDrag0nSt0rm'}
local RECEIVER_LIST = {'CharlotteStarry99', 'MiaStealth200216', 'Xx_AbigailCrystalBac', 'XxAva_BUILDERXX41',
                       'Shadow_Bacon201016', 'FlashGiga201143', 'Br00klyn_C0de32', 'LunaAlpha202193',
                       'Prism_G0lden2005', 'Mas0nLuckyCrystal', 'Saber_Turbo202325', 'MiaStormyTurbo200465',
                       'Grac3Sonic69', 'T0xicTigerRift', 'H3roBlad336', 'BaneUltraCrystal2010', 'WraithH3roSlim3',
                       'Gh0stPixelatedBane', 'EagleSt0rmyBuilder', 'V0rt3xH3r0R0ck3t2010', 'XxAlexanderSparklyDr',
                       'Jam3sR0gu3C0d3', 'ArrowZoomCookie27', 'PowerSonicPrimal', 'MysticHaze2014YT', 'BYTE_Gh0st82',
                       'RileyBaneFlick2008', 'Infern0_Blade2012', 'LaylaDancerBlizzard', 'Ace_Alpha31',
                       'J3lly_Pix3l2022', 'StarryArrowSilver201', 'ProNightJ3lly', 'Z00mFlam3W0lf2005', 'CodeSpark87',
                       'Pixel_Echo30', 'XxClawInf3rnoxX2020', 'Isabella_Ninja2007YT', 'Fusion_Circuit2012',
                       'Zer0BanePrism', 'HawkKnightHaze_YT', 'Br00klynEch0Gamer'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
