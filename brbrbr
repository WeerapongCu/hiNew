-- ตัวแปรสำหรับรายชื่อผู้เล่น
local SENDER_LIST = {'DuckByte52', 'EzraMinerBuilder2006', 'XxFury_JELLYXX2009', 'Addis0nPrismB3ast89',
                     'EthanSlimeDawn2017', 'Ash3rAqua2019', 'R0CKET_Cyber22', 'StormStar201447', 'Am3liaLava2008',
                     'Jax0n_PLAYZ95', 'LightLegendChill', 'Xx_AlphaPrimalSkat3r', 'XxSonicPrismxX55',
                     'XxElijahRid3rGhostxX', 'XxUltraPixelxX92', 'OrbitArrowJelly', 'RiftCyb3rTurbo24',
                     'Mas0nSparkly71', 'EchoPixelated21', 'ProTigerHero2008', 'RavenNeon200377', 'CrystalGigaPow3r97',
                     'SilverCraftHunter', 'BaneCircuit84', 'XxCraftZ3roFusionxX', 'ZoomHawkIc32018',
                     'StealthBlast33_YT', 'LeviGlitchAlpha2012', 'XxLeviSparklyBanexX', 'LionOrbit75',
                     'XxGabrielHeroxX50', 'ShadowBlizzardLion20', 'XxHaz3Byt3MysticxX71', 'ArrowCraz3Flash2005',
                     'Jayd3n_THUND3R2007', 'XxFusi0n_St3althxX', 'LionStormySt3alth98', 'StormStr3amSkat3r201',
                     'XxMasterBlazeRiderxX', 'TURBO_Pix3l22', 'EliIce58', 'XxUltraRocketShadowx', 'XxLionNeonDuckxX88',
                     'CrazeSkater82', 'Stormy_Ban3YT', 'XxSamuel_LI0NXX63', 'ZoomHeroFlash', 'XxAquaGoldenBlizzard',
                     'PlayzBaneGhost2010YT', 'XX_ScarlettWolfVorte', 'XxIsabellaPandaGhost', 'Oliv3rLight2016',
                     'Byte_CHILL2012', 'XxAquaDrag0nV0idxX20', 'ThunderEch017', 'XxTurboMaxZapxX',
                     'XxKayleeMagicxX2022', 'XxLight_BytexX202278', 'NoraPowerFox', 'EthanZoomSpark', 'ToxicBan32023',
                     'LukeLightMaster2018', 'Gam3rSt3althStorm', 'AriaNinjaBlaz3', 'AuroraZapFlash', 'Ac3KnightZ3r0',
                     'MysticRid3r90', 'EthanHawkBlaze2005', 'JackSkaterToxic2022', 'Pho3nixTurbo2004', 'Will0w_Ninja94',
                     'Z3ro_Sab3r2012', 'FuryN0va2009', 'Ril3yGhostBlock2010', 'Hawk_Sparkly98', 'XxSaberStarCyberxX',
                     'Drift_Eagle66YT', 'Dark_Stormy94', 'EpicZ3ro2021', 'ToxicBlock23', 'AddisonH3roStarry200',
                     'XxZoomSparkChillxX20', 'HazeHyper84', 'AbigailB3ar2019', 'ThunderBl0ck46', 'EllieSlime97',
                     'XxArrowStarryxX20129', 'Blaz3_Blizzard2012', 'ZapSt0rmyH3r0', 'ChaosDancerFrost',
                     'XxCyber_StarxX2015', 'NinjaCraftDancer2021', 'CIRCUIT_Knight62', 'AubreyGhostMagic_YT',
                     'MaxSparkShad0w', 'XxHunter_HyperxX73', 'EthanFlashL3g3nd2007', 'HeroDawnOmega2023',
                     'LeviSonicPro2009', 'BlastSparkPrimal', 'Xx_Addis0nWraithOmeg', 'Owen_Glitch2002YT',
                     'FrostToxicSky2024', 'CraftHazeCircuit2017', 'LionOmegaFlash', 'Fr0stG0ld3n39',
                     'HawkToxicSparkly2018', 'AMELIA_Craze2009', 'PandaGh0st2019', 'XxClawChas3BlastxX',
                     'GraysonSlimeBaconYT', 'BaneMaxChase2013YT', 'NeonGhostGolden_YT', 'WolfPixelatedSonic59',
                     'XxKingRiderxX2018YT', 'MinerPanda25', 'CraftBaconPlayz39', 'HannahPrismSky_YT', 'Craz3ProBuild3r',
                     'OrbitKnightByte20215', 'Xx_BuilderQueenJelly', 'Chill_C00KIE2018', 'VortexPixelHawk2023',
                     'HawkZap200880', 'XxChillFuryxX2020', 'CodeStream201752', 'LukeCha0sGlitch', 'Drag0nCraze2007',
                     'EmmaEchoOrbit57', 'XxPlayz_RiftxX10', 'LiamMasterBlizzard', 'HUNTERPIXEL26_YT', 'T0xicFlam32002',
                     'GraceTiger202197', 'N0vaCrystalM00n78', 'COD3STORM96_YT', 'Jax0nV0idBlast28', 'ElijahFr0st2022',
                     'Emma_F0x2009', 'XxAuroraZapFoxxX', 'DRIFT_St3alth202324', 'VictoriaLegendSparkl',
                     'XxSilver_ST0RMXX2006', 'XxZoomClawxX99', 'XxRiftCyberxX2020_YT', 'V3nom_J3lly2017YT',
                     'AlexanderPro201934', 'ProBuilderChill73', 'Byt3LuckyR0ck3t2019', 'Galaxy_Li0n200758',
                     'Blaz3Chill2016', 'ShadowDarkDawn2010', 'XxBlazeGhostxX2021', 'EthanAc3201094',
                     'WilliamPrismDrift', 'Xx_Fir3CraftBlizzard', 'XxGigaVen0mxXYT', 'SparkTurboQueen',
                     'OliviaVoidChase', 'PandaStormHyp3r', 'BrooklynnCyberFury20', 'BlastGoldenBane2018',
                     'ZoomNightUltra', 'Luk3_Inf3rno74', 'XxMaxNinjaNightxX39', 'XXZERO_ProxX2004',
                     'Samu3lGold3nRogu3200', 'Pulse_Stream43', 'Samu3l_DARK2011', 'Mia_Ghost74', 'XxEchoSkyBlastxX86',
                     'XXOMEGA_SkyxX2013', 'LeviHunterGamer2006', 'VortexHyperCyber', 'HeroOmegaToxic89',
                     'Turb0_C00kie2018', 'XxSebastianBearWolfx', 'FoxCrystalFrost12', 'XxAlphaLuckyxX2019',
                     'OliviaEagleMagic', 'CRAZE_Claw59', 'StarDarkEcho', 'FlamePrimalFlick', 'BlastPixel48',
                     'Al3xand3r_Wraith50', 'AvaWraith46', 'POW3R_Sparkly2010', 'ClawGhostPlayz', 'F0xHyper2023',
                     'Grays0nDriftQueen200', 'FlameLava83', 'ZeroStarPanda200598', 'XxCrystalKingFrostxX',
                     'NightVortexDuck', 'ArrowGolden2018YT', 'FusionBlock79', 'ElijahNinjaRift', 'Pho3nixProDragon2017',
                     'L3viLightEpic2013', 'NIGHT_Craft69', 'StarBaneUltra', 'Addison_Magic85', 'EpicFlashArrow',
                     'Rider_V0id2020', 'Skat3rCyb3r2018', 'JaxonCookieFlick', 'BladeSlime83', 'Layla_Magic29',
                     'HazeR0gue200432', 'Code_Hawk86', 'XxEmmaBaneSaberxX200', 'FireC00kie2014', 'Wolf_Rock3t10',
                     'Slime_Ech054', 'Savannah_Drift91', 'MichaelClawDancer', 'OwenDancerGlitch12', 'XxAlphaGoldenxXYT',
                     'ChaseBearCha0s', 'DragonDriftZoom2012', 'IsabellaS0nic2020', 'EvelynFusionPandaYT',
                     'BlazeRocket2010_YT', 'XxCyb3rCha0sxX2019', 'Giga_Ph0enixYT', 'FusionTurboEagl32007',
                     'TurboRocket55', 'Drag0n_Pixelated2005', 'H3NRYHUNT3RLAVA_YT', 'Duck_Turb02006YT',
                     'ShadowWolfBlaz32004', 'Ice_Saber200960', 'ElijahProFlick2011', 'BaneDragonSonic2002',
                     'BlastKingBear2009', 'KingKnightOrbit', 'BytePixelGhost2019', 'FLICK_Toxic2002', 'DuckHeroChaosYT',
                     'ELLI3_Night86', 'WolfMysticEagl3', 'XxKingCodexX88', 'Pr0_Orbit80', 'IsaacBlazeDawn',
                     'FusionDrift62', 'B3astBlad323', 'PrimalEch0Flick2020', 'SonicHazeGalaxyYT',
                     'XxInfern0GigaNinjaxX', 'XxAriaL3g3ndVip3rxX', 'XxFrostLegendHawkxX', 'EagleDuckTurbo202394',
                     'ZaydenZapGamer', 'DriftRaven2019_YT', 'MoonBlazeSaber', 'Ven0mBladeT0xic95', 'JellyEchoBlizzard',
                     'PaisleyRiderNinja201', 'MasterPrimalArr0w', 'NightLight201231', 'WraithBlockStarry201',
                     'JulianSkyHunter', 'XxBac0nFir3xX2022', 'Blast_Haze2003', 'MysticZero64', 'LucasCha0s45',
                     'ViperStorm200429', 'FrostStormyMiner', 'VORTEX_Fury201326', 'StarPandaDark2018',
                     'Xx_BrooklynnStreamCr', 'GigaKnightSparkly', 'Ac3Puls3Vort3x', 'CarterStealthCookie6',
                     'XxDriftPixelTurboxX8', 'XxAceChillVortexxX', 'ClawVort3x2011', 'Arrow_Om3ga2008',
                     'EchoGlitchBuilder38', 'BLAST_Craft2024YT', 'W0lfSab3rNinja', 'LaylaSaberPrism47',
                     'ZapSkaterBlizzard26', 'XxClawSilverGamerxX', 'Carter_Pixel2022', 'THUNDERSTEALTHCODE_Y',
                     'XxBuilder_GOLDENXX10', 'PandaZer0S0nic2013', 'Thund3rStarFox', 'KingCrazeJelly2012',
                     'Slim3LuckyBlizzard', 'XX_JulianThund3rArro', 'LukeBaneV0rtex', 'XxDuckFusionDriftxX',
                     'Toxic_Saber78', 'PaisleyBlizzard76', 'AcePixelTurbo91', 'EaglePhoenixToxicYT',
                     'CraftGold3nSkat3r', 'XxBuilderSaberxX92', 'MaxRider16_YT', 'Blad3L3g3ndDrift',
                     'XxMystic_TigerxX2022', 'PixelSkyLucky', 'QueenN0vaMax80', 'L0ganCrystalViper200',
                     'FusionPandaAqua', 'Gam3rDark2019', 'StormSparkDuck', 'ZeroPixelPhoenix2010', 'Eagle_Echo78',
                     'XxVoidMasterxXYT', 'Charl0tteInfern0Crys', 'Xx_S3bastianTig3rLuc', 'SebastianFusion2014',
                     'StealthZoomSpark2019', 'Li0n_Playz66', 'L3g3ndPix3lNinja', 'BrooklynnZoomLucky20',
                     'SebastianRogueFox', 'CyberTiger200475', 'SkyStormyCyb3r', 'Frost_B3ast2008', 'Jax0nPanda43',
                     'Danc3rN3onMoon', 'BYTEPULSE2006_YT', 'FuryToxicSonic', 'FusionPro92', 'XxSophiaPuls3AlphaxX',
                     'AubreyWolf22', 'XxSaberFlameBearxX20', 'Cyber_Slime202342', 'AidenSparklyShad0w',
                     'SkaterDriftCyber', 'XxOrbitPrismFlamexX', 'OliviaGlitchSt0rm', 'Ven0mIceBeast',
                     'SebastianPower202460', 'Grace_Stealth2003', 'Rogue_Bacon2020', 'HazelSpark20', 'LeviHyper79',
                     'AuroraDarkLight89', 'Turbo_Stormy81', 'H3roCooki32005_YT', 'Moon_TURBO63', 'XxBlazeArrowxX37',
                     'Haz3_Epic2007', 'Z3r0F0x43', 'QueenCrystalOrbit82', 'XxMaxStormyxX11YT', 'Xx_L0ganMasterStream',
                     'ZoeRaven201786', 'LoganJelly94', 'XxMasterRiftxX2022', 'VoidPlayz201935', 'NoahH3roPix3l2016',
                     'SparkT0xicBane47', 'Aurora_FLAME40', 'Cyber_Chaos93', 'XxOwenSkyVenomxX', 'QueenHeroDark2003',
                     'Z3roDarkArrow2016', 'RavenWraithRogue', 'XxAvaVoidSkyxX', 'HannahP0werStar', 'C00kie_Tiger2016',
                     'DuckHunterTiger', 'Pho3nixTig3rBacon', 'UltraBlastVoid2012', 'DANI3LN3ON2002_YT',
                     'LunaDuck200771', 'HawkBearStormYT', 'Echo_Claw60', 'Amelia_ZOOM23', 'MagicBuild3rFury60',
                     'Rav3nL3g3ndBuild3r', 'NeonLavaDawn', 'ElijahMaster2011_YT', 'BaneFlash75', 'XxPuls3Mast3rxX2009',
                     'Xx_MysticCrystalDark', 'ClawCraft202447', 'XxCraz3GigaxX56', 'FlickBladePro',
                     'MasonArrowSpark2014', 'HarperPandaBuilder', 'Byt3SkyCrystal', 'Echo_Min3r77',
                     'CrystalUltra2006_YT', 'Haz3lRock3t2007', 'FlickBlizzardBear10', 'BuilderTurbo2017_YT',
                     'GhostBearZoom2007', 'StarryLionToxic', 'Am3liaRogu358', 'MichaelAlphaSky', 'Jam3s_Ninja22YT',
                     'Henry_Block65', 'Al3xand3rInf3rn095', 'LightVoidPanda15', 'Pho3nix_J3lly38', 'Spark_Builder57',
                     'MiaGiga48', 'EZRA_Orbit200355', 'MoonBear2011YT', 'XxMystic_JellyxX13', 'G0ld3nStar_YT',
                     'ScarlettLuckyTurbo20', 'Hyp3rBuild3rCyb3r200', 'Xx_ThunderUltraSpark', 'EllieGalaxy54',
                     'WraithFuryAlpha2011', 'EmmaFuryFire', 'BlockSilv3rInf3rno20', 'XxChaosBuilderGamerx',
                     'XxScarlett_PRIMALXX3', 'XxZoeLavaxXYT', 'OmegaUltraPrimal', 'HannahSparkEagl3', 'XxUltraProxX24',
                     'XxClawHyp3rxX2008', 'N0ah_Star2007', 'JulianBlockEagle53', 'XXGOLD3N_SparkxX2011',
                     'SonicPulsePower', 'Ace_MAGIC15YT', 'Fox_Craze40', 'MoonHyp3rShadow', 'B3ast_Chaos21',
                     'Fusi0n_Dancer2019', 'Chloe_Craft90', 'L3g3nd_Zap2008', 'RiftWolfBlaz3', 'OliverW0lf11',
                     'LukeBeastSilver2023', 'Savannah_Beast84', 'Queen_Chase33', 'ShadowStormy68', 'Gold3nCooki3Ninja',
                     'Zero_Epic13', 'HunterN0vaTurb0', 'Al3xand3rTurbo86', 'LukeFusionFlame2023', 'Pr0KnightDrag0n2019',
                     'XxFoxMinerIcexX2006', 'WolfVenom2003_YT', 'AriaSkyIce55YT', 'SebastianBuilder23YT',
                     'FusionPower59', 'Sparkly_Knight20', 'Pix3lChaosPlayz29', 'Fir3_Vort3x67', 'Luk3SkyLight',
                     'ChillChaseGalaxy', 'BlizzardDancerFrost', 'EllaPixelatedKing201', 'BuilderSilverGhost20',
                     'NoahTurboPanda_YT', 'LeviCookieBeast2015', 'NoraTigerPlayz', 'XxFir3_PandaxX19',
                     'Build3r_St0rmy92', 'AsherEaglePrimal2021', 'Rid3rEagl3Skat3r', 'MichaelNeon63',
                     'QueenZoomClaw2024', 'NoahQueenChase2009', 'XxGraceBladeRocketxX', 'XxLaylaWraithxX2003',
                     'DriftJelly202420', 'LeviFusionHero2006', 'RiftStr3amV3nom', 'ClawSilv3rTig3r2004',
                     'GoldenInferno201453', 'GalaxyChase33', 'V0rtexLucky2005', 'Drag0nCyber23', 'V0idSaberHunter',
                     'SparklyShadow62', 'XxHaz3GlitchThund3rx', 'SparkFlameBuilder_YT', 'AsherPlayzFox84',
                     'NeonHero202127', 'RIFT_Stormy56', 'ScarlettKnightBeast2', 'Hunt3rBlock59', 'HenryDawn99',
                     'Ech0W0lfSt3alth', 'XxN0raDawnShad0wxX20', 'FireStealthViper', 'ViperHunter81YT',
                     'XXLUCKY_CraftxX2018', 'Gh0stPixelated65', 'Str3amSab3rDawn', 'SonicMin3r201189', 'FURY_Puls32005',
                     'Gam3rPow3rFury', 'JaxonBlazeDrift2021', 'Zayd3nSparkly86', 'CodeRiftPro', 'PrismPulseMax2019',
                     'Infern0Ven0m10', 'Xx_AddisonChillJelly', 'PixelatedViper201742', 'Pix3lat3dWraith73',
                     'UltraHunter31', 'AquaSilv3rChaos', 'XxDuckB3astxX21', 'Charlott3PrimalRock3', 'EvelynFusi0nF0x',
                     'PlayzRav3n19', 'KingHyp3r75', 'GigaRid3rSt3alth', 'Mate0Craze2003', 'XxGigaMagicBlizzardx',
                     'XxDanielStreamAlphax', 'Cyber_Stealth59', 'HunterTurboBear2011', 'SkyLionBlast2006',
                     'JackRavenBlaze2021', 'XxEthan_PixelxX35', 'XxKingBuilderRavenxX', 'Flash_Ph0enix2006',
                     'XxGrac3Thund3rxX2008', 'XxAsher_AcexX2022', 'EllieSaberPulse72', 'NinjaCod3Tig3r',
                     'EthanBlockShadow', 'RiftMax201591', 'MichaelPixelMagic201', 'ZeroThunderVoid11',
                     'JulianMinerPixel20', 'LucasLionPanda2009', 'XxHarperAlphaPixelat', 'DanielT0xic2023',
                     'Vortex_BLAST201122', 'XxMichael_InfernoxX5', 'Gabri3lBlastBl0ck201', 'Shadow_Drift2020YT',
                     'OliviaMysticPix3l', 'St0rmSlime202136', 'BlizzardFlashStream', 'EchoFlickPulse',
                     'StarryCyb3rZoom', 'LukeShadowHawk', 'OliviaLightOmega94', 'BuilderFire2017YT',
                     'Pix3lat3dBlaz3Sab3r', 'Jayden_Shadow16', 'HazelMysticGalaxy', 'XxEpicPr0xX2008',
                     'XxBaconGoldenxX2002', 'Shadow_Sparkly53', 'SparkHawkBlast2023', 'Cod3Min3rCraz3',
                     'GhostCookieArrow', 'EllaV0idLucky', 'TigerSkaterPower2018', 'BeastFlick81', 'XxAubr3yFlam3xX_YT',
                     'N0vaInfern02019', 'HenryCookieBlazeYT', 'W0LF_Zer0201767', 'Fury_Raven84', 'ZoeOrbit201812',
                     'IsaacStarRift2004', 'ViperFire34', 'H3roToxic51', 'NoraPrismBlizzard71', 'XxFr0stMasterGlitchx',
                     'B3AR_Chill2020', 'Dani3l_Stormy72', 'XXSKAT3R_Rav3nxX2009', 'Build3rFlickSky2020',
                     'XxChillFoxCooki3xX', 'Prism_Slim32005', 'AsherHaze86', 'LegendZoom14', 'NovaLavaToxic',
                     'NovaCraz32015', 'PhoenixNinja92', 'RiderMagic71_YT', 'Harp3rH3roPow3r', 'Str3amZoom2004',
                     'BaconHeroLegend2020', 'XxOliverFireEchoxX', 'ZOOM_Slime79', 'XxCookieFuryxX200256',
                     'RavenPixelLight2015', 'INFERNO_Hunter84', 'EliHunt3rDark', 'XxRileyStormSkyxX', 'CarterDawnZap56',
                     'XxDarkGalaxyxX2022', 'LegendPixel64', 'SaberOrbit58', 'WyattHazeCraze2003', 'Her0Spark39',
                     'Slim3DuckBlizzard', 'LucasStarryCraz3', 'Blad3Rock3tH3ro_YT', 'SavannahBacon2004YT',
                     'BlastCircuitSlime', 'SkaterV0rtex200413', 'BuilderNe0n23YT', 'Beast_Rift201319', 'GIGA_T0xic64',
                     'HyperPrimalHawk2005', 'XxZapGhostGamerxX_YT', 'XxFireGigaSonicxX52', 'Chl03Sab3r2002',
                     'XxEmmaBeastxX2018', 'XxJamesKingxX28', 'KayleePrismVortex', 'StealthOmegaSkater',
                     'CyberByteFrost', 'WyattGam3rCyb3r20208', 'ArrowBaneMoon', 'XX_LionBlizzardLight',
                     'InfernoByteAqua', 'Chaos_Silver85', 'CyberJellyWolf26', 'Z3ro_Duck86YT', 'Fury_CHAOS17',
                     'CyberPixel202490', 'Ban3ZapAc3', 'S0phiaWraithPulse', 'Xx_InfernoToxicMagic', 'Moon_Cod345',
                     'CookieLegendNight', 'LegendEch038', 'KingSkaterBane', 'JamesGhostFury2003', 'KnightClaw2013YT',
                     'NeonAceChase', 'Drag0n_PR02012', 'LaylaBuilderSaber200', 'Neon_Arrow200425', 'XxAquaGlitchW0lfxX',
                     'XxMoonFlickxX32', 'St3althSab3r90', 'XxPixelCha0sW0lfxX', 'XxGalaxyLightEchoxX', 'Ril3yVoid2019',
                     'ThunderGiga_YT', 'SlimeP0wer42', 'AidenFrost38', 'PaisleyStreamGiga201', 'HawkFlame2010',
                     'Void_CHAOS201681', 'SparkPrismPixelated2', 'HawkQu33nBan32005', 'Vortex_Circuit202339',
                     'Hyper_Dawn201276', 'AubreyCraftFlick', 'AlphaKingEcho2013', 'XxFlashFoxZeroxX',
                     'JamesMinerN0va2017', 'Li0nStar2019', 'SophiaEpicCraft2012', 'XxToxicInfernoxX57',
                     'XxThunderDriftxX2020', 'ZapFireWraith', 'Pho3nixHyp3rCyb3r', 'XxLaylaFlashxX2010',
                     'WraithBear201773', 'EVELYN_Epic28', 'AquaStar201516', 'ChloeFlameWolf', 'XxPlayzLegendxX2022',
                     'XxOm3gaStr3amxX73', 'GhostMinerDancer', 'Circuit_EAGLE201779', 'SavannahEagleAce', 'StarFr0st40',
                     'XxJaxonNightTig3rxX', 'XxRileyGigaxX2006', 'XxLeviTigerDriftxX20', 'XxZ0eF0xP0werxX',
                     'B3arGold3nNinja', 'XxSlim3Flam3Danc3rxX', 'ChaosEchoFox2002', 'Scarlett_Chase2008',
                     'Tiger_Arr0w2013', 'Ac3Epic2008', 'WilliamRid3rInf3rno', 'XxAuroraLionxX2003', 'GalaxyRift52',
                     'Sky_Pow3r2017', 'ECH0_Glitch2019', 'JackJellyAce', 'EpicStormyStream', 'ZaydenStreamS0nic',
                     'Fusi0nRaven2004', 'GamerRogue200621', 'DuckUltra94', 'XxGraceViperAcexX', 'AuroraStreamFrost',
                     'RogueFire23', 'ShadowDawnOrbit20101', 'SavannahBlastPrimal1', 'GigaFire201547',
                     'XxCooki3Pho3nixxX202', 'XxPandaGigaNeonxX', 'FurySaberRocket', 'AceR0cket2007',
                     'XxJamesHawkxX201247', 'RiderZapStarry', 'PixelV0rtex59', 'RavenCrystalGlitch', 'ChillInfernoLion',
                     'KING_Power14YT', 'XxSkaterFrostxX2023', 'GlitchStr3am22', 'Magic_Haze62', 'LightPrimalClaw',
                     'KayleeDuckToxic2009', 'William_BLAZE16', 'Turb0FireSaber', 'Xx_BrooklynnRocketPa',
                     'StealthRavenBlade60', 'PrismCraftPulse2007', 'XxMoonPhoenixxX2016', 'Xx_ChaosMysticCircui',
                     'XxSlimeSkaterxX2015', 'F0xThunderAqua', 'XxRogueNovaCyberxX', 'JaydenEcho200235',
                     'ZapVenomHyper202091', 'DawnHer0Fr0st2018', 'XxLaylaDriftStarxX87', 'Ril3y_Frost24',
                     'FireMoonDancer84', 'AidenFlickBuilder29', 'MaxMoonEpic2024', 'WillowAquaStorm', 'Z0eDawn12',
                     'Dark_Beast201430', 'JaydenBeastShadow', 'XxChillMagicRocketxX', 'XxVortex_FusionxX28',
                     'ShadowLuckyN3on2018', 'MichaelBane201226', 'LightPulseRift', 'Brooklynn_Rock3t2012',
                     'SparkDuckCraft2007YT', 'StormIc392', 'OliverW0lfGalaxy', 'StormHawkDuck', 'XXZOOM_B3arxX2013',
                     'G0ldenChase2004', 'AriaRav3nEagl3', 'WillowMoon89', 'EagleStealthDark', 'Ban3N3on2014',
                     'XxRiftNightGhostxX', 'Om3gaWraith26', 'LightNightNinja2008', 'FoxChaosIc3', 'ZoomSkat3r17',
                     'XxNovaLightCrystalxX', 'LegendLionViper', 'Addison_Ice92', 'MichaelLion85', 'Dawn_Shad0w201550',
                     'Rock3tSparklyPow3r', 'ElijahZ00m81', 'XxTurboAcexX2015', 'XxFrostChillWolfxX', 'AvaToxicChase',
                     'P0w3r_Bac0nYT', 'PaisleyCodeDancer', 'XxEagle_FlickxX37', 'XxLuk3DarkxX2024YT',
                     'XxGigaGoldenxX15', 'Vortex_Wolf59', 'CyberRoguePower', 'DuckSpark200792', 'XxStealthBlastTigerx',
                     'EchoGiga202453', 'Blast_Ghost2007', 'RocketZoomEpic2019', 'Xx_PhoenixJellyBlaze', 'HazelEpic91',
                     'XxWyattChaosxX2005', 'Z0eLi0n12', 'AvaDawnPho3nix', 'XxMinerPixelatedxX38', 'Jayd3nN0va2004',
                     'Chas3_SHADOW60', 'JellyRiftTurb0', 'Queen_STORM2021', 'GALAXY_Slime52', 'LukeDuckFlash201496',
                     'Xx_SparklyBuilderChi', 'Ech0Flame39', 'EpicDancer52YT', 'XxPixelCodexX26_YT', 'CookieClawRogue',
                     'Pix3lat3dQu33n201587', 'M00nSkater2007', 'Grays0nPixelAlpha_YT', 'ArrowFlameMagicYT',
                     'KnightMaxDrift', 'Ace_Wraith84', 'FusionStreamStar2020', 'SkyEch0Z3r0', 'LunaR0gu32012',
                     'StarryChas3Om3ga', 'EliRiftDawn_YT', 'EzraKnight202496', 'PaisleyBlizzard40', 'RileyRocket202175',
                     'XxFlickDriftxX2024', 'Flam3Rid3rSonic2015', 'LavaEch0Fr0st', 'Haz3St3alth79', 'HawkShad0wChill',
                     'FoxChas3Cooki3', 'XxCookiePandaHunterx', 'DRIFT_Blaz315', 'LUKE_Void17', 'XxAuroraVoidxX23',
                     'ThunderAquaRaven2015', 'XxN3onDuckSonicxX', 'Jackson_Sonic13', 'StealthChill55',
                     'AquaMaxR0gue_YT', 'Ech0_Gh0st67', 'HenryFlickFlash', 'XxSkyCircuitVenomxX', 'UltraStr3am13',
                     'BlazeSilverOmega', 'OliverSparkly201657', 'XxSt3althLightStarry', 'XxRiderAquaSlimexX',
                     'ByteStormy96_YT', 'LavaSonicFusion2010', 'ROCK3T_Ninja2007', 'Beast_Echo36',
                     'JulianSkat3rOrbit88', 'LuckyHyperSaber_YT', 'FuryProEcho2010', 'GalaxyAce59', 'FusionChaosIc340',
                     'T0xicBeastCrystal201', 'Xx_Kayl33Gam3rSparkl', 'Hero_CRYSTAL27', 'Ow3nDark200812',
                     'IsaacDawnDanc3r30', 'HeroWraith20', 'ZapCooki370', 'OliverFlash2003', 'XxElijahNeonxX2020',
                     'DriftPulse49', 'Bacon_MYSTIC27', 'JackPhoenixUltra', 'EagleOmegaEpic57', 'XxGraceSaberPandaxX2',
                     'ByteCyber31_YT', 'LunaChase2012', 'Z00mBeastMiner2008', 'AlexanderZoomChaos16', 'SaberC0deNight',
                     'FurySilverGamer2006', 'Chas3Blad343', 'P0werBlizzardMagic', 'BeastFoxJelly27', 'Drag0nAqua96',
                     'Duck_Frost38', 'GraceChillByte2021', 'EliDancerBlock82', 'OrbitSonicVortex2016',
                     'Charlott3Tig3r65', 'Isab3llaFir3Drift', 'NoraWolfBeast2024', 'N0raCraftRider', 'Wraith_Pro200334',
                     'ToxicGam3r31', 'Mat3oB3astPrism75', 'XxJaxonAlphaPrimalxX', 'WraithSlimeLegend',
                     'XxLunaArr0wPlayzxX', 'BLASTCHAS3ZOOM_YT', 'Claw_Chase201324', 'NovaFlickMagic',
                     'S0phiaStream2015', 'Samuel_Ultra2003', 'Arrow_Blast202360', 'PixelatedStar201730',
                     'BaneLuckyPhoenix2011', 'Haz3ShadowPix3lat3d2', 'FoxFrostStealth20204', 'WilliamArr0wOm3ga',
                     'ChaosStormyMystic34', 'L0gan_MINER2023', 'DriftFlickKnight', 'JulianThunderFire',
                     'LegendCookie88', 'Jack_Str3am2019', 'TigerThunderPrism201', 'Void_Z3ro2007', 'XXAVA_C00kiexX',
                     'StormQu33nZap40', 'RiftSparkBear2016', 'XxOwenZ00mxX_YT', 'GlitchSparkly89_YT', 'XxMaxHeroCodexX',
                     'ZapHazeSky', 'InfernoPrimal55', 'MasterFrost200619', 'XxStarUltraxX39', 'XxEthanStreamxX2006',
                     'DanielSparkNinja2017', 'ZapSt0rmLava201223', 'XxFrost_NinjaxX2022', 'SonicFir3Ic32014',
                     'Ph0enixRaven75YT', 'XxLeviTurboxX2006', 'GraceFlameStarry36', 'Jack_Cyber2018', 'WyattSlime72',
                     'GoldenCookie200251', 'HawkCyberRocket46', 'XxMasterLegendShadow', 'XxIsaacShad0wxX2005',
                     'XXLION_NeonxX2013', 'V3nomFrostEcho', 'Om3gaRiftToxic', 'ABIGAIL_Inferno61', 'ChaosInferno202457',
                     'Vip3rEpicChas32013', 'StormySonicHero71', 'ViperEagleFlash2018', 'SamuelMoon201798',
                     'IsaacCod3Rav3n', 'Z0eN0vaKing33', 'William_DRAG0N2022', 'B3AR_Ghost2015', 'DancerStormyIce',
                     'XxJacksonDancerPrism', 'SaberMoonDragon', 'Byte_Ninja2019', 'Blast_Circuit30',
                     'XxHyperPhoenixxX93', 'Luk3EchoZap2012', 'LunaFuryKnight', 'PhoenixLava96', 'RiderRiftChase29YT',
                     'KingMaxStream2006', 'L3vi_Craz354', 'PlayzStarAlpha2011', 'Min3rShadow2012', 'Shadow_Tiger201030',
                     'XxRil3yV3nomxX2011', 'BLIZZARD_Turbo77', 'VictoriaAquaCraft201', 'JellyAceStormy2009',
                     'LiamTurbo30', 'Danc3rBacon20', 'XxJaydenZeroxX2022', 'DragonZeroIce2013', 'XxGigaSilverPr0xX',
                     'AlphaTurboFireYT', 'SEBASTIAN_Fusion86', 'VenomTigerInferno', 'IceWraithEcho',
                     'XxOrbitFuryChaosxX', 'NightStealthCyber200', 'Builder_Jelly200581', 'HawkRiftHunter2016',
                     'OmegaJellyNinja', 'JulianStr3amVoid', 'ScarlettIceMoon', 'Harp3r_Turbo2008',
                     'CookieMysticClaw2003', 'Ash3rGam3r45', 'XxZaydenFoxGalaxyxX', 'Block_NIGHT202118',
                     'XxSkyShadowDancerxX1', 'XxKayleeNe0nWraithxX', 'HyperPandaFrost2021Y', 'BlizzardSab3rByt3',
                     'FoxStormHunter2020YT', 'J3llyKingMagic2011', 'LeviByteBlast2023', 'OwenSlime26',
                     'XxTiger_Arr0wxX84', 'ZaydenHyperPhoenix', 'GalaxyHyp3rPlayz', 'OliviaBeastCrystalYT',
                     'S0nicUltra38', 'XxMasonCookieDuckxX', 'Om3gaNightPow3r', 'Arr0wLight57', 'SLIME_Pixel201271',
                     'SkaterSparkCraze82', 'St0rmHunter21', 'FlickKingAce', 'Skat3rVort3x2018', 'PrismSkyR0cket',
                     'MagicHero82', 'Aid3nClaw33', 'FuryByte200996', 'XxOliviaMysticBearxX', 'Duck_Chas32023',
                     'BladePandaPrimal2004', 'DAWN_Craft23', 'PowerSilverAlpha', 'HawkDanc3r2003', 'Fr0stBlizzard66',
                     'XxWilliamClawFusi0nx', 'Z03Knight80', 'HenryWolfHunter52', 'StarryWolfLucky2003',
                     'Circuit_Str3amYT', 'XxEv3lyn_PlayzxX61', 'OliverViperHawk49', 'XxLaylaDawnFlamexX', 'LaylaZ3ro35',
                     'Xx_HyperHunterV0rtex', 'EthanBlockPuls3', 'Grac3LionBlizzard', 'XxRiftHunt3rMoonxX',
                     'XxNovaVoidxX58', 'Arrow_ROGUE12', 'NovaFlickSkater', 'RoguePhoenixSonic', 'T0xic_BLIZZARD2017',
                     'MagicS0nic92', 'XxJellyRogueBaconxX', 'LukeGigaNinja93', 'Dark_Circuit201982', 'LightArrowOmega',
                     'JacksonPowerUltra202', 'FusionPandaCookie', 'Cooki3_L3g3nd84', 'LavaG0ld3nFusi0n', 'Ban3LionMax',
                     'PowerBearRift29', 'GabrielPulsePrism', 'CircuitDriftOmega202', 'Xx_ChaosRocketKnight',
                     'SonicChaos73', 'Inf3rn0Fir32023', 'XxGabrielTurboxX2011', 'CRAZE_Flick2014', 'Pr0_V0rtex2012',
                     'CRAZ3_Cha0s2014', 'AubreyPulseBear_YT', 'Ac3KnightVoid', 'Slim3Stormy200852',
                     'ChillZ00mStarry2009', 'OliverFox82', 'Zo3SkyChaos', 'ShadowVenom2009_YT', 'HannahMinerStarry',
                     'HawkOmega201093', 'BLAZE_Thunder60', 'Aqua_Pow3r42', 'Tiger_Light2008', 'XxLeviKingxX2017',
                     'XxBlizzardProxX2020', 'Cookie_Circuit2002', 'XxPixelRogueBladexX8', 'AquaNovaPulse2012',
                     'PrismLavaViper', 'WillowAce21_YT', 'Ph0enixAquaEch0', 'Sonic_Chase2004', 'NeonWolfZoom',
                     'Dancer_Arr0w2007YT', 'Ril3yHawkWolf', 'XxDrift_DancerxX2018', 'XxFusionPulseMagicxX',
                     'EllieGlitchPro2005', 'C00ki3Z00m2016', 'Fury_Alpha99', 'GhostDancerCyber43', 'BlazeMagicShad0w',
                     'Block_Rogu3200485', 'H3r0Str3am2023', 'DanielHeroGolden', 'GlitchStealthStorm20',
                     'HunterHer0Blade2002', 'GalaxyMagicDark', 'XxKayl33EchoB3arxX', 'Fir3Fury27',
                     'Danc3rDriftMoon2002', 'RiftPanda202139', 'UltraBac0n2007', 'NeonDuck200689', 'Spark_Ninja68',
                     'LucasCrystalLight37', 'P0werMiner36', 'MaxPlayzThunder', 'Rid3rC0d394', 'EllaNeonPlayz54',
                     'SparkPrimalOrbit', 'PandaOrbitNova61', 'DuckB3ast84', 'Ril3yBlizzardWolf', 'MichaelGalaxyNeon201',
                     'Zayd3nMagicNova', 'XXPLAYZ_GlitchxX96', 'ZaydenZoom39', 'BrooklynnByt32013', 'XxEagleS0nicxX74',
                     'IsaacMin3r43', 'ViperSparkJelly2005', 'CircuitStealth202468', 'LIGHTBLAD3202244_YT',
                     'LunaTurbo_YT', 'FusionChill15', 'AvaBearFlick', 'DarkKnightSpark2009', 'Blade_Pulse2010',
                     'GhostFir313', 'EchoBlaze95', 'HeroAquaGolden30', 'XxGhostClawLionxX', 'EmmaKingPhoenix',
                     'Xx_CircuitStealthCyb', 'St0rmChill98', 'XX_Harp3rDanc3rGold3', 'T0xicStarry2015',
                     'XX_KingStealthGolden', 'Blade_DRAGON76', 'ToxicCodeWolf', 'XxZ3roEagl3StarxX', 'FLICK_Arr0w31',
                     'ArrowHaze95', 'LaylaLight98', 'XxJ3llyMysticxX37', 'Blad3_Shadow2016', 'EliClawPix3lat3d2006',
                     'ShadowFuryFlam3', 'MagicFlick40', 'Sonic_CYB3R2002', 'DawnArr0wFr0st2006', 'HEROHAWKBEAR_YT',
                     'FlashArr0wPix3l', 'FlashNightGlitch', 'PulsePixelatedSlime', 'XxScarlett_JellyxX20',
                     'FLAME_Her0202474', 'XxAubreyNe0nZer0xX_Y', 'KnightDancer83', 'XxStarChillBeastxX',
                     'LionBearGamer2011', 'Cod3PlayzStorm', 'XxArrowBuild3rBlad3x', 'XxAubreyRogueMaxxX21',
                     'BladePlayz95', 'ToxicB3arLava', 'XxNora_FoxxX23', 'OmegaRocketWraith', 'CyberEchoArrow31',
                     'EthanFusion56_YT', 'XXGRAYS0N_RiftxXYT', 'SlimeGlitch200389', 'RiftBaconDancer',
                     'XxSkaterMaxRoguexX', 'XxToxic_FLICKXX2003', 'RiftFireBlaze_YT', 'Xx_AuroraMasterMysti',
                     'XxDriftProxX2005', 'SilverLuckyFlick', 'XxSophiaBlizzardxX50', 'Grac3V3n0m27', 'SlimeIce2015',
                     'Ev3lynWraith22', 'XxTurbo_MagicxX66', 'SAMU3L_Z00m51', 'Haz3lDriftS0nic', 'RileyPlayz2012YT',
                     'XxLavaChaosxX2008', 'WraithSlimeViper', 'ScarlettShadowCraft2', 'XxSab3rBlaz3F0xxX202',
                     'XxAvaV0idSilverxX', 'NinjaPr0Starry73', 'XxFlickBlastxX24', 'XxMoonNeonxX45', 'MinerAquaCode',
                     'ELIJAH_R0ck3t57', 'FusionOmegaCookie', 'HazelBaconPlayz', 'Grac3OrbitMagic', 'EliPhoenix201516',
                     'Ash3rFlam3Shad0w', 'Rid3rBlaz3Moon2024', 'GalaxyTurb0Skat3r27', 'Gh0stBeastEpic', 'L3vi_Rift35',
                     'Eagle_Her055', 'Gamer_BYTE2012', 'JulianDarkN3on', 'AuroraStarChill', 'BlizzardDuckPrimal',
                     'EagleGalaxyOmega', 'XxZaydenFireBytexX', 'H3nryFrost87', 'Frost_Prism61YT', 'XxMia_DarkxXYT',
                     'XxCarter_EpicxX2004', 'ZoomToxicGiga87', 'ZaydenMiner75_YT', 'PixelS0nicCrystal',
                     'GabrielBaneDuck', 'St0rmFlickLight', 'Kayl33Pho3nix26', 'Noah_H3ro53', 'XxAuroraEaglexX2024',
                     'DawnPhoenixPixelated', 'PlayzSparklyPow3r201', 'XxPanda_Cha0sxX76', 'XXPIX3LULTRAXX2013_Y',
                     'Hunt3r_Echo39', 'Xx_FUSIONNIGHTHUNTER', 'NeonRocket80', 'BladeBlazePhoenix', 'ScarlettLion49',
                     'AmeliaSparklyCraft', 'CarterNeonGalaxy', 'AbigailSkyS0nic', 'XxJulianKnightFir3xX',
                     'EpicDragonNova202499', 'Flam3_FOX2024', 'ZapArrowPrism2022', 'StarryProAceYT',
                     'Knight_THUNDER202040', 'PulseCrystalGalaxy', 'HunterFury2003YT', 'AriaZoomBlaz3', 'Om3ga_F0x2012',
                     'PlayzChas32012', 'XxQueenOmegaBac0nxX', 'Lucas_Drag0n202150', 'BearDragonStream',
                     'XxSaberPixelxX2012', 'M00n_Bac0n202253', 'KnightCircuitPrism', 'Rid3rWolf2019_YT',
                     'CookieSparklyOmega', 'GlitchDuck201484', 'Micha3lPrimalCrystal', 'Gh0stShad0wCrystal',
                     'WraithHaze26', 'FoxPrimalClaw', 'C0deDarkInfern02023', 'SonicNightHaze2016', 'ToxicBuilderHawk',
                     'FlickCookieKnight201', 'XxHawkB3arLavaxX', 'Shad0wG0lden2011_YT', 'JackLuckyChill',
                     'MasonCrazeMaster52', 'FlashZapVenom', 'ClawFlashBear', 'JamesRogueSaber', 'LionKnightPrimal',
                     'XxViperFireGamerxX', 'ScarlettWolfHero', 'StormyCraftTiger', 'BuilderPrism12',
                     'MaxRogueSonic201828', 'WyattLight200735', 'Skat3rGiga2010', 'LuckyOm3ga2007',
                     'XxStarryW0lfCyberxX', 'Saber_Drift87', 'PrimalCraz343', 'Stealth_Flick2017', 'NoraInf3rno2020',
                     'ZoomBlockV3nomYT', 'XxToxicPandaxX30', 'HazelHeroPanda_YT', 'P0werF0x82_YT',
                     'PulseInfernoGhost201', 'ZapSkat3rStormy', 'DanielStarry2022YT', 'JAM3S_Claw2016',
                     'BlazeStealth65', 'MasonCraftPuls3', 'Jack_Saber57', 'CarterNight15', 'EchoRav3n63',
                     'HannahGhost69', 'EzraVortexSparkly200', 'Sab3rAlphaFrost', 'AquaPrimalFlam320071',
                     'Xx_StealthGalaxyChas', 'SparklySkyFlash2008', 'ByteHyperVoid24', 'EliUltra15',
                     'AsherKingGlitch2024', 'BeastFlick2011_YT', 'Ellie_Hero89', 'SilverZoom200672',
                     'VortexStreamGhost', 'ZaydenDragon200592', 'DawnPh0enix201965', 'WilliamBuilder201828',
                     'XxPhoenix_MoonxX2009', 'EllaVoid87', 'SparklyCircuit81', 'ZaydenShadowZoom33',
                     'XxGh0stGigaxX2006', 'XxNovaSparkxX15', 'WraithFoxRider2017', 'KayleeStormLegend47',
                     'Issasidan9965', 'Sullerkes651', 'Koaahola048', 'Chockkeyt69690', 'Lorahgoeb8408',
                     'Mavraczysz8696', 'Laakmiche26825', 'Arioisgar176', 'Pinzkoli568', 'Nesetcommo0546',
                     'Krotzsnare30229', 'Eigenstaaf414', 'Shehimaude81516', 'Gurnadja482', 'Usedamocha3650',
                     'Deppemaden56388', 'Webbivens341', 'Foussorick6092', 'Cottopyle59034'}
local RECEIVER_LIST = {'AmeliaSt0rmyBlast201', 'St0rmyKnight200459', 'Xx_HannahCraftBlizza', 'MagicUltraAlpha',
                       'Shadow_Pix3l24', 'NoraAce50', 'XxZoeRiderxX2021', 'HawkCrystal59', 'XxLava_GALAXYXX2003',
                       'LoganJelly57', 'PandaPrismEcho200291', 'XxLucas_Sab3rxX42', 'GraysonCrystal75',
                       'KnightBuilderHunter4', 'PulseVen0mMaster', 'MasterN0vaGh0st', 'PulseSpark81',
                       'XxFrostEaglexX2020', 'SkyStormySonic', 'Carter_Cookie59', 'HazelGamerFlick2015',
                       'LucasCrazeBlizzard20', 'XxVoid_StarryxXYT', 'XxLegendSaberZoomxX8', 'Z00mMagicGam3r',
                       'MoonPixelatedNinja77', 'XxMaxPrismxX27', 'DancerLegendThunder2', 'XxCod3NovaxX72',
                       'Dawn_STREAM68', 'GlitchAceMax2016', 'BaconCircuitPlayz200', 'EAGLE_Pixel61',
                       'LuckyG0ldenStealth', 'MICHA3LRIFT2013_YT', 'XxPixelMysticCyberxX', 'PandaFlickPower',
                       'LunaUltraViper201192', 'DanielGlitchBl0ck', 'Blast_ST0RMY28', 'ChillQueen98',
                       'CircuitJellyFury', 'WilliamInferno2010_Y', 'VenomCodeShadow', 'PhoenixPrimal2009YT',
                       'XxLunaSparkInfernoxX', 'XxZoeGlitchxX27', 'CookieWolf200629', 'FusionGamerIce25',
                       'BearPulseBane', 'GlitchBan3Silv3r', 'ClawH3roJ3lly2008', 'Fir3Lucky2017', 'SparklyLavaZoom',
                       'XxNightDragonNinjaxX', 'XxLukePhoenixFlashxX', 'Lava_Hyp3r2017', 'LavaRiftStar2015',
                       'EZRA_Starry21', 'StealthChaosFusion', 'Kayl33MagicRogu3', 'Ultra_Pulse201494', 'Jinaslak732'}

-- ตัวแปรสำหรับการทำงาน
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- ตัวแปรสำหรับ tracking
local currentStep = 0
local currentStepReceiver = 0 -- ตัวแปรแยกสำหรับ receiver mode
local isTrading = false
local tradePartner = nil

-- ตัวแปรสำหรับตรวจสอบสถานะการเพิ่มไอเทม
local shroomAdded = false
local tokenAdded = false
local creatureAdded = false

-- ตัวแปรควบคุมการเรียก remote (ป้องกันการเรียกซ้อน)
local isRemoteBusy = false
local lastRemoteCallTime = 0

-- ตัวแปรสำหรับ state-based tracking (เพิ่มใหม่)
local receiverCreatureStartTime = 0
local receiverCreatureRequested = false
local receiverAcceptStartTime = 0
local receiverAcceptRequested = false

-- ตัวแปรสำหรับ receiver timeout (เพิ่มใหม่)
local lastTradeRequestTime = tick()
local RECEIVER_TIMEOUT = 300 -- 5 นาที (300 วินาที)

-- ตัวแปรสำหรับ sender state-based tracking
local senderShroomStartTime = 0
local senderShroomRequested = false
local senderTokenStartTime = 0
local senderTokenRequested = false
local senderCreatureStartTime = 0
local senderCreatureRequested = false
local senderAcceptStartTime = 0
local senderAcceptRequested = false

-- ตัวแปรป้องกันการทำงานพร้อมกัน
local isSenderMainActive = false
local isSenderReceiverActive = false

-- ตัวแปรสำหรับ timeout การรอเริ่มเทรดหลังส่งคำขอหา receiver
local SENDER_REQUEST_TIMEOUT = 200 -- วินาที
local lastSentTargetName = nil
local lastSentTargetIsReceiver = false
local lastSentTime = 0

-- ฟังก์ชันช่วยเหลือ
local function IsInList(name, list)
    for _, listName in ipairs(list) do
        if name == listName then
            return true
        end
    end
    return false
end

local function Clicked_Ui(path)
    local success, error = pcall(function()
        GuiService.SelectedObject = path
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการเลือก UI: " .. tostring(error))
    end
end

local function Click_NOW()
    local success, error = pcall(function()
        VirtualInputManager:SendKeyEvent(true, 13, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, 13, false, game)
        task.wait(2)
        Clicked_Ui(nil)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกดปุ่ม: " .. tostring(error))
    end
end

-- ฟังก์ชันวาร์ปไปยังตำแหน่งที่กำหนด
local function WarpToLocation()
    local success, error = pcall(function()
        local character = LocalPlayer.Character
        if character then
            character:PivotTo(CFrame.new(Vector3.new(-2132.24, 490.66, 1106.83)))
            print("✅ วาร์ปไปยังตำแหน่งที่กำหนดแล้ว")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการวาร์ป: " .. tostring(error))
    end
end

-- ฟังก์ชันหาคู่เทรดที่ว่าง
local function FindValidReceiver()
    local result = nil
    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            return nil
        end
        
        print("🔍 กำลังค้นหาคู่เทรดที่ว่าง...")

        -- ค้นหา receiver ที่ว่าง
        local validReceivers = {}
        local getPlayersSuccess = pcall(function()
            for _, player in pairs(Players:GetPlayers()) do
                if IsInList(player.Name, RECEIVER_LIST) then
                    local isAvailable = false
                    local tradingValue = nil
                    local checkSuccess = pcall(function()
                        if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                            tradingValue = player.Settings.Trading.Value
                            isAvailable = (tradingValue == false)
                        else
                            isAvailable = true
                            tradingValue = "unknown"
                        end
                    end)

                    if not checkSuccess then
                        print(
                            "⚠️ เกิดข้อผิดพลาดในการเช็คสถานะ " ..
                                player.Name .. " สมมติว่าว่าง...")
                        isAvailable = true
                        tradingValue = "error"
                    end

                    if isAvailable then
                        print("✅ พบ receiver ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                                  tostring(tradingValue) .. ")")
                        table.insert(validReceivers, player)
                    else
                        print("❌ Receiver " .. player.Name ..
                                  " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) ..
                                  ")")
                    end
                end
            end
        end)

        if not getPlayersSuccess then
            print(
                "❌ เกิดข้อผิดพลาดในการดึงรายชื่อผู้เล่น")
            return nil
        end

        -- ถ้ามี receiver ว่าง ให้เลือกหนึ่งคน
        if #validReceivers > 0 then
            local selected = validReceivers[math.random(1, #validReceivers)]
            print("🎯 เลือก receiver: " .. selected.Name)
            result = selected
            return
        end

        -- ถ้าไม่มี receiver ว่าง ให้ค้นหา sender อื่นที่ว่าง
        print("ไม่มี receiver ว่าง กำลังค้นหา sender อื่น...")
        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    tradingValue = player.Settings.Trading.Value
                    isAvailable = (tradingValue == false)
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " ..
                              tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print(
                        "❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " ..
                            tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender เพื่อเทรดด้วย: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบคู่เทรดที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindValidReceiver: " ..
                 tostring(error))
    end
    return result
end

-- ฟังก์ชันส่ง trade request
local function SendTradeRequest(receiverName)
    local success, error = pcall(function()
        local args = {"SendRequest", game:GetService("Players"):WaitForChild(receiverName)}
        game:GetService("Players").LocalPlayer:WaitForChild("Remotes"):WaitForChild("TradeRequestRemote"):FireServer(
            unpack(args))
        print("📤 ส่ง trade request ไปยัง " .. receiverName)
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการส่ง trade request: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันหาผู้เล่น sender ที่ว่าง (ค้นหาเฉพาะ sender)
local function FindAvailableSender()
    local result = nil
    local success, error = pcall(function()
        print("🔍 กำลังค้นหา sender ที่ว่าง...")

        local validSenders = {}
        for _, player in pairs(Players:GetPlayers()) do
            if IsInList(player.Name, SENDER_LIST) and player.Name ~= LocalPlayer.Name then
                local isAvailable = false
                local tradingValue = nil
                pcall(function()
                    if player and player:FindFirstChild("Settings") and player.Settings:FindFirstChild("Trading") then
                        tradingValue = player.Settings.Trading.Value
                        isAvailable = (tradingValue == false)
                    else
                        isAvailable = true
                        tradingValue = "unknown"
                    end
                end)

                if isAvailable then
                    print("✅ พบ sender ที่ว่าง: " .. player.Name .. " (Trading.Value = " .. tostring(tradingValue) .. ")")
                    table.insert(validSenders, player)
                else
                    print("❌ Sender " .. player.Name .. " กำลังเทรดอยู่ (Trading.Value = " .. tostring(tradingValue) .. ")")
                end
            end
        end

        if #validSenders > 0 then
            local selected = validSenders[math.random(1, #validSenders)]
            print("🎯 เลือก sender: " .. selected.Name)
            result = selected
            return
        end

        print("❌ ไม่พบ sender ที่ว่าง")
    end)
    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน FindAvailableSender: " .. tostring(error))
    end
    return result
end

-- ฟังก์ชัน add shroom
local function AddShroom()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    local success, error = pcall(function()
        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่สามารถเพิ่ม shroom ได้")
            return false
        end
        
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub("@", "")
        local localPlayerName = LocalPlayer.Name

        local amount = coinsValue - 20
        if amount > 500000 then
            amount = 500000
        end
        if amount < 0 then
            amount = 0
        end

        local args = {"AddTradeItem", {
            Overwrite = true,
            ItemType = "Currency",
            Name = "Shooms",
            Amount = amount
        }}

        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ถูกปิดระหว่าง AddShroom, reset currentStep")
            currentStep = 0
            return false
        end

        local remote1Name = localPlayerName .. "-" .. opponentName .. "TradeRemote"
        local remote1 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote1Name)
        if not remote1 then
            print("❌ ไม่พบ remote1: " .. tostring(remote1Name))
            currentStep = 0
            return false
        end
        remote1:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote1...")
        wait(3)

        local remote2Name = opponentName .. "-" .. localPlayerName .. "TradeRemote"
        local remote2 = ReplicatedStorage:FindFirstChild("Remotes") and
                            ReplicatedStorage.Remotes:FindFirstChild(remote2Name)
        if not remote2 then
            print("❌ ไม่พบ remote2: " .. tostring(remote2Name))
            currentStep = 0
            return false
        end
        remote2:InvokeServer(unpack(args))
        print("⏳ รอ 3 วินาทีหลังใช้ remote2...")
        wait(3)

        print("✅ เพิ่ม " .. amount .. " Shrooms ในการเทรดกับ " .. opponentName)
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddShroom: " ..
                 tostring(error))
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add token
local function AddToken()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local tokenList = {'ChangeCreatureColorsToken', 'CreatureReviveToken', 'FullGrowToken', 'PartialGrowToken',
                       'FreeSpinToken', 'RandomStoredCreatureToken'}

    local success, error = pcall(function()
        local tradeGui = LocalPlayer.PlayerGui.TradeGui
        local containerFrame = tradeGui.ContainerFrame
        local theirsFrame = containerFrame.Theirs
        local displayNameLabel = theirsFrame.DisplayNameLabel
        local userNameLabel = displayNameLabel.UserNameLabel
        local opponentName = userNameLabel.Text

        opponentName = opponentName:gsub('@', '')
        local localPlayerName = LocalPlayer.Name

        -- ตั้งค่า remote กำลังใช้งาน
        isRemoteBusy = true

        for i, tokenName in ipairs(tokenList) do
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("❌ TradeGui ถูกปิดระหว่าง AddToken, reset currentStep")
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Tokens',
                Name = tokenName,
                Amount = 150
            }}

            local remoteName = localPlayerName .. '-' .. opponentName .. 'TradeRemote'
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print("📤 กำลังเพิ่ม " .. tokenName .. " (" .. i .. "/" .. #tokenList .. ")...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn(
                    "❌ เกิดข้อผิดพลาดในการเรียก remote สำหรับ " ..
                        tokenName .. ": " .. tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            end

            print('✅ เพิ่ม ' .. tokenName .. ' ในการเทรดกับ ' .. opponentName)

            -- รอ 3 วินาทีหลังใช้ remote
            print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ " .. tokenName ..
                      "...")
            wait(3)
        end

        -- ปลดล็อค remote
        isRemoteBusy = false
        print('✅ เพิ่ม token ทั้งหมดเสร็จสิ้น')
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชัน AddToken: " ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature สำหรับ Receiver แบบปลอดภัย
local function AddCreatureReceiver()
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                    currentStepReceiver = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStepReceiver = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStepReceiver = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            local remotes = ReplicatedStorage:FindFirstChild('Remotes')
            if not remotes then
                print('❌ ไม่พบ Remotes folder')
                currentStepReceiver = 0
                return false
            end

            local remote = remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStepReceiver = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreatureReceiver, reset currentStep')
                currentStepReceiver = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStepReceiver = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStepReceiver = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreatureReceiver: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStepReceiver = 0
        return false
    end

    return true
end

-- ฟังก์ชัน add creature
local function AddCreature(isReceiver)
    local tradeGuiSafe = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
    if not (tradeGuiSafe and tradeGuiSafe.Enabled) then
        print("❌ TradeGui ไม่เปิดใช้งาน")
        return false
    end

    -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
    if isRemoteBusy then
        print("⚠️ Remote กำลังใช้งานอยู่ รอสักครู่...")
        return false
    end

    local success, error = pcall(function()
        local Unlocks = LocalPlayer.Data and LocalPlayer.Data.Unlocks
        local creatureName = nil

        if LocalPlayer and LocalPlayer.Data and LocalPlayer.Data.Unlocks then
            for _, child in pairs(Unlocks:GetChildren()) do
                if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                    print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                    currentStep = 0
                    return false
                end
                if child:IsA('ValueBase') and tonumber(child.Value) and tonumber(child.Value) > 0 then
                    if child.Name ~= "Vin'rou" and child.Name ~= 'Eulopii' then
                        creatureName = child.Name
                        break
                    end
                end
            end

            if not creatureName then
                warn('❌ ไม่พบ creature ที่ตรงเงื่อนไข')
                currentStep = 0
                return false
            end

            local theirLabel = LocalPlayer.PlayerGui and LocalPlayer.PlayerGui:FindFirstChild('TradeGui') and
                                   LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel

            if not theirLabel or not theirLabel.Text then
                warn('❌ ไม่พบชื่อฝ่ายตรงข้าม')
                currentStep = 0
                return false
            end

            local otherPlayerName = theirLabel.Text
            if string.sub(otherPlayerName, 1, 1) == '@' then
                otherPlayerName = string.sub(otherPlayerName, 2)
            end

            local remoteName
            if isReceiver then
                remoteName = otherPlayerName .. '-' .. LocalPlayer.Name .. 'TradeRemote'
            else
                remoteName = LocalPlayer.Name .. '-' .. otherPlayerName .. 'TradeRemote'
            end
            local remote = ReplicatedStorage:FindFirstChild('Remotes') and
                               ReplicatedStorage.Remotes:FindFirstChild(remoteName)
            if not remote then
                print('❌ ไม่พบ remote: ' .. tostring(remoteName))
                currentStep = 0
                return false
            end

            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print('❌ TradeGui ถูกปิดระหว่าง AddCreature, reset currentStep')
                currentStep = 0
                return false
            end

            -- ตรวจสอบเวลาที่ผ่านไปตั้งแต่ remote call ล่าสุด
            local timeSinceLastCall = tick() - lastRemoteCallTime
            if timeSinceLastCall < 3 then
                local waitTime = 3 - timeSinceLastCall
                print("⏳ รอ " .. string.format("%.1f", waitTime) ..
                          " วินาทีก่อนเรียก remote สำหรับ creature...")
                wait(waitTime)
            end

            -- ตั้งค่า remote กำลังใช้งาน
            isRemoteBusy = true
            lastRemoteCallTime = tick()

            local args = {'AddTradeItem', {
                Overwrite = true,
                ItemType = 'Creatures',
                Name = creatureName,
                Amount = 1
            }}

            print("📤 กำลังเพิ่ม creature: " .. creatureName .. "...")

            local remoteSuccess, remoteError = pcall(function()
                remote:InvokeServer(unpack(args))
            end)

            if not remoteSuccess then
                warn('❌ เกิดข้อผิดพลาดในการเรียก Remote: ' ..
                         tostring(remoteError))
                isRemoteBusy = false
                currentStep = 0
                return false
            else
                print('✅ เพิ่ม creature สำเร็จ!')
                lastRemoteCallTime = tick()

                -- รอ 3 วินาทีหลังใช้ remote
                print("⏳ รอ 3 วินาทีหลังใช้ remote สำหรับ creature...")
                wait(3)

                -- ปลดล็อค remote
                isRemoteBusy = false
                return true
            end
        else
            print('❌ ไม่สามารถเข้าถึง Data.Unlocks ได้')
            currentStep = 0
            return false
        end
    end)

    if not success then
        warn('❌ เกิดข้อผิดพลาดในฟังก์ชัน AddCreature: ' ..
                 tostring(error))
        isRemoteBusy = false
        currentStep = 0
        return false
    end

    return true
end

-- ฟังก์ชันกด accept สำหรับ Receiver แบบปลอดภัย
local function ClickAcceptReceiver()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
        if not tradeGui then
            print("❌ ไม่พบ TradeGui")
            return false
        end

        local containerFrame = tradeGui:FindFirstChild("ContainerFrame")
        if not containerFrame then
            print("❌ ไม่พบ ContainerFrame")
            return false
        end

        local acceptButton = containerFrame:FindFirstChild("AcceptButton")
        if not acceptButton then
            print("❌ ไม่พบ AcceptButton")
            return false
        end

        local upperLabel = acceptButton:FindFirstChild("UpperLabel")
        if not upperLabel then
            print("❌ ไม่พบ UpperLabel")
            return false
        end

        Clicked_Ui(upperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด accept
local function ClickAccept()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            print("❌ TradeGui ไม่เปิดใช้งาน")
            return false
        end

        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
        if isRemoteBusy then
            print(
                "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้!")
            return false
        end

        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.AcceptButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("✅ กด accept แล้ว")
        return true
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด accept: " .. tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชันกด cancel
local function ClickCancel()
    local success, error = pcall(function()
        Clicked_Ui(LocalPlayer.PlayerGui.TradeGui.ContainerFrame.CancelButton.UpperLabel)
        task.wait(.1)
        Click_NOW()
        print("❌ ยกเลิกการเทรด")
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในการกด cancel: " .. tostring(error))
    end
end

-- ฟังก์ชันเช็คชื่อคู่เทรด
local function CheckTradePartner()
    local success, error = pcall(function()
        if not LocalPlayer.PlayerGui.TradeGui.Enabled then
            return false
        end

        local theirLabel = LocalPlayer.PlayerGui.TradeGui.ContainerFrame.Theirs.DisplayNameLabel.UserNameLabel
        if not theirLabel or not theirLabel.Text then
            return false
        end

        local opponentName = theirLabel.Text:gsub("@", "")

        -- เช็คว่าชื่อตรงกับในรายชื่อหรือไม่
        if IsInList(opponentName, RECEIVER_LIST) or IsInList(opponentName, SENDER_LIST) then
            print("✅ ชื่อคู่เทรดถูกต้อง: " .. opponentName)
            return true
        else
            print("❌ ชื่อคู่เทรดไม่ตรงกับรายชื่อ: " ..
                      opponentName)
            ClickCancel()
            return false
        end
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการเช็คชื่อคู่เทรด: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Sender
local function AcceptTradeRequestForSender()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    -- Sender สามารถรับ trade request จาก sender อื่นได้
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Sender พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                -- Sender สามารถรับ trade request จาก sender อื่นได้
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Sender พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Sender: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver แบบปลอดภัย
local function AcceptTradeRequestReceiver()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน accept trade request สำหรับ Receiver
local function AcceptTradeRequest()
    local success, error = pcall(function()
        local requestsGui = LocalPlayer.PlayerGui:FindFirstChild('RequestsGui')
        if not requestsGui then
            return false
        end

        local requestsFrame = requestsGui:FindFirstChild('RequestsFrame')
        if not requestsFrame then
            return false
        end

        local mobileFrame = requestsFrame:FindFirstChild('Mobile')
        if mobileFrame then
            for _, child in pairs(mobileFrame:GetChildren()) do
                if string.find(child.Name, "^Trade") then
                    local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                    if IsInList(senderName, SENDER_LIST) then
                        print("✅ Receiver พบ trade request แบบ Mobile จาก " .. senderName .. " กำลัง accept...")

                        -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                        lastTradeRequestTime = tick()

                        Clicked_Ui(child.AcceptButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                        return true
                    else
                        print("❌ Trade request แบบ Mobile จาก " .. senderName ..
                                  " ไม่ตรงกับรายชื่อ กำลัง decline...")
                        Clicked_Ui(child.DeclineButton.UpperLabel)
                        task.wait(.1)
                        Click_NOW()
                    end
                end
            end
        end

        local otherFrame = requestsFrame:FindFirstChild('Other')
        if not otherFrame then
            return false
        end

        for _, child in pairs(otherFrame:GetChildren()) do
            if string.find(child.Name, "^Trade") then
                local senderName = child.Name:sub(6) -- ตัด "Trade" ออก
                if IsInList(senderName, SENDER_LIST) then
                    print("✅ Receiver พบ trade request แบบ Other จาก " .. senderName .. " กำลัง accept...")

                    -- อัปเดตเวลาสุดท้ายที่ได้รับ trade request (เพิ่มใหม่)
                    lastTradeRequestTime = tick()

                    Clicked_Ui(child.AcceptButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                    return true
                else
                    print("❌ Trade request จาก " .. senderName ..
                              " ไม่ตรงกับรายชื่อ กำลัง decline...")
                    Clicked_Ui(child.DeclineButton.UpperLabel)
                    task.wait(.1)
                    Click_NOW()
                end
            end
        end

        return false
    end)

    if not success then
        warn(
            "❌ เกิดข้อผิดพลาดในการ accept trade request สำหรับ Receiver: " ..
                tostring(error))
        return false
    end

    return true
end

-- ฟังก์ชัน Coroutine สำหรับ Sender ที่รับ trade request
local function SenderReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) SenderReceiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                -- รอ trade request
                AcceptTradeRequestForSender()

                -- ตรวจสอบ timeout สำหรับ Sender ที่ทำงานแบบ Receiver (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Sender (Receiver mode) ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print(
                            "⏰ Sender (Receiver mode) รอ trade request... เหลือเวลาอีก " ..
                                string.format("%.0f", timeRemaining) ..
                                " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                isSenderReceiverActive = false
                wait(2)
            else
                -- กำลังเทรดอยู่ (เมื่อเป็น receiver)
                -- ตรวจสอบว่ามี trade request หรือไม่
                local hasTradeRequest = false
                local requestsFrame = LocalPlayer.PlayerGui.RequestsGui.RequestsFrame.Other
                if requestsFrame then
                    for _, child in pairs(requestsFrame:GetChildren()) do
                        if string.find(child.Name, "^Trade") then
                            hasTradeRequest = true
                            break
                        end
                    end
                end

                -- ถ้ามี trade request ให้ override main sender
                if hasTradeRequest then
                    print("📩 พบ trade request กำลัง override Main Sender...")
                    isSenderMainActive = false
                end

                -- ตรวจสอบว่า main sender loop กำลังทำงานอยู่หรือไม่
                if isSenderMainActive then
                    print(
                        "⏸️ Main Sender กำลังทำงานอยู่ SenderReceiver รอสักครู่...")
                    wait(1)
                    return
                end

                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        isSenderReceiverActive = true
                        currentStepReceiver = 1
                        print(
                            "🚀 Sender เริ่มขั้นตอนที่ 1: Add Creature (โหมด Receiver)")
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 เริ่ม Add Creature...")
                            -- เริ่มทำ AddCreature แบบไม่รอผลลัพธ์
                            spawn(function()
                                AddCreature(true)
                            end)
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()
                            print("⏳ รอให้ Add Creature เสร็จ...")
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 5 then
                            currentStepReceiver = 2
                            print(
                                "   Sender เริ่มขั้นตอนที่ 2: Click Accept (โหมด Receiver)")
                        else
                            print("⏳ รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking
                    if not receiverAcceptRequested then
                        print("🚀 เริ่ม Click Accept...")
                        -- เริ่มทำ ClickAccept แบบไม่รอผลลัพธ์
                        spawn(function()
                            ClickAccept()
                        end)
                        receiverAcceptRequested = true
                        receiverAcceptStartTime = tick()
                        print("⏳ รอให้ Click Accept เสร็จ...")
                    else
                        -- ตรวจสอบว่าผ่านไป 3 วินาทีแล้วหรือยัง
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 3 then
                            currentStepReceiver = 0
                            print("✅ Sender เทรดเสร็จสิ้น (โหมด Receiver)")
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                            isSenderReceiverActive = false
                        else
                            print("⏳ รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 3 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน SenderReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            isSenderReceiverActive = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

function TradeStepHandlerSender(step)
    if not LocalPlayer.PlayerGui.TradeGui.Enabled then
        -- ยังไม่ได้เทรด
        if step ~= 0 then
            print(
                "Trade ถูกยกเลิกหรือจบกลางคัน กำลัง reset step...")
            -- รีเซ็ตสถานะการเพิ่มไอเทม
            shroomAdded = false
            tokenAdded = false
            creatureAdded = false
            -- รีเซ็ตสถานะ sender tracking
            senderShroomStartTime = 0
            senderShroomRequested = false
            senderTokenStartTime = 0
            senderTokenRequested = false
            senderCreatureStartTime = 0
            senderCreatureRequested = false
            senderAcceptStartTime = 0
            senderAcceptRequested = false
            isSenderMainActive = false
            -- รีเซ็ตสถานะการส่งคำขอค้าง
            lastSentTargetName = nil
            lastSentTargetIsReceiver = false
            lastSentTime = 0
            step = 0
        end

        -- ตรวจสอบว่า SenderReceiver กำลังทำงานอยู่หรือไม่
        if isSenderReceiverActive then
            print(
                "⏸️ SenderReceiver กำลังทำงานอยู่ Main Sender รอสักครู่...")
            return 0
        end

        -- ตรวจสอบ coins ก่อน
        local coinsValue = LocalPlayer.Data.Coins.Value
        if coinsValue <= 20 then
            print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) ไม่ทำการเทรด")
            -- ถ้า coins ไม่เพียงพอ ให้ปลดล็อค main sender และรอ
            isSenderMainActive = false
            wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
        else
            -- ถ้าส่งหา receiver ค้างไว้นานเกินกำหนด ให้ลองหา sender ที่ว่างแทน
            if lastSentTargetIsReceiver and lastSentTime > 0 then
                local elapsed = tick() - lastSentTime
                if elapsed >= SENDER_REQUEST_TIMEOUT then
                    print("⚠️ รอเริ่มเทรดกับ receiver (" .. tostring(lastSentTargetName) .. ") นานเกิน " .. SENDER_REQUEST_TIMEOUT .. " วินาที กำลังหา sender แทน...")
                    local fallbackSender = FindAvailableSender()
                    if fallbackSender then
                        SendTradeRequest(fallbackSender.Name)
                        lastSentTargetName = fallbackSender.Name
                        lastSentTargetIsReceiver = false
                        lastSentTime = tick()
                        return 0
                    else
                        -- ปรับเวลาเพื่อหลีกเลี่ยงการ spam ตรวจซ้ำทันที
                        lastSentTime = tick()
                    end
                end
            end

            local validPartner = FindValidReceiver()
            if validPartner then
                SendTradeRequest(validPartner.Name)
                -- บันทึกสถานะเป้าหมายล่าสุดที่ส่งคำขอ
                lastSentTargetName = validPartner.Name
                lastSentTargetIsReceiver = IsInList(validPartner.Name, RECEIVER_LIST)
                lastSentTime = tick()
            else
                -- ถ้าไม่มี partner ให้ปลดล็อค main sender
                isSenderMainActive = false
            end
        end
        return 0 -- reset step
    else
        -- กำลังเทรดอยู่
        -- เคลียร์สถานะการส่งคำขอค้างเมื่อเข้าสู่หน้าต่าง Trade จริง
        lastSentTargetName = nil
        lastSentTargetIsReceiver = false
        lastSentTime = 0
        if step == 0 then
            if CheckTradePartner() then
                print("🚀 เริ่มขั้นตอนที่ 1: Add Shroom")
                -- รีเซ็ตสถานะการเพิ่มไอเทมเมื่อเริ่มเทรดใหม่
                shroomAdded = false
                tokenAdded = false
                creatureAdded = false
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                return 1
            end
        elseif step == 1 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddShroom, reset step")
                return 0
            end
            -- Add Shroom - ใช้ state-based tracking
            if not senderShroomRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 1
                else
                    print("🚀 เริ่ม Add Shroom...")
                    senderShroomRequested = true
                    senderShroomStartTime = tick()
                    isSenderMainActive = true -- ตั้ง active เมื่อเริ่มเทรดจริง
                    -- เรียก AddShroom แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Shroom เสร็จ...")
                    local shroomSuccess = AddShroom()
                    if shroomSuccess then
                        shroomAdded = true
                        print("✅ Add Shroom เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 2: Add Token")
                        return 2
                    else
                        print("❌ Add Shroom ล้มเหลว")
                        senderShroomRequested = false
                        isSenderMainActive = false
                        return 0
                    end
                end
            else
                -- ถ้า shroom ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderShroomStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Shroom ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                    shroomAdded = true
                    return 2
                else
                    print("⏳ รอ Add Shroom เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 1
                end
            end
        elseif step == 2 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddToken, reset step")
                return 0
            end
            -- Add Token - ใช้ state-based tracking
            if not senderTokenRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 2
                else
                    print("🚀 เริ่ม Add Token...")
                    senderTokenRequested = true
                    senderTokenStartTime = tick()
                    -- เรียก AddToken แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Token เสร็จ...")
                    local tokenSuccess = AddToken()
                    if tokenSuccess then
                        tokenAdded = true
                        print("✅ Add Token เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 3: Add Creature")
                        return 3
                    else
                        print("❌ Add Token ล้มเหลว")
                        senderTokenRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า token ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderTokenStartTime
                if elapsedTime >= 30 then
                    print(
                        "⚠️ Add Token ใช้เวลานานเกินไป กำลังข้ามไป step 3")
                    tokenAdded = true
                    return 3
                else
                    print("⏳ รอ Add Token เสร็จ... (" .. string.format("%.1f", 30 - elapsedTime) ..
                              " วินาที)")
                    return 2
                end
            end
        elseif step == 3 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง AddCreature, reset step")
                return 0
            end
            -- Add Creature - ใช้ state-based tracking
            if not senderCreatureRequested then
                -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                if isRemoteBusy then
                    print("⏳ Remote กำลังใช้งานอยู่ รอสักครู่...")
                    return 3
                else
                    print("🚀 เริ่ม Add Creature...")
                    senderCreatureRequested = true
                    senderCreatureStartTime = tick()
                    -- เรียก AddCreature แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Add Creature เสร็จ...")
                    local creatureSuccess = AddCreature(false)
                    if creatureSuccess then
                        creatureAdded = true
                        print("✅ Add Creature เสร็จสิ้น")
                        print("🚀 เริ่มขั้นตอนที่ 4: Click Accept")
                        return 4
                    else
                        print("❌ Add Creature ล้มเหลว")
                        senderCreatureRequested = false
                        return 0
                    end
                end
            else
                -- ถ้า creature ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderCreatureStartTime
                if elapsedTime >= 10 then
                    print(
                        "⚠️ Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 4")
                    creatureAdded = true
                    return 4
                else
                    print("⏳ รอ Add Creature เสร็จ... (" .. string.format("%.1f", 10 - elapsedTime) ..
                              " วินาที)")
                    return 3
                end
            end
        elseif step == 4 then
            if not LocalPlayer.PlayerGui.TradeGui.Enabled then
                print("TradeGui ถูกปิดระหว่าง ClickAccept, reset step")
                return 0
            end
            -- Click Accept - ใช้ state-based tracking
            if not senderAcceptRequested then
                -- ตรวจสอบว่าทุกขั้นตอนเสร็จสิ้นแล้ว
                if shroomAdded and tokenAdded and creatureAdded then
                    print("🔍 ตรวจสอบสถานะ: Shroom=" .. tostring(shroomAdded) .. ", Token=" ..
                              tostring(tokenAdded) .. ", Creature=" .. tostring(creatureAdded))

                    -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                    if isRemoteBusy then
                        print(
                            "⚠️ Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                        return 4 -- ยังคงอยู่ใน step 4
                    end
                    print("🚀 เริ่ม Click Accept...")
                    senderAcceptRequested = true
                    senderAcceptStartTime = tick()
                    -- เรียก ClickAccept แบบ synchronous และหยุด loop
                    print("⏸️ หยุด loop เพื่อรอ Click Accept เสร็จ...")
                    local acceptSuccess = ClickAccept()
                    if acceptSuccess then
                        print("✅ เทรดเสร็จสิ้น")
                        -- รีเซ็ตสถานะการเพิ่มไอเทม
                        shroomAdded = false
                        tokenAdded = false
                        creatureAdded = false
                        -- รีเซ็ตสถานะ sender tracking
                        senderShroomStartTime = 0
                        senderShroomRequested = false
                        senderTokenStartTime = 0
                        senderTokenRequested = false
                        senderCreatureStartTime = 0
                        senderCreatureRequested = false
                        senderAcceptStartTime = 0
                        senderAcceptRequested = false
                        isSenderMainActive = false
                        return 0
                    else
                        print("❌ Click Accept ล้มเหลว")
                        senderAcceptRequested = false
                        return 0
                    end
                else
                    print(
                        "⚠️ ยังมีขั้นตอนที่ยังไม่เสร็จ: Shroom=" ..
                            tostring(shroomAdded) .. ", Token=" .. tostring(tokenAdded) .. ", Creature=" ..
                            tostring(creatureAdded))
                    -- กลับไปทำขั้นตอนที่ยังไม่เสร็จ
                    if not shroomAdded then
                        print("🔄 กลับไปทำ Add Shroom")
                        return 1
                    elseif not tokenAdded then
                        print("🔄 กลับไปทำ Add Token")
                        return 2
                    elseif not creatureAdded then
                        print("🔄 กลับไปทำ Add Creature")
                        return 3
                    end
                end
            else
                -- ถ้า accept ยังไม่เสร็จ แต่เวลาผ่านไปมากเกินไป
                local elapsedTime = tick() - senderAcceptStartTime
                if elapsedTime >= 5 then
                    print(
                        "⚠️ Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                    print("✅ เทรดเสร็จสิ้น")
                    -- รีเซ็ตสถานะการเพิ่มไอเทม
                    shroomAdded = false
                    tokenAdded = false
                    creatureAdded = false
                    -- รีเซ็ตสถานะ sender tracking
                    senderShroomStartTime = 0
                    senderShroomRequested = false
                    senderTokenStartTime = 0
                    senderTokenRequested = false
                    senderCreatureStartTime = 0
                    senderCreatureRequested = false
                    senderAcceptStartTime = 0
                    senderAcceptRequested = false
                    isSenderMainActive = false
                    return 0
                else
                    print("⏳ รอ Click Accept เสร็จ... (" .. string.format("%.1f", 5 - elapsedTime) ..
                              " วินาที)")
                    return 4
                end
            end
        end
    end
    return step
end

-- เรียกใช้งานแบบ timer (ทุก 1 วินาที)
local function StartSenderStepLoop()
    spawn(function()
        while true do
            local success, err = pcall(function()
                local previousStep = currentStep
                currentStep = TradeStepHandlerSender(currentStep)

                -- ถ้า step เปลี่ยน แสดงว่าขั้นตอนเสร็จแล้ว
                if previousStep ~= currentStep then
                    print("🔄 ขั้นตอนเปลี่ยนจาก " .. previousStep ..
                              " เป็น " .. currentStep)
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน TradeStepHandlerSender: " .. tostring(err))
                currentStep = 0
                -- รีเซ็ตสถานะ sender tracking
                senderShroomStartTime = 0
                senderShroomRequested = false
                senderTokenStartTime = 0
                senderTokenRequested = false
                senderCreatureStartTime = 0
                senderCreatureRequested = false
                senderAcceptStartTime = 0
                senderAcceptRequested = false
                isSenderMainActive = false
            end

            -- รอ 1 วินาทีแล้ววนใหม่
            wait(1)
        end
    end)
end

-- Coroutine สำหรับ Receiver แบบปลอดภัย
local function ReceiverCoroutine()
    while true do
        local success, error = pcall(function()
            -- ตรวจสอบ coins ก่อน
            local coinsValue = LocalPlayer.Data.Coins.Value
            if coinsValue <= 20 then
                print("💰 Coins ไม่เพียงพอ (" .. coinsValue .. " <= 20) Receiver ไม่ทำงาน")
                wait(10) -- รอ 10 วินาทีก่อนตรวจสอบใหม่
                return
            end
            
            -- ตรวจสอบ TradeGui อย่างปลอดภัย
            local tradeGuiEnabled = false
            local tradeGui = LocalPlayer.PlayerGui:FindFirstChild("TradeGui")
            if tradeGui then
                tradeGuiEnabled = tradeGui.Enabled
            end

            if not tradeGuiEnabled then
                -- รอ trade request
                AcceptTradeRequestReceiver()

                -- ตรวจสอบ timeout (เพิ่มใหม่)
                local timeSinceLastRequest = tick() - lastTradeRequestTime
                local timeRemaining = RECEIVER_TIMEOUT - timeSinceLastRequest

                if timeSinceLastRequest >= RECEIVER_TIMEOUT then
                    print("⚠️ Receiver ไม่ได้รับ trade request นาน " ..
                              string.format("%.1f", timeSinceLastRequest) .. " วินาที (เกิน " ..
                              RECEIVER_TIMEOUT .. " วินาที)")
                    print(
                        "🔄 กำลังเปลี่ยนเซิร์ฟเวอร์เพื่อหาคู่เทรดใหม่...")

                    local success, error = pcall(function()
                        local TeleportService = game:GetService("TeleportService")
                        TeleportService:Teleport(14119723130)
                    end)

                    if not success then
                        warn(
                            "❌ เกิดข้อผิดพลาดในการเปลี่ยนเซิร์ฟเวอร์: " ..
                                tostring(error))
                        print("🚪 กำลังออกจากเกม...")
                        game:Shutdown()
                    end
                    return
                else
                    -- แสดงสถานะเวลาที่เหลือทุก 30 วินาที
                    if math.floor(timeSinceLastRequest) % 30 == 0 or timeRemaining <= 60 then
                        print("⏰ Receiver รอ trade request... เหลือเวลาอีก " ..
                                  string.format("%.0f", timeRemaining) ..
                                  " วินาทีก่อนเปลี่ยนเซิร์ฟเวอร์")
                    end
                end

                -- รีเซ็ตสถานะเมื่อไม่ได้เทรด
                receiverCreatureStartTime = 0
                receiverCreatureRequested = false
                receiverAcceptStartTime = 0
                receiverAcceptRequested = false
                currentStepReceiver = 0
                wait(2)
            else
                -- กำลังเทรดอยู่
                if currentStepReceiver == 0 then
                    -- เช็คชื่อคู่เทรดก่อน
                    if CheckTradePartner() then
                        currentStepReceiver = 1
                        print("🚀 Receiver เริ่มขั้นตอนที่ 1: Add Creature")
                        -- รีเซ็ตสถานะก่อนเริ่มใหม่
                        receiverCreatureStartTime = 0
                        receiverCreatureRequested = false
                        receiverAcceptStartTime = 0
                        receiverAcceptRequested = false
                    else
                        wait(1)
                    end
                elseif currentStepReceiver == 1 then
                    -- Add Creature - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverCreatureRequested then
                        -- ตรวจสอบว่า remote กำลังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⏳ Receiver: Remote กำลังใช้งานอยู่ รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Add Creature...")
                            receiverCreatureRequested = true
                            receiverCreatureStartTime = tick()

                            -- เรียก AddCreatureReceiver แบบ synchronous พร้อม error handling
                            local creatureSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                creatureSuccess = AddCreatureReceiver()
                            end)

                            if attemptSuccess and creatureSuccess then
                                print("✅ Receiver Add Creature เสร็จสิ้น")
                                currentStepReceiver = 2
                                print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                            else
                                warn("❌ Receiver Add Creature ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverCreatureRequested = false
                                receiverCreatureStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 10 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverCreatureStartTime
                        if elapsedTime >= 10 then
                            print(
                                "⚠️ Receiver Add Creature ใช้เวลานานเกินไป กำลังข้ามไป step 2")
                            currentStepReceiver = 2
                            print("🚀 Receiver เริ่มขั้นตอนที่ 2: Click Accept")
                        else
                            print("⏳ Receiver รอ Add Creature เสร็จ... (" ..
                                      string.format("%.1f", 10 - elapsedTime) .. " วินาที)")
                        end
                    end
                elseif currentStepReceiver == 2 then
                    -- Click Accept - ใช้ state-based tracking แบบปรับปรุง
                    if not receiverAcceptRequested then
                        -- ตรวจสอบว่า remote ยังใช้งานอยู่หรือไม่
                        if isRemoteBusy then
                            print(
                                "⚠️ Receiver: Remote ยังใช้งานอยู่ ไม่สามารถกด accept ได้! รอสักครู่...")
                            wait(1)
                        else
                            print("🚀 Receiver เริ่ม Click Accept...")
                            receiverAcceptRequested = true
                            receiverAcceptStartTime = tick()

                            -- เรียก ClickAcceptReceiver แบบ synchronous พร้อม error handling
                            local acceptSuccess = false
                            local attemptSuccess, attemptError = pcall(function()
                                acceptSuccess = ClickAcceptReceiver()
                            end)

                            if attemptSuccess and acceptSuccess then
                                print("✅ Receiver เทรดเสร็จสิ้น")
                                currentStepReceiver = 0
                                -- รีเซ็ตสถานะ
                                receiverCreatureStartTime = 0
                                receiverCreatureRequested = false
                                receiverAcceptStartTime = 0
                                receiverAcceptRequested = false
                            else
                                warn("❌ Receiver Click Accept ล้มเหลว: " .. tostring(attemptError))
                                -- รีเซ็ตเพื่อลองใหม่
                                receiverAcceptRequested = false
                                receiverAcceptStartTime = 0
                                wait(2) -- รอก่อนลองใหม่
                            end
                        end
                    else
                        -- ตรวจสอบว่าผ่านไป 5 วินาทีแล้วหรือยัง (เพิ่มเวลา)
                        local elapsedTime = tick() - receiverAcceptStartTime
                        if elapsedTime >= 5 then
                            print(
                                "⚠️ Receiver Click Accept ใช้เวลานานเกินไป กำลังจบเทรด")
                            print("✅ Receiver เทรดเสร็จสิ้น")
                            currentStepReceiver = 0
                            -- รีเซ็ตสถานะ
                            receiverCreatureStartTime = 0
                            receiverCreatureRequested = false
                            receiverAcceptStartTime = 0
                            receiverAcceptRequested = false
                        else
                            print("⏳ Receiver รอ Click Accept เสร็จ... (" ..
                                      string.format("%.1f", 5 - elapsedTime) .. " วินาที)")
                        end
                    end
                end
                wait(1)
            end
        end)

        if not success then
            warn("❌ เกิดข้อผิดพลาดใน ReceiverCoroutine: " .. tostring(error))
            currentStepReceiver = 0
            -- รีเซ็ตสถานะ
            receiverCreatureStartTime = 0
            receiverCreatureRequested = false
            receiverAcceptStartTime = 0
            receiverAcceptRequested = false
            wait(5) -- รอ 5 วินาทีก่อนลองใหม่
        end
    end
end

-- Coroutine ปิดหน้าต่าง CreatureInventoryFrame อัตโนมัติ (ทำงานเบื้องหลังตลอดเวลา)
local function InventoryCloserCoroutine()
    spawn(function()
        while true do
            local success, error = pcall(function()
                local playerGui = LocalPlayer and LocalPlayer.PlayerGui
                if not playerGui then return end

                local tradeHudGui = playerGui:FindFirstChild("TradeHUDGui")
                if not tradeHudGui then return end

                local bottomFrame = tradeHudGui:FindFirstChild("BottomFrame")
                if not bottomFrame then return end

                local creatureInventoryFrame = bottomFrame:FindFirstChild("CreatureInventoryFrame")
                if not creatureInventoryFrame then return end

                if creatureInventoryFrame.Visible == true then
                    local closeButton = creatureInventoryFrame:FindFirstChild("CloseButton")
                    local upperLabel = closeButton and closeButton:FindFirstChild("UpperLabel")
                    if upperLabel then
                        local safetyCounter = 0
                        while creatureInventoryFrame.Visible == true and safetyCounter < 30 do
                            Clicked_Ui(upperLabel)
                            task.wait(0.1)
                            Click_NOW()
                            task.wait(0.2)
                            safetyCounter = safetyCounter + 1
                        end
                    end
                end
            end)
            if not success then
                warn("❌ เกิดข้อผิดพลาดใน InventoryCloserCoroutine: " .. tostring(error))
            end
            wait(0.5)
        end
    end)
end

-- ฟังก์ชันหลัก
local function Main()
    local success, error = pcall(function()
        print("🎮 เริ่มต้นสคริปต์ Trade")

        -- วาร์ปไปยังตำแหน่งที่กำหนด
        WarpToLocation()

        -- เริ่ม coroutine ปิด CreatureInventoryFrame อัตโนมัติ
        InventoryCloserCoroutine()

        -- ตรวจสอบว่าเป็น Sender หรือ Receiver
        local isSender = IsInList(LocalPlayer.Name, SENDER_LIST)
        local isReceiver = IsInList(LocalPlayer.Name, RECEIVER_LIST)

        if isSender then
            print("👤 ทำงานในโหมด Sender")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ sender (สำหรับโหมด receiver) (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            StartSenderStepLoop()
            -- เพิ่มการทำงานแบบ Receiver สำหรับ Sender
            coroutine.wrap(SenderReceiverCoroutine)()
        elseif isReceiver then
            print("👤 ทำงานในโหมด Receiver")
            -- รีเซ็ตเวลาเริ่มต้นสำหรับ receiver (เพิ่มใหม่)
            lastTradeRequestTime = tick()
            coroutine.wrap(ReceiverCoroutine)()
        else
            print("❌ ชื่อผู้เล่นไม่ตรงกับรายชื่อใดๆ")
        end
    end)

    if not success then
        warn("❌ เกิดข้อผิดพลาดในฟังก์ชันหลัก: " ..
                 tostring(error))
        -- ลองรันใหม่หลังจาก 10 วินาที
        wait(10)
        Main()
    end
end

-- เริ่มต้นสคริปต์
Main()
